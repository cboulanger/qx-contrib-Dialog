{
  "className": "qx.lang.normalize.Array",
  "packageName": "qx.lang.normalize",
  "name": "Array",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 29,
        "column": 0
      },
      "end": {
        "line": 471,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nMartin Wittemann (wittemann)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "This class is responsible for the normalization of the native 'Array' object.\nIt checks if these methods are available and, if not, appends them to\nensure compatibility in all browsers.\nFor usage samples, check out the attached links.\n\nMDN documentation &copy; Mozilla Contributors."
        }
      ],
      "@group": [
        {
          "name": "@group",
          "body": "Polyfill"
        }
      ],
      "@use": [
        {
          "name": "@use",
          "body": "qx.bom.client.EcmaScript"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "indexOf": {
      "location": {
        "start": {
          "line": 52,
          "column": 4
        },
        "end": {
          "line": 66,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The <code>indexOf()</code> method returns the first index at which a given\nelement can be found in the array, or -1 if it is not present.\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.14\">Annotated ES5 Spec</a>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "searchElement {var} Element to locate in the array.",
            "paramName": "searchElement",
            "description": " Element to locate in the array.",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "fromIndex {Integer?} The index to start the search at.\nIf the index is greater than or equal to the array's length,\n-1 is returned, which means the array will not be searched.\nIf the provided index value is a negative number, it is taken\nas the offset from the end of the array. Note: if the provided\nindex is negative, the array is still searched from front to\nback. If the calculated index is less than 0, then the whole\narray will be searched. Default: 0 (Entire array is searched)",
            "paramName": "fromIndex",
            "description": " The index to start the search at.\nIf the index is greater than or equal to the array's length,\n-1 is returned, which means the array will not be searched.\nIf the provided index value is a negative number, it is taken\nas the offset from the end of the array. Note: if the provided\nindex is negative, the array is still searched from front to\nback. If the calculated index is less than 0, then the whole\narray will be searched. Default: 0 (Entire array is searched)",
            "optional": true,
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The first index at which the element was found or -1\nif the element was not found in the array",
            "type": "Integer",
            "description": " The first index at which the element was found or -1\nif the element was not found in the array"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "lastIndexOf": {
      "location": {
        "start": {
          "line": 91,
          "column": 4
        },
        "end": {
          "line": 106,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The <code>lastIndexOf()</code> method returns the last index\nat which a given element can be found in the array, or -1 if\nit is not present. The array is searched backwards, starting at\n<code>fromIndex</code>.\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.15\">Annotated ES5 Spec</a>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "searchElement {var} Element to locate in the array.",
            "paramName": "searchElement",
            "description": " Element to locate in the array.",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "fromIndex {Integer?} The index at which to start\nsearching backwards. Defaults to the array's length, i.e. the\nwhole array will be searched. If the index is greater than or\nequal to the length of the array, the whole array will be\nsearched. If negative, it is taken as the offset from the end\nof the array. Note that even when the index is negative, the\narray is still searched from back to front. If the calculated\nindex is less than 0, -1 is returned, i.e. the array will not\nbe searched.",
            "paramName": "fromIndex",
            "description": " The index at which to start\nsearching backwards. Defaults to the array's length, i.e. the\nwhole array will be searched. If the index is greater than or\nequal to the length of the array, the whole array will be\nsearched. If negative, it is taken as the offset from the end\nof the array. Note that even when the index is negative, the\narray is still searched from back to front. If the calculated\nindex is less than 0, -1 is returned, i.e. the array will not\nbe searched.",
            "optional": true,
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The last index at which the element was found or -1\nif the element was not found in the array",
            "type": "Integer",
            "description": " The last index at which the element was found or -1\nif the element was not found in the array"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "forEach": {
      "location": {
        "start": {
          "line": 120,
          "column": 4
        },
        "end": {
          "line": 130,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The <code>forEach()</code> method executes a provided function\nonce per array element. You can not break the loop with this function.\nIf you want to do so, use {@link #some} or {@link #every}.\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.18\">Annotated ES5 Spec</a>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} Function to execute for each element.",
            "paramName": "callback",
            "description": " Function to execute for each element.",
            "type": "qx.lang.normalize.Function"
          },
          {
            "name": "@param",
            "body": "obj {Object?} Value to use as <code>this</code> when executing <code>callback</code>.",
            "paramName": "obj",
            "description": " Value to use as <code>this</code> when executing <code>callback</code>.",
            "optional": true,
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "filter": {
      "location": {
        "start": {
          "line": 145,
          "column": 4
        },
        "end": {
          "line": 162,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The <code>filter()</code> method creates a new array with\nall elements that pass the test implemented by the provided\nfunction.\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.20\">Annotated ES5 Spec</a>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} Function to test each element of the array.",
            "paramName": "callback",
            "description": " Function to test each element of the array.",
            "type": "qx.lang.normalize.Function"
          },
          {
            "name": "@param",
            "body": "obj {Object?} Value to use as <code>this</code> when executing <code>callback</code>.",
            "paramName": "obj",
            "description": " Value to use as <code>this</code> when executing <code>callback</code>.",
            "optional": true,
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} filtered array",
            "type": "qx.lang.normalize.Array",
            "description": " filtered array"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "map": {
      "location": {
        "start": {
          "line": 182,
          "column": 4
        },
        "end": {
          "line": 196,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The <code>map()</code> method creates a new array with\nthe results of calling a provided function on every\nelement in this array.\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.19\">Annotated ES5 Spec</a>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} Function that produces an element of the new Array,\ntaking three arguments:\n<ul>\n<li><code>currentValue</code> The current element being processed in the array.</li>\n<li><code>index</code> The index of the current element being processed in the array.</li>\n<li><code>array</code> The array map was called upon.</li>\n</ul>",
            "paramName": "callback",
            "description": " Function that produces an element of the new Array,\ntaking three arguments:\n<ul>\n<li><code>currentValue</code> The current element being processed in the array.</li>\n<li><code>index</code> The index of the current element being processed in the array.</li>\n<li><code>array</code> The array map was called upon.</li>\n</ul>",
            "type": "qx.lang.normalize.Function"
          },
          {
            "name": "@param",
            "body": "obj {Object?} Value to use as <code>this</code> when executing <code>callback</code>.",
            "paramName": "obj",
            "description": " Value to use as <code>this</code> when executing <code>callback</code>.",
            "optional": true,
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} result array",
            "type": "qx.lang.normalize.Array",
            "description": " result array"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "some": {
      "location": {
        "start": {
          "line": 210,
          "column": 4
        },
        "end": {
          "line": 225,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The <code>some()</code> method tests whether some\nelement in the array passes the test implemented by\nthe provided function.\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.17\">Annotated ES5 Spec</a>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} Function to test for each element.",
            "paramName": "callback",
            "description": " Function to test for each element.",
            "type": "qx.lang.normalize.Function"
          },
          {
            "name": "@param",
            "body": "obj {Object?} Value to use as <code>this</code> when executing <code>callback</code>.",
            "paramName": "obj",
            "description": " Value to use as <code>this</code> when executing <code>callback</code>.",
            "optional": true,
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} result array",
            "type": "qx.lang.normalize.Array",
            "description": " result array"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "every": {
      "location": {
        "start": {
          "line": 238,
          "column": 4
        },
        "end": {
          "line": 253,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The <code>every()</code> method tests whether all elements\nin the array pass the test implemented by the provided function.\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.16\">Annotated ES5 Spec</a>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} Function to test for each element.",
            "paramName": "callback",
            "description": " Function to test for each element.",
            "type": "qx.lang.normalize.Function"
          },
          {
            "name": "@param",
            "body": "obj {Object?} Value to use as <code>this</code> when executing <code>callback</code>.",
            "paramName": "obj",
            "description": " Value to use as <code>this</code> when executing <code>callback</code>.",
            "optional": true,
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} result array",
            "type": "qx.lang.normalize.Array",
            "description": " result array"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "find": {
      "location": {
        "start": {
          "line": 265,
          "column": 4
        },
        "end": {
          "line": 279,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The <code>find()</code> method returns a value in the array, if an element in the\narray satisfies the provided testing function. Otherwise undefined is returned.\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\">MDN documentation</a> |"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} Function to test for each element.",
            "paramName": "callback",
            "description": " Function to test for each element.",
            "type": "qx.lang.normalize.Function"
          },
          {
            "name": "@param",
            "body": "obj {Object?} Value to use as <code>this</code> when executing <code>callback</code>.",
            "paramName": "obj",
            "description": " Value to use as <code>this</code> when executing <code>callback</code>.",
            "optional": true,
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} result, undefined if not found",
            "type": "qx.lang.normalize.Object",
            "description": " result, undefined if not found"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "findIndex": {
      "location": {
        "start": {
          "line": 291,
          "column": 4
        },
        "end": {
          "line": 305,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The <code>findIndex()</code> method returns an index in the array, if an element in the\narray satisfies the provided testing function. Otherwise -1 is returned.\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\">MDN documentation</a> |"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} Function to test for each element.",
            "paramName": "callback",
            "description": " Function to test for each element.",
            "type": "qx.lang.normalize.Function"
          },
          {
            "name": "@param",
            "body": "obj {Object?} Value to use as <code>this</code> when executing <code>callback</code>.",
            "paramName": "obj",
            "description": " Value to use as <code>this</code> when executing <code>callback</code>.",
            "optional": true,
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the index in the array, -1 if not found",
            "type": "Integer",
            "description": " the index in the array, -1 if not found"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "reduce": {
      "location": {
        "start": {
          "line": 328,
          "column": 4
        },
        "end": {
          "line": 345,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The <code>reduce()</code> method applies a function against\nan accumulator and each value of the array (from left-to-right)\nhas to reduce it to a single value.\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.21\">Annotated ES5 Spec</a>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} Function to execute on each value in\nthe array, taking four arguments:\n<ul>\n<li><code>previousValue</code> The value previously returned in\nthe last invocation of the callback, or initialValue, if supplied.\n(See below.)</li>\n<li><code>currentValue</code> The current element being processed in the array.</li>\n<li><code>index</code> The index of the current element being processed in the array.</li>\n<li><code>array</code> The array <code>reduce</code> was called upon.</li>\n</ul>",
            "paramName": "callback",
            "description": " Function to execute on each value in\nthe array, taking four arguments:\n<ul>\n<li><code>previousValue</code> The value previously returned in\nthe last invocation of the callback, or initialValue, if supplied.\n(See below.)</li>\n<li><code>currentValue</code> The current element being processed in the array.</li>\n<li><code>index</code> The index of the current element being processed in the array.</li>\n<li><code>array</code> The array <code>reduce</code> was called upon.</li>\n</ul>",
            "type": "qx.lang.normalize.Function"
          },
          {
            "name": "@param",
            "body": "init {Object?} Object to use as the first argument to the first call of the callback.",
            "paramName": "init",
            "description": " Object to use as the first argument to the first call of the callback.",
            "optional": true,
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} result value",
            "type": "var",
            "description": " result value"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "reduceRight": {
      "location": {
        "start": {
          "line": 368,
          "column": 4
        },
        "end": {
          "line": 385,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The reduceRight() method applies a function against an\naccumulator and each value of the array (from right-to-left)\nas to reduce it to a single value.\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight\">MDN documentation</a> |\n<a href=\"http://es5.github.com/#x15.4.4.22\">Annotated ES5 Spec</a>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} Function to execute on each value in\nthe array, taking four arguments:\n<ul>\n<li><code>previousValue</code> The value previously returned in\nthe last invocation of the callback, or initialValue, if supplied.\n(See below.)</li>\n<li><code>currentValue</code> The current element being processed in the array.</li>\n<li><code>index</code> The index of the current element being processed in the array.</li>\n<li><code>array</code> The array <code>reduce</code> was called upon.</li>\n</ul>",
            "paramName": "callback",
            "description": " Function to execute on each value in\nthe array, taking four arguments:\n<ul>\n<li><code>previousValue</code> The value previously returned in\nthe last invocation of the callback, or initialValue, if supplied.\n(See below.)</li>\n<li><code>currentValue</code> The current element being processed in the array.</li>\n<li><code>index</code> The index of the current element being processed in the array.</li>\n<li><code>array</code> The array <code>reduce</code> was called upon.</li>\n</ul>",
            "type": "qx.lang.normalize.Function"
          },
          {
            "name": "@param",
            "body": "init {Object?} Object to use as the first argument to the first call of the callback.",
            "paramName": "init",
            "description": " Object to use as the first argument to the first call of the callback.",
            "optional": true,
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} return value",
            "type": "var",
            "description": " return value"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "includes": {
      "location": {
        "start": {
          "line": 397,
          "column": 4
        },
        "end": {
          "line": 442,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The includes() method determines whether an array includes a certain element, returning\ntrue or false as appropriate.\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\">MDN documentation</a> |"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "searchElement {var} Element which is checked for.",
            "paramName": "searchElement",
            "description": " Element which is checked for.",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "fromIndex {Number} Index to start search from",
            "paramName": "fromIndex",
            "description": " Index to start search from",
            "type": "qx.lang.normalize.Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{bool} true if element is included",
            "type": "bool",
            "description": " true if element is included"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 448,
        "column": 2
      },
      "end": {
        "line": 470,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@lint": [
        {
          "name": "@lint",
          "body": "environmentNonLiteralKey()"
        }
      ]
    }
  },
  "descendants": []
}