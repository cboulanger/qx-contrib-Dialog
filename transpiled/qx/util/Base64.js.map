{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/util/Base64.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__base64Chars",
    "encode",
    "input",
    "is8bit",
    "isMultiByte",
    "charSet",
    "document",
    "characterSet",
    "charset",
    "toLowerCase",
    "indexOf",
    "window",
    "btoa",
    "Function",
    "padding",
    "base64Chars",
    "length",
    "output",
    "result",
    "i",
    "translateUTF8",
    "__translateUTF8",
    "charCodeAt",
    "k",
    "l",
    "push",
    "join",
    "characterCode",
    "__getUTF8StringFromBytes",
    "bytes",
    "charString",
    "utfByte",
    "nextByte",
    "nextBytes",
    "String",
    "fromCharCode",
    "decode",
    "atob",
    "ilength",
    "stringBytes",
    "base64Byte1",
    "charAt",
    "base64Byte2",
    "c1",
    "specialChar",
    "base64Byte3",
    "c2",
    "base64Byte4",
    "c3",
    "util",
    "Base64"
  ],
  "mappings": "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",
  "file": "Base64.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n/**\n * Base64 encoder\n */\nqx.Class.define(\"qx.util.Base64\", {\n  statics : {\n    /** Characters allowed in a Base 64 encoded string */\n    __base64Chars : [ 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/' ],\n\n\n    /**\n     * Encode a string using base64 encoding (http://en.wikipedia.org/wiki/Base64).\n     *\n     * @param input {String} the input string to encode\n     *\n     * @param is8bit {Boolean?} Whether the character set is 8-bit, not\n     *   multi-byte.  If this parameter is not provided, the character set is\n     *   determined from the 'document' object.\n     *\n     * @return {String} The base64 encoded input string.\n     */\n    encode : function(input, is8bit)\n    {\n      var isMultiByte;\n\n      if (typeof is8bit == \"undefined\")\n      {\n        var charSet = document.characterSet || document.charset;\n        isMultiByte = charSet.toLowerCase().indexOf('utf') != -1;\n\n        if (!isMultiByte && window.btoa instanceof Function) {\n          return btoa(input);\n        }\n      }\n      else\n      {\n        isMultiByte = ! is8bit;\n      }\n\n      var padding = '=';\n      var base64Chars = this.__base64Chars;\n      var length = input.length;\n      var output = [];\n      var result = [];\n      var i = 0;\n\n      var translateUTF8 = this.__translateUTF8;\n\n      while (i < length) {\n        translateUTF8(input.charCodeAt(i++), output, !isMultiByte);\n      }\n\n      for (var k=0, l=output.length; k<l; k+=3)\n      {\n        if (k + 1 === l)\n        {\n          result.push(base64Chars[output[k] >> 2]);\n          result.push(base64Chars[(output[k] & 3) << 4]);\n          result.push(padding + padding);\n          break;\n        }\n\n        if (k + 2 === l)\n        {\n          result.push(base64Chars[output[k] >> 2]);\n          result.push(base64Chars[(output[k] & 3) << 4 | output[k + 1] >> 4]);\n          result.push(base64Chars[(output[k + 1] & 15) << 2]);\n          result.push(padding);\n          break;\n        }\n\n        result.push(base64Chars[output[k] >> 2]);\n        result.push(base64Chars[(output[k] & 3) << 4 | output[k + 1] >> 4]);\n        result.push(base64Chars[(output[k + 1] & 15) << 2 | output[k + 2] >> 6]);\n        result.push(base64Chars[output[k + 2] & 63]);\n      }\n\n      return result.join('');\n    },\n\n\n    /**\n     * Adds to output array the UTF-8 bytes needed to represent the character (http://en.wikipedia.org/wiki/UTF8)\n     *\n     * @param characterCode {Integer} the code of the character\n     * @param output {Array} the array of bytes to be filled\n     * @param is8bit {Boolean} specifies whether we should not treat the array as a multi byte string\n     */\n    __translateUTF8 : function(characterCode, output, is8bit)\n    {\n      if (characterCode < 128)\n      {\n        output.push(characterCode);\n        return;\n      }\n\n      if (characterCode < 256 && is8bit)\n      {\n        output.push(characterCode);\n        return;\n      }\n\n      if (characterCode < 2048)\n      {\n        output.push(192 | characterCode >> 6);\n        output.push(128 | characterCode & 63);\n        return;\n      }\n\n      if (characterCode < 65536)\n      {\n        output.push(224 | characterCode >> 12);\n        output.push(128 | (characterCode >> 6) & 63);\n        output.push(128 | characterCode & 63);\n        return;\n      }\n      else\n      {\n        output.push(240 | characterCode >> 18);\n        output.push(128 | (characterCode >> 12) & 63);\n        output.push(128 | (characterCode >> 6) & 63);\n        output.push(128 | characterCode & 63);\n        return;\n      }\n    },\n\n\n    /**\n     * Returns a String from an array of bytes, with special treatment\n     * if the bytes are UTF-8 bytes (http://en.wikipedia.org/wiki/UTF8)\n     *\n     * @param bytes {Array} the byte array [8it integers]\n     * @param is8bit {Boolean} specifies whether we should not treat the array as a multi byte string\n     * @return {String} the string backed by the byte array\n     */\n    __getUTF8StringFromBytes : function(bytes, is8bit)\n    {\n      var charString = '';\n      var result = [];\n\n      if (is8bit)\n      {\n        result = bytes;\n      }\n      else\n      {\n        for (var i=0; i<bytes.length; i++)\n        {\n          var utfByte = bytes[i];\n\n          if (utfByte >> 7 === 0) {\n            result.push(utfByte);\n          }\n\n          if (utfByte >> 5 === 6)\n          {\n            var nextByte = bytes[++i];\n            result.push(((utfByte & 28) >> 2) << 8 | ((utfByte & 3) << 6) | nextByte & 63);\n          }\n\n          if (utfByte >> 4 === 14)\n          {\n            var nextBytes = [ bytes[++i], bytes[++i] ];\n            result.push((utfByte & 15) << 12 | ((nextBytes[0] & 60) >> 2) << 8 | (nextBytes[0] & 3) << 6 | (nextBytes[1] & 63));\n          }\n\n          if (utfByte >> 3 === 30)\n          {\n            var nextBytes = [ bytes[++i], bytes[++i], bytes[++i] ];\n            result.push((utfByte & 7) << 18 | (utfByte & 48) << 16 | (nextBytes[0] & 15) << 12 | ((nextBytes[1] & 60) >> 2) << 8 | (nextBytes[1] & 3) << 6 | (nextBytes[2] & 63));\n          }\n        }\n      }\n\n      for (var i=0, l=result.length; i<l; i++) {\n        charString += String.fromCharCode(result[i]);\n      }\n\n      return charString;\n    },\n\n\n    /**\n     * Decode a base64 string (http://en.wikipedia.org/wiki/Base64).\n     *\n     * @param input {String} the input string to decode\n     *\n     * @param is8bit {Boolean?} Whether the character set is 8-bit, not\n     *   multi-byte.  If this parameter is not provided, the character set is\n     *   determined from the 'document' object.\n     *\n     * @return {String} The decoded input string.\n     */\n    decode : function(input, is8bit)\n    {\n      var base64Chars = this.__base64Chars;\n      var isMultiByte;\n\n      if (typeof is8bit == \"undefined\")\n      {\n        var charSet = document.characterSet || document.charset;\n        isMultiByte = charSet.toLowerCase().indexOf('utf') != -1;\n\n        if (!isMultiByte && window.atob instanceof Function) {\n          return atob(input);\n        }\n      }\n      else\n      {\n        isMultiByte = ! is8bit;\n      }\n\n      var ilength = input.length;\n      var stringBytes = [], i = 0;\n\n      while (i < ilength)\n      {\n        var base64Byte1 = base64Chars.indexOf(input.charAt(i++));\n        var base64Byte2 = base64Chars.indexOf(input.charAt(i++));\n        var c1 = base64Byte1 << 2 | base64Byte2 >> 4;\n        stringBytes.push(c1);\n        var specialChar = input.charAt(i++);\n\n        if (specialChar !== '=')\n        {\n          var base64Byte3 = base64Chars.indexOf(specialChar);\n          var c2 = (base64Byte2 & 15) << 4 | (base64Byte3 & 60) >> 2;\n          stringBytes.push(c2);\n        }\n\n        specialChar = input.charAt(i++);\n\n        if (specialChar !== '=')\n        {\n          var base64Byte4 = base64Chars.indexOf(specialChar);\n          var c3 = (base64Byte3 & 3) << 6 | base64Byte4;\n          stringBytes.push(c3);\n        }\n      }\n\n      return this.__getUTF8StringFromBytes(stringBytes, !isMultiByte);\n    }\n  }\n});\n"
  ]
}