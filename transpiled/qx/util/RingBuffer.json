{
  "className": "qx.util.RingBuffer",
  "packageName": "qx.util",
  "name": "RingBuffer",
  "superClass": "Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 32,
        "column": 0
      },
      "end": {
        "line": 235,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2006 STZ-IDA, Germany, http://www.stz-ida.de\n2009 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nCarsten Lergenmueller (carstenl)\nFabian Jakobs (fjakobs)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "An memory container which stores arbitrary data up to a maximum number of\nentries. When new entries come in an the maximum is reached, the oldest\nentries are deleted.\n\nA mark feature also exists which can be used to remember a point in time.\nWhen retrieving entries, it is possible to get only those entries\nafter the marked time. This is useful if data from the buffer is extracted\nand processed. Whenever this happens, a mark() call can be used so that the\nnext extraction will only get new data."
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 41,
        "column": 2
      },
      "end": {
        "line": 44,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "Constructor."
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "maxEntries {Integer ? 50} Maximum number of entries in the buffer",
          "paramName": "maxEntries",
          "description": " Maximum number of entries in the buffer",
          "optional": true,
          "defaultValue": "50",
          "type": "Integer"
        }
      ]
    }
  },
  "members": {
    "__nextIndexToStoreTo": {
      "location": {
        "start": {
          "line": 50,
          "column": 4
        },
        "end": {
          "line": 50,
          "column": 28
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Next slot in ringbuffer to use"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__entriesStored": {
      "location": {
        "start": {
          "line": 53,
          "column": 4
        },
        "end": {
          "line": 53,
          "column": 23
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Number of elements in ring buffer"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__isMarkActive": {
      "location": {
        "start": {
          "line": 56,
          "column": 4
        },
        "end": {
          "line": 56,
          "column": 25
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Was a mark set?"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__entriesStoredSinceMark": {
      "location": {
        "start": {
          "line": 59,
          "column": 4
        },
        "end": {
          "line": 59,
          "column": 32
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "How many elements were stored since setting of mark?"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__entries": {
      "location": {
        "start": {
          "line": 62,
          "column": 4
        },
        "end": {
          "line": 62,
          "column": 20
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "ring buffer"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__maxEntries": {
      "location": {
        "start": {
          "line": 65,
          "column": 4
        },
        "end": {
          "line": 65,
          "column": 23
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Maximum number of messages to store. Could be converted to a qx property."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "setMaxEntries": {
      "location": {
        "start": {
          "line": 76,
          "column": 4
        },
        "end": {
          "line": 80,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Set the maximum number of messages to hold. If null the number of\nmessages is not limited.\n\nWarning: Changing this property will clear the events logged so far."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "maxEntries {Integer} the maximum number of messages to hold",
            "paramName": "maxEntries",
            "description": " the maximum number of messages to hold",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getMaxEntries": {
      "location": {
        "start": {
          "line": 88,
          "column": 4
        },
        "end": {
          "line": 90,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the maximum number of entries to hold"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer}",
            "type": "Integer",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addEntry": {
      "location": {
        "start": {
          "line": 98,
          "column": 4
        },
        "end": {
          "line": 114,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Adds a single entry"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "entry {var} The data to store",
            "paramName": "entry",
            "description": " The data to store",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getNumEntriesStored": {
      "location": {
        "start": {
          "line": 121,
          "column": 4
        },
        "end": {
          "line": 123,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the number of entries stored"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer}",
            "type": "Integer",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "mark": {
      "location": {
        "start": {
          "line": 130,
          "column": 4
        },
        "end": {
          "line": 133,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Remembers the current position in the ring buffer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "clearMark": {
      "location": {
        "start": {
          "line": 139,
          "column": 4
        },
        "end": {
          "line": 141,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Removes the current mark position"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAllEntries": {
      "location": {
        "start": {
          "line": 149,
          "column": 4
        },
        "end": {
          "line": 151,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns all stored entries. Mark is ignored."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} array of stored entries",
            "type": "Array",
            "description": " array of stored entries"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getEntries": {
      "location": {
        "start": {
          "line": 164,
          "column": 4
        },
        "end": {
          "line": 200,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns entries which have been added previously."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "count {Integer} The number of entries to retrieve. If there are\nmore entries than the given count, the oldest ones will not be returned.",
            "paramName": "count",
            "description": " The number of entries to retrieve. If there are\nmore entries than the given count, the oldest ones will not be returned.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "startingFromMark {Boolean ? false} If true, only entries since\nthe last call to mark() will be returned",
            "paramName": "startingFromMark",
            "description": " If true, only entries since\nthe last call to mark() will be returned",
            "optional": true,
            "defaultValue": "false",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} array of stored entries",
            "type": "Array",
            "description": " array of stored entries"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "clear": {
      "location": {
        "start": {
          "line": 206,
          "column": 4
        },
        "end": {
          "line": 212,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Clears all entries"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__addToIndex": {
      "location": {
        "start": {
          "line": 224,
          "column": 4
        },
        "end": {
          "line": 233,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Adds a number to an ringbuffer index. Does a modulus calculation,\ni. e. if the index leaves the ringbuffer space it will wrap around to\nthe other end of the ringbuffer."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "idx {Number} The current index.",
            "paramName": "idx",
            "description": " The current index.",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "addMe {Number} The number to add.",
            "paramName": "addMe",
            "description": " The number to add.",
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The new index",
            "type": "Number",
            "description": " The new index"
          }
        ]
      },
      "type": "function",
      "access": "private"
    }
  },
  "descendants": [
    "qx.log.appender.RingBuffer"
  ]
}