{
  "className": "qx.util.Serializer",
  "packageName": "qx.util",
  "name": "Serializer",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 25,
        "column": 0
      },
      "end": {
        "line": 374,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "**********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nMartin Wittemann (martinwittemann)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "This is an util class responsible for serializing qooxdoo objects."
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "qx.data, qx.data.IListData"
        },
        {
          "name": "@ignore",
          "body": "qx.locale, qx.locale.LocalizedString"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "toUriParameter": {
      "location": {
        "start": {
          "line": 46,
          "column": 4
        },
        "end": {
          "line": 75,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Serializes the properties of the given qooxdoo object. To get the\nserialization working, every property needs to have a string\nrepresentation because the value of the property will be concatenated to the\nserialized string."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "object {qx.core.Object} Any qooxdoo object",
            "paramName": "object",
            "description": " Any qooxdoo object",
            "type": "qx.core.Object"
          },
          {
            "name": "@param",
            "body": "qxSerializer {Function?} Function used for serializing qooxdoo\nobjects stored in the properties of the object. Check for the type of\nclasses <ou want to serialize and return the serialized value. In all\nother cases, just return nothing.",
            "paramName": "qxSerializer",
            "description": " Function used for serializing qooxdoo\nobjects stored in the properties of the object. Check for the type of\nclasses <ou want to serialize and return the serialized value. In all\nother cases, just return nothing.",
            "optional": true,
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "dateFormat {qx.util.format.DateFormat?} If a date formater is given,\nthe format method of this given formater is used to convert date\nobjects into strings.",
            "paramName": "dateFormat",
            "description": " If a date formater is given,\nthe format method of this given formater is used to convert date\nobjects into strings.",
            "optional": true,
            "type": "qx.util.format.DateFormat"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The serialized object.",
            "type": "String",
            "description": " The serialized object."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__toUriParameter": {
      "location": {
        "start": {
          "line": 87,
          "column": 4
        },
        "end": {
          "line": 107,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Helper method for {@link #toUriParameter}. Check for qooxdoo objects\nand returns the serialized name value pair for the given parameter."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String} The name of the value",
            "paramName": "name",
            "description": " The name of the value",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "value {var} The value itself",
            "paramName": "value",
            "description": " The value itself",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "qxSerializer {Function?} The serializer for qooxdoo objects.",
            "paramName": "qxSerializer",
            "description": " The serializer for qooxdoo objects.",
            "optional": true,
            "type": "Function"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The serialized name value pair.",
            "type": "String",
            "description": " The serialized name value pair."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "toNativeObject": {
      "location": {
        "start": {
          "line": 129,
          "column": 4
        },
        "end": {
          "line": 242,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Serializes the properties of the given qooxdoo object into a native\nobject."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "object {qx.core.Object}\nAny qooxdoo object",
            "paramName": "object",
            "description": "\nAny qooxdoo object",
            "type": "qx.core.Object"
          },
          {
            "name": "@param",
            "body": "qxSerializer {Function?}\nFunction used for serializing qooxdoo objects stored in the properties\nof the object. Check for the type of classes you want to serialize\nand return the serialized value. In all other cases, just return\nnothing.",
            "paramName": "qxSerializer",
            "description": "\nFunction used for serializing qooxdoo objects stored in the properties\nof the object. Check for the type of classes you want to serialize\nand return the serialized value. In all other cases, just return\nnothing.",
            "optional": true,
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "dateFormat {qx.util.format.DateFormat?} If a date formater is given,\nthe format method of this given formater is used to convert date\nobjects into strings.",
            "paramName": "dateFormat",
            "description": " If a date formater is given,\nthe format method of this given formater is used to convert date\nobjects into strings.",
            "optional": true,
            "type": "qx.util.format.DateFormat"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{null|Array|String|Object}\nThe serialized object. Depending on the input qooxdoo object, the returning\ntype will vary.",
            "type": "null|Array|String|Object",
            "description": "\nThe serialized object. Depending on the input qooxdoo object, the returning\ntype will vary."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "toJson": {
      "location": {
        "start": {
          "line": 258,
          "column": 4
        },
        "end": {
          "line": 372,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Serializes the properties of the given qooxdoo object into a json object."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "object {qx.core.Object} Any qooxdoo object",
            "paramName": "object",
            "description": " Any qooxdoo object",
            "type": "qx.core.Object"
          },
          {
            "name": "@param",
            "body": "qxSerializer {Function?} Function used for serializing qooxdoo\nobjects stored in the properties of the object. Check for the type of\nclasses <ou want to serialize and return the serialized value. In all\nother cases, just return nothing.",
            "paramName": "qxSerializer",
            "description": " Function used for serializing qooxdoo\nobjects stored in the properties of the object. Check for the type of\nclasses <ou want to serialize and return the serialized value. In all\nother cases, just return nothing.",
            "optional": true,
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "dateFormat {qx.util.format.DateFormat?} If a date formater is given,\nthe format method of this given formater is used to convert date\nobjects into strings.",
            "paramName": "dateFormat",
            "description": " If a date formater is given,\nthe format method of this given formater is used to convert date\nobjects into strings.",
            "optional": true,
            "type": "qx.util.format.DateFormat"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The serialized object.",
            "type": "String",
            "description": " The serialized object."
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}