{
  "className": "qx.util.Base64",
  "packageName": "qx.util",
  "name": "Base64",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0
      },
      "end": {
        "line": 262,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nSebastian Werner (wpbasti)\nAdrian Olaru (adrianolaru)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Base64 encoder"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "__base64Chars": {
      "location": {
        "start": {
          "line": 26,
          "column": 4
        },
        "end": {
          "line": 26,
          "column": 342
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Characters allowed in a Base 64 encoded string"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "encode": {
      "location": {
        "start": {
          "line": 40,
          "column": 4
        },
        "end": {
          "line": 97,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Encode a string using base64 encoding (http://en.wikipedia.org/wiki/Base64)."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "input {String} the input string to encode",
            "paramName": "input",
            "description": " the input string to encode",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "is8bit {Boolean?} Whether the character set is 8-bit, not\nmulti-byte.  If this parameter is not provided, the character set is\ndetermined from the 'document' object.",
            "paramName": "is8bit",
            "description": " Whether the character set is 8-bit, not\nmulti-byte.  If this parameter is not provided, the character set is\ndetermined from the 'document' object.",
            "optional": true,
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The base64 encoded input string.",
            "type": "String",
            "description": " The base64 encoded input string."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__translateUTF8": {
      "location": {
        "start": {
          "line": 107,
          "column": 4
        },
        "end": {
          "line": 143,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Adds to output array the UTF-8 bytes needed to represent the character (http://en.wikipedia.org/wiki/UTF8)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "characterCode {Integer} the code of the character",
            "paramName": "characterCode",
            "description": " the code of the character",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "output {Array} the array of bytes to be filled",
            "paramName": "output",
            "description": " the array of bytes to be filled",
            "type": "Array"
          },
          {
            "name": "@param",
            "body": "is8bit {Boolean} specifies whether we should not treat the array as a multi byte string",
            "paramName": "is8bit",
            "description": " specifies whether we should not treat the array as a multi byte string",
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getUTF8StringFromBytes": {
      "location": {
        "start": {
          "line": 154,
          "column": 4
        },
        "end": {
          "line": 198,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns a String from an array of bytes, with special treatment\nif the bytes are UTF-8 bytes (http://en.wikipedia.org/wiki/UTF8)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "bytes {Array} the byte array [8it integers]",
            "paramName": "bytes",
            "description": " the byte array [8it integers]",
            "type": "Array"
          },
          {
            "name": "@param",
            "body": "is8bit {Boolean} specifies whether we should not treat the array as a multi byte string",
            "paramName": "is8bit",
            "description": " specifies whether we should not treat the array as a multi byte string",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the string backed by the byte array",
            "type": "String",
            "description": " the string backed by the byte array"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "decode": {
      "location": {
        "start": {
          "line": 212,
          "column": 4
        },
        "end": {
          "line": 260,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Decode a base64 string (http://en.wikipedia.org/wiki/Base64)."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "input {String} the input string to decode",
            "paramName": "input",
            "description": " the input string to decode",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "is8bit {Boolean?} Whether the character set is 8-bit, not\nmulti-byte.  If this parameter is not provided, the character set is\ndetermined from the 'document' object.",
            "paramName": "is8bit",
            "description": " Whether the character set is 8-bit, not\nmulti-byte.  If this parameter is not provided, the character set is\ndetermined from the 'document' object.",
            "optional": true,
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The decoded input string.",
            "type": "String",
            "description": " The decoded input string."
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}