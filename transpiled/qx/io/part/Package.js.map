{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/io/part/Package.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "construct",
    "urls",
    "id",
    "loaded",
    "__readyState",
    "__urls",
    "__id",
    "members",
    "__closure",
    "__loadWithClosure",
    "__timeoutId",
    "__notifyPackageResult",
    "getId",
    "getReadyState",
    "getUrls",
    "saveClosure",
    "closure",
    "execute",
    "clearTimeout",
    "$$packageData",
    "__importPackageData",
    "loadClosure",
    "notifyPackageResult",
    "self",
    "bind",
    "__loadScriptList",
    "call",
    "pkg",
    "setTimeout",
    "Part",
    "TIMEOUT",
    "load",
    "urlList",
    "callback",
    "errBack",
    "length",
    "urlsLoaded",
    "loadScripts",
    "loader",
    "bom",
    "request",
    "Script",
    "open",
    "shift",
    "onload",
    "dispose",
    "client",
    "Engine",
    "getName",
    "onerror",
    "window",
    "send",
    "concat",
    "$$loader",
    "importPackageData",
    "io",
    "part",
    "Package"
  ],
  "mappings": ";;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EA0BAH,GAAGC,SAAH,CAAaG,MAAb,CAAoB,oBAApB,EACA;AACE;;;;;AAKAC,eAAY,mBAASC,IAAT,EAAeC,EAAf,EAAmBC,MAAnB,EACZ;AACE,WAAKC,YAAL,GAAoBD,SAAS,UAAT,GAAsB,aAA1C;AACA,WAAKE,MAAL,GAAcJ,IAAd;AACA,WAAKK,IAAL,GAAYJ,EAAZ;AACD,KAXH;;AAcEK,aACA;AACEH,oBAAe,IADjB;AAEEC,cAAS,IAFX;AAGEC,YAAO,IAHT;AAIEE,iBAAY,IAJd;AAKEC,yBAAoB,IALtB;AAMEC,mBAAc,IANhB;AAOEC,6BAAwB,IAP1B;;AAUE;;;;;AAKAC,aAAQ,iBAAW;AACjB,eAAO,KAAKN,IAAZ;AACD,OAjBH;;AAoBE;;;;;;;;;;;;;;;AAeAO,qBAAgB,yBAAW;AACzB,eAAO,KAAKT,YAAZ;AACD,OArCH;;AAwCE;;;;;;AAMAU,eAAU,mBAAW;AACnB,eAAO,KAAKT,MAAZ;AACD,OAhDH;;AAmDE;;;;;;AAMAU,mBAAc,qBAASC,OAAT,EACd;AACE,YAAI,KAAKZ,YAAL,IAAqB,OAAzB,EAAkC;AAChC;AACD;;AAED,aAAKI,SAAL,GAAiBQ,OAAjB;;AAEA,YAAI,CAAC,KAAKP,iBAAV,EAA6B;AAC3B,eAAKQ,OAAL;AACD,SAFD,MAEO;AACLC,uBAAa,KAAKR,WAAlB;AACA,eAAKN,YAAL,GAAoB,QAApB;AACA,eAAKO,qBAAL,CAA2B,IAA3B;AACD;AACF,OAxEH;;AA2EE;;;;AAIAM,eAAU,mBACV;AACE,YAAI,KAAKT,SAAT,EACA;AACE,eAAKA,SAAL;AACA,iBAAO,KAAKA,SAAZ;AACD;;AAED,YAAIb,GAAGwB,aAAH,CAAiB,KAAKb,IAAtB,CAAJ,EACA;AACE,eAAKc,mBAAL,CAAyBzB,GAAGwB,aAAH,CAAiB,KAAKb,IAAtB,CAAzB;AACA,iBAAOX,GAAGwB,aAAH,CAAiB,KAAKb,IAAtB,CAAP;AACD;AACD,aAAKF,YAAL,GAAoB,UAApB;AACD,OA7FH;;AAgGE;;;;;;;;AAQAiB,mBAAc,qBAASC,mBAAT,EAA8BC,IAA9B,EACd;AACE,YAAI,KAAKnB,YAAL,KAAsB,aAA1B,EAAyC;AACvC;AACD;;AAED,aAAKK,iBAAL,GAAyB,IAAzB;;AAEA,aAAKL,YAAL,GAAoB,SAApB;;AAEA,aAAKO,qBAAL,GAA6BhB,GAAGC,SAAH,CAAa4B,IAAb,CAAkBF,mBAAlB,EAAuCC,IAAvC,CAA7B;;AAEA,aAAKE,gBAAL,CACE,KAAKpB,MADP,EAEE,YAAW,CAAE,CAFf,EAGE,YAAW;AACT,eAAKD,YAAL,GAAoB,OAApB;AACAkB,8BAAoBI,IAApB,CAAyBH,IAAzB,EAA+B,IAA/B;AACD,SANH,EAOE,IAPF;;AAUA,YAAII,MAAM,IAAV;AACA,aAAKjB,WAAL,GAAmBkB,WAAW,YAAW;AACvCD,cAAIvB,YAAJ,GAAmB,OAAnB;AACAkB,8BAAoBI,IAApB,CAAyBH,IAAzB,EAA+BI,GAA/B;AACD,SAHkB,EAGhBhC,GAAGkC,IAAH,CAAQC,OAHQ,CAAnB;AAID,OAnIH;;AAsIE;;;;;;;AAOAC,YAAO,cAAST,mBAAT,EAA8BC,IAA9B,EACP;AACE,YAAI,KAAKnB,YAAL,KAAsB,aAA1B,EAAyC;AACvC;AACD;;AAED,aAAKK,iBAAL,GAAyB,KAAzB;;AAEA,aAAKL,YAAL,GAAoB,SAApB;;AAEA,aAAKqB,gBAAL,CACE,KAAKpB,MADP,EAEE,YAAW;AACT,eAAKD,YAAL,GAAoB,UAApB;AACA,eAAKa,OAAL;AACAK,8BAAoBI,IAApB,CAAyBH,IAAzB,EAA+B,IAA/B;AACD,SANH,EAOE,YAAW;AACT,eAAKnB,YAAL,GAAoB,OAApB;AACAkB,8BAAoBI,IAApB,CAAyBH,IAAzB,EAA+B,IAA/B;AACD,SAVH,EAWE,IAXF;AAaD,OApKH;;AAuKE;;;;;;;;AAQAE,wBAAmB,0BAASO,OAAT,EAAkBC,QAAlB,EAA4BC,OAA5B,EAAqCX,IAArC,EACnB;AACE,YAAIS,QAAQG,MAAR,IAAkB,CAAtB,EACA;AACEF,mBAASP,IAAT,CAAcH,IAAd;AACA;AACD;;AAED,YAAIa,aAAa,CAAjB;AACA,YAAIb,OAAO,IAAX;AACA,YAAIc,cAAc,SAAdA,WAAc,CAASpC,IAAT,EAClB;AACE,cAAImC,cAAcJ,QAAQG,MAA1B,EACA;AACEF,qBAASP,IAAT,CAAcH,IAAd;AACA;AACD;;AAED,cAAIe,SAAS,IAAI3C,GAAG4C,GAAH,CAAOC,OAAP,CAAeC,MAAnB,EAAb;AACAH,iBAAOI,IAAP,CAAY,KAAZ,EAAmBzC,KAAK0C,KAAL,EAAnB;;AAEAL,iBAAOM,MAAP,GAAgB,YAChB;AACER,0BAAc,CAAd;AACAE,mBAAOO,OAAP;;AAEA;AACA;AACA,gBAAKlD,GAAG4C,GAAH,CAAOO,MAAP,CAAcC,MAAd,CAAqBC,OAArB,MAAkC,QAAvC,EACA;AACE;AACA;AACA;AACApB,yBAAW,YACX;AACES,4BAAYX,IAAZ,CAAiBH,IAAjB,EAAuBtB,IAAvB,EAA6BgC,QAA7B,EAAuCV,IAAvC;AACD,eAHD,EAGG,CAHH;AAID,aATD,MAWA;AACEc,0BAAYX,IAAZ,CAAiBH,IAAjB,EAAuBtB,IAAvB,EAA6BgC,QAA7B,EAAuCV,IAAvC;AACD;AACF,WArBD;;AAuBAe,iBAAOW,OAAP,GAAiB,YAAW;AAC1B,gBAAI1B,KAAKnB,YAAL,IAAqB,SAAzB,EAAoC;AAClCc,2BAAaK,KAAKb,WAAlB;AACA4B,qBAAOO,OAAP;AACA,qBAAOX,QAAQR,IAAR,CAAaH,IAAb,CAAP;AACD;AACF,WAND;;AAQA;AACA2B,iBAAOtB,UAAP,CAAkB,YAAW;AAC3BU,mBAAOa,IAAP;AACD,WAFD;AAGD,SA9CD;;AAgDAd,oBAAYL,QAAQoB,MAAR,EAAZ;AACD,OA1OH;;AA6OE;;;;;;;AAOAhC,2BAAsBzB,GAAG0D,QAAH,CAAYC;AApPpC;AAfF,GADA,C;AA1BA3D,KAAG4D,EAAH,CAAMC,IAAN,CAAWC,OAAX,CAAmB3D,aAAnB,GAAmCA,aAAnC",
  "file": "Package.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The Package wraps a list of related script URLs, which are required by one\n * or more parts.\n *\n * @internal\n * @ignore(qx.util.ResourceManager)\n */\nqx.Bootstrap.define(\"qx.io.part.Package\",\n{\n  /**\n   * @param urls {String[]} A list of script URLs\n   * @param id {var} Unique package hash key\n   * @param loaded {Boolean?false} Whether the package is already loaded\n   */\n  construct : function(urls, id, loaded)\n  {\n    this.__readyState = loaded ? \"complete\" : \"initialized\";\n    this.__urls = urls;\n    this.__id = id;\n  },\n\n\n  members :\n  {\n    __readyState : null,\n    __urls : null,\n    __id : null,\n    __closure : null,\n    __loadWithClosure : null,\n    __timeoutId : null,\n    __notifyPackageResult : null,\n\n\n    /**\n     * Get the package ID.\n     *\n     * @return {String} The package id\n     */\n    getId : function() {\n      return this.__id;\n    },\n\n\n    /**\n     * Get the ready state of the package. The value is one of\n     * <ul>\n     * <li>\n     *   <b>initialized</b>: The package is initialized. The {@link #load}\n     *   method has not yet been called\n     * </li>\n     * <li><b>loading</b>: The package is still loading.</li>\n     * <li><b>complete</b>: The package has been loaded successfully</li>\n     * <li><b>cached</b>: The package is loaded but is not executed\n     *   (for closure parts)</li>\n     * </li>\n     *\n     * @return {String} The ready state.\n     */\n    getReadyState : function() {\n      return this.__readyState;\n    },\n\n\n    /**\n     * Returns the urlsstored stored in the package.\n     *\n     * @internal\n     * @return {String[]} An array of urls of this package.\n     */\n    getUrls : function() {\n      return this.__urls;\n    },\n\n\n    /**\n     * Method for storing the closure for this package. This is only relevant\n     * if a {@link qx.io.part.ClosurePart} is used.\n     *\n     * @param closure {Function} The code of this package wrapped in a closure.\n     */\n    saveClosure : function(closure)\n    {\n      if (this.__readyState == \"error\") {\n        return;\n      }\n\n      this.__closure = closure;\n\n      if (!this.__loadWithClosure) {\n        this.execute();\n      } else {\n        clearTimeout(this.__timeoutId);\n        this.__readyState = \"cached\";\n        this.__notifyPackageResult(this);\n      }\n    },\n\n\n    /**\n     * Executes the stored closure. This is only relevant if a\n     * {@link qx.io.part.ClosurePart} is used.\n     */\n    execute : function()\n    {\n      if (this.__closure)\n      {\n        this.__closure();\n        delete this.__closure;\n      }\n\n      if (qx.$$packageData[this.__id])\n      {\n        this.__importPackageData(qx.$$packageData[this.__id]);\n        delete qx.$$packageData[this.__id];\n      }\n      this.__readyState = \"complete\";\n    },\n\n\n    /**\n     * Load method if the package loads a closure. This is only relevant if a\n     * {@link qx.io.part.ClosurePart} is used.\n     *\n     * @param notifyPackageResult {Function} The callback if all scripts are\n     *   done loading in this package.\n     * @param self {Object?} The context of the callback.\n     */\n    loadClosure : function(notifyPackageResult, self)\n    {\n      if (this.__readyState !== \"initialized\") {\n        return;\n      }\n\n      this.__loadWithClosure = true;\n\n      this.__readyState = \"loading\";\n\n      this.__notifyPackageResult = qx.Bootstrap.bind(notifyPackageResult, self);\n\n      this.__loadScriptList(\n        this.__urls,\n        function() {},\n        function() {\n          this.__readyState = \"error\";\n          notifyPackageResult.call(self, this);\n        },\n        this\n      );\n\n      var pkg = this;\n      this.__timeoutId = setTimeout(function() {\n        pkg.__readyState = \"error\";\n        notifyPackageResult.call(self, pkg);\n      }, qx.Part.TIMEOUT);\n    },\n\n\n    /**\n     * Load the part's script URLs in the correct order.\n     *\n     * @param notifyPackageResult {Function} The callback if all scripts are\n     *   done loading in this package.\n     * @param self {Object?} The context of the callback.\n     */\n    load : function(notifyPackageResult, self)\n    {\n      if (this.__readyState !== \"initialized\") {\n        return;\n      }\n\n      this.__loadWithClosure = false;\n\n      this.__readyState = \"loading\";\n\n      this.__loadScriptList(\n        this.__urls,\n        function() {\n          this.__readyState = \"complete\";\n          this.execute();\n          notifyPackageResult.call(self, this);\n        },\n        function() {\n          this.__readyState = \"error\";\n          notifyPackageResult.call(self, this);\n        },\n        this\n      );\n    },\n\n\n    /**\n     * Loads a list of scripts in the correct order.\n     *\n     * @param urlList {String[]} List of script urls\n     * @param callback {Function} Function to execute on completion\n     * @param errBack {Function} Function to execute on error\n     * @param self {Object?window} Context to execute the given function in\n     */\n    __loadScriptList : function(urlList, callback, errBack, self)\n    {\n      if (urlList.length == 0)\n      {\n        callback.call(self);\n        return;\n      }\n\n      var urlsLoaded = 0;\n      var self = this;\n      var loadScripts = function(urls)\n      {\n        if (urlsLoaded >= urlList.length)\n        {\n          callback.call(self);\n          return;\n        }\n\n        var loader = new qx.bom.request.Script();\n        loader.open(\"GET\", urls.shift());\n\n        loader.onload = function()\n        {\n          urlsLoaded += 1;\n          loader.dispose();\n\n          // Important to use engine detection directly to keep the minimal\n          // package size small [BUG #5068]\n          if ((qx.bom.client.Engine.getName() == \"webkit\"))\n          {\n            // force asynchronous load\n            // Safari fails with an \"maximum recursion depth exceeded\" error if it is\n            // called sync.\n            setTimeout(function()\n            {\n              loadScripts.call(self, urls, callback, self);\n            }, 0);\n          }\n          else\n          {\n            loadScripts.call(self, urls, callback, self);\n          }\n        };\n\n        loader.onerror = function() {\n          if (self.__readyState == \"loading\") {\n            clearTimeout(self.__timeoutId);\n            loader.dispose();\n            return errBack.call(self);\n          }\n        };\n\n        // Force loading script asynchronously (IE may load synchronously)\n        window.setTimeout(function() {\n          loader.send();\n        });\n      };\n\n      loadScripts(urlList.concat());\n    },\n\n\n    /**\n     * Import the data of a package. The function is defined in the loader\n     * script.\n     *\n     * @signature function(packageData)\n     * @param packageData {Map} Map of package data categories (\"resources\",...)\n     */\n    __importPackageData : qx.$$loader.importPackageData\n  }\n});\n"
  ]
}