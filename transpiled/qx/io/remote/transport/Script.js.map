{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/io/remote/transport/Script.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "io",
    "remote",
    "transport",
    "Abstract",
    "implement",
    "core",
    "IDisposable",
    "construct",
    "vUniqueId",
    "Script",
    "__uniqueId",
    "__element",
    "statics",
    "_instanceRegistry",
    "ScriptTransport_PREFIX",
    "ScriptTransport_ID_PARAM",
    "ScriptTransport_DATA_PARAM",
    "handles",
    "synchronous",
    "asynchronous",
    "crossDomain",
    "fileUpload",
    "programmaticFormFields",
    "responseTypes",
    "isSupported",
    "_numericMap",
    "_requestFinished",
    "event",
    "GlobalError",
    "observeMethod",
    "id",
    "content",
    "vInstance",
    "Environment",
    "get",
    "warn",
    "_responseContent",
    "_switchReadyState",
    "complete",
    "members",
    "__lastReadyState",
    "send",
    "vUrl",
    "getUrl",
    "indexOf",
    "vParameters",
    "getParameters",
    "vParametersList",
    "vId",
    "error",
    "value",
    "Array",
    "i",
    "length",
    "push",
    "encodeURIComponent",
    "join",
    "vData",
    "getData",
    "document",
    "createElement",
    "charset",
    "src",
    "debug",
    "body",
    "appendChild",
    "vReadyState",
    "getState",
    "setState",
    "Exchange",
    "_nativeMap",
    "setRequestHeader",
    "vLabel",
    "vValue",
    "getResponseHeader",
    "getResponseHeaders",
    "getStatusCode",
    "getStatusText",
    "getFetchedLength",
    "getResponseContent",
    "getResponseType",
    "ret",
    "defer",
    "registerType",
    "destruct",
    "removeChild"
  ],
  "mappings": "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",
  "file": "Script.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2006 Derrell Lipman\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Derrell Lipman (derrell)\n     * Andreas Junghans (lucidcake)\n\n************************************************************************ */\n\n/**\n * Transports requests to a server using dynamic script tags.\n *\n * This class should not be used directly by client programmers.\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.io.remote.transport.Script\",\n{\n  extend : qx.io.remote.transport.Abstract,\n  implement: [ qx.core.IDisposable ],\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    var vUniqueId = ++qx.io.remote.transport.Script.__uniqueId;\n\n    if (vUniqueId >= 2000000000) {\n      qx.io.remote.transport.Script.__uniqueId = vUniqueId = 1;\n    }\n\n    this.__element = null;\n    this.__uniqueId = vUniqueId;\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /**\n     * Unique identifier for each instance.\n     *\n     * @internal\n     */\n    __uniqueId : 0,\n\n    /**\n     * Registry for all script transport instances.\n     *\n     * @internal\n     */\n    _instanceRegistry : {},\n\n    /**\n     * Internal URL parameter prefix.\n     *\n     * @internal\n     */\n    ScriptTransport_PREFIX : \"_ScriptTransport_\",\n\n    /**\n     * Internal URL parameter ID.\n     *\n     * @internal\n     */\n    ScriptTransport_ID_PARAM : \"_ScriptTransport_id\",\n\n    /**\n     * Internal URL parameter data prefix.\n     *\n     * @internal\n     */\n    ScriptTransport_DATA_PARAM : \"_ScriptTransport_data\",\n\n    /**\n     * Capabilities of this transport type.\n     *\n     * @internal\n     */\n    handles :\n    {\n      synchronous           : false,\n      asynchronous          : true,\n      crossDomain           : true,\n      fileUpload            : false,\n      programmaticFormFields : false,\n      responseTypes         : [ \"text/plain\", \"text/javascript\", \"application/json\" ]\n    },\n\n\n    /**\n     * Returns always true, because script transport is supported by all browsers.\n     * @return {Boolean} <code>true</code>\n     */\n    isSupported : function() {\n      return true;\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * For reference:\n     * http://msdn.microsoft.com/en-us/library/ie/ms534359%28v=vs.85%29.aspx\n     *\n     * @internal\n     */\n    _numericMap :\n    {\n      \"uninitialized\" : 1,\n      \"loading\"       : 2,\n      \"loaded\"        : 2,\n      \"interactive\"   : 3,\n      \"complete\"      : 4\n    },\n\n\n    /**\n     * This method can be called by the script loaded by the ScriptTransport\n     * class.\n     *\n     * @signature function(id, content)\n     * @param id {String} Id of the corresponding transport object,\n     *     which is passed as an URL parameter to the server an\n     * @param content {String} This string is passed to the content property\n     *     of the {@link qx.io.remote.Response} object.\n     */\n    _requestFinished : qx.event.GlobalError.observeMethod(function(id, content)\n    {\n      var vInstance = qx.io.remote.transport.Script._instanceRegistry[id];\n\n      if (vInstance == null)\n      {\n        if (qx.core.Environment.get(\"qx.debug\"))\n        {\n          if (qx.core.Environment.get(\"qx.debug.io.remote\")) {\n            this.warn(\"Request finished for an unknown instance (probably aborted or timed out before)\");\n          }\n        }\n      }\n      else\n      {\n        vInstance._responseContent = content;\n        vInstance._switchReadyState(qx.io.remote.transport.Script._numericMap.complete);\n      }\n    })\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n\n    __lastReadyState : 0,\n    __element : null,\n    __uniqueId : null,\n\n    /*\n    ---------------------------------------------------------------------------\n      USER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sends the request using \"script\" elements\n     *\n     */\n    send : function()\n    {\n      var vUrl = this.getUrl();\n\n      // --------------------------------------\n      //   Adding parameters\n      // --------------------------------------\n      vUrl += (vUrl.indexOf(\"?\") >= 0 ? \"&\" : \"?\") + qx.io.remote.transport.Script.ScriptTransport_ID_PARAM + \"=\" + this.__uniqueId;\n\n      var vParameters = this.getParameters();\n      var vParametersList = [];\n\n      for (var vId in vParameters)\n      {\n        if (vId.indexOf(qx.io.remote.transport.Script.ScriptTransport_PREFIX) == 0) {\n          this.error(\"Illegal parameter name. The following prefix is used internally by qooxdoo): \" + qx.io.remote.transport.Script.ScriptTransport_PREFIX);\n        }\n\n        var value = vParameters[vId];\n\n        if (value instanceof Array)\n        {\n          for (var i=0; i<value.length; i++) {\n            vParametersList.push(encodeURIComponent(vId) + \"=\" + encodeURIComponent(value[i]));\n          }\n        }\n        else\n        {\n          vParametersList.push(encodeURIComponent(vId) + \"=\" + encodeURIComponent(value));\n        }\n      }\n\n      if (vParametersList.length > 0) {\n        vUrl += \"&\" + vParametersList.join(\"&\");\n      }\n\n      // --------------------------------------\n      //   Sending data\n      // --------------------------------------\n      var vData = this.getData();\n\n      if (vData != null) {\n        vUrl += \"&\" + qx.io.remote.transport.Script.ScriptTransport_DATA_PARAM + \"=\" + encodeURIComponent(vData);\n      }\n\n      qx.io.remote.transport.Script._instanceRegistry[this.__uniqueId] = this;\n      this.__element = document.createElement(\"script\");\n\n      // IE needs this (it ignores the\n      // encoding from the header sent by the\n      // server for dynamic script tags)\n      this.__element.charset = \"utf-8\";\n      this.__element.src = vUrl;\n\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.debug.io.remote.data\"))\n        {\n          this.debug(\"Request: \" + vUrl);\n        }\n      }\n\n      document.body.appendChild(this.__element);\n    },\n\n\n    /**\n     * Switches the readystate by setting the internal state.\n     *\n     * @param vReadyState {String} readystate value\n     */\n    _switchReadyState : function(vReadyState)\n    {\n      // Ignoring already stopped requests\n      switch(this.getState())\n      {\n        case \"completed\":\n        case \"aborted\":\n        case \"failed\":\n        case \"timeout\":\n          this.warn(\"Ignore Ready State Change\");\n          return;\n      }\n\n      // Updating internal state\n      while (this.__lastReadyState < vReadyState) {\n        this.setState(qx.io.remote.Exchange._nativeMap[++this.__lastReadyState]);\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      REQUEST HEADER SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets a request header with the given value.\n     *\n     * This method is not implemented at the moment.\n     *\n     * @param vLabel {String} Request header name\n     * @param vValue {var} Request header value\n     */\n    setRequestHeader : function(vLabel, vValue) {},\n\n    /*\n    ---------------------------------------------------------------------------\n      RESPONSE HEADER SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the value of the given response header.\n     *\n     * This method is not implemented at the moment and returns always \"null\".\n     *\n     * @param vLabel {String} Response header name\n     * @return {null} Returns null\n     */\n    getResponseHeader : function(vLabel) {\n      return null;\n    },\n\n    /**\n     * Provides an hash of all response headers.\n     *\n     * This method is not implemented at the moment and returns an empty map.\n     *\n     * @return {Map} empty map\n     */\n    getResponseHeaders : function() {\n      return {};\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STATUS SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the current status code of the request if available or -1 if not.\n     * This method needs implementation (returns always 200).\n     *\n     * @return {Integer} status code\n     */\n    getStatusCode : function() {\n      return 200;\n    },\n\n    /**\n     * Provides the status text for the current request if available and null otherwise.\n     * This method needs implementation (returns always an empty string)\n     *\n     * @return {String} always an empty string.\n     */\n    getStatusText : function() {\n      return \"\";\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      RESPONSE DATA SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the length of the content as fetched thus far.\n     * This method needs implementation (returns always 0).\n     *\n     * @return {Integer} Returns 0\n     */\n    getFetchedLength : function() {\n      return 0;\n    },\n\n    /**\n     * Returns the content of the response.\n     *\n     * @return {null | String} If successful content of response as string.\n     */\n    getResponseContent : function()\n    {\n      if (this.getState() !== \"completed\")\n      {\n        if (qx.core.Environment.get(\"qx.debug\"))\n        {\n          if (qx.core.Environment.get(\"qx.debug.io.remote\")) {\n            this.warn(\"Transfer not complete, ignoring content!\");\n          }\n        }\n\n        return null;\n      }\n\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.debug.io.remote\")) {\n          this.debug(\"Returning content for responseType: \" + this.getResponseType());\n        }\n      }\n\n      switch(this.getResponseType())\n      {\n        case \"text/plain\":\n          // server is responsible for using a string as the response\n        case \"application/json\":\n        case \"text/javascript\":\n          if (qx.core.Environment.get(\"qx.debug\"))\n          {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\"))\n            {\n              this.debug(\"Response: \" + this._responseContent);\n            }\n          }\n          var ret = this._responseContent;\n          return (ret === 0 ? 0 : (ret || null));\n\n        default:\n          this.warn(\"No valid responseType specified (\" + this.getResponseType() + \")!\");\n          return null;\n      }\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function()\n  {\n    // basic registration to qx.io.remote.Exchange\n    // the real availability check (activeX stuff and so on) follows at the first real request\n    qx.io.remote.Exchange.registerType(qx.io.remote.transport.Script, \"qx.io.remote.transport.Script\");\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    if (this.__element)\n    {\n      delete qx.io.remote.transport.Script._instanceRegistry[this.__uniqueId];\n      document.body.removeChild(this.__element);\n    }\n\n    this.__element = this._responseContent = null;\n  }\n});\n"
  ]
}