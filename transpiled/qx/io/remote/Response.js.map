{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/io/remote/Response.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "event",
    "type",
    "Event",
    "properties",
    "state",
    "check",
    "nullable",
    "statusCode",
    "content",
    "responseHeaders",
    "apply",
    "members",
    "__lowerHeaders",
    "clone",
    "embryo",
    "setType",
    "getType",
    "setState",
    "getState",
    "setStatusCode",
    "getStatusCode",
    "setContent",
    "getContent",
    "setResponseHeaders",
    "getResponseHeaders",
    "getResponseHeader",
    "vHeader",
    "toLowerCase",
    "_applyResponseHeaders",
    "value",
    "old",
    "lowerHeaders",
    "Object",
    "keys",
    "forEach",
    "key",
    "io",
    "remote",
    "Response"
  ],
  "mappings": ";;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAsBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,uBAAhB,EACA;AACEC,YAASN,GAAGO,KAAH,CAASC,IAAT,CAAcC,KADzB;;AAME;;;;;;AAMAC,gBACA;AACE;;;;;;AAMA;AACAC,aACA;AACEC,eAAW,SADb;AAEEC,kBAAW;AAFb,OATF;;AAcE;AACAC,kBACA;AACEF,eAAW,SADb;AAEEC,kBAAW;AAFb,OAhBF;;AAqBE;AACAE,eACA;AACEF,kBAAW;AADb,OAvBF;;AA2BE;AACAG,uBACA;AACEJ,eAAW,QADb;AAEEC,kBAAW,IAFb;AAGEI,eAAQ;AAHV;AA7BF,KAbF;;AAoDE;;;;;;AAMAC,aACA;AACEC,sBAAgB,IADlB;;AAGE;;;;;;AAMA;AACAC,aAAQ,eAASC,MAAT,EACR;AACE,YAAID,8DAA6BC,MAA7B,CAAJ;AACAD,cAAME,OAAN,CAAc,KAAKC,OAAL,EAAd;AACAH,cAAMI,QAAN,CAAe,KAAKC,QAAL,EAAf;AACAL,cAAMM,aAAN,CAAoB,KAAKC,aAAL,EAApB;AACAP,cAAMQ,UAAN,CAAiB,KAAKC,UAAL,EAAjB;AACAT,cAAMU,kBAAN,CAAyB,KAAKC,kBAAL,EAAzB;AACA,eAAOX,KAAP;AACD,OAnBH;;AAsBE;;;;;AAKAY,yBAAoB,2BAASC,OAAT,EACpB;AACE,YAAI,KAAKd,cAAT,EAAyB;AACvB,iBAAO,KAAKA,cAAL,CAAoBc,QAAQC,WAAR,EAApB,KAA8C,IAArD;AACD;;AAED,eAAO,IAAP;AACD,OAlCH;;AAoCE;;;;;;;AAOAC,6BAAwB,+BAASC,KAAT,EAAgBC,GAAhB,EAAqB;AAC3C,YAAIC,eAAe,EAAnB;;AAEA,YAAIF,UAAU,IAAd,EAAoB;AAClBG,iBAAOC,IAAP,CAAYJ,KAAZ,EAAmBK,OAAnB,CAA2B,UAASC,GAAT,EAAc;AACvCJ,yBAAaI,IAAIR,WAAJ,EAAb,IAAkCE,MAAMM,GAAN,CAAlC;AACD,WAFD;AAGA,eAAKvB,cAAL,GAAsBmB,YAAtB;AACD;AACF;AApDH;AA3DF,GADA,C;AAtBAtC,KAAG2C,EAAH,CAAMC,MAAN,CAAaC,QAAb,CAAsB1C,aAAtB,GAAsCA,aAAtC",
  "file": "Response.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * This class is used to work with the result of a HTTP request.\n */\nqx.Class.define(\"qx.io.remote.Response\",\n{\n  extend : qx.event.type.Event,\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    /** State of the response. */\n    state :\n    {\n      check    : \"Integer\",\n      nullable : true\n    },\n\n    /** Status code of the response. */\n    statusCode :\n    {\n      check    : \"Integer\",\n      nullable : true\n    },\n\n    /** Content of the response. */\n    content :\n    {\n      nullable : true\n    },\n\n    /** The headers of the response. */\n    responseHeaders :\n    {\n      check    : \"Object\",\n      nullable : true,\n      apply : \"_applyResponseHeaders\"\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __lowerHeaders: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      USER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    clone : function(embryo)\n    {\n      var clone = this.base(arguments, embryo);\n      clone.setType(this.getType());\n      clone.setState(this.getState());\n      clone.setStatusCode(this.getStatusCode());\n      clone.setContent(this.getContent());\n      clone.setResponseHeaders(this.getResponseHeaders());\n      return clone;\n    },\n\n\n    /**\n     * Returns a specific response header\n     * @param vHeader {String} Response header name\n     * @return {Object | null} The header value or null;\n     */\n    getResponseHeader : function(vHeader)\n    {\n      if (this.__lowerHeaders) {\n        return this.__lowerHeaders[vHeader.toLowerCase()] || null;\n      }\n\n      return null;\n    },\n\n    /**\n     * Keep lower-cased shadow of response headers for later\n     * case-insensitive matching.\n     *\n     * @param value {var} Current value\n     * @param old {var} Previous value\n     */\n    _applyResponseHeaders : function(value, old) {\n      var lowerHeaders = {};\n\n      if (value !== null) {\n        Object.keys(value).forEach(function(key) {\n          lowerHeaders[key.toLowerCase()] = value[key];\n        });\n        this.__lowerHeaders = lowerHeaders;\n      }\n    }\n  }\n});\n"
  ]
}