{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/io/request/authentication/Basic.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "io",
    "request",
    "authentication",
    "IAuthentication",
    "construct",
    "username",
    "password",
    "__credentials",
    "util",
    "Base64",
    "encode",
    "members",
    "getAuthHeaders",
    "key",
    "value",
    "Basic"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAqBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,oCAAhB,EACA;;AAEEC,YAAQN,GAAGO,IAAH,CAAQC,MAFlB;;AAIEC,eAAWT,GAAGU,EAAH,CAAMC,OAAN,CAAcC,cAAd,CAA6BC,eAJ1C;;AAME;;;;AAIAC,eAAY,mBAASC,QAAT,EAAmBC,QAAnB,EACZ;AACG,WAAKC,aAAL,GAAqBjB,GAAGkB,IAAH,CAAQC,MAAR,CAAeC,MAAf,CAAsBL,WAAW,GAAX,GAAiBC,QAAvC,CAArB;AACF,KAbH;;AAeEK,aACA;AACEJ,qBAAgB,IADlB;;AAGE;;;;AAIAK,sBAAgB,0BAAW;AACzB,eAAO,CACL,EAACC,KAAK,eAAN,EAAuBC,OAAO,WAAW,KAAKP,aAA9C,EADK,CAAP;AAGD;AAXH;AAhBF,GADA,C;AArBAjB,KAAGU,EAAH,CAAMC,OAAN,CAAcC,cAAd,CAA6Ba,KAA7B,CAAmCtB,aAAnC,GAAmDA,aAAnD",
  "file": "Basic.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/**\n * Basic authentication.\n */\nqx.Class.define(\"qx.io.request.authentication.Basic\",\n{\n\n  extend: qx.core.Object,\n\n  implement: qx.io.request.authentication.IAuthentication,\n\n  /**\n   * @param username {var} The username to use.\n   * @param password {var} The password to use.\n   */\n  construct : function(username, password)\n  {\n     this.__credentials = qx.util.Base64.encode(username + ':' + password);\n  },\n\n  members :\n  {\n    __credentials : null,\n\n    /**\n     * Headers to include for basic authentication.\n     * @return {Map} Map containing the authentication credentials\n     */\n    getAuthHeaders: function() {\n      return [\n        {key: \"Authorization\", value: \"Basic \" + this.__credentials}\n      ];\n    }\n  }\n});\n"
  ]
}