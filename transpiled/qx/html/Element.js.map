{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/html/Element.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "IDisposable",
    "construct",
    "tagName",
    "styles",
    "attributes",
    "__nodeName",
    "__styleValues",
    "__attribValues",
    "statics",
    "DEBUG",
    "_modified",
    "_visibility",
    "_scroll",
    "_actions",
    "__selection",
    "__focusHandler",
    "__mouseCapture",
    "_scheduleFlush",
    "job",
    "html",
    "Element",
    "__deferredCall",
    "schedule",
    "flush",
    "obj",
    "log",
    "Logger",
    "debug",
    "focusHandler",
    "__getFocusHandler",
    "focusedDomElement",
    "getFocus",
    "__willBecomeInvisible",
    "blur",
    "activeDomElement",
    "getActive",
    "bom",
    "deactivate",
    "captureDomElement",
    "__getCaptureElement",
    "releaseCapture",
    "later",
    "modified",
    "hc",
    "__willBeSeeable",
    "classname",
    "__element",
    "dom",
    "Hierarchy",
    "isRendered",
    "push",
    "__flush",
    "i",
    "l",
    "length",
    "visibility",
    "element",
    "__visible",
    "$$disposed",
    "style",
    "display",
    "Environment",
    "get",
    "document",
    "documentMode",
    "scroll",
    "elem",
    "offsetWidth",
    "done",
    "__lazyScrollX",
    "scrollLeft",
    "__lazyScrollY",
    "scrollTop",
    "intoViewX",
    "__lazyScrollIntoViewX",
    "child",
    "getDomElement",
    "Scroll",
    "align",
    "intoViewY",
    "__lazyScrollIntoViewY",
    "activityEndActions",
    "action",
    "type",
    "args",
    "unshift",
    "apply",
    "selection",
    "Selection",
    "set",
    "start",
    "end",
    "event",
    "handler",
    "Appear",
    "refresh",
    "eventManager",
    "Registration",
    "getManager",
    "window",
    "getHandler",
    "Focus",
    "getDispatcher",
    "dispatch",
    "MouseCapture",
    "getCaptureElement",
    "domElement",
    "fromDomElement",
    "Assert",
    "assertTrue",
    "$$element",
    "$$elementObject",
    "toHashCode",
    "members",
    "__widget",
    "__root",
    "__included",
    "__styleJobs",
    "__attribJobs",
    "__propertyJobs",
    "__propertyValues",
    "__eventValues",
    "__children",
    "__modifiedChildren",
    "__parent",
    "_scheduleChildrenUpdate",
    "$$hash",
    "_createDomElement",
    "create",
    "connectWidget",
    "widget",
    "$$widget",
    "$$widgetObject",
    "updateObjectId",
    "disconnectWidget",
    "__connectDomElement",
    "getAttribute",
    "children",
    "_copyData",
    "_insertChildren",
    "_syncData",
    "_syncChildren",
    "createDocumentFragment",
    "appendChild",
    "dataChildren",
    "dataLength",
    "dataChild",
    "dataEl",
    "domParent",
    "domChildren",
    "childNodes",
    "domPos",
    "domEl",
    "domOperations",
    "removeChild",
    "insertBefore",
    "id",
    "getQxObjectId",
    "Id",
    "getAbsoluteIdOf",
    "setAttribute",
    "fromMarkup",
    "data",
    "Attribute",
    "key",
    "Style",
    "setStyles",
    "setCss",
    "compile",
    "_applyProperty",
    "importListeners",
    "jobs",
    "value",
    "undefined",
    "reset",
    "pa",
    "__addChildHelper",
    "Error",
    "remove",
    "__removeChildHelper",
    "__moveChildHelper",
    "getChildren",
    "getChild",
    "index",
    "hasChildren",
    "indexOf",
    "hasChild",
    "add",
    "varargs",
    "arguments",
    "addAt",
    "lang",
    "Array",
    "insertAt",
    "childs",
    "removeAt",
    "removeAll",
    "getParent",
    "insertInto",
    "parent",
    "rel",
    "insertAfter",
    "moveTo",
    "oldIndex",
    "moveBefore",
    "moveAfter",
    "free",
    "getNodeName",
    "setNodeName",
    "name",
    "setRoot",
    "root",
    "useMarkup",
    "helper",
    "createElement",
    "getHelperElement",
    "innerHTML",
    "useElement",
    "firstChild",
    "isFocusable",
    "tabIndex",
    "focusable",
    "FOCUSABLE_ELEMENTS",
    "setSelectable",
    "userSelect",
    "setStyle",
    "isNativelyFocusable",
    "include",
    "exclude",
    "isIncluded",
    "fadeIn",
    "duration",
    "col",
    "qxWeb",
    "isPlaying",
    "stop",
    "once",
    "show",
    "getAnimationHandles",
    "fadeOut",
    "hide",
    "isVisible",
    "scrollChildIntoViewX",
    "direct",
    "thisEl",
    "childEl",
    "scrollChildIntoViewY",
    "scrollToX",
    "x",
    "lazy",
    "getScrollX",
    "scrollToY",
    "y",
    "getScrollY",
    "disableScrolling",
    "enableScrolling",
    "addListener",
    "__onScroll",
    "removeListener",
    "__inScroll",
    "e",
    "getTextSelection",
    "el",
    "getTextSelectionLength",
    "getLength",
    "getTextSelectionStart",
    "getStart",
    "getTextSelectionEnd",
    "getEnd",
    "setTextSelection",
    "clearTextSelection",
    "clear",
    "__performAction",
    "actions",
    "focus",
    "activate",
    "capture",
    "containerCapture",
    "map",
    "removeStyle",
    "getStyle",
    "getAllStyles",
    "setAttributes",
    "removeAttribute",
    "addClass",
    "trim",
    "removeClass",
    "currentClass",
    "replace",
    "_setProperty",
    "_removeProperty",
    "_getProperty",
    "db",
    "listener",
    "self",
    "msg",
    "assertString",
    "assertFunction",
    "assertObject",
    "assertBoolean",
    "unique",
    "Manager",
    "getNextUniqueId",
    "$$wrapped_callback",
    "callback",
    "values",
    "entry",
    "removeListenerById",
    "hasListener",
    "getListeners",
    "serializeListeners",
    "listeners",
    "listenerData",
    "defer",
    "util",
    "DeferredCall",
    "destruct",
    "removeAllListeners",
    "ObjectRegistry",
    "inShutDown",
    "_disposeArray"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EA0CAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,iBAAhB,EACA;AACEC,YAASN,GAAGO,IAAH,CAAQC,MADnB;AAEEC,eAAY,CAAET,GAAGO,IAAH,CAAQG,WAAV,CAFd;;AAOE;;;;;;AAMA;;;;;;;;;AASAC,eAAY,mBAASC,OAAT,EAAkBC,MAAlB,EAA0BC,UAA1B,EACZ;AACE;;AAEA;AACA,WAAKC,UAAL,GAAkBH,WAAW,KAA7B;;AAEA,WAAKI,aAAL,GAAqBH,UAAU,IAA/B;AACA,WAAKI,cAAL,GAAsBH,cAAc,IAApC;AACD,KA/BH;;AAoCE;;;;;;AAMAI,aACA;AACE;;;;;;AAMA;AACAC,aAAQ,KARV;;AAWE;AACAC,iBAAY,EAZd;;AAeE;AACAC,mBAAc,EAhBhB;;AAmBE;AACAC,eAAU,EApBZ;;AAuBE;AACAC,gBAAW,EAxBb;;AA2BE;AACAC,mBAAc,EA5BhB;;AA+BEC,sBAAiB,IA/BnB;;AAkCEC,sBAAiB,IAlCnB;;AAyCE;;;;;;AAMA;;;;;;AAMAC,sBAAiB,wBAASC,GAAT,EAAc;AAC7B5B,WAAG6B,IAAH,CAAQC,OAAR,CAAgBC,cAAhB,CAA+BC,QAA/B;AACD,OAvDH;;AA0DE;;;AAGAC,aAAQ,iBACR;AACE,YAAIC,GAAJ;;AAGA;AACE,cAAI,KAAKf,KAAT,EAAgB;AACdnB,eAAGmC,GAAH,CAAOC,MAAP,CAAcC,KAAd,CAAoB,IAApB,EAA0B,sBAA1B;AACD;AACF;;AAGD;AACA,YAAIC,eAAe,KAAKC,iBAAL,EAAnB;AACA,YAAIC,oBAAoBF,aAAaG,QAAb,EAAxB;AACA,YAAID,qBAAqB,KAAKE,qBAAL,CAA2BF,iBAA3B,CAAzB,EAAwE;AACtEF,uBAAaK,IAAb,CAAkBH,iBAAlB;AACD;;AAED;AACA,YAAII,mBAAmBN,aAAaO,SAAb,EAAvB;AACA,YAAID,oBAAoB,KAAKF,qBAAL,CAA2BE,gBAA3B,CAAxB,EAAsE;AACpE5C,aAAG8C,GAAH,CAAOhB,OAAP,CAAeiB,UAAf,CAA0BH,gBAA1B;AACD;;AAED;AACA,YAAII,oBAAoB,KAAKC,mBAAL,EAAxB;AACA,YAAID,qBAAqB,KAAKN,qBAAL,CAA2BM,iBAA3B,CAAzB,EAAwE;AACtEhD,aAAG8C,GAAH,CAAOhB,OAAP,CAAeoB,cAAf,CAA8BF,iBAA9B;AACD;;AAGD,YAAIG,QAAQ,EAAZ;AACA,YAAIC,WAAW,KAAKhC,SAApB;;AAEA,aAAK,IAAIiC,EAAT,IAAeD,QAAf,EACA;AACElB,gBAAMkB,SAASC,EAAT,CAAN;AACA;AACA;AACA,cAAInB,IAAIoB,eAAJ,MAAyBpB,IAAIqB,SAAJ,IAAiB,gBAA9C,EACA;AACE;AACA,gBAAIrB,IAAIsB,SAAJ,IAAiBxD,GAAGyD,GAAH,CAAOC,SAAP,CAAiBC,UAAjB,CAA4BzB,IAAIsB,SAAhC,CAArB,EAAiE;AAC/DL,oBAAMS,IAAN,CAAW1B,GAAX;AACD;;AAED;AAJA,iBAMA;AAEE;AACE,sBAAI,KAAKf,KAAT,EAAgB;AACde,wBAAIG,KAAJ,CAAU,yBAAV;AACD;AACF;;AAEDH,oBAAI2B,OAAJ;AACD;;AAED;AACA,mBAAOT,SAASC,EAAT,CAAP;AACD;AACF;;AAED,aAAK,IAAIS,IAAE,CAAN,EAASC,IAAEZ,MAAMa,MAAtB,EAA8BF,IAAEC,CAAhC,EAAmCD,GAAnC,EACA;AACE5B,gBAAMiB,MAAMW,CAAN,CAAN;;AAGA;AACE,gBAAI,KAAK3C,KAAT,EAAgB;AACde,kBAAIG,KAAJ,CAAU,wBAAV;AACD;AACF;;AAEDH,cAAI2B,OAAJ;AACD;;AAID;AACA,YAAII,aAAa,KAAK5C,WAAtB;;AAEA,aAAK,IAAIgC,EAAT,IAAeY,UAAf,EACA;AACE/B,gBAAM+B,WAAWZ,EAAX,CAAN;;AAEA,cAAIa,UAAUhC,IAAIsB,SAAlB;AACA,cAAI,CAACU,OAAL,EACA;AACE,mBAAOD,WAAWZ,EAAX,CAAP;AACA;AACD;;AAGD;AACE,gBAAI,KAAKlC,KAAT,EAAgB;AACdnB,iBAAGmC,GAAH,CAAOC,MAAP,CAAcC,KAAd,CAAoB,IAApB,EAA0B,8BAA8BH,IAAIiC,SAA5D;AACD;AACF;;AAED;AACA;AACA,cAAI,CAACjC,IAAIkC,UAAT,EAAqB;AACnBF,oBAAQG,KAAR,CAAcC,OAAd,GAAwBpC,IAAIiC,SAAJ,GAAgB,EAAhB,GAAqB,MAA7C;AACA;AACA,gBAAKnE,GAAGO,IAAH,CAAQgE,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,KAA0C,QAA/C,EACA;AACE,kBAAI,EAAEC,SAASC,YAAT,IAAyB,CAA3B,CAAJ,EAAmC;AACjCR,wBAAQG,KAAR,CAAcJ,UAAd,GAA2B/B,IAAIiC,SAAJ,GAAgB,SAAhB,GAA4B,QAAvD;AACD;AACF;AACF;;AAED,iBAAOF,WAAWZ,EAAX,CAAP;AACD;;AAED;AACA,YAAIsB,SAAS,KAAKrD,OAAlB;AACA,aAAK,IAAI+B,EAAT,IAAesB,MAAf,EACA;AACEzC,gBAAMyC,OAAOtB,EAAP,CAAN;AACA,cAAIuB,OAAO1C,IAAIsB,SAAf;;AAEA,cAAIoB,QAAQA,KAAKC,WAAjB,EACA;AACE,gBAAIC,OAAO,IAAX;;AAEA;AACA,gBAAI5C,IAAI6C,aAAJ,IAAqB,IAAzB,EACA;AACE7C,kBAAIsB,SAAJ,CAAcwB,UAAd,GAA2B9C,IAAI6C,aAA/B;AACA,qBAAO7C,IAAI6C,aAAX;AACD;;AAED;AACA,gBAAI7C,IAAI+C,aAAJ,IAAqB,IAAzB,EACA;AACE/C,kBAAIsB,SAAJ,CAAc0B,SAAd,GAA0BhD,IAAI+C,aAA9B;AACA,qBAAO/C,IAAI+C,aAAX;AACD;;AAED;AACA,gBAAIE,YAAYjD,IAAIkD,qBAApB;AACA,gBAAID,aAAa,IAAjB,EACA;AACE,kBAAIE,QAAQF,UAAUjB,OAAV,CAAkBoB,aAAlB,EAAZ;;AAEA,kBAAID,SAASA,MAAMR,WAAnB,EACA;AACE7E,mBAAG8C,GAAH,CAAOoB,OAAP,CAAeqB,MAAf,CAAsBJ,SAAtB,CAAgCE,KAAhC,EAAuCT,IAAvC,EAA6CO,UAAUK,KAAvD;AACA,uBAAOtD,IAAIkD,qBAAX;AACD,eAJD,MAMA;AACEN,uBAAO,KAAP;AACD;AACF;;AAED;AACA,gBAAIW,YAAYvD,IAAIwD,qBAApB;AACA,gBAAID,aAAa,IAAjB,EACA;AACE,kBAAIJ,QAAQI,UAAUvB,OAAV,CAAkBoB,aAAlB,EAAZ;;AAEA,kBAAID,SAASA,MAAMR,WAAnB,EACA;AACE7E,mBAAG8C,GAAH,CAAOoB,OAAP,CAAeqB,MAAf,CAAsBE,SAAtB,CAAgCJ,KAAhC,EAAuCT,IAAvC,EAA6Ca,UAAUD,KAAvD;AACA,uBAAOtD,IAAIwD,qBAAX;AACD,eAJD,MAMA;AACEZ,uBAAO,KAAP;AACD;AACF;;AAED;AACA;AACA,gBAAIA,IAAJ,EAAU;AACR,qBAAOH,OAAOtB,EAAP,CAAP;AACD;AACF;AACF;;AAGD,YAAIsC,qBAAqB;AACvB,4BAAkB,CADK;AAEvB,kBAAQ,CAFe;AAGvB,wBAAc;AAHS,SAAzB;;AAMA;AACA,aAAK,IAAI7B,IAAE,CAAX,EAAcA,IAAE,KAAKvC,QAAL,CAAcyC,MAA9B,EAAsCF,GAAtC,EACA;AACE,cAAI8B,SAAS,KAAKrE,QAAL,CAAcuC,CAAd,CAAb;AACA,cAAII,UAAU0B,OAAO1B,OAAP,CAAeV,SAA7B;AACA,cAAI,CAACU,OAAD,IAAY,CAACyB,mBAAmBC,OAAOC,IAA1B,CAAD,IAAoC,CAACD,OAAO1B,OAAP,CAAeZ,eAAf,EAArD,EAAuF;AACrF;AACD;AACD,cAAIwC,OAAOF,OAAOE,IAAlB;AACAA,eAAKC,OAAL,CAAa7B,OAAb;AACAlE,aAAG8C,GAAH,CAAOhB,OAAP,CAAe8D,OAAOC,IAAtB,EAA4BG,KAA5B,CAAkChG,GAAG8C,GAAH,CAAOhB,OAAzC,EAAkDgE,IAAlD;AACD;AACD,aAAKvE,QAAL,GAAgB,EAAhB;;AAEA;AACA,aAAK,IAAI8B,EAAT,IAAe,KAAK7B,WAApB,EACA;AACE,cAAIyE,YAAY,KAAKzE,WAAL,CAAiB6B,EAAjB,CAAhB;AACA,cAAIuB,OAAOqB,UAAU/B,OAAV,CAAkBV,SAA7B;AACA,cAAIoB,IAAJ,EACA;AACE5E,eAAG8C,GAAH,CAAOoD,SAAP,CAAiBC,GAAjB,CAAqBvB,IAArB,EAA2BqB,UAAUG,KAArC,EAA4CH,UAAUI,GAAtD;AACA,mBAAO,KAAK7E,WAAL,CAAiB6B,EAAjB,CAAP;AACD;AACF;;AAED;AACArD,WAAGsG,KAAH,CAASC,OAAT,CAAiBC,MAAjB,CAAwBC,OAAxB;AACD,OAzRH;;AA4RE;;;;;AAKAlE,yBAAoB,6BACpB;AACE,YAAI,CAAC,KAAKd,cAAV,EACA;AACE,cAAIiF,eAAe1G,GAAGsG,KAAH,CAASK,YAAT,CAAsBC,UAAtB,CAAiCC,MAAjC,CAAnB;AACA,eAAKpF,cAAL,GAAsBiF,aAAaI,UAAb,CAAwB9G,GAAGsG,KAAH,CAASC,OAAT,CAAiBQ,KAAzC,CAAtB;AACD;AACD,eAAO,KAAKtF,cAAZ;AACD,OAzSH;;AA4SE;;;;;AAKAwB,2BAAsB,+BACtB;AACE,YAAI,CAAC,KAAKvB,cAAV,EACA;AACE,cAAIgF,eAAe1G,GAAGsG,KAAH,CAASK,YAAT,CAAsBC,UAAtB,CAAiCC,MAAjC,CAAnB;AACA,eAAKnF,cAAL,GAAsBgF,aAAaM,aAAb,CAA2BhH,GAAGsG,KAAH,CAASW,QAAT,CAAkBC,YAA7C,CAAtB;AACD;AACD,eAAO,KAAKxF,cAAL,CAAoByF,iBAApB,EAAP;AACD,OAzTH;;AA4TE;;;;;;AAMAzE,6BAAwB,+BAAS0E,UAAT,EACxB;AACE,YAAIlD,UAAU,KAAKmD,cAAL,CAAoBD,UAApB,CAAd;AACA,eAAOlD,WAAW,CAACA,QAAQZ,eAAR,EAAnB;AACD,OAtUH;;AAyUE;;;;;;AAMA+D,sBAAgB,wBAASD,UAAT,EAAqB;AACK;AACxCpH,aAAGO,IAAH,CAAQ+G,MAAR,CAAeC,UAAf,CAA2B,CAACH,WAAWI,SAAZ,IAAyB,CAACJ,WAAWK,eAAtC,IACxBL,WAAWI,SAAX,KAAyBJ,WAAWK,eAAX,CAA2BC,UAA3B,EAD3B;AAEA;AACA,eAAON,WAAWK,eAAlB;AACD;;AArVH,KA3CF;;AAyYE;;;;;;AAMAE,aACA;AACE;;;;;;AAMA5G,kBAAa,IAPf;;AASE;AACAyC,iBAAY,IAVd;;AAYE;AACAoE,gBAAW,IAbb;;AAeE;AACAC,cAAS,KAhBX;;AAkBE;AACAC,kBAAa,IAnBf;;AAqBE;AACA3D,iBAAY,IAtBd;;AAwBEiB,6BAAwB,IAxB1B;AAyBEM,6BAAwB,IAzB1B;;AA2BEX,qBAAgB,IA3BlB;AA4BEE,qBAAgB,IA5BlB;;AA8BE8C,mBAAc,IA9BhB;AA+BEC,oBAAe,IA/BjB;AAgCEC,sBAAiB,IAhCnB;;AAkCEjH,qBAAgB,IAlClB;AAmCEC,sBAAiB,IAnCnB;AAoCEiH,wBAAmB,IApCrB;AAqCEC,qBAAgB,IArClB;;AAuCEC,kBAAa,IAvCf;AAwCEC,0BAAqB,IAxCvB;;AA0CEC,gBAAW,IA1Cb;;AA4CE;;;;AAIAC,+BAA0B,mCAC1B;AACE,YAAI,KAAKF,kBAAT,EAA6B;AAC3B;AACD;;AAED,aAAKA,kBAAL,GAA0B,IAA1B;;AAEArI,WAAG6B,IAAH,CAAQC,OAAR,CAAgBV,SAAhB,CAA0B,KAAKoH,MAA/B,IAAyC,IAAzC;AACAxI,WAAG6B,IAAH,CAAQC,OAAR,CAAgBH,cAAhB,CAA+B,SAA/B;AACD,OA1DH;;AA6DE;;;;;AAKA8G,yBAAoB,6BAAW;AAC7B,eAAOzI,GAAGyD,GAAH,CAAO3B,OAAP,CAAe4G,MAAf,CAAsB,KAAK3H,UAA3B,CAAP;AACD,OApEH;;AAuEE;;;;;;AAMA4H,qBAAe,uBAASC,MAAT,EAAiB;AACU;AACvC5I,aAAGO,IAAH,CAAQ+G,MAAR,CAAeC,UAAf,CAA0B,CAAC,KAAKK,QAAN,IAAkB,KAAKA,QAAL,KAAkBgB,MAA9D;AACD;;AAED,aAAKhB,QAAL,GAAgBgB,MAAhB;AACA,YAAI,KAAKpF,SAAT,EAAoB;AACuB;AACxCxD,eAAGO,IAAH,CAAQ+G,MAAR,CAAeC,UAAf,CAA2B,CAAC,KAAK/D,SAAL,CAAeqF,QAAhB,IAA4B,CAAC,KAAKrF,SAAL,CAAesF,cAA7C,IACvB,KAAKtF,SAAL,CAAesF,cAAf,KAAkCF,MAAlC,IAA4C,KAAKpF,SAAL,CAAeqF,QAAf,KAA4BD,OAAOlB,UAAP,EAD3E;AAEA;;AAED,eAAKlE,SAAL,CAAeqF,QAAf,GAA0BD,OAAOlB,UAAP,EAA1B;AACA,eAAKlE,SAAL,CAAesF,cAAf,GAAgCF,MAAhC;AACD;;AAEgD;AAC9C,eAAKG,cAAL;AACD;AACF,OAhGH;;AAmGE;;;;;;AAMAC,wBAAkB,0BAASJ,MAAT,EAAiB;AACO;AACvC5I,aAAGO,IAAH,CAAQ+G,MAAR,CAAeC,UAAf,CAA0B,KAAKK,QAAL,KAAkBgB,MAA5C;AACD;;AAED,eAAO,KAAKhB,QAAZ;AACA,YAAI,KAAKpE,SAAT,EAAoB;AACuB;AACxCxD,eAAGO,IAAH,CAAQ+G,MAAR,CAAeC,UAAf,CAA2B,CAAC,KAAK/D,SAAL,CAAeqF,QAAhB,IAA4B,CAAC,KAAKrF,SAAL,CAAesF,cAA7C,IACvB,KAAKtF,SAAL,CAAesF,cAAf,KAAkCF,MAAlC,IAA4C,KAAKpF,SAAL,CAAeqF,QAAf,KAA4BD,OAAOlB,UAAP,EAD3E;AAEA;;AAED,eAAKlE,SAAL,CAAeqF,QAAf,GAA0B,EAA1B;AACA,iBAAO,KAAKrF,SAAL,CAAesF,cAAtB;AACD;;AAEgD;AAC9C,eAAKC,cAAL;AACD;AACF,OA5HH;;AA+HE;;;;;;AAMAE,2BAAqB,6BAAS7B,UAAT,EAAqB;AACA;AACxCpH,aAAGO,IAAH,CAAQ+G,MAAR,CAAeC,UAAf,CAA0B,CAAC,KAAK/D,SAAN,IAAmB,KAAKA,SAAL,KAAmB4D,UAAhE;AACApH,aAAGO,IAAH,CAAQ+G,MAAR,CAAeC,UAAf,CAA2BH,WAAWK,eAAX,KAA+B,IAA/B,IAAuCL,WAAWI,SAAX,KAAyB,KAAKE,UAAL,EAAjE,IACvB,CAACN,WAAWK,eAAZ,IAA+B,CAACL,WAAWI,SAD9C;AAEA;;AAED,aAAKhE,SAAL,GAAiB4D,UAAjB;AACAA,mBAAWK,eAAX,GAA6B,IAA7B;AACAL,mBAAWI,SAAX,GAAuB,KAAKE,UAAL,EAAvB;AACA,YAAI,KAAKE,QAAT,EAAmB;AACjBR,qBAAWyB,QAAX,GAAsB,KAAKjB,QAAL,CAAcF,UAAd,EAAtB;AACAN,qBAAW0B,cAAX,GAA4B,KAAKlB,QAAjC;AACD;AACD,OAnJH;;AA0JE;;;;;;AAMA;;;;AAIA/D,eAAU,mBACV;AAEE;AACE,cAAI,KAAK1C,KAAT,EAAgB;AACd,iBAAKkB,KAAL,CAAW,YAAY,KAAK6G,YAAL,CAAkB,IAAlB,CAAvB;AACD;AACF;;AAED,YAAIlF,MAAJ;AACA,YAAImF,WAAW,KAAKf,UAApB;AACA,YAAIe,QAAJ,EACA;AACEnF,mBAASmF,SAASnF,MAAlB;AACA,cAAIqB,KAAJ;AACA,eAAK,IAAIvB,IAAE,CAAX,EAAcA,IAAEE,MAAhB,EAAwBF,GAAxB,EACA;AACEuB,oBAAQ8D,SAASrF,CAAT,CAAR;;AAEA,gBAAIuB,MAAMlB,SAAN,IAAmBkB,MAAMyC,UAAzB,IAAuC,CAACzC,MAAM7B,SAAlD,EAA6D;AAC3D6B,oBAAMxB,OAAN;AACD;AACF;AACF;;AAED,YAAI,CAAC,KAAKL,SAAV,EACA;AACE,eAAKyF,mBAAL,CAAyB,KAAKR,iBAAL,EAAzB;;AAEA,eAAKW,SAAL,CAAe,KAAf;;AAEA,cAAID,YAAYnF,SAAS,CAAzB,EAA4B;AAC1B,iBAAKqF,eAAL;AACD;AACF,SATD,MAWA;AACE,eAAKC,SAAL;;AAEA,cAAI,KAAKjB,kBAAT,EAA6B;AAC3B,iBAAKkB,aAAL;AACD;AACF;;AAED,eAAO,KAAKlB,kBAAZ;AACD,OAjNH;;AAuNE;;;;;;AAMA;;;;;;;AAOAgB,uBAAkB,2BAClB;AACE,YAAIF,WAAW,KAAKf,UAApB;AACA,YAAIpE,SAASmF,SAASnF,MAAtB;AACA,YAAIqB,KAAJ;;AAEA,YAAIrB,SAAS,CAAb,EACA;AACE,cAAIoD,aAAa3C,SAAS+E,sBAAT,EAAjB;AACA,eAAK,IAAI1F,IAAE,CAAX,EAAcA,IAAEE,MAAhB,EAAwBF,GAAxB,EACA;AACEuB,oBAAQ8D,SAASrF,CAAT,CAAR;AACA,gBAAIuB,MAAM7B,SAAN,IAAmB6B,MAAMyC,UAA7B,EAAyC;AACvCV,yBAAWqC,WAAX,CAAuBpE,MAAM7B,SAA7B;AACD;AACF;;AAED,eAAKA,SAAL,CAAeiG,WAAf,CAA2BrC,UAA3B;AACD,SAZD,MAcA;AACE,cAAIA,aAAa,KAAK5D,SAAtB;AACA,eAAK,IAAIM,IAAE,CAAX,EAAcA,IAAEE,MAAhB,EAAwBF,GAAxB,EACA;AACEuB,oBAAQ8D,SAASrF,CAAT,CAAR;AACA,gBAAIuB,MAAM7B,SAAN,IAAmB6B,MAAMyC,UAA7B,EAAyC;AACvCV,yBAAWqC,WAAX,CAAuBpE,MAAM7B,SAA7B;AACD;AACF;AACF;AACF,OAlQH;;AAqQE;;;;;;AAMA+F,qBAAgB,yBAChB;AACE,YAAIG,eAAe,KAAKtB,UAAxB;AACA,YAAIuB,aAAaD,aAAa1F,MAA9B;AACA,YAAI4F,SAAJ;AACA,YAAIC,MAAJ;;AAEA,YAAIC,YAAY,KAAKtG,SAArB;AACA,YAAIuG,cAAcD,UAAUE,UAA5B;AACA,YAAIC,SAAS,CAAb;AACA,YAAIC,KAAJ;;AAEyC;AACvC,cAAIC,gBAAgB,CAApB;AACD;;AAED;AACA,aAAK,IAAIrG,IAAEiG,YAAY/F,MAAZ,GAAmB,CAA9B,EAAiCF,KAAG,CAApC,EAAuCA,GAAvC,EACA;AACEoG,kBAAQH,YAAYjG,CAAZ,CAAR;AACA+F,mBAAS7J,GAAG6B,IAAH,CAAQC,OAAR,CAAgBuF,cAAhB,CAA+B6C,KAA/B,CAAT;;AAEA,cAAI,CAACL,MAAD,IAAW,CAACA,OAAO/B,UAAnB,IAAiC+B,OAAOvB,QAAP,KAAoB,IAAzD,EACA;AACEwB,sBAAUM,WAAV,CAAsBF,KAAtB;;AAEyC;AACvCC;AACD;AACF;AACF;;AAED;AACA;AACA,aAAK,IAAIrG,IAAE,CAAX,EAAcA,IAAE6F,UAAhB,EAA4B7F,GAA5B,EACA;AACE8F,sBAAYF,aAAa5F,CAAb,CAAZ;;AAEA;AACA,cAAI8F,UAAU9B,UAAd,EACA;AACE+B,qBAASD,UAAUpG,SAAnB;AACA0G,oBAAQH,YAAYE,MAAZ,CAAR;;AAEA,gBAAI,CAACJ,MAAL,EAAa;AACX;AACD;;AAED;AACA;AACA;AACA,gBAAIA,UAAUK,KAAd,EACA;AACE,kBAAIA,KAAJ,EAAW;AACTJ,0BAAUO,YAAV,CAAuBR,MAAvB,EAA+BK,KAA/B;AACD,eAFD,MAEO;AACLJ,0BAAUL,WAAV,CAAsBI,MAAtB;AACD;;AAEwC;AACvCM;AACD;AACF;;AAED;AACAF;AACD;AACF;;AAED;AAEA;AACE,cAAIjK,GAAG6B,IAAH,CAAQC,OAAR,CAAgBX,KAApB,EAA2B;AACzB,iBAAKkB,KAAL,CAAW,qBAAqB8H,aAArB,GAAqC,aAAhD;AACD;AACF;AACF,OAvVH;;AA6VE;;;;;;AAMApB,sBAAgB,0BAAW;AACzB;AACgD;AAC9C,cAAIuB,KAAK,IAAT;AACA,cAAI,KAAK1C,QAAL,IAAiB,KAAKA,QAAL,CAAc2C,aAAd,EAArB,EAAoD;AAClDD,iBAAKtK,GAAGO,IAAH,CAAQiK,EAAR,CAAWC,eAAX,CAA2B,KAAK7C,QAAhC,EAA0C,IAA1C,KAAmD,IAAxD;AACD;AACD,eAAK8C,YAAL,CAAkB,mBAAlB,EAAuCJ,EAAvC,EAA2C,IAA3C;AACD;AACF,OA5WH;;AA8WE;;;;;;;;AAQAlB,iBAAY,mBAASuB,UAAT,EACZ;AACE,YAAI/F,OAAO,KAAKpB,SAAhB;;AAEA;AACA,YAAIoH,OAAO,KAAK3J,cAAhB;AACA,YAAI2J,IAAJ,EACA;AACE,cAAIC,YAAY7K,GAAG8C,GAAH,CAAOoB,OAAP,CAAe2G,SAA/B;AACA,eAAK,IAAIC,GAAT,IAAgBF,IAAhB,EAAsB;AACpBC,sBAAU1E,GAAV,CAAcvB,IAAd,EAAoBkG,GAApB,EAAyBF,KAAKE,GAAL,CAAzB;AACD;AACF;;AAED;AACA,YAAIF,OAAO,KAAK5J,aAAhB;AACA,YAAI4J,IAAJ,EACA;AACE,cAAIG,QAAQ/K,GAAG8C,GAAH,CAAOoB,OAAP,CAAe6G,KAA3B;AACA,cAAIJ,UAAJ,EAAgB;AACdI,kBAAMC,SAAN,CAAgBpG,IAAhB,EAAsBgG,IAAtB;AACD,WAFD,MAIA;AACE;AACA;AACAG,kBAAME,MAAN,CAAarG,IAAb,EAAmBmG,MAAMG,OAAN,CAAcN,IAAd,CAAnB;AACD;AACF;;AAED;AACA,YAAIA,OAAO,KAAK1C,gBAAhB;AACA,YAAI0C,IAAJ,EACA;AACE,eAAK,IAAIE,GAAT,IAAgBF,IAAhB,EAAsB;AACpB,iBAAKO,cAAL,CAAoBL,GAApB,EAAyBF,KAAKE,GAAL,CAAzB;AACD;AACF;;AAED;AACA,YAAIF,OAAO,KAAKzC,aAAhB;AACA,YAAIyC,IAAJ,EACA;AACE;AACA5K,aAAGsG,KAAH,CAASK,YAAT,CAAsBC,UAAtB,CAAiChC,IAAjC,EAAuCwG,eAAvC,CAAuDxG,IAAvD,EAA6DgG,IAA7D;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAO,KAAKzC,aAAZ;AACD;AACF,OA3aH;;AA8aE;;;;;;AAMAmB,iBAAY,qBACZ;AACE,YAAI1E,OAAO,KAAKpB,SAAhB;;AAEA,YAAIqH,YAAY7K,GAAG8C,GAAH,CAAOoB,OAAP,CAAe2G,SAA/B;AACA,YAAIE,QAAQ/K,GAAG8C,GAAH,CAAOoB,OAAP,CAAe6G,KAA3B;;AAEA;AACA,YAAIM,OAAO,KAAKrD,YAAhB;AACA,YAAIqD,IAAJ,EACA;AACE,cAAIT,OAAO,KAAK3J,cAAhB;AACA,cAAI2J,IAAJ,EACA;AACE,gBAAIU,KAAJ;AACA,iBAAK,IAAIR,GAAT,IAAgBO,IAAhB,EACA;AACEC,sBAAQV,KAAKE,GAAL,CAAR;;AAEA,kBAAIQ,UAAUC,SAAd,EAAyB;AACvBV,0BAAU1E,GAAV,CAAcvB,IAAd,EAAoBkG,GAApB,EAAyBQ,KAAzB;AACD,eAFD,MAEO;AACLT,0BAAUW,KAAV,CAAgB5G,IAAhB,EAAsBkG,GAAtB;AACD;AACF;AACF;;AAED,eAAK9C,YAAL,GAAoB,IAApB;AACD;;AAED;AACA,YAAIqD,OAAO,KAAKtD,WAAhB;AACA,YAAIsD,IAAJ,EACA;AACE,cAAIT,OAAO,KAAK5J,aAAhB;AACA,cAAI4J,IAAJ,EACA;AACE,gBAAI/J,SAAS,EAAb;AACA,iBAAK,IAAIiK,GAAT,IAAgBO,IAAhB,EAAsB;AACpBxK,qBAAOiK,GAAP,IAAcF,KAAKE,GAAL,CAAd;AACD;;AAEDC,kBAAMC,SAAN,CAAgBpG,IAAhB,EAAsB/D,MAAtB;AACD;;AAED,eAAKkH,WAAL,GAAmB,IAAnB;AACD;;AAED;AACA,YAAIsD,OAAO,KAAKpD,cAAhB;AACA,YAAIoD,IAAJ,EACA;AACE,cAAIT,OAAO,KAAK1C,gBAAhB;AACA,cAAI0C,IAAJ,EACA;AACE,gBAAIU,KAAJ;AACA,iBAAK,IAAIR,GAAT,IAAgBO,IAAhB,EAAsB;AACpB,mBAAKF,cAAL,CAAoBL,GAApB,EAAyBF,KAAKE,GAAL,CAAzB;AACD;AACF;;AAED,eAAK7C,cAAL,GAAsB,IAAtB;AACD;;AAED;AACD,OArfH;;AA8fE;;;;;;AAMA;;;;;;;;AAQA3E,uBAAkB,2BAClB;AACE,YAAImI,KAAK,IAAT;;AAEA;AACA,eAAMA,EAAN,EACA;AACE,cAAIA,GAAG5D,MAAP,EAAe;AACb,mBAAO,IAAP;AACD;;AAED,cAAI,CAAC4D,GAAG3D,UAAJ,IAAkB,CAAC2D,GAAGtH,SAA1B,EAAqC;AACnC,mBAAO,KAAP;AACD;;AAEDsH,eAAKA,GAAGnD,QAAR;AACD;;AAED,eAAO,KAAP;AACD,OA/hBH;;AAkiBE;;;;;;;AAOAoD,wBAAmB,0BAASrG,KAAT,EACnB;AACE,YAAIA,MAAMiD,QAAN,KAAmB,IAAvB,EAA6B;AAC3B,gBAAM,IAAIqD,KAAJ,CAAU,0BAA0BtG,KAApC,CAAN;AACD;;AAED,YAAIA,MAAMwC,MAAV,EAAkB;AAChB,gBAAM,IAAI8D,KAAJ,CAAU,sDAAV,CAAN;AACD;;AAED;AACA,YAAItG,MAAMiD,QAAV,EAAoB;AAClBjD,gBAAMiD,QAAN,CAAesD,MAAf,CAAsBvG,KAAtB;AACD;;AAED;AACAA,cAAMiD,QAAN,GAAiB,IAAjB;;AAEA;AACA,YAAI,CAAC,KAAKF,UAAV,EAAsB;AACpB,eAAKA,UAAL,GAAkB,EAAlB;AACD;;AAED;AACA,YAAI,KAAK5E,SAAT,EAAoB;AAClB,eAAK+E,uBAAL;AACD;AACF,OApkBH;;AAukBE;;;;;;;AAOAsD,2BAAsB,6BAASxG,KAAT,EACtB;AACE,YAAIA,MAAMiD,QAAN,KAAmB,IAAvB,EAA6B;AAC3B,gBAAM,IAAIqD,KAAJ,CAAU,mBAAmBtG,KAA7B,CAAN;AACD;;AAED;AACA,YAAI,KAAK7B,SAAT,EAAoB;AAClB,eAAK+E,uBAAL;AACD;;AAED;AACA,eAAOlD,MAAMiD,QAAb;AACD,OA3lBH;;AA8lBE;;;;;;;AAOAwD,yBAAoB,2BAASzG,KAAT,EACpB;AACE,YAAIA,MAAMiD,QAAN,KAAmB,IAAvB,EAA6B;AAC3B,gBAAM,IAAIqD,KAAJ,CAAU,mBAAmBtG,KAA7B,CAAN;AACD;;AAED;AACA,YAAI,KAAK7B,SAAT,EAAoB;AAClB,eAAK+E,uBAAL;AACD;AACF,OA/mBH;;AAonBE;;;;;;AAMA;;;;;;;;;AASAwD,mBAAc,uBAAW;AACvB,eAAO,KAAK3D,UAAL,IAAmB,IAA1B;AACD,OAroBH;;AAwoBE;;;;;;;AAOA4D,gBAAW,kBAASC,KAAT,EACX;AACE,YAAI9C,WAAW,KAAKf,UAApB;AACA,eAAOe,YAAYA,SAAS8C,KAAT,CAAZ,IAA+B,IAAtC;AACD,OAnpBH;;AAspBE;;;;;AAKAC,mBAAc,uBACd;AACE,YAAI/C,WAAW,KAAKf,UAApB;AACA,eAAOe,YAAYA,SAAS,CAAT,MAAgBoC,SAAnC;AACD,OA/pBH;;AAkqBE;;;;;;;AAOAY,eAAU,iBAAS9G,KAAT,EACV;AACE,YAAI8D,WAAW,KAAKf,UAApB;AACA,eAAOe,WAAWA,SAASgD,OAAT,CAAiB9G,KAAjB,CAAX,GAAqC,CAAC,CAA7C;AACD,OA7qBH;;AAgrBE;;;;;;;AAOA+G,gBAAW,kBAAS/G,KAAT,EACX;AACE,YAAI8D,WAAW,KAAKf,UAApB;AACA,eAAOe,YAAYA,SAASgD,OAAT,CAAiB9G,KAAjB,MAA4B,CAAC,CAAhD;AACD,OA3rBH;;AA8rBE;;;;;;AAMAgH,WAAM,aAASC,OAAT,EACN;AACE,YAAIC,UAAU,CAAV,CAAJ,EACA;AACE,eAAK,IAAIzI,IAAE,CAAN,EAASC,IAAEwI,UAAUvI,MAA1B,EAAkCF,IAAEC,CAApC,EAAuCD,GAAvC,EAA4C;AAC1C,iBAAK4H,gBAAL,CAAsBa,UAAUzI,CAAV,CAAtB;AACD;;AAED,eAAKsE,UAAL,CAAgBxE,IAAhB,CAAqBoC,KAArB,CAA2B,KAAKoC,UAAhC,EAA4CmE,SAA5C;AACD,SAPD,MASA;AACE,eAAKb,gBAAL,CAAsBY,OAAtB;AACA,eAAKlE,UAAL,CAAgBxE,IAAhB,CAAqB0I,OAArB;AACD;;AAED;AACA,eAAO,IAAP;AACD,OAttBH;;AAytBE;;;;;;;;;AASAE,aAAQ,eAASnH,KAAT,EAAgB4G,KAAhB,EACR;AACE,aAAKP,gBAAL,CAAsBrG,KAAtB;AACArF,WAAGyM,IAAH,CAAQC,KAAR,CAAcC,QAAd,CAAuB,KAAKvE,UAA5B,EAAwC/C,KAAxC,EAA+C4G,KAA/C;;AAEA;AACA,eAAO,IAAP;AACD,OAzuBH;;AA4uBE;;;;;;AAMAL,cAAS,gBAASgB,MAAT,EACT;AACE,YAAIzD,WAAW,KAAKf,UAApB;AACA,YAAI,CAACe,QAAL,EAAe;AACb,iBAAO,IAAP;AACD;;AAED,YAAIoD,UAAU,CAAV,CAAJ,EACA;AACE,cAAIlH,KAAJ;AACA,eAAK,IAAIvB,IAAE,CAAN,EAASC,IAAEwI,UAAUvI,MAA1B,EAAkCF,IAAEC,CAApC,EAAuCD,GAAvC,EACA;AACEuB,oBAAQkH,UAAUzI,CAAV,CAAR;;AAEA,iBAAK+H,mBAAL,CAAyBxG,KAAzB;AACArF,eAAGyM,IAAH,CAAQC,KAAR,CAAcd,MAAd,CAAqBzC,QAArB,EAA+B9D,KAA/B;AACD;AACF,SAVD,MAYA;AACE,eAAKwG,mBAAL,CAAyBe,MAAzB;AACA5M,aAAGyM,IAAH,CAAQC,KAAR,CAAcd,MAAd,CAAqBzC,QAArB,EAA+ByD,MAA/B;AACD;;AAED;AACA,eAAO,IAAP;AACD,OA5wBH;;AA+wBE;;;;;;;AAOAC,gBAAW,kBAASZ,KAAT,EACX;AACE,YAAI9C,WAAW,KAAKf,UAApB;AACA,YAAI,CAACe,QAAL,EAAe;AACb,gBAAM,IAAIwC,KAAJ,CAAU,kBAAV,CAAN;AACD;;AAED,YAAItG,QAAQ8D,SAAS8C,KAAT,CAAZ;AACA,YAAI,CAAC5G,KAAL,EAAY;AACV,gBAAM,IAAIsG,KAAJ,CAAU,gCAAV,CAAN;AACD;;AAED,aAAKE,mBAAL,CAAyBxG,KAAzB;AACArF,WAAGyM,IAAH,CAAQC,KAAR,CAAcG,QAAd,CAAuB,KAAKzE,UAA5B,EAAwC6D,KAAxC;;AAEA;AACA,eAAO,IAAP;AACD,OAvyBH;;AA0yBE;;;;;AAKAa,iBAAY,qBACZ;AACE,YAAI3D,WAAW,KAAKf,UAApB;AACA,YAAIe,QAAJ,EACA;AACE,eAAK,IAAIrF,IAAE,CAAN,EAASC,IAAEoF,SAASnF,MAAzB,EAAiCF,IAAEC,CAAnC,EAAsCD,GAAtC,EAA2C;AACzC,iBAAK+H,mBAAL,CAAyB1C,SAASrF,CAAT,CAAzB;AACD;;AAED;AACAqF,mBAASnF,MAAT,GAAkB,CAAlB;AACD;;AAED;AACA,eAAO,IAAP;AACD,OA9zBH;;AAq0BE;;;;;;AAMA;;;;;AAKA+I,iBAAY,qBAAW;AACrB,eAAO,KAAKzE,QAAL,IAAiB,IAAxB;AACD,OAl1BH;;AAq1BE;;;;;;;;;AASA0E,kBAAa,oBAASC,MAAT,EAAiBhB,KAAjB,EACb;AACEgB,eAAOvB,gBAAP,CAAwB,IAAxB;;AAEA,YAAIO,SAAS,IAAb,EAAmB;AACjBgB,iBAAO7E,UAAP,CAAkBxE,IAAlB,CAAuB,IAAvB;AACD,SAFD,MAEO;AACL5D,aAAGyM,IAAH,CAAQC,KAAR,CAAcC,QAAd,CAAuB,KAAKvE,UAA5B,EAAwC,IAAxC,EAA8C6D,KAA9C;AACD;;AAED,eAAO,IAAP;AACD,OAz2BH;;AA42BE;;;;;;AAMA5B,oBAAe,sBAAS6C,GAAT,EACf;AACE,YAAID,SAASC,IAAI5E,QAAjB;;AAEA2E,eAAOvB,gBAAP,CAAwB,IAAxB;AACA1L,WAAGyM,IAAH,CAAQC,KAAR,CAAcrC,YAAd,CAA2B4C,OAAO7E,UAAlC,EAA8C,IAA9C,EAAoD8E,GAApD;;AAEA,eAAO,IAAP;AACD,OA13BH;;AA63BE;;;;;;AAMAC,mBAAc,qBAASD,GAAT,EACd;AACE,YAAID,SAASC,IAAI5E,QAAjB;;AAEA2E,eAAOvB,gBAAP,CAAwB,IAAxB;AACA1L,WAAGyM,IAAH,CAAQC,KAAR,CAAcS,WAAd,CAA0BF,OAAO7E,UAAjC,EAA6C,IAA7C,EAAmD8E,GAAnD;;AAEA,eAAO,IAAP;AACD,OA34BH;;AA84BE;;;;;;;;AAQAE,cAAS,gBAASnB,KAAT,EACT;AACE,YAAIgB,SAAS,KAAK3E,QAAlB;;AAEA2E,eAAOnB,iBAAP,CAAyB,IAAzB;;AAEA,YAAIuB,WAAWJ,OAAO7E,UAAP,CAAkB+D,OAAlB,CAA0B,IAA1B,CAAf;;AAEA,YAAIkB,aAAapB,KAAjB,EAAwB;AACtB,gBAAM,IAAIN,KAAJ,CAAU,+BAAV,CAAN;AACD,SAFD,MAEO,IAAI0B,WAAWpB,KAAf,EAAsB;AAC3BA;AACD;;AAEDjM,WAAGyM,IAAH,CAAQC,KAAR,CAAcG,QAAd,CAAuBI,OAAO7E,UAA9B,EAA0CiF,QAA1C;AACArN,WAAGyM,IAAH,CAAQC,KAAR,CAAcC,QAAd,CAAuBM,OAAO7E,UAA9B,EAA0C,IAA1C,EAAgD6D,KAAhD;;AAEA,eAAO,IAAP;AACD,OAx6BH;;AA26BE;;;;;;AAMAqB,kBAAa,oBAASJ,GAAT,EACb;AACE,YAAID,SAAS,KAAK3E,QAAlB;AACA,eAAO,KAAK8E,MAAL,CAAYH,OAAO7E,UAAP,CAAkB+D,OAAlB,CAA0Be,GAA1B,CAAZ,CAAP;AACD,OAr7BH;;AAw7BE;;;;;;AAMAK,iBAAY,mBAASL,GAAT,EACZ;AACE,YAAID,SAAS,KAAK3E,QAAlB;AACA,eAAO,KAAK8E,MAAL,CAAYH,OAAO7E,UAAP,CAAkB+D,OAAlB,CAA0Be,GAA1B,IAAiC,CAA7C,CAAP;AACD,OAl8BH;;AAq8BE;;;;;AAKAM,YAAO,gBACP;AACE,YAAIP,SAAS,KAAK3E,QAAlB;AACA,YAAI,CAAC2E,MAAL,EAAa;AACX,gBAAM,IAAItB,KAAJ,CAAU,+BAAV,CAAN;AACD;;AAED,YAAI,CAACsB,OAAO7E,UAAZ,EAAwB;AACtB,iBAAO,IAAP;AACD;;AAED6E,eAAOpB,mBAAP,CAA2B,IAA3B;AACA7L,WAAGyM,IAAH,CAAQC,KAAR,CAAcd,MAAd,CAAqBqB,OAAO7E,UAA5B,EAAwC,IAAxC;;AAEA,eAAO,IAAP;AACD,OAz9BH;;AAg+BE;;;;;;AAMA;;;;;;;AAOA9C,qBAAgB,yBAAW;AACzB,eAAO,KAAK9B,SAAL,IAAkB,IAAzB;AACD,OA/+BH;;AAk/BE;;;;;AAKAiK,mBAAc,uBAAW;AACvB,eAAO,KAAK1M,UAAZ;AACD,OAz/BH;;AA2/BE;;;;;AAKA2M,mBAAc,qBAASC,IAAT,EAAe;AAC3B,aAAK5M,UAAL,GAAkB4M,IAAlB;AACD,OAlgCH;;AAogCE;;;;;AAKAC,eAAU,iBAASC,IAAT,EAAe;AACvB,aAAKhG,MAAL,GAAcgG,IAAd;AACD,OA3gCH;;AA6gCE;;;;;;;;AAQAC,iBAAY,mBAASjM,IAAT,EACZ;AACE,YAAI,KAAK2B,SAAT,EAAoB;AAClB,gBAAM,IAAImI,KAAJ,CAAU,uCAAV,CAAN;AACD;;AAED;AACA;AACA;AACA;AACA;AACA,YAAI3L,GAAGO,IAAH,CAAQgE,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,KAA0C,QAA9C,EAAwD;AACtD,cAAIuJ,SAAStJ,SAASuJ,aAAT,CAAuB,KAAvB,CAAb;AACD,SAFD,MAEO;AACL,cAAID,SAAS/N,GAAGyD,GAAH,CAAO3B,OAAP,CAAemM,gBAAf,EAAb;AACD;;AAED;AACAF,eAAOG,SAAP,GAAmBrM,IAAnB;AACA,aAAKsM,UAAL,CAAgBJ,OAAOK,UAAvB;;AAEA,eAAO,KAAK5K,SAAZ;AACD,OA3iCH;;AA8iCE;;;;;;AAMA2K,kBAAa,oBAASvJ,IAAT,EACb;AACE,YAAI,KAAKpB,SAAT,EAAoB;AAClB,gBAAM,IAAImI,KAAJ,CAAU,uCAAV,CAAN;AACD;;AAED;AACA,aAAK1C,mBAAL,CAAyBrE,IAAzB;;AAEA;AACA,aAAKwE,SAAL,CAAe,IAAf;AACD,OA/jCH;;AAkkCE;;;;;AAKAiF,mBAAc,uBACd;AACE,YAAIC,WAAW,KAAKpF,YAAL,CAAkB,UAAlB,CAAf;AACA,YAAIoF,YAAY,CAAhB,EAAmB;AACjB,iBAAO,IAAP;AACD;;AAED,YAAIC,YAAYvO,GAAGsG,KAAH,CAASC,OAAT,CAAiBQ,KAAjB,CAAuByH,kBAAvC;AACA,YAAIF,YAAY,CAAZ,IAAiBC,UAAU,KAAKxN,UAAf,CAArB,EAAiD;AAC/C,iBAAO,IAAP;AACD;;AAED,eAAO,KAAP;AACD,OAplCH;;AAulCE;;;;;;;AAOA0N,qBAAgB,uBAASnD,KAAT,EAChB;AACE,aAAKZ,YAAL,CAAkB,cAAlB,EAAkCY,QAAQ,IAAR,GAAe,KAAjD;AACA,YAAIoD,aAAa1O,GAAGO,IAAH,CAAQgE,WAAR,CAAoBC,GAApB,CAAwB,gBAAxB,CAAjB;AACA,YAAIkK,UAAJ,EAAgB;AACd,eAAKC,QAAL,CAAcD,UAAd,EAA0BpD,QAAQ,MAAR,GACxBtL,GAAGO,IAAH,CAAQgE,WAAR,CAAoBC,GAApB,CAAwB,qBAAxB,CADF;AAED;AACF,OAtmCH;;AAymCE;;;;;;;AAOAoK,2BAAsB,+BAAW;AAC/B,eAAO,CAAC,CAAC5O,GAAGsG,KAAH,CAASC,OAAT,CAAiBQ,KAAjB,CAAuByH,kBAAvB,CAA0C,KAAKzN,UAA/C,CAAT;AACD,OAlnCH;;AA0nCE;;;;;;AAMA;;;;;;AAMA8N,eAAU,mBACV;AACE,YAAI,KAAK/G,UAAT,EAAqB;AACnB,iBAAO,IAAP;AACD;;AAED,eAAO,KAAKA,UAAZ;;AAEA,YAAI,KAAKQ,QAAT,EAAmB;AACjB,eAAKA,QAAL,CAAcC,uBAAd;AACD;;AAED,eAAO,IAAP;AACD,OAnpCH;;AAspCE;;;;;;AAMAuG,eAAU,mBACV;AACE,YAAI,CAAC,KAAKhH,UAAV,EAAsB;AACpB,iBAAO,IAAP;AACD;;AAED,aAAKA,UAAL,GAAkB,KAAlB;;AAEA,YAAI,KAAKQ,QAAT,EAAmB;AACjB,eAAKA,QAAL,CAAcC,uBAAd;AACD;;AAED,eAAO,IAAP;AACD,OAzqCH;;AA4qCE;;;;;AAKAwG,kBAAa,sBAAW;AACtB,eAAO,KAAKjH,UAAL,KAAoB,IAA3B;AACD,OAnrCH;;AAwrCE;;;;;AAKA;;;;;;AAMAkH,cAAS,gBAASC,QAAT,EAAmB;AAC1B,YAAIC,MAAMC,MAAM,KAAK3L,SAAX,CAAV;AACA,YAAI0L,IAAIE,SAAJ,EAAJ,EAAqB;AACnBF,cAAIG,IAAJ;AACD;AACD;AACA,YAAI,CAAC,KAAK7L,SAAV,EAAqB;AACnB,eAAKK,OAAL;AACAqL,cAAItL,IAAJ,CAAS,KAAKJ,SAAd;AACD;AACD,YAAI,KAAKA,SAAT,EAAoB;AAClB0L,cAAIF,MAAJ,CAAWC,QAAX,EAAqBK,IAArB,CAA0B,cAA1B,EAA0C,YAAW;AACnD,iBAAKC,IAAL;AACAvP,eAAG6B,IAAH,CAAQC,OAAR,CAAgBG,KAAhB;AACD,WAHD,EAGG,IAHH;AAIA,iBAAOiN,IAAIM,mBAAJ,GAA0B,CAA1B,CAAP;AACD;AACF,OAptCH;;AAutCE;;;;;;AAMAC,eAAU,iBAASR,QAAT,EAAmB;AAC3B,YAAIC,MAAMC,MAAM,KAAK3L,SAAX,CAAV;AACA,YAAI0L,IAAIE,SAAJ,EAAJ,EAAqB;AACnBF,cAAIG,IAAJ;AACD;;AAED,YAAI,KAAK7L,SAAT,EAAoB;AAClB0L,cAAIO,OAAJ,CAAYR,QAAZ,EAAsBK,IAAtB,CAA2B,cAA3B,EAA2C,YAAW;AACpD,iBAAKI,IAAL;AACA1P,eAAG6B,IAAH,CAAQC,OAAR,CAAgBG,KAAhB;AACD,WAHD,EAGG,IAHH;AAIA,iBAAOiN,IAAIM,mBAAJ,GAA0B,CAA1B,CAAP;AACD;AACF,OA1uCH;;AA+uCE;;;;;;AAMA;;;;;;;AAOAD,YAAO,gBACP;AACE,YAAI,KAAKpL,SAAT,EAAoB;AAClB,iBAAO,IAAP;AACD;;AAED,YAAI,KAAKX,SAAT,EACA;AACExD,aAAG6B,IAAH,CAAQC,OAAR,CAAgBT,WAAhB,CAA4B,KAAKmH,MAAjC,IAA2C,IAA3C;AACAxI,aAAG6B,IAAH,CAAQC,OAAR,CAAgBH,cAAhB,CAA+B,SAA/B;AACD;;AAED;AACA,YAAI,KAAK2G,QAAT,EAAmB;AACjB,eAAKA,QAAL,CAAcC,uBAAd;AACD;;AAED,eAAO,KAAKpE,SAAZ;AACA,eAAO,IAAP;AACD,OA/wCH;;AAkxCE;;;;;;AAMAuL,YAAO,gBACP;AACE,YAAI,CAAC,KAAKvL,SAAV,EAAqB;AACnB,iBAAO,IAAP;AACD;;AAED,YAAI,KAAKX,SAAT,EACA;AACExD,aAAG6B,IAAH,CAAQC,OAAR,CAAgBT,WAAhB,CAA4B,KAAKmH,MAAjC,IAA2C,IAA3C;AACAxI,aAAG6B,IAAH,CAAQC,OAAR,CAAgBH,cAAhB,CAA+B,SAA/B;AACD;;AAED,aAAKwC,SAAL,GAAiB,KAAjB;AACA,eAAO,IAAP;AACD,OAtyCH;;AAyyCE;;;;;;;;AAQAwL,iBAAY,qBAAW;AACrB,eAAO,KAAKxL,SAAL,KAAmB,IAA1B;AACD,OAnzCH;;AA2zCE;;;;;;AAMA;;;;;;;;;;;;;;;AAeAyL,4BAAuB,8BAAShL,IAAT,EAAeY,KAAf,EAAsBqK,MAAtB,EACvB;AACE,YAAIC,SAAS,KAAKtM,SAAlB;AACA,YAAIuM,UAAUnL,KAAKU,aAAL,EAAd;;AAEA,YAAIuK,WAAW,KAAX,IAAoBC,MAApB,IAA8BA,OAAOjL,WAArC,IAAoDkL,OAApD,IAA+DA,QAAQlL,WAA3E,EACA;AACE7E,aAAG8C,GAAH,CAAOoB,OAAP,CAAeqB,MAAf,CAAsBJ,SAAtB,CAAgC4K,OAAhC,EAAyCD,MAAzC,EAAiDtK,KAAjD;AACD,SAHD,MAKA;AACE,eAAKJ,qBAAL,GACA;AACElB,qBAAUU,IADZ;AAEEY,mBAAQA;AAFV,WADA;;AAMAxF,aAAG6B,IAAH,CAAQC,OAAR,CAAgBR,OAAhB,CAAwB,KAAKkH,MAA7B,IAAuC,IAAvC;AACAxI,aAAG6B,IAAH,CAAQC,OAAR,CAAgBH,cAAhB,CAA+B,SAA/B;AACD;;AAED,eAAO,KAAKoD,aAAZ;AACD,OAt2CH;;AAy2CE;;;;;;;;;;;;;;;AAeAiL,4BAAuB,8BAASpL,IAAT,EAAeY,KAAf,EAAsBqK,MAAtB,EACvB;AACE,YAAIC,SAAS,KAAKtM,SAAlB;AACA,YAAIuM,UAAUnL,KAAKU,aAAL,EAAd;;AAEA,YAAIuK,WAAW,KAAX,IAAoBC,MAApB,IAA8BA,OAAOjL,WAArC,IAAoDkL,OAApD,IAA+DA,QAAQlL,WAA3E,EACA;AACE7E,aAAG8C,GAAH,CAAOoB,OAAP,CAAeqB,MAAf,CAAsBE,SAAtB,CAAgCsK,OAAhC,EAAyCD,MAAzC,EAAiDtK,KAAjD;AACD,SAHD,MAKA;AACE,eAAKE,qBAAL,GACA;AACExB,qBAAUU,IADZ;AAEEY,mBAAQA;AAFV,WADA;;AAMAxF,aAAG6B,IAAH,CAAQC,OAAR,CAAgBR,OAAhB,CAAwB,KAAKkH,MAA7B,IAAuC,IAAvC;AACAxI,aAAG6B,IAAH,CAAQC,OAAR,CAAgBH,cAAhB,CAA+B,SAA/B;AACD;;AAED,eAAO,KAAKsD,aAAZ;AACD,OA94CH;;AAi5CE;;;;;;;AAOAgL,iBAAY,mBAASC,CAAT,EAAYC,IAAZ,EACZ;AACE,YAAIL,SAAS,KAAKtM,SAAlB;AACA,YAAI2M,SAAS,IAAT,IAAiBL,MAAjB,IAA2BA,OAAOjL,WAAtC,EACA;AACEiL,iBAAO9K,UAAP,GAAoBkL,CAApB;AACA,iBAAO,KAAKnL,aAAZ;AACD,SAJD,MAMA;AACE,eAAKA,aAAL,GAAqBmL,CAArB;AACAlQ,aAAG6B,IAAH,CAAQC,OAAR,CAAgBR,OAAhB,CAAwB,KAAKkH,MAA7B,IAAuC,IAAvC;AACAxI,aAAG6B,IAAH,CAAQC,OAAR,CAAgBH,cAAhB,CAA+B,SAA/B;AACD;;AAED,eAAO,KAAKyD,qBAAZ;AACD,OAx6CH;;AA26CE;;;;;AAKAgL,kBAAa,sBACb;AACE,YAAIN,SAAS,KAAKtM,SAAlB;AACA,YAAIsM,MAAJ,EAAY;AACV,iBAAOA,OAAO9K,UAAd;AACD;;AAED,eAAO,KAAKD,aAAL,IAAsB,CAA7B;AACD,OAx7CH;;AA27CE;;;;;;;AAOAsL,iBAAY,mBAASC,CAAT,EAAYH,IAAZ,EACZ;AACE,YAAIL,SAAS,KAAKtM,SAAlB;AACA,YAAI2M,SAAS,IAAT,IAAiBL,MAAjB,IAA2BA,OAAOjL,WAAtC,EACA;AACEiL,iBAAO5K,SAAP,GAAmBoL,CAAnB;AACA,iBAAO,KAAKrL,aAAZ;AACD,SAJD,MAMA;AACE,eAAKA,aAAL,GAAqBqL,CAArB;AACAtQ,aAAG6B,IAAH,CAAQC,OAAR,CAAgBR,OAAhB,CAAwB,KAAKkH,MAA7B,IAAuC,IAAvC;AACAxI,aAAG6B,IAAH,CAAQC,OAAR,CAAgBH,cAAhB,CAA+B,SAA/B;AACD;;AAED,eAAO,KAAK+D,qBAAZ;AACD,OAl9CH;;AAq9CE;;;;;AAKA6K,kBAAa,sBACb;AACE,YAAIT,SAAS,KAAKtM,SAAlB;AACA,YAAIsM,MAAJ,EAAY;AACV,iBAAOA,OAAO5K,SAAd;AACD;;AAED,eAAO,KAAKD,aAAL,IAAsB,CAA7B;AACD,OAl+CH;;AAq+CE;;;AAGAuL,wBAAmB,4BACnB;AACE,aAAKC,eAAL;AACA,aAAKR,SAAL,CAAe,CAAf;AACA,aAAKI,SAAL,CAAe,CAAf;AACA,aAAKK,WAAL,CAAiB,QAAjB,EAA2B,KAAKC,UAAhC,EAA4C,IAA5C;AACD,OA9+CH;;AAi/CE;;;AAGAF,uBAAkB,2BAAW;AAC3B,aAAKG,cAAL,CAAoB,QAApB,EAA8B,KAAKD,UAAnC,EAA+C,IAA/C;AACD,OAt/CH;;AAy/CEE,kBAAa,IAz/Cf;;AA2/CE;;;;;AAKAF,kBAAa,oBAASG,CAAT,EACb;AACE,YAAI,CAAC,KAAKD,UAAV,EACA;AACE,eAAKA,UAAL,GAAkB,IAAlB;AACA,eAAKrN,SAAL,CAAe0B,SAAf,GAA2B,CAA3B;AACA,eAAK1B,SAAL,CAAewB,UAAf,GAA4B,CAA5B;AACA,iBAAO,KAAK6L,UAAZ;AACD;AACF,OAzgDH;;AA4gDE;;;;;;AAMA;;;;;;;;AAQAE,wBAAmB,4BACnB;AACE,YAAIC,KAAK,KAAKxN,SAAd;AACA,YAAIwN,EAAJ,EAAQ;AACN,iBAAOhR,GAAG8C,GAAH,CAAOoD,SAAP,CAAiB1B,GAAjB,CAAqBwM,EAArB,CAAP;AACD;;AAED,eAAO,IAAP;AACD,OAliDH;;AAqiDE;;;;;;;;AAQAC,8BAAyB,kCACzB;AACE,YAAID,KAAK,KAAKxN,SAAd;AACA,YAAIwN,EAAJ,EAAQ;AACN,iBAAOhR,GAAG8C,GAAH,CAAOoD,SAAP,CAAiBgL,SAAjB,CAA2BF,EAA3B,CAAP;AACD;;AAED,eAAO,IAAP;AACD,OArjDH;;AAwjDE;;;;;;;;AAQAG,6BAAwB,iCACxB;AACE,YAAIH,KAAK,KAAKxN,SAAd;AACA,YAAIwN,EAAJ,EAAQ;AACN,iBAAOhR,GAAG8C,GAAH,CAAOoD,SAAP,CAAiBkL,QAAjB,CAA0BJ,EAA1B,CAAP;AACD;;AAED,eAAO,IAAP;AACD,OAxkDH;;AA2kDE;;;;;;;;AAQAK,2BAAsB,+BACtB;AACE,YAAIL,KAAK,KAAKxN,SAAd;AACA,YAAIwN,EAAJ,EAAQ;AACN,iBAAOhR,GAAG8C,GAAH,CAAOoD,SAAP,CAAiBoL,MAAjB,CAAwBN,EAAxB,CAAP;AACD;;AAED,eAAO,IAAP;AACD,OA3lDH;;AA8lDE;;;;;;;;;AASAO,wBAAmB,0BAASnL,KAAT,EAAgBC,GAAhB,EACnB;AACE,YAAI2K,KAAK,KAAKxN,SAAd;AACA,YAAIwN,EAAJ,EAAQ;AACNhR,aAAG8C,GAAH,CAAOoD,SAAP,CAAiBC,GAAjB,CAAqB6K,EAArB,EAAyB5K,KAAzB,EAAgCC,GAAhC;AACA;AACD;;AAED;AACArG,WAAG6B,IAAH,CAAQC,OAAR,CAAgBN,WAAhB,CAA4B,KAAKkG,UAAL,EAA5B,IAAiD;AAC/CxD,mBAAU,IADqC;AAE/CkC,iBAAQA,KAFuC;AAG/CC,eAAMA;AAHyC,SAAjD;AAKArG,WAAG6B,IAAH,CAAQC,OAAR,CAAgBH,cAAhB,CAA+B,SAA/B;AACD,OAtnDH;;AAynDE;;;;;;AAMA6P,0BAAqB,8BACrB;AACE,YAAIR,KAAK,KAAKxN,SAAd;AACA,YAAIwN,EAAJ,EAAQ;AACNhR,aAAG8C,GAAH,CAAOoD,SAAP,CAAiBuL,KAAjB,CAAuBT,EAAvB;AACD;AACD,eAAOhR,GAAG6B,IAAH,CAAQC,OAAR,CAAgBN,WAAhB,CAA4B,KAAKkG,UAAL,EAA5B,CAAP;AACD,OAtoDH;;AA2oDE;;;;;;AAMA;;;;;;;AAOAgK,uBAAkB,yBAAS9L,MAAT,EAAiBE,IAAjB,EAClB;AACE,YAAI6L,UAAU3R,GAAG6B,IAAH,CAAQC,OAAR,CAAgBP,QAA9B;;AAEAoQ,gBAAQ/N,IAAR,CAAa;AACXiC,gBAAMD,MADK;AAEX1B,mBAAS,IAFE;AAGX4B,gBAAMA,QAAQ;AAHH,SAAb;AAKA9F,WAAG6B,IAAH,CAAQC,OAAR,CAAgBH,cAAhB,CAA+B,SAA/B;AACD,OAlqDH;;AAqqDE;;;;;;;AAOAiQ,aAAQ,iBAAW;AACjB,aAAKF,eAAL,CAAqB,OAArB;AACD,OA9qDH;;AAirDE;;;;AAIA/O,YAAO,gBAAW;AAChB,aAAK+O,eAAL,CAAqB,MAArB;AACD,OAvrDH;;AA0rDE;;;;AAIAG,gBAAW,oBAAW;AACpB,aAAKH,eAAL,CAAqB,UAArB;AACD,OAhsDH;;AAmsDE;;;;AAIA3O,kBAAa,sBAAW;AACtB,aAAK2O,eAAL,CAAqB,YAArB;AACD,OAzsDH;;AA4sDE;;;;;;;AAOAI,eAAU,iBAASC,gBAAT,EAA2B;AACnC,aAAKL,eAAL,CAAqB,SAArB,EAAgC,CAACK,qBAAqB,KAAtB,CAAhC;AACD,OArtDH;;AAwtDE;;;AAGA7O,sBAAiB,0BAAW;AAC1B,aAAKwO,eAAL,CAAqB,gBAArB;AACD,OA7tDH;;AAmuDE;;;;;;AAMA;;;;;;;;;AASA/C,gBAAW,kBAAS7D,GAAT,EAAcQ,KAAd,EAAqBuE,MAArB,EACX;AACE,YAAI,CAAC,KAAK7O,aAAV,EAAyB;AACvB,eAAKA,aAAL,GAAqB,EAArB;AACD;;AAED,YAAI,KAAKA,aAAL,CAAmB8J,GAAnB,KAA2BQ,KAA/B,EAAsC;AACpC,iBAAO,IAAP;AACD;;AAED,YAAIA,SAAS,IAAb,EAAmB;AACjB,iBAAO,KAAKtK,aAAL,CAAmB8J,GAAnB,CAAP;AACD,SAFD,MAEO;AACL,eAAK9J,aAAL,CAAmB8J,GAAnB,IAA0BQ,KAA1B;AACD;;AAED;AACA;AACA;AACA,YAAI,KAAK9H,SAAT,EACA;AACE;AACA,cAAIqM,MAAJ,EACA;AACE7P,eAAG8C,GAAH,CAAOoB,OAAP,CAAe6G,KAAf,CAAqB5E,GAArB,CAAyB,KAAK3C,SAA9B,EAAyCsH,GAAzC,EAA8CQ,KAA9C;AACA,mBAAO,IAAP;AACD;;AAED;AACA,cAAI,CAAC,KAAKvD,WAAV,EAAuB;AACrB,iBAAKA,WAAL,GAAmB,EAAnB;AACD;;AAED;AACA,eAAKA,WAAL,CAAiB+C,GAAjB,IAAwB,IAAxB;;AAEA;AACA9K,aAAG6B,IAAH,CAAQC,OAAR,CAAgBV,SAAhB,CAA0B,KAAKoH,MAA/B,IAAyC,IAAzC;AACAxI,aAAG6B,IAAH,CAAQC,OAAR,CAAgBH,cAAhB,CAA+B,SAA/B;AACD;;AAED,eAAO,IAAP;AACD,OA5xDH;;AA+xDE;;;;;;;;;AASAqJ,iBAAY,mBAASgH,GAAT,EAAcnC,MAAd,EACZ;AACE;AACA;;AAEA,YAAI9E,QAAQ/K,GAAG8C,GAAH,CAAOoB,OAAP,CAAe6G,KAA3B;;AAEA,YAAI,CAAC,KAAK/J,aAAV,EAAyB;AACvB,eAAKA,aAAL,GAAqB,EAArB;AACD;;AAED,YAAI,KAAKwC,SAAT,EACA;AACE;AACA,cAAI,CAAC,KAAKuE,WAAV,EAAuB;AACrB,iBAAKA,WAAL,GAAmB,EAAnB;AACD;;AAED,eAAK,IAAI+C,GAAT,IAAgBkH,GAAhB,EACA;AACE,gBAAI1G,QAAQ0G,IAAIlH,GAAJ,CAAZ;AACA,gBAAI,KAAK9J,aAAL,CAAmB8J,GAAnB,KAA2BQ,KAA/B,EAAsC;AACpC;AACD;;AAED,gBAAIA,SAAS,IAAb,EAAmB;AACjB,qBAAO,KAAKtK,aAAL,CAAmB8J,GAAnB,CAAP;AACD,aAFD,MAEO;AACL,mBAAK9J,aAAL,CAAmB8J,GAAnB,IAA0BQ,KAA1B;AACD;;AAED;AACA,gBAAIuE,MAAJ,EACA;AACE9E,oBAAM5E,GAAN,CAAU,KAAK3C,SAAf,EAA0BsH,GAA1B,EAA+BQ,KAA/B;AACA;AACD;;AAED;AACA,iBAAKvD,WAAL,CAAiB+C,GAAjB,IAAwB,IAAxB;AACD;;AAED;AACA9K,aAAG6B,IAAH,CAAQC,OAAR,CAAgBV,SAAhB,CAA0B,KAAKoH,MAA/B,IAAyC,IAAzC;AACAxI,aAAG6B,IAAH,CAAQC,OAAR,CAAgBH,cAAhB,CAA+B,SAA/B;AACD,SAlCD,MAoCA;AACE,eAAK,IAAImJ,GAAT,IAAgBkH,GAAhB,EACA;AACE,gBAAI1G,QAAQ0G,IAAIlH,GAAJ,CAAZ;AACA,gBAAI,KAAK9J,aAAL,CAAmB8J,GAAnB,KAA2BQ,KAA/B,EAAsC;AACpC;AACD;;AAED,gBAAIA,SAAS,IAAb,EAAmB;AACjB,qBAAO,KAAKtK,aAAL,CAAmB8J,GAAnB,CAAP;AACD,aAFD,MAEO;AACL,mBAAK9J,aAAL,CAAmB8J,GAAnB,IAA0BQ,KAA1B;AACD;AACF;AACF;;AAED,eAAO,IAAP;AACD,OAx2DH;;AA22DE;;;;;;;;AAQA2G,mBAAc,qBAASnH,GAAT,EAAc+E,MAAd,EAAsB;AAClC,aAAKlB,QAAL,CAAc7D,GAAd,EAAmB,IAAnB,EAAyB+E,MAAzB;AACA,eAAO,IAAP;AACD,OAt3DH;;AAy3DE;;;;;;AAMAqC,gBAAW,kBAASpH,GAAT,EAAc;AACvB,eAAO,KAAK9J,aAAL,GAAqB,KAAKA,aAAL,CAAmB8J,GAAnB,CAArB,GAA+C,IAAtD;AACD,OAj4DH;;AAo4DE;;;;;AAKAqH,oBAAe,wBAAW;AACxB,eAAO,KAAKnR,aAAL,IAAsB,IAA7B;AACD,OA34DH;;AAi5DE;;;;;;AAMA;;;;;;;;;AASA0J,oBAAe,sBAASI,GAAT,EAAcQ,KAAd,EAAqBuE,MAArB,EACf;AACE,YAAI,CAAC,KAAK5O,cAAV,EAA0B;AACxB,eAAKA,cAAL,GAAsB,EAAtB;AACD;;AAED,YAAI,KAAKA,cAAL,CAAoB6J,GAApB,KAA4BQ,KAAhC,EAAuC;AACrC,iBAAO,IAAP;AACD;;AAED,YAAIA,SAAS,IAAb,EAAmB;AACjB,iBAAO,KAAKrK,cAAL,CAAoB6J,GAApB,CAAP;AACD,SAFD,MAEO;AACL,eAAK7J,cAAL,CAAoB6J,GAApB,IAA2BQ,KAA3B;AACD;;AAED;AACA;AACA;AACA,YAAI,KAAK9H,SAAT,EACA;AACE;AACA,cAAIqM,MAAJ,EACA;AACE7P,eAAG8C,GAAH,CAAOoB,OAAP,CAAe2G,SAAf,CAAyB1E,GAAzB,CAA6B,KAAK3C,SAAlC,EAA6CsH,GAA7C,EAAkDQ,KAAlD;AACA,mBAAO,IAAP;AACD;;AAED;AACA,cAAI,CAAC,KAAKtD,YAAV,EAAwB;AACtB,iBAAKA,YAAL,GAAoB,EAApB;AACD;;AAED;AACA,eAAKA,YAAL,CAAkB8C,GAAlB,IAAyB,IAAzB;;AAEA;AACA9K,aAAG6B,IAAH,CAAQC,OAAR,CAAgBV,SAAhB,CAA0B,KAAKoH,MAA/B,IAAyC,IAAzC;AACAxI,aAAG6B,IAAH,CAAQC,OAAR,CAAgBH,cAAhB,CAA+B,SAA/B;AACD;;AAED,eAAO,IAAP;AACD,OA18DH;;AA68DE;;;;;;;;;AASAyQ,qBAAgB,uBAASJ,GAAT,EAAcnC,MAAd,EAChB;AACE,aAAK,IAAI/E,GAAT,IAAgBkH,GAAhB,EAAqB;AACnB,eAAKtH,YAAL,CAAkBI,GAAlB,EAAuBkH,IAAIlH,GAAJ,CAAvB,EAAiC+E,MAAjC;AACD;;AAED,eAAO,IAAP;AACD,OA79DH;;AAg+DE;;;;;;;;AAQAwC,uBAAkB,yBAASvH,GAAT,EAAc+E,MAAd,EAAsB;AACtC,eAAO,KAAKnF,YAAL,CAAkBI,GAAlB,EAAuB,IAAvB,EAA6B+E,MAA7B,CAAP;AACD,OA1+DH;;AA6+DE;;;;;;AAMA3G,oBAAe,sBAAS4B,GAAT,EAAc;AAC3B,eAAO,KAAK7J,cAAL,GAAsB,KAAKA,cAAL,CAAoB6J,GAApB,CAAtB,GAAiD,IAAxD;AACD,OAr/DH;;AAy/DE;;;;;AAKA;;;;AAIAwH,gBAAW,kBAAS3E,IAAT,EAAe;AACxB,YAAIrC,QAAQ,CAAC,CAAC,KAAKpC,YAAL,CAAkB,OAAlB,KAA8B,EAA/B,IAAqC,GAArC,GAA2CyE,IAA5C,EAAkD4E,IAAlD,EAAZ;AACA,aAAK7H,YAAL,CAAkB,OAAlB,EAA2BY,KAA3B;AACD,OArgEH;;AAwgEE;;;;AAIAkH,mBAAc,qBAAS7E,IAAT,EAAe;AAC3B,YAAI8E,eAAe,KAAKvJ,YAAL,CAAkB,OAAlB,CAAnB;AACA,YAAIuJ,YAAJ,EAAkB;AAChB,eAAK/H,YAAL,CAAkB,OAAlB,EAA4B+H,aAAaC,OAAb,CAAqB/E,IAArB,EAA2B,EAA3B,CAAD,CAAiC4E,IAAjC,EAA3B;AACD;AACF,OAjhEH;;AAqhEE;;;;;;AAMA;;;;;;;;;;;;AAYApH,sBAAiB,wBAASwC,IAAT,EAAerC,KAAf,EAAsB;AACrC;AACD,OAziEH;;AA4iEE;;;;;;;;;AASAqH,oBAAe,sBAAS7H,GAAT,EAAcQ,KAAd,EAAqBuE,MAArB,EACf;AACE,YAAI,CAAC,KAAK3H,gBAAV,EAA4B;AAC1B,eAAKA,gBAAL,GAAwB,EAAxB;AACD;;AAED,YAAI,KAAKA,gBAAL,CAAsB4C,GAAtB,KAA8BQ,KAAlC,EAAyC;AACvC,iBAAO,IAAP;AACD;;AAED,YAAIA,SAAS,IAAb,EAAmB;AACjB,iBAAO,KAAKpD,gBAAL,CAAsB4C,GAAtB,CAAP;AACD,SAFD,MAEO;AACL,eAAK5C,gBAAL,CAAsB4C,GAAtB,IAA6BQ,KAA7B;AACD;;AAED;AACA;AACA;AACA,YAAI,KAAK9H,SAAT,EACA;AACE;AACA,cAAIqM,MAAJ,EACA;AACE,iBAAK1E,cAAL,CAAoBL,GAApB,EAAyBQ,KAAzB;AACA,mBAAO,IAAP;AACD;;AAED;AACA,cAAI,CAAC,KAAKrD,cAAV,EAA0B;AACxB,iBAAKA,cAAL,GAAsB,EAAtB;AACD;;AAED;AACA,eAAKA,cAAL,CAAoB6C,GAApB,IAA2B,IAA3B;;AAEA;AACA9K,aAAG6B,IAAH,CAAQC,OAAR,CAAgBV,SAAhB,CAA0B,KAAKoH,MAA/B,IAAyC,IAAzC;AACAxI,aAAG6B,IAAH,CAAQC,OAAR,CAAgBH,cAAhB,CAA+B,SAA/B;AACD;;AAED,eAAO,IAAP;AACD,OA/lEH;;AAkmEE;;;;;;;;AAQAiR,uBAAkB,yBAAS9H,GAAT,EAAc+E,MAAd,EAAsB;AACtC,eAAO,KAAK8C,YAAL,CAAkB7H,GAAlB,EAAuB,IAAvB,EAA6B+E,MAA7B,CAAP;AACD,OA5mEH;;AA+mEE;;;;;;AAMAgD,oBAAe,sBAAS/H,GAAT,EACf;AACE,YAAIgI,KAAK,KAAK5K,gBAAd;AACA,YAAI,CAAC4K,EAAL,EAAS;AACP,iBAAO,IAAP;AACD;;AAED,YAAIxH,QAAQwH,GAAGhI,GAAH,CAAZ;AACA,eAAOQ,SAAS,IAAT,GAAgB,IAAhB,GAAuBA,KAA9B;AACD,OA9nEH;;AAooEE;;;;;;AAMA;;;;;;;;;;;;;;AAcAoF,mBAAc,qBAAS7K,IAAT,EAAekN,QAAf,EAAyBC,IAAzB,EAA+BlB,OAA/B,EACd;AACE,YAAI,KAAK1N,UAAT,EAAqB;AACnB,iBAAO,IAAP;AACD;;AAGD;AACE,cAAI6O,MAAM,4CAA4CpN,IAA5C,GAAmD,GAAnD,GACR,kBADQ,GACa,IADb,GACoB,KAD9B;;AAGA,eAAKqN,YAAL,CAAkBrN,IAAlB,EAAwBoN,MAAM,qBAA9B;AACA,eAAKE,cAAL,CAAoBJ,QAApB,EAA8BE,MAAM,2BAApC;;AAEA,cAAID,SAASzH,SAAb,EAAwB;AACtB,iBAAK6H,YAAL,CAAkBJ,IAAlB,EAAwB,+BAAxB;AACD;;AAED,cAAIlB,YAAYvG,SAAhB,EAA2B;AACzB,iBAAK8H,aAAL,CAAmBvB,OAAnB,EAA4B,uBAA5B;AACD;AACF;;AAED,YAAI,KAAKtO,SAAT,EAAoB;AAClB,iBAAOxD,GAAGsG,KAAH,CAASK,YAAT,CAAsB+J,WAAtB,CAAkC,KAAKlN,SAAvC,EAAkDqC,IAAlD,EAAwDkN,QAAxD,EAAkEC,IAAlE,EAAwElB,OAAxE,CAAP;AACD;;AAED,YAAI,CAAC,KAAK3J,aAAV,EAAyB;AACvB,eAAKA,aAAL,GAAqB,EAArB;AACD;;AAED,YAAI2J,WAAW,IAAf,EAAqB;AACnBA,oBAAU,KAAV;AACD;;AAED,YAAIwB,SAAStT,GAAGsG,KAAH,CAASiN,OAAT,CAAiBC,eAAjB,EAAb;AACA,YAAIlJ,KAAKzE,QAAQiM,UAAU,WAAV,GAAwB,UAAhC,IAA8CwB,MAAvD;;AAEA,aAAKnL,aAAL,CAAmBmC,EAAnB,IACA;AACEzE,gBAAOA,IADT;AAEEkN,oBAAWA,QAFb;AAGEC,gBAAOA,IAHT;AAIElB,mBAAUA,OAJZ;AAKEwB,kBAASA;AALX,SADA;;AASA,eAAOhJ,EAAP;AACD,OAxsEH;;AA2sEE;;;;;;;;;AASAsG,sBAAiB,wBAAS/K,IAAT,EAAekN,QAAf,EAAyBC,IAAzB,EAA+BlB,OAA/B,EACjB;AACE,YAAI,KAAK1N,UAAT,EAAqB;AACnB,iBAAO,IAAP;AACD;;AAGD;AACE,cAAI6O,MAAM,+CAA+CpN,IAA/C,GAAsD,GAAtD,GACR,oBADQ,GACe,IADf,GACsB,KADhC;;AAGA,eAAKqN,YAAL,CAAkBrN,IAAlB,EAAwBoN,MAAM,qBAA9B;AACA,eAAKE,cAAL,CAAoBJ,QAApB,EAA8BE,MAAM,2BAApC;;AAEA,cAAID,SAASzH,SAAb,EAAwB;AACtB,iBAAK6H,YAAL,CAAkBJ,IAAlB,EAAwB,+BAAxB;AACD;;AAED,cAAIlB,YAAYvG,SAAhB,EAA2B;AACzB,iBAAK8H,aAAL,CAAmBvB,OAAnB,EAA4B,uBAA5B;AACD;AACF;;AAED,YAAI,KAAKtO,SAAT,EACA;AACE,cAAIuP,SAASU,kBAAT,IAA+BV,SAASU,kBAAT,CAA4B5N,OAAO,KAAK2C,MAAxC,CAAnC,EAAoF;AAClF,gBAAIkL,WAAWX,SAASU,kBAAT,CAA4B5N,OAAO,KAAK2C,MAAxC,CAAf;AACA,mBAAOuK,SAASU,kBAAT,CAA4B5N,OAAO,KAAK2C,MAAxC,CAAP;AACAuK,uBAAWW,QAAX;AACD;AACD1T,aAAGsG,KAAH,CAASK,YAAT,CAAsBiK,cAAtB,CAAqC,KAAKpN,SAA1C,EAAqDqC,IAArD,EAA2DkN,QAA3D,EAAqEC,IAArE,EAA2ElB,OAA3E;AACD,SARD,MAUA;AACE,cAAI6B,SAAS,KAAKxL,aAAlB;AACA,cAAIyL,KAAJ;;AAEA,cAAI9B,WAAW,IAAf,EAAqB;AACnBA,sBAAU,KAAV;AACD;;AAED,eAAK,IAAIhH,GAAT,IAAgB6I,MAAhB,EACA;AACEC,oBAAQD,OAAO7I,GAAP,CAAR;;AAEA;AACA,gBAAI8I,MAAMb,QAAN,KAAmBA,QAAnB,IAA+Ba,MAAMZ,IAAN,KAAeA,IAA9C,IAAsDY,MAAM9B,OAAN,KAAkBA,OAAxE,IAAmF8B,MAAM/N,IAAN,KAAeA,IAAtG,EACA;AACE,qBAAO8N,OAAO7I,GAAP,CAAP;AACA;AACD;AACF;AACF;;AAED,eAAO,IAAP;AACD,OA3wEH;;AA8wEE;;;;;;;AAOA+I,0BAAqB,4BAASvJ,EAAT,EACrB;AACE,YAAI,KAAKlG,UAAT,EAAqB;AACnB,iBAAO,IAAP;AACD;;AAED,YAAI,KAAKZ,SAAT,EAAoB;AAClBxD,aAAGsG,KAAH,CAASK,YAAT,CAAsBkN,kBAAtB,CAAyC,KAAKrQ,SAA9C,EAAyD8G,EAAzD;AACD,SAFD,MAEO;AACL,iBAAO,KAAKnC,aAAL,CAAmBmC,EAAnB,CAAP;AACD;;AAED,eAAO,IAAP;AACD,OAlyEH;;AAqyEE;;;;;;;;AAQAwJ,mBAAc,qBAASjO,IAAT,EAAeiM,OAAf,EACd;AACE,YAAI,KAAK1N,UAAT,EAAqB;AACnB,iBAAO,KAAP;AACD;;AAED,YAAI,KAAKZ,SAAT,EAAoB;AAClB,iBAAOxD,GAAGsG,KAAH,CAASK,YAAT,CAAsBmN,WAAtB,CAAkC,KAAKtQ,SAAvC,EAAkDqC,IAAlD,EAAwDiM,OAAxD,CAAP;AACD;;AAED,YAAI6B,SAAS,KAAKxL,aAAlB;AACA,YAAIyL,KAAJ;;AAEA,YAAI9B,WAAW,IAAf,EAAqB;AACnBA,oBAAU,KAAV;AACD;;AAED,aAAK,IAAIhH,GAAT,IAAgB6I,MAAhB,EACA;AACEC,kBAAQD,OAAO7I,GAAP,CAAR;;AAEA;AACA,cAAI8I,MAAM9B,OAAN,KAAkBA,OAAlB,IAA6B8B,MAAM/N,IAAN,KAAeA,IAAhD,EAAsD;AACpD,mBAAO,IAAP;AACD;AACF;;AAED,eAAO,KAAP;AACD,OAz0EH;;AA40EE;;;;;;;;;;;;AAYAkO,oBAAe,wBAAW;AACxB,YAAI,KAAK3P,UAAT,EAAqB;AACnB,iBAAO,IAAP;AACD;;AAED,YAAI,KAAKZ,SAAT,EAAoB;AAClB,iBAAOxD,GAAGsG,KAAH,CAASK,YAAT,CAAsBC,UAAtB,CAAiC,KAAKpD,SAAtC,EAAiDwQ,kBAAjD,CAAoE,KAAKxQ,SAAzE,CAAP;AACD;;AAED,YAAIyQ,YAAY,EAAhB;AACA,aAAK,IAAI3J,EAAT,IAAe,KAAKnC,aAApB,EAAmC;AACjC,cAAI+L,eAAe,KAAK/L,aAAL,CAAmBmC,EAAnB,CAAnB;AACA2J,oBAAUrQ,IAAV,CAAe;AACbiC,kBAAMqO,aAAarO,IADN;AAEbU,qBAAS2N,aAAanB,QAFT;AAGbC,kBAAMkB,aAAalB,IAHN;AAIblB,qBAASoC,aAAapC;AAJT,WAAf;AAMD;;AAED,eAAOmC,SAAP;AACD;AA72EH,KAhZF;;AAowFE;;;;;;AAMAE,WAAQ,eAASjT,OAAT,EAAkB;AACxBA,cAAQa,cAAR,GAAyB,IAAI/B,GAAGoU,IAAH,CAAQC,YAAZ,CAAyBnT,QAAQe,KAAjC,EAAwCf,OAAxC,CAAzB;AACD,KA5wFH;;AAkxFE;;;;;;AAMAoT,cAAW,oBACX;AACE,UAAI,KAAK9L,MAAT,EAAiB;AACf,eAAOxI,GAAG6B,IAAH,CAAQC,OAAR,CAAgBV,SAAhB,CAA0B,KAAKoH,MAA/B,CAAP;AACA,eAAOxI,GAAG6B,IAAH,CAAQC,OAAR,CAAgBR,OAAhB,CAAwB,KAAKkH,MAA7B,CAAP;AACD;;AAED,UAAIwI,KAAK,KAAKxN,SAAd;AACA,UAAIwN,EAAJ,EACA;AACEhR,WAAGsG,KAAH,CAASK,YAAT,CAAsBC,UAAtB,CAAiCoK,EAAjC,EAAqCuD,kBAArC,CAAwDvD,EAAxD;AACAA,WAAGxJ,SAAH,GAAe,EAAf;AACA,eAAOwJ,GAAGvJ,eAAV;AACAuJ,WAAGnI,QAAH,GAAc,EAAd;AACA,eAAOmI,GAAGlI,cAAV;AACD;;AAED,UAAI,CAAC9I,GAAGO,IAAH,CAAQiU,cAAR,CAAuBC,UAA5B,EACA;AACE,YAAIxH,SAAS,KAAK3E,QAAlB;AACA,YAAI2E,UAAU,CAACA,OAAO7I,UAAtB,EAAkC;AAChC6I,iBAAOrB,MAAP,CAAc,IAAd;AACD;AACF;;AAED,WAAK8I,aAAL,CAAmB,YAAnB;;AAEA,WAAKzT,cAAL,GAAsB,KAAKD,aAAL,GAAqB,KAAKmH,aAAL,GACzC,KAAKD,gBAAL,GAAwB,KAAKF,YAAL,GAAoB,KAAKD,WAAL,GAC5C,KAAKE,cAAL,GAAsB,KAAKzE,SAAL,GAAiB,KAAK8E,QAAL,GACvC,KAAKlD,qBAAL,GAA6B,KAAKM,qBAAL,GAA6B,IAH5D;AAID;AAvzFH,GADA,C;AA1CA1F,KAAG6B,IAAH,CAAQC,OAAR,CAAgB3B,aAAhB,GAAgCA,aAAhC",
  "file": "Element.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * High-performance, high-level DOM element creation and management.\n *\n * Includes support for HTML and style attributes. Elements also have\n * got a powerful children and visibility management.\n *\n * Processes DOM insertion and modification with advanced logic\n * to reduce the real transactions.\n *\n * From the view of the parent you can use the following children management\n * methods:\n * {@link #getChildren}, {@link #indexOf}, {@link #hasChild}, {@link #add},\n * {@link #addAt}, {@link #remove}, {@link #removeAt}, {@link #removeAll}\n *\n * Each child itself also has got some powerful methods to control its\n * position:\n * {@link #getParent}, {@link #free},\n * {@link #insertInto}, {@link #insertBefore}, {@link #insertAfter},\n * {@link #moveTo}, {@link #moveBefore}, {@link #moveAfter},\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @require(qx.module.Animation)\n */\nqx.Class.define(\"qx.html.Element\",\n{\n  extend : qx.core.Object,\n  implement : [ qx.core.IDisposable ],\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Creates a new Element\n   *\n   * @param tagName {String?\"div\"} Tag name of the element to create\n   * @param styles {Map?null} optional map of CSS styles, where the key is the name\n   *    of the style and the value is the value to use.\n   * @param attributes {Map?null} optional map of element attributes, where the\n   *    key is the name of the attribute and the value is the value to use.\n   */\n  construct : function(tagName, styles, attributes)\n  {\n    this.base(arguments);\n\n    // {String} Set tag name\n    this.__nodeName = tagName || \"div\";\n\n    this.__styleValues = styles || null;\n    this.__attribValues = attributes || null;\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      STATIC DATA\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {Boolean} If debugging should be enabled */\n    DEBUG : false,\n\n\n    /** @type {Map} Contains the modified {@link qx.html.Element}s. The key is the hash code. */\n    _modified : {},\n\n\n    /** @type {Map} Contains the {@link qx.html.Element}s which should get hidden or visible at the next flush. The key is the hash code. */\n    _visibility : {},\n\n\n    /** @type {Map} Contains the {@link qx.html.Element}s which should scrolled at the next flush */\n    _scroll : {},\n\n\n    /** @type {Array} List of post actions for elements. The key is the action name. The value the {@link qx.html.Element}. */\n    _actions : [],\n\n\n    /**  @type {Map} List of all selections. */\n    __selection : {},\n\n\n    __focusHandler : null,\n\n\n    __mouseCapture : null,\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC ELEMENT FLUSH\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Schedule a deferred element queue flush. If the widget subsystem is used\n     * this method gets overwritten by {@link qx.ui.core.queue.Manager}.\n     *\n     * @param job {String} The job descriptor. Should always be <code>\"element\"</code>.\n     */\n    _scheduleFlush : function(job) {\n      qx.html.Element.__deferredCall.schedule();\n    },\n\n\n    /**\n     * Flush the global modified list\n     */\n    flush : function()\n    {\n      var obj;\n\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (this.DEBUG) {\n          qx.log.Logger.debug(this, \"Flushing elements...\");\n        }\n      }\n\n\n      // blur elements, which will be removed\n      var focusHandler = this.__getFocusHandler();\n      var focusedDomElement = focusHandler.getFocus();\n      if (focusedDomElement && this.__willBecomeInvisible(focusedDomElement)) {\n        focusHandler.blur(focusedDomElement);\n      }\n\n      // decativate elements, which will be removed\n      var activeDomElement = focusHandler.getActive();\n      if (activeDomElement && this.__willBecomeInvisible(activeDomElement)) {\n        qx.bom.Element.deactivate(activeDomElement);\n      }\n\n      // release capture for elements, which will be removed\n      var captureDomElement = this.__getCaptureElement();\n      if (captureDomElement && this.__willBecomeInvisible(captureDomElement)) {\n        qx.bom.Element.releaseCapture(captureDomElement);\n      }\n\n\n      var later = [];\n      var modified = this._modified;\n\n      for (var hc in modified)\n      {\n        obj = modified[hc];\n        // Ignore all hidden elements except iframes\n        // but keep them until they get visible (again)\n        if (obj.__willBeSeeable() || obj.classname == \"qx.html.Iframe\")\n        {\n          // Separately queue rendered elements\n          if (obj.__element && qx.dom.Hierarchy.isRendered(obj.__element)) {\n            later.push(obj);\n          }\n\n          // Flush invisible elements first\n          else\n          {\n            if (qx.core.Environment.get(\"qx.debug\"))\n            {\n              if (this.DEBUG) {\n                obj.debug(\"Flush invisible element\");\n              }\n            }\n\n            obj.__flush();\n          }\n\n          // Cleanup modification list\n          delete modified[hc];\n        }\n      }\n\n      for (var i=0, l=later.length; i<l; i++)\n      {\n        obj = later[i];\n\n        if (qx.core.Environment.get(\"qx.debug\"))\n        {\n          if (this.DEBUG) {\n            obj.debug(\"Flush rendered element\");\n          }\n        }\n\n        obj.__flush();\n      }\n\n\n\n      // Process visibility list\n      var visibility = this._visibility;\n\n      for (var hc in visibility)\n      {\n        obj = visibility[hc];\n\n        var element = obj.__element;\n        if (!element)\n        {\n          delete visibility[hc];\n          continue;\n        }\n\n        if (qx.core.Environment.get(\"qx.debug\"))\n        {\n          if (this.DEBUG) {\n            qx.log.Logger.debug(this, \"Switching visibility to: \" + obj.__visible);\n          }\n        }\n\n        // hiding or showing an object and deleting it right after that may\n        // cause an disposed object in the visibility queue [BUG #3607]\n        if (!obj.$$disposed) {\n          element.style.display = obj.__visible ? \"\" : \"none\";\n          // also hide the element (fixed some rendering problem in IE<8 & IE8 quirks)\n          if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\"))\n          {\n            if (!(document.documentMode >= 8)) {\n              element.style.visibility = obj.__visible ? \"visible\" : \"hidden\";\n            }\n          }\n        }\n\n        delete visibility[hc];\n      }\n\n      // Process scroll list\n      var scroll = this._scroll;\n      for (var hc in scroll)\n      {\n        obj = scroll[hc];\n        var elem = obj.__element;\n\n        if (elem && elem.offsetWidth)\n        {\n          var done = true;\n\n          // ScrollToX\n          if (obj.__lazyScrollX != null)\n          {\n            obj.__element.scrollLeft = obj.__lazyScrollX;\n            delete obj.__lazyScrollX;\n          }\n\n          // ScrollToY\n          if (obj.__lazyScrollY != null)\n          {\n            obj.__element.scrollTop = obj.__lazyScrollY;\n            delete obj.__lazyScrollY;\n          }\n\n          // ScrollIntoViewX\n          var intoViewX = obj.__lazyScrollIntoViewX;\n          if (intoViewX != null)\n          {\n            var child = intoViewX.element.getDomElement();\n\n            if (child && child.offsetWidth)\n            {\n              qx.bom.element.Scroll.intoViewX(child, elem, intoViewX.align);\n              delete obj.__lazyScrollIntoViewX;\n            }\n            else\n            {\n              done = false;\n            }\n          }\n\n          // ScrollIntoViewY\n          var intoViewY = obj.__lazyScrollIntoViewY;\n          if (intoViewY != null)\n          {\n            var child = intoViewY.element.getDomElement();\n\n            if (child && child.offsetWidth)\n            {\n              qx.bom.element.Scroll.intoViewY(child, elem, intoViewY.align);\n              delete obj.__lazyScrollIntoViewY;\n            }\n            else\n            {\n              done = false;\n            }\n          }\n\n          // Clear flag if all things are done\n          // Otherwise wait for the next flush\n          if (done) {\n            delete scroll[hc];\n          }\n        }\n      }\n\n\n      var activityEndActions = {\n        \"releaseCapture\": 1,\n        \"blur\": 1,\n        \"deactivate\": 1\n      };\n\n      // Process action list\n      for (var i=0; i<this._actions.length; i++)\n      {\n        var action = this._actions[i];\n        var element = action.element.__element;\n        if (!element || !activityEndActions[action.type] && !action.element.__willBeSeeable()) {\n          continue;\n        }\n        var args = action.args;\n        args.unshift(element);\n        qx.bom.Element[action.type].apply(qx.bom.Element, args);\n      }\n      this._actions = [];\n\n      // Process selection\n      for (var hc in this.__selection)\n      {\n        var selection = this.__selection[hc];\n        var elem = selection.element.__element;\n        if (elem)\n        {\n          qx.bom.Selection.set(elem, selection.start, selection.end);\n          delete this.__selection[hc];\n        }\n      }\n\n      // Fire appear/disappear events\n      qx.event.handler.Appear.refresh();\n    },\n\n\n    /**\n     * Get the focus handler\n     *\n     * @return {qx.event.handler.Focus} The focus handler\n     */\n    __getFocusHandler : function()\n    {\n      if (!this.__focusHandler)\n      {\n        var eventManager = qx.event.Registration.getManager(window);\n        this.__focusHandler = eventManager.getHandler(qx.event.handler.Focus);\n      }\n      return this.__focusHandler;\n    },\n\n\n    /**\n     * Get the mouse capture element\n     *\n     * @return {Element} The mouse capture DOM element\n     */\n    __getCaptureElement : function()\n    {\n      if (!this.__mouseCapture)\n      {\n        var eventManager = qx.event.Registration.getManager(window);\n        this.__mouseCapture = eventManager.getDispatcher(qx.event.dispatch.MouseCapture);\n      }\n      return this.__mouseCapture.getCaptureElement();\n    },\n\n\n    /**\n     * Whether the given DOM element will become invisible after the flush\n     *\n     * @param domElement {Element} The DOM element to check\n     * @return {Boolean} Whether the element will become invisible\n     */\n    __willBecomeInvisible : function(domElement)\n    {\n      var element = this.fromDomElement(domElement);\n      return element && !element.__willBeSeeable();\n    },\n\n\n    /**\n     * Finds the Widget for a given DOM element\n     *\n     * @param domElement {DOM} the DOM element\n     * @return {qx.ui.core.Widget} the Widget that created the DOM element\n     */\n    fromDomElement: function(domElement) {\n    \tif (qx.core.Environment.get(\"qx.debug\")) {\n    \t\tqx.core.Assert.assertTrue((!domElement.$$element && !domElement.$$elementObject) ||\n    \t\t\t\tdomElement.$$element === domElement.$$elementObject.toHashCode());\n    \t}\n      return domElement.$$elementObject;\n    }\n\n  },\n\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED HELPERS/DATA\n    ---------------------------------------------------------------------------\n    */\n\n    __nodeName : null,\n\n    /** @type {Element} DOM element of this object */\n    __element : null,\n\n    /** @type {qx.ui.core.Widget} the Widget this element is attached to */\n    __widget : null,\n\n    /** @type {Boolean} Marker for always visible root nodes (often the body node) */\n    __root : false,\n\n    /** @type {Boolean} Whether the element should be included in the render result */\n    __included : true,\n\n    /** @type {Boolean} Whether the element should be visible in the render result */\n    __visible : true,\n\n    __lazyScrollIntoViewX : null,\n    __lazyScrollIntoViewY : null,\n\n    __lazyScrollX : null,\n    __lazyScrollY : null,\n\n    __styleJobs : null,\n    __attribJobs : null,\n    __propertyJobs : null,\n\n    __styleValues : null,\n    __attribValues : null,\n    __propertyValues : null,\n    __eventValues : null,\n\n    __children : null,\n    __modifiedChildren : null,\n\n    __parent : null,\n\n    /**\n     * Add the element to the global modification list.\n     *\n     */\n    _scheduleChildrenUpdate : function()\n    {\n      if (this.__modifiedChildren) {\n        return;\n      }\n\n      this.__modifiedChildren = true;\n\n      qx.html.Element._modified[this.$$hash] = this;\n      qx.html.Element._scheduleFlush(\"element\");\n    },\n\n\n    /**\n     * Internal helper to generate the DOM element\n     *\n     * @return {Element} DOM element\n     */\n    _createDomElement : function() {\n      return qx.dom.Element.create(this.__nodeName);\n    },\n\n\n    /**\n     * Connects a widget to this element, and to the DOM element in this Element.  They\n     * remain associated until disposed or disconnectWidget is called\n     *\n     * @param widget {qx.ui.core.Widget} the widget\n     */\n    connectWidget: function(widget) {\n    \tif (qx.core.Environment.get(\"qx.debug\")) {\n      \tqx.core.Assert.assertTrue(!this.__widget || this.__widget === widget);\n    \t}\n\n    \tthis.__widget = widget;\n    \tif (this.__element) {\n      \tif (qx.core.Environment.get(\"qx.debug\")) {\n      \t\tqx.core.Assert.assertTrue((!this.__element.$$widget && !this.__element.$$widgetObject) ||\n      \t\t\t\t(this.__element.$$widgetObject === widget && this.__element.$$widget === widget.toHashCode()));\n      \t}\n\n      \tthis.__element.$$widget = widget.toHashCode();\n      \tthis.__element.$$widgetObject = widget;\n    \t}\n\n      if (qx.core.Environment.get(\"module.objectid\")) {\n        this.updateObjectId();\n      }\n    },\n\n\n    /**\n     * Disconnects a widget from this element and the DOM element.  The DOM element remains\n     * untouched, except that it can no longer be used to find the Widget.\n     *\n     * @param widget {qx.ui.core.Widget} the Widget\n     */\n    disconnectWidget: function(widget) {\n    \tif (qx.core.Environment.get(\"qx.debug\")) {\n      \tqx.core.Assert.assertTrue(this.__widget === widget);\n    \t}\n\n    \tdelete this.__widget;\n    \tif (this.__element) {\n      \tif (qx.core.Environment.get(\"qx.debug\")) {\n      \t\tqx.core.Assert.assertTrue((!this.__element.$$widget && !this.__element.$$widgetObject) ||\n      \t\t\t\t(this.__element.$$widgetObject === widget && this.__element.$$widget === widget.toHashCode()));\n      \t}\n\n      \tthis.__element.$$widget = \"\";\n      \tdelete this.__element.$$widgetObject;\n    \t}\n    \t\n      if (qx.core.Environment.get(\"module.objectid\")) {\n        this.updateObjectId();\n      }\n    },\n\n\n    /**\n     * Connects a DOM element to this Element; if this Element is already connected to a Widget\n     * then the Widget is also connected.\n     *\n     * @param domElement {DOM} the DOM element to associate\n     */\n    __connectDomElement: function(domElement) {\n    \tif (qx.core.Environment.get(\"qx.debug\")) {\n    \t\tqx.core.Assert.assertTrue(!this.__element || this.__element === domElement);\n    \t\tqx.core.Assert.assertTrue((domElement.$$elementObject === this && domElement.$$element === this.toHashCode()) ||\n    \t\t\t\t(!domElement.$$elementObject && !domElement.$$element));\n    \t};\n\n    \tthis.__element = domElement;\n    \tdomElement.$$elementObject = this;\n    \tdomElement.$$element = this.toHashCode();\n    \tif (this.__widget) {\n      \tdomElement.$$widget = this.__widget.toHashCode();\n      \tdomElement.$$widgetObject = this.__widget;\n    \t}\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      FLUSH OBJECT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Syncs data of an HtmlElement object to the DOM.\n     *\n     */\n    __flush : function()\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (this.DEBUG) {\n          this.debug(\"Flush: \" + this.getAttribute(\"id\"));\n        }\n      }\n\n      var length;\n      var children = this.__children;\n      if (children)\n      {\n        length = children.length;\n        var child;\n        for (var i=0; i<length; i++)\n        {\n          child = children[i];\n\n          if (child.__visible && child.__included && !child.__element) {\n            child.__flush();\n          }\n        }\n      }\n\n      if (!this.__element)\n      {\n        this.__connectDomElement(this._createDomElement());\n\n        this._copyData(false);\n\n        if (children && length > 0) {\n          this._insertChildren();\n        }\n      }\n      else\n      {\n        this._syncData();\n\n        if (this.__modifiedChildren) {\n          this._syncChildren();\n        }\n      }\n\n      delete this.__modifiedChildren;\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SUPPORT FOR CHILDREN FLUSH\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Append all child nodes to the DOM\n     * element. This function is used when the element is initially\n     * created. After this initial apply {@link #_syncChildren} is used\n     * instead.\n     *\n     */\n    _insertChildren : function()\n    {\n      var children = this.__children;\n      var length = children.length;\n      var child;\n\n      if (length > 2)\n      {\n        var domElement = document.createDocumentFragment();\n        for (var i=0; i<length; i++)\n        {\n          child = children[i];\n          if (child.__element && child.__included) {\n            domElement.appendChild(child.__element);\n          }\n        }\n\n        this.__element.appendChild(domElement);\n      }\n      else\n      {\n        var domElement = this.__element;\n        for (var i=0; i<length; i++)\n        {\n          child = children[i];\n          if (child.__element && child.__included) {\n            domElement.appendChild(child.__element);\n          }\n        }\n      }\n    },\n\n\n    /**\n     * Synchronize internal children hierarchy to the DOM. This is used\n     * for further runtime updates after the element has been created\n     * initially.\n     *\n     */\n    _syncChildren : function()\n    {\n      var dataChildren = this.__children;\n      var dataLength = dataChildren.length;\n      var dataChild;\n      var dataEl;\n\n      var domParent = this.__element;\n      var domChildren = domParent.childNodes;\n      var domPos = 0;\n      var domEl;\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        var domOperations = 0;\n      }\n\n      // Remove children from DOM which are excluded or remove first\n      for (var i=domChildren.length-1; i>=0; i--)\n      {\n        domEl = domChildren[i];\n        dataEl = qx.html.Element.fromDomElement(domEl);\n\n        if (!dataEl || !dataEl.__included || dataEl.__parent !== this)\n        {\n          domParent.removeChild(domEl);\n\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            domOperations++;\n          }\n        }\n      }\n\n      // Start from beginning and bring DOM in sync\n      // with the data structure\n      for (var i=0; i<dataLength; i++)\n      {\n        dataChild = dataChildren[i];\n\n        // Only process visible childs\n        if (dataChild.__included)\n        {\n          dataEl = dataChild.__element;\n          domEl = domChildren[domPos];\n\n          if (!dataEl) {\n            continue;\n          }\n\n          // Only do something when out of sync\n          // If the data element is not there it may mean that it is still\n          // marked as visible=false\n          if (dataEl != domEl)\n          {\n            if (domEl) {\n              domParent.insertBefore(dataEl, domEl);\n            } else {\n              domParent.appendChild(dataEl);\n            }\n\n            if (qx.core.Environment.get(\"qx.debug\")) {\n              domOperations++;\n            }\n          }\n\n          // Increase counter\n          domPos++;\n        }\n      }\n\n      // User feedback\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.html.Element.DEBUG) {\n          this.debug(\"Synced DOM with \" + domOperations + \" operations\");\n        }\n      }\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SUPPORT FOR ATTRIBUTE/STYLE/EVENT FLUSH\n    ---------------------------------------------------------------------------\n    */\n    \n    updateObjectId: function() {\n      // Copy Object Id\n      if (qx.core.Environment.get(\"module.objectid\")) {\n        var id = null;\n        if (this.__widget && this.__widget.getQxObjectId()) {\n          id = qx.core.Id.getAbsoluteIdOf(this.__widget, true) || null;\n        }\n        this.setAttribute(\"data-qx-object-id\", id, true);\n      }\n    },\n\n    /**\n     * Copies data between the internal representation and the DOM. This\n     * simply copies all the data and only works well directly after\n     * element creation. After this the data must be synced using {@link #_syncData}\n     *\n     * @param fromMarkup {Boolean} Whether the copy should respect styles\n     *   given from markup\n     */\n    _copyData : function(fromMarkup)\n    {\n      var elem = this.__element;\n      \n      // Copy attributes\n      var data = this.__attribValues;\n      if (data)\n      {\n        var Attribute = qx.bom.element.Attribute;\n        for (var key in data) {\n          Attribute.set(elem, key, data[key]);\n        }\n      }\n\n      // Copy styles\n      var data = this.__styleValues;\n      if (data)\n      {\n        var Style = qx.bom.element.Style;\n        if (fromMarkup) {\n          Style.setStyles(elem, data);\n        }\n        else\n        {\n          // Set styles at once which is a lot faster in most browsers\n          // compared to separate modifications of many single style properties.\n          Style.setCss(elem, Style.compile(data));\n        }\n      }\n\n      // Copy properties\n      var data = this.__propertyValues;\n      if (data)\n      {\n        for (var key in data) {\n          this._applyProperty(key, data[key]);\n        }\n      }\n\n      // Attach events\n      var data = this.__eventValues;\n      if (data)\n      {\n        // Import listeners\n        qx.event.Registration.getManager(elem).importListeners(elem, data);\n\n        // Cleanup event map\n        // Events are directly attached through event manager\n        // after initial creation. This differs from the\n        // handling of styles and attributes where queuing happens\n        // through the complete runtime of the application.\n        delete this.__eventValues;\n      }\n    },\n\n\n    /**\n     * Synchronizes data between the internal representation and the DOM. This\n     * is the counterpart of {@link #_copyData} and is used for further updates\n     * after the element has been created.\n     *\n     */\n    _syncData : function()\n    {\n      var elem = this.__element;\n\n      var Attribute = qx.bom.element.Attribute;\n      var Style = qx.bom.element.Style;\n\n      // Sync attributes\n      var jobs = this.__attribJobs;\n      if (jobs)\n      {\n        var data = this.__attribValues;\n        if (data)\n        {\n          var value;\n          for (var key in jobs)\n          {\n            value = data[key];\n\n            if (value !== undefined) {\n              Attribute.set(elem, key, value);\n            } else {\n              Attribute.reset(elem, key);\n            }\n          }\n        }\n\n        this.__attribJobs = null;\n      }\n\n      // Sync styles\n      var jobs = this.__styleJobs;\n      if (jobs)\n      {\n        var data = this.__styleValues;\n        if (data)\n        {\n          var styles = {};\n          for (var key in jobs) {\n            styles[key] = data[key];\n          }\n\n          Style.setStyles(elem, styles);\n        }\n\n        this.__styleJobs = null;\n      }\n\n      // Sync misc\n      var jobs = this.__propertyJobs;\n      if (jobs)\n      {\n        var data = this.__propertyValues;\n        if (data)\n        {\n          var value;\n          for (var key in jobs) {\n            this._applyProperty(key, data[key]);\n          }\n        }\n\n        this.__propertyJobs = null;\n      }\n\n      // Note: Events are directly kept in sync\n    },\n\n\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PRIVATE HELPERS/DATA\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Walk up the internal children hierarchy and\n     * look if one of the children is marked as root.\n     *\n     * This method is quite performance hungry as it\n     * really walks up recursively.\n     * @return {Boolean} <code>true</code> if the element will be seeable\n     */\n    __willBeSeeable : function()\n    {\n      var pa = this;\n\n      // Any chance to cache this information in the parents?\n      while(pa)\n      {\n        if (pa.__root) {\n          return true;\n        }\n\n        if (!pa.__included || !pa.__visible) {\n          return false;\n        }\n\n        pa = pa.__parent;\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Internal helper for all children addition needs\n     *\n     * @param child {var} the element to add\n     * @throws {Error} if the given element is already a child\n     *     of this element\n     */\n    __addChildHelper : function(child)\n    {\n      if (child.__parent === this) {\n        throw new Error(\"Child is already in: \" + child);\n      }\n\n      if (child.__root) {\n        throw new Error(\"Root elements could not be inserted into other ones.\");\n      }\n\n      // Remove from previous parent\n      if (child.__parent) {\n        child.__parent.remove(child);\n      }\n\n      // Convert to child of this object\n      child.__parent = this;\n\n      // Prepare array\n      if (!this.__children) {\n        this.__children = [];\n      }\n\n      // Schedule children update\n      if (this.__element) {\n        this._scheduleChildrenUpdate();\n      }\n    },\n\n\n    /**\n     * Internal helper for all children removal needs\n     *\n     * @param child {qx.html.Element} the removed element\n     * @throws {Error} if the given element is not a child\n     *     of this element\n     */\n    __removeChildHelper : function(child)\n    {\n      if (child.__parent !== this) {\n        throw new Error(\"Has no child: \" + child);\n      }\n\n      // Schedule children update\n      if (this.__element) {\n        this._scheduleChildrenUpdate();\n      }\n\n      // Remove reference to old parent\n      delete child.__parent;\n    },\n\n\n    /**\n     * Internal helper for all children move needs\n     *\n     * @param child {qx.html.Element} the moved element\n     * @throws {Error} if the given element is not a child\n     *     of this element\n     */\n    __moveChildHelper : function(child)\n    {\n      if (child.__parent !== this) {\n        throw new Error(\"Has no child: \" + child);\n      }\n\n      // Schedule children update\n      if (this.__element) {\n        this._scheduleChildrenUpdate();\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN MANAGEMENT (EXECUTED ON THE PARENT)\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns a copy of the internal children structure.\n     *\n     * Please do not modify the array in place. If you need\n     * to work with the data in such a way make yourself\n     * a copy of the data first.\n     *\n     * @return {Array} the children list\n     */\n    getChildren : function() {\n      return this.__children || null;\n    },\n\n\n    /**\n     * Get a child element at the given index\n     *\n     * @param index {Integer} child index\n     * @return {qx.html.Element|null} The child element or <code>null</code> if\n     *     no child is found at that index.\n     */\n    getChild : function(index)\n    {\n      var children = this.__children;\n      return children && children[index] || null;\n    },\n\n\n    /**\n     * Returns whether the element has any child nodes\n     *\n     * @return {Boolean} Whether the element has any child nodes\n     */\n    hasChildren : function()\n    {\n      var children = this.__children;\n      return children && children[0] !== undefined;\n    },\n\n\n    /**\n     * Find the position of the given child\n     *\n     * @param child {qx.html.Element} the child\n     * @return {Integer} returns the position. If the element\n     *     is not a child <code>-1</code> will be returned.\n     */\n    indexOf : function(child)\n    {\n      var children = this.__children;\n      return children ? children.indexOf(child) : -1;\n    },\n\n\n    /**\n     * Whether the given element is a child of this element.\n     *\n     * @param child {qx.html.Element} the child\n     * @return {Boolean} Returns <code>true</code> when the given\n     *    element is a child of this element.\n     */\n    hasChild : function(child)\n    {\n      var children = this.__children;\n      return children && children.indexOf(child) !== -1;\n    },\n\n\n    /**\n     * Append all given children at the end of this element.\n     *\n     * @param varargs {qx.html.Element} elements to insert\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    add : function(varargs)\n    {\n      if (arguments[1])\n      {\n        for (var i=0, l=arguments.length; i<l; i++) {\n          this.__addChildHelper(arguments[i]);\n        }\n\n        this.__children.push.apply(this.__children, arguments);\n      }\n      else\n      {\n        this.__addChildHelper(varargs);\n        this.__children.push(varargs);\n      }\n\n      // Chaining support\n      return this;\n    },\n\n\n    /**\n     * Inserts a new element into this element at the given position.\n     *\n     * @param child {qx.html.Element} the element to insert\n     * @param index {Integer} the index (starts at 0 for the\n     *     first child) to insert (the index of the following\n     *     children will be increased by one)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    addAt : function(child, index)\n    {\n      this.__addChildHelper(child);\n      qx.lang.Array.insertAt(this.__children, child, index);\n\n      // Chaining support\n      return this;\n    },\n\n\n    /**\n     * Removes all given children\n     *\n     * @param childs {qx.html.Element} children to remove\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    remove : function(childs)\n    {\n      var children = this.__children;\n      if (!children) {\n        return this;\n      }\n\n      if (arguments[1])\n      {\n        var child;\n        for (var i=0, l=arguments.length; i<l; i++)\n        {\n          child = arguments[i];\n\n          this.__removeChildHelper(child);\n          qx.lang.Array.remove(children, child);\n        }\n      }\n      else\n      {\n        this.__removeChildHelper(childs);\n        qx.lang.Array.remove(children, childs);\n      }\n\n      // Chaining support\n      return this;\n    },\n\n\n    /**\n     * Removes the child at the given index\n     *\n     * @param index {Integer} the position of the\n     *     child (starts at 0 for the first child)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    removeAt : function(index)\n    {\n      var children = this.__children;\n      if (!children) {\n        throw new Error(\"Has no children!\");\n      }\n\n      var child = children[index];\n      if (!child) {\n        throw new Error(\"Has no child at this position!\");\n      }\n\n      this.__removeChildHelper(child);\n      qx.lang.Array.removeAt(this.__children, index);\n\n      // Chaining support\n      return this;\n    },\n\n\n    /**\n     * Remove all children from this element.\n     *\n     * @return {qx.html.Element} A reference to this.\n     */\n    removeAll : function()\n    {\n      var children = this.__children;\n      if (children)\n      {\n        for (var i=0, l=children.length; i<l; i++) {\n          this.__removeChildHelper(children[i]);\n        }\n\n        // Clear array\n        children.length = 0;\n      }\n\n      // Chaining support\n      return this;\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN MANAGEMENT (EXECUTED ON THE CHILD)\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the parent of this element.\n     *\n     * @return {qx.html.Element|null} The parent of this element\n     */\n    getParent : function() {\n      return this.__parent || null;\n    },\n\n\n    /**\n     * Insert self into the given parent. Normally appends self to the end,\n     * but optionally a position can be defined. With index <code>0</code> it\n     * will be inserted at the begin.\n     *\n     * @param parent {qx.html.Element} The new parent of this element\n     * @param index {Integer?null} Optional position\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    insertInto : function(parent, index)\n    {\n      parent.__addChildHelper(this);\n\n      if (index == null) {\n        parent.__children.push(this);\n      } else {\n        qx.lang.Array.insertAt(this.__children, this, index);\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Insert self before the given (related) element\n     *\n     * @param rel {qx.html.Element} the related element\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    insertBefore : function(rel)\n    {\n      var parent = rel.__parent;\n\n      parent.__addChildHelper(this);\n      qx.lang.Array.insertBefore(parent.__children, this, rel);\n\n      return this;\n    },\n\n\n    /**\n     * Insert self after the given (related) element\n     *\n     * @param rel {qx.html.Element} the related element\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    insertAfter : function(rel)\n    {\n      var parent = rel.__parent;\n\n      parent.__addChildHelper(this);\n      qx.lang.Array.insertAfter(parent.__children, this, rel);\n\n      return this;\n    },\n\n\n    /**\n     * Move self to the given index in the current parent.\n     *\n     * @param index {Integer} the index (starts at 0 for the first child)\n     * @return {qx.html.Element} this object (for chaining support)\n     * @throws {Error} when the given element is not child\n     *      of this element.\n     */\n    moveTo : function(index)\n    {\n      var parent = this.__parent;\n\n      parent.__moveChildHelper(this);\n\n      var oldIndex = parent.__children.indexOf(this);\n\n      if (oldIndex === index) {\n        throw new Error(\"Could not move to same index!\");\n      } else if (oldIndex < index) {\n        index--;\n      }\n\n      qx.lang.Array.removeAt(parent.__children, oldIndex);\n      qx.lang.Array.insertAt(parent.__children, this, index);\n\n      return this;\n    },\n\n\n    /**\n     * Move self before the given (related) child.\n     *\n     * @param rel {qx.html.Element} the related child\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    moveBefore : function(rel)\n    {\n      var parent = this.__parent;\n      return this.moveTo(parent.__children.indexOf(rel));\n    },\n\n\n    /**\n     * Move self after the given (related) child.\n     *\n     * @param rel {qx.html.Element} the related child\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    moveAfter : function(rel)\n    {\n      var parent = this.__parent;\n      return this.moveTo(parent.__children.indexOf(rel) + 1);\n    },\n\n\n    /**\n     * Remove self from the current parent.\n     *\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    free : function()\n    {\n      var parent = this.__parent;\n      if (!parent) {\n        throw new Error(\"Has no parent to remove from.\");\n      }\n\n      if (!parent.__children) {\n        return this;\n      }\n\n      parent.__removeChildHelper(this);\n      qx.lang.Array.remove(parent.__children, this);\n\n      return this;\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      DOM ELEMENT ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the DOM element (if created). Please use this with caution.\n     * It is better to make all changes to the object itself using the public\n     * API rather than to the underlying DOM element.\n     *\n     * @return {Element|null} The DOM element node, if available.\n     */\n    getDomElement : function() {\n      return this.__element || null;\n    },\n\n\n    /**\n     * Returns the nodeName of the DOM element.\n     *\n     * @return {String} The node name\n     */\n    getNodeName : function() {\n      return this.__nodeName;\n    },\n\n    /**\n     * Sets the nodeName of the DOM element.\n     *\n     * @param name {String} The node name\n     */\n    setNodeName : function(name) {\n      this.__nodeName = name;\n    },\n\n    /**\n     * Sets the element's root flag, which indicates\n     * whether the element should be a root element or not.\n     * @param root {Boolean} The root flag.\n     */\n    setRoot : function(root) {\n      this.__root = root;\n    },\n\n    /**\n     * Uses existing markup for this element. This is mainly used\n     * to insert pre-built markup blocks into the element hierarchy.\n     *\n     * @param html {String} HTML markup with one root element\n     *   which is used as the main element for this instance.\n     * @return {Element} The created DOM element\n     */\n    useMarkup : function(html)\n    {\n      if (this.__element) {\n        throw new Error(\"Could not overwrite existing element!\");\n      }\n\n      // Prepare extraction\n      // We have a IE specific issue with \"Unknown error\" messages\n      // when we try to use the same DOM node again. I am not sure\n      // why this happens. Would be a good performance improvement,\n      // but does not seem to work.\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\n        var helper = document.createElement(\"div\");\n      } else {\n        var helper = qx.dom.Element.getHelperElement();\n      }\n\n      // Extract first element\n      helper.innerHTML = html;\n      this.useElement(helper.firstChild);\n\n      return this.__element;\n    },\n\n\n    /**\n     * Uses an existing element instead of creating one. This may be interesting\n     * when the DOM element is directly needed to add content etc.\n     *\n     * @param elem {Element} Element to reuse\n     */\n    useElement : function(elem)\n    {\n      if (this.__element) {\n        throw new Error(\"Could not overwrite existing element!\");\n      }\n\n      // Use incoming element\n      this.__connectDomElement(elem);\n\n      // Copy currently existing data over to element\n      this._copyData(true);\n    },\n\n\n    /**\n     * Whether the element is focusable (or will be when created)\n     *\n     * @return {Boolean} <code>true</code> when the element is focusable.\n     */\n    isFocusable : function()\n    {\n      var tabIndex = this.getAttribute(\"tabIndex\");\n      if (tabIndex >= 1) {\n        return true;\n      }\n\n      var focusable = qx.event.handler.Focus.FOCUSABLE_ELEMENTS;\n      if (tabIndex >= 0 && focusable[this.__nodeName]) {\n        return true;\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Set whether the element is selectable. It uses the qooxdoo attribute\n     * qxSelectable with the values 'on' or 'off'.\n     * In webkit, a special css property will be used (-webkit-user-select).\n     *\n     * @param value {Boolean} True, if the element should be selectable.\n     */\n    setSelectable : function(value)\n    {\n      this.setAttribute(\"qxSelectable\", value ? \"on\" : \"off\");\n      var userSelect = qx.core.Environment.get(\"css.userselect\");\n      if (userSelect) {\n        this.setStyle(userSelect, value ? \"text\" :\n          qx.core.Environment.get(\"css.userselect.none\"));\n      }\n    },\n\n\n    /**\n     * Whether the element is natively focusable (or will be when created)\n     *\n     * This ignores the configured tabIndex.\n     *\n     * @return {Boolean} <code>true</code> when the element is focusable.\n     */\n    isNativelyFocusable : function() {\n      return !!qx.event.handler.Focus.FOCUSABLE_ELEMENTS[this.__nodeName];\n    },\n\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EXCLUDE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Marks the element as included which means it will be moved into\n     * the DOM again and synced with the internal data representation.\n     *\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    include : function()\n    {\n      if (this.__included) {\n        return this;\n      }\n\n      delete this.__included;\n\n      if (this.__parent) {\n        this.__parent._scheduleChildrenUpdate();\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Marks the element as excluded which means it will be removed\n     * from the DOM and ignored for updates until it gets included again.\n     *\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    exclude : function()\n    {\n      if (!this.__included) {\n        return this;\n      }\n\n      this.__included = false;\n\n      if (this.__parent) {\n        this.__parent._scheduleChildrenUpdate();\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Whether the element is part of the DOM\n     *\n     * @return {Boolean} Whether the element is part of the DOM.\n     */\n    isIncluded : function() {\n      return this.__included === true;\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      ANIMATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Fades in the element.\n     * @param duration {Number} Time in ms.\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\n     *   the fade animation.\n     */\n    fadeIn : function(duration) {\n      var col = qxWeb(this.__element);\n      if (col.isPlaying()) {\n        col.stop();\n      }\n      // create the element right away\n      if (!this.__element) {\n        this.__flush();\n        col.push(this.__element);\n      }\n      if (this.__element) {\n        col.fadeIn(duration).once(\"animationEnd\", function() {\n          this.show();\n          qx.html.Element.flush();\n        }, this);\n        return col.getAnimationHandles()[0];\n      }\n    },\n\n\n    /**\n     * Fades out the element.\n     * @param duration {Number} Time in ms.\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\n     *   the fade animation.\n     */\n    fadeOut : function(duration) {\n      var col = qxWeb(this.__element);\n      if (col.isPlaying()) {\n        col.stop();\n      }\n\n      if (this.__element) {\n        col.fadeOut(duration).once(\"animationEnd\", function() {\n          this.hide();\n          qx.html.Element.flush();\n        }, this);\n        return col.getAnimationHandles()[0];\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      VISIBILITY SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Marks the element as visible which means that a previously applied\n     * CSS style of display=none gets removed and the element will inserted\n     * into the DOM, when this had not already happened before.\n     *\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    show : function()\n    {\n      if (this.__visible) {\n        return this;\n      }\n\n      if (this.__element)\n      {\n        qx.html.Element._visibility[this.$$hash] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      // Must be sure that the element gets included into the DOM.\n      if (this.__parent) {\n        this.__parent._scheduleChildrenUpdate();\n      }\n\n      delete this.__visible;\n      return this;\n    },\n\n\n    /**\n     * Marks the element as hidden which means it will kept in DOM (if it\n     * is already there, but configured hidden using a CSS style of display=none).\n     *\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    hide : function()\n    {\n      if (!this.__visible) {\n        return this;\n      }\n\n      if (this.__element)\n      {\n        qx.html.Element._visibility[this.$$hash] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      this.__visible = false;\n      return this;\n    },\n\n\n    /**\n     * Whether the element is visible.\n     *\n     * Please note: This does not control the visibility or parent inclusion recursively.\n     *\n     * @return {Boolean} Returns <code>true</code> when the element is configured\n     *   to be visible.\n     */\n    isVisible : function() {\n      return this.__visible === true;\n    },\n\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Scrolls the given child element into view. Only scrolls children.\n     * Do not influence elements on top of this element.\n     *\n     * If the element is currently invisible it gets scrolled automatically\n     * at the next time it is visible again (queued).\n     *\n     * @param elem {qx.html.Element} The element to scroll into the viewport.\n     * @param align {String?null} Alignment of the element. Allowed values:\n     *   <code>left</code> or <code>right</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoViewX : function(elem, align, direct)\n    {\n      var thisEl = this.__element;\n      var childEl = elem.getDomElement();\n\n      if (direct !== false && thisEl && thisEl.offsetWidth && childEl && childEl.offsetWidth)\n      {\n        qx.bom.element.Scroll.intoViewX(childEl, thisEl, align);\n      }\n      else\n      {\n        this.__lazyScrollIntoViewX =\n        {\n          element : elem,\n          align : align\n        };\n\n        qx.html.Element._scroll[this.$$hash] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      delete this.__lazyScrollX;\n    },\n\n\n    /**\n     * Scrolls the given child element into view. Only scrolls children.\n     * Do not influence elements on top of this element.\n     *\n     * If the element is currently invisible it gets scrolled automatically\n     * at the next time it is visible again (queued).\n     *\n     * @param elem {qx.html.Element} The element to scroll into the viewport.\n     * @param align {String?null} Alignment of the element. Allowed values:\n     *   <code>top</code> or <code>bottom</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoViewY : function(elem, align, direct)\n    {\n      var thisEl = this.__element;\n      var childEl = elem.getDomElement();\n\n      if (direct !== false && thisEl && thisEl.offsetWidth && childEl && childEl.offsetWidth)\n      {\n        qx.bom.element.Scroll.intoViewY(childEl, thisEl, align);\n      }\n      else\n      {\n        this.__lazyScrollIntoViewY =\n        {\n          element : elem,\n          align : align\n        };\n\n        qx.html.Element._scroll[this.$$hash] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      delete this.__lazyScrollY;\n    },\n\n\n    /**\n     * Scrolls the element to the given left position.\n     *\n     * @param x {Integer} Horizontal scroll position\n     * @param lazy {Boolean?false} Whether the scrolling should be performed\n     *    during element flush.\n     */\n    scrollToX : function(x, lazy)\n    {\n      var thisEl = this.__element;\n      if (lazy !== true && thisEl && thisEl.offsetWidth)\n      {\n        thisEl.scrollLeft = x;\n        delete this.__lazyScrollX;\n      }\n      else\n      {\n        this.__lazyScrollX = x;\n        qx.html.Element._scroll[this.$$hash] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      delete this.__lazyScrollIntoViewX;\n    },\n\n\n    /**\n     * Get the horizontal scroll position.\n     *\n     * @return {Integer} Horizontal scroll position\n     */\n    getScrollX : function()\n    {\n      var thisEl = this.__element;\n      if (thisEl) {\n        return thisEl.scrollLeft;\n      }\n\n      return this.__lazyScrollX || 0;\n    },\n\n\n    /**\n     * Scrolls the element to the given top position.\n     *\n     * @param y {Integer} Vertical scroll position\n     * @param lazy {Boolean?false} Whether the scrolling should be performed\n     *    during element flush.\n     */\n    scrollToY : function(y, lazy)\n    {\n      var thisEl = this.__element;\n      if (lazy !== true && thisEl && thisEl.offsetWidth)\n      {\n        thisEl.scrollTop = y;\n        delete this.__lazyScrollY;\n      }\n      else\n      {\n        this.__lazyScrollY = y;\n        qx.html.Element._scroll[this.$$hash] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      delete this.__lazyScrollIntoViewY;\n    },\n\n\n    /**\n     * Get the vertical scroll position.\n     *\n     * @return {Integer} Vertical scroll position\n     */\n    getScrollY : function()\n    {\n      var thisEl = this.__element;\n      if (thisEl) {\n        return thisEl.scrollTop;\n      }\n\n      return this.__lazyScrollY || 0;\n    },\n\n\n    /**\n     * Disables browser-native scrolling\n     */\n    disableScrolling : function()\n    {\n      this.enableScrolling();\n      this.scrollToX(0);\n      this.scrollToY(0);\n      this.addListener(\"scroll\", this.__onScroll, this);\n    },\n\n\n    /**\n     * Re-enables browser-native scrolling\n     */\n    enableScrolling : function() {\n      this.removeListener(\"scroll\", this.__onScroll, this);\n    },\n\n\n    __inScroll : null,\n\n    /**\n     * Handler for the scroll-event\n     *\n     * @param e {qx.event.type.Native} scroll-event\n     */\n    __onScroll : function(e)\n    {\n      if (!this.__inScroll)\n      {\n        this.__inScroll = true;\n        this.__element.scrollTop = 0;\n        this.__element.scrollLeft = 0;\n        delete this.__inScroll;\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      TEXT SELECTION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Get the selection of the element.\n     *\n     * If the underlaying DOM element is not yet created, this methods returns\n     * a null value.\n     *\n     * @return {String|null}\n     */\n    getTextSelection : function()\n    {\n      var el = this.__element;\n      if (el) {\n        return qx.bom.Selection.get(el);\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Get the length of selection of the element.\n     *\n     * If the underlaying DOM element is not yet created, this methods returns\n     * a null value.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionLength : function()\n    {\n      var el = this.__element;\n      if (el) {\n        return qx.bom.Selection.getLength(el);\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Get the start of the selection of the element.\n     *\n     * If the underlaying DOM element is not yet created, this methods returns\n     * a null value.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionStart : function()\n    {\n      var el = this.__element;\n      if (el) {\n        return qx.bom.Selection.getStart(el);\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Get the end of the selection of the element.\n     *\n     * If the underlaying DOM element is not yet created, this methods returns\n     * a null value.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionEnd : function()\n    {\n      var el = this.__element;\n      if (el) {\n        return qx.bom.Selection.getEnd(el);\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Set the selection of the element with the given start and end value.\n     * If no end value is passed the selection will extend to the end.\n     *\n     * This method only works if the underlying DOM element is already created.\n     *\n     * @param start {Integer} start of the selection (zero based)\n     * @param end {Integer} end of the selection\n     */\n    setTextSelection : function(start, end)\n    {\n      var el = this.__element;\n      if (el) {\n        qx.bom.Selection.set(el, start, end);\n        return;\n      }\n\n      // if element not created, save the selection for flushing\n      qx.html.Element.__selection[this.toHashCode()] = {\n        element : this,\n        start : start,\n        end : end\n      };\n      qx.html.Element._scheduleFlush(\"element\");\n    },\n\n\n    /**\n     * Clears the selection of the element.\n     *\n     * This method only works if the underlying DOM element is already created.\n     *\n     */\n    clearTextSelection : function()\n    {\n      var el = this.__element;\n      if (el) {\n        qx.bom.Selection.clear(el);\n      }\n      delete qx.html.Element.__selection[this.toHashCode()];\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      FOCUS/ACTIVATE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Takes the action to process as argument and queues this action if the\n     * underlying DOM element is not yet created.\n     *\n     * @param action {String} action to queue\n     * @param args {Array} optional list of arguments for the action\n     */\n    __performAction : function(action, args)\n    {\n      var actions = qx.html.Element._actions;\n\n      actions.push({\n        type: action,\n        element: this,\n        args: args || []\n      });\n      qx.html.Element._scheduleFlush(\"element\");\n    },\n\n\n    /**\n     * Focus this element.\n     *\n     * If the underlaying DOM element is not yet created, the\n     * focus is queued for processing after the element creation.\n     *\n     */\n    focus : function() {\n      this.__performAction(\"focus\");\n    },\n\n\n    /**\n     * Mark this element to get blurred on the next flush of the queue\n     *\n     */\n    blur : function() {\n      this.__performAction(\"blur\");\n    },\n\n\n    /**\n     * Mark this element to get activated on the next flush of the queue\n     *\n     */\n    activate : function() {\n      this.__performAction(\"activate\");\n    },\n\n\n    /**\n     * Mark this element to get deactivated on the next flush of the queue\n     *\n     */\n    deactivate : function() {\n      this.__performAction(\"deactivate\");\n    },\n\n\n    /**\n     * Captures all mouse events to this element\n     *\n     * @param containerCapture {Boolean?true} If true all events originating in\n     *   the container are captured. If false events originating in the container\n     *   are not captured.\n     */\n    capture : function(containerCapture) {\n      this.__performAction(\"capture\", [containerCapture !== false]);\n    },\n\n\n    /**\n     * Releases this element from a previous {@link #capture} call\n     */\n    releaseCapture : function() {\n      this.__performAction(\"releaseCapture\");\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      STYLE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Set up the given style attribute\n     *\n     * @param key {String} the name of the style attribute\n     * @param value {var} the value\n     * @param direct {Boolean?false} Whether the value should be applied\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    setStyle : function(key, value, direct)\n    {\n      if (!this.__styleValues) {\n        this.__styleValues = {};\n      }\n\n      if (this.__styleValues[key] == value) {\n        return this;\n      }\n\n      if (value == null) {\n        delete this.__styleValues[key];\n      } else {\n        this.__styleValues[key] = value;\n      }\n\n      // Uncreated elements simply copy all data\n      // on creation. We don't need to remember any\n      // jobs. It is a simple full list copy.\n      if (this.__element)\n      {\n        // Omit queuing in direct mode\n        if (direct)\n        {\n          qx.bom.element.Style.set(this.__element, key, value);\n          return this;\n        }\n\n        // Dynamically create if needed\n        if (!this.__styleJobs) {\n          this.__styleJobs = {};\n        }\n\n        // Store job info\n        this.__styleJobs[key] = true;\n\n        // Register modification\n        qx.html.Element._modified[this.$$hash] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Convenience method to modify a set of styles at once.\n     *\n     * @param map {Map} a map where the key is the name of the property\n     *    and the value is the value to use.\n     * @param direct {Boolean?false} Whether the values should be applied\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    setStyles : function(map, direct)\n    {\n      // inline calls to \"set\" because this method is very\n      // performance critical!\n\n      var Style = qx.bom.element.Style;\n\n      if (!this.__styleValues) {\n        this.__styleValues = {};\n      }\n\n      if (this.__element)\n      {\n        // Dynamically create if needed\n        if (!this.__styleJobs) {\n          this.__styleJobs = {};\n        }\n\n        for (var key in map)\n        {\n          var value = map[key];\n          if (this.__styleValues[key] == value) {\n            continue;\n          }\n\n          if (value == null) {\n            delete this.__styleValues[key];\n          } else {\n            this.__styleValues[key] = value;\n          }\n\n          // Omit queuing in direct mode\n          if (direct)\n          {\n            Style.set(this.__element, key, value);\n            continue;\n          }\n\n          // Store job info\n          this.__styleJobs[key] = true;\n        }\n\n        // Register modification\n        qx.html.Element._modified[this.$$hash] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n      else\n      {\n        for (var key in map)\n        {\n          var value = map[key];\n          if (this.__styleValues[key] == value) {\n            continue;\n          }\n\n          if (value == null) {\n            delete this.__styleValues[key];\n          } else {\n            this.__styleValues[key] = value;\n          }\n        }\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Removes the given style attribute\n     *\n     * @param key {String} the name of the style attribute\n     * @param direct {Boolean?false} Whether the value should be removed\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    removeStyle : function(key, direct) {\n      this.setStyle(key, null, direct);\n      return this;\n    },\n\n\n    /**\n     * Get the value of the given style attribute.\n     *\n     * @param key {String} name of the style attribute\n     * @return {var} the value of the style attribute\n     */\n    getStyle : function(key) {\n      return this.__styleValues ? this.__styleValues[key] : null;\n    },\n\n\n    /**\n     * Returns a map of all styles. Do not modify the result map!\n     *\n     * @return {Map} All styles or <code>null</code> when none are configured.\n     */\n    getAllStyles : function() {\n      return this.__styleValues || null;\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      ATTRIBUTE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Set up the given attribute\n     *\n     * @param key {String} the name of the attribute\n     * @param value {var} the value\n     * @param direct {Boolean?false} Whether the value should be applied\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    setAttribute : function(key, value, direct)\n    {\n      if (!this.__attribValues) {\n        this.__attribValues = {};\n      }\n\n      if (this.__attribValues[key] == value) {\n        return this;\n      }\n\n      if (value == null) {\n        delete this.__attribValues[key];\n      } else {\n        this.__attribValues[key] = value;\n      }\n\n      // Uncreated elements simply copy all data\n      // on creation. We don't need to remember any\n      // jobs. It is a simple full list copy.\n      if (this.__element)\n      {\n        // Omit queuing in direct mode\n        if (direct)\n        {\n          qx.bom.element.Attribute.set(this.__element, key, value);\n          return this;\n        }\n\n        // Dynamically create if needed\n        if (!this.__attribJobs) {\n          this.__attribJobs = {};\n        }\n\n        // Store job info\n        this.__attribJobs[key] = true;\n\n        // Register modification\n        qx.html.Element._modified[this.$$hash] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Convenience method to modify a set of attributes at once.\n     *\n     * @param map {Map} a map where the key is the name of the property\n     *    and the value is the value to use.\n     * @param direct {Boolean?false} Whether the values should be applied\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    setAttributes : function(map, direct)\n    {\n      for (var key in map) {\n        this.setAttribute(key, map[key], direct);\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Removes the given attribute\n     *\n     * @param key {String} the name of the attribute\n     * @param direct {Boolean?false} Whether the value should be removed\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    removeAttribute : function(key, direct) {\n      return this.setAttribute(key, null, direct);\n    },\n\n\n    /**\n     * Get the value of the given attribute.\n     *\n     * @param key {String} name of the attribute\n     * @return {var} the value of the attribute\n     */\n    getAttribute : function(key) {\n      return this.__attribValues ? this.__attribValues[key] : null;\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CSS CLASS SUPPORT\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Adds a css class to the element.\n     * @param name {String} Name of the CSS class.\n     */\n    addClass : function(name) {\n      var value = ((this.getAttribute(\"class\") || \"\") + \" \" + name).trim();\n      this.setAttribute(\"class\", value);\n    },\n\n\n    /**\n     * Removes a CSS class from the current element.\n     * @param name {String} Name of the CSS class.\n     */\n    removeClass : function(name) {\n      var currentClass = this.getAttribute(\"class\");\n      if (currentClass) {\n        this.setAttribute(\"class\", (currentClass.replace(name, \"\")).trim());\n      }\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Applies a special property with the given value.\n     *\n     * This property apply routine can be easily overwritten and\n     * extended by sub classes to add new low level features which\n     * are not easily possible using styles and attributes.\n     *\n     * @param name {String} Unique property identifier\n     * @param value {var} Any valid value (depends on the property)\n     * @return {qx.html.Element} this object (for chaining support)\n     * @abstract\n     */\n    _applyProperty : function(name, value) {\n      // empty implementation\n    },\n\n\n    /**\n     * Set up the given property.\n     *\n     * @param key {String} the name of the property\n     * @param value {var} the value\n     * @param direct {Boolean?false} Whether the value should be applied\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    _setProperty : function(key, value, direct)\n    {\n      if (!this.__propertyValues) {\n        this.__propertyValues = {};\n      }\n\n      if (this.__propertyValues[key] == value) {\n        return this;\n      }\n\n      if (value == null) {\n        delete this.__propertyValues[key];\n      } else {\n        this.__propertyValues[key] = value;\n      }\n\n      // Uncreated elements simply copy all data\n      // on creation. We don't need to remember any\n      // jobs. It is a simple full list copy.\n      if (this.__element)\n      {\n        // Omit queuing in direct mode\n        if (direct)\n        {\n          this._applyProperty(key, value);\n          return this;\n        }\n\n        // Dynamically create if needed\n        if (!this.__propertyJobs) {\n          this.__propertyJobs = {};\n        }\n\n        // Store job info\n        this.__propertyJobs[key] = true;\n\n        // Register modification\n        qx.html.Element._modified[this.$$hash] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Removes the given misc\n     *\n     * @param key {String} the name of the misc\n     * @param direct {Boolean?false} Whether the value should be removed\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    _removeProperty : function(key, direct) {\n      return this._setProperty(key, null, direct);\n    },\n\n\n    /**\n     * Get the value of the given misc.\n     *\n     * @param key {String} name of the misc\n     * @return {var} the value of the misc\n     */\n    _getProperty : function(key)\n    {\n      var db = this.__propertyValues;\n      if (!db) {\n        return null;\n      }\n\n      var value = db[key];\n      return value == null ? null : value;\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds an event listener to the element.\n     *\n     * @param type {String} Name of the event\n     * @param listener {Function} Function to execute on event\n     * @param self {Object ? null} Reference to the 'this' variable inside\n     *         the event listener. When not given, the corresponding dispatcher\n     *         usually falls back to a default, which is the target\n     *         by convention. Note this is not a strict requirement, i.e.\n     *         custom dispatchers can follow a different strategy.\n     * @param capture {Boolean ? false} Whether capturing should be enabled\n     * @return {var} An opaque id, which can be used to remove the event listener\n     *         using the {@link #removeListenerById} method.\n     */\n    addListener : function(type, listener, self, capture)\n    {\n      if (this.$$disposed) {\n        return null;\n      }\n\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        var msg = \"Failed to add event listener for type '\" + type + \"'\" +\n          \" to the target '\" + this + \"': \";\n\n        this.assertString(type, msg + \"Invalid event type.\");\n        this.assertFunction(listener, msg + \"Invalid callback function\");\n\n        if (self !== undefined) {\n          this.assertObject(self, \"Invalid context for callback.\");\n        }\n\n        if (capture !== undefined) {\n          this.assertBoolean(capture, \"Invalid capture flag.\");\n        }\n      }\n\n      if (this.__element) {\n        return qx.event.Registration.addListener(this.__element, type, listener, self, capture);\n      }\n\n      if (!this.__eventValues) {\n        this.__eventValues = {};\n      }\n\n      if (capture == null) {\n        capture = false;\n      }\n\n      var unique = qx.event.Manager.getNextUniqueId();\n      var id = type + (capture ? \"|capture|\" : \"|bubble|\") + unique;\n\n      this.__eventValues[id] =\n      {\n        type : type,\n        listener : listener,\n        self : self,\n        capture : capture,\n        unique : unique\n      };\n\n      return id;\n    },\n\n\n    /**\n     * Removes an event listener from the element.\n     *\n     * @param type {String} Name of the event\n     * @param listener {Function} Function to execute on event\n     * @param self {Object} Execution context of given function\n     * @param capture {Boolean ? false} Whether capturing should be enabled\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    removeListener : function(type, listener, self, capture)\n    {\n      if (this.$$disposed) {\n        return null;\n      }\n\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        var msg = \"Failed to remove event listener for type '\" + type + \"'\" +\n          \" from the target '\" + this + \"': \";\n\n        this.assertString(type, msg + \"Invalid event type.\");\n        this.assertFunction(listener, msg + \"Invalid callback function\");\n\n        if (self !== undefined) {\n          this.assertObject(self, \"Invalid context for callback.\");\n        }\n\n        if (capture !== undefined) {\n          this.assertBoolean(capture, \"Invalid capture flag.\");\n        }\n      }\n\n      if (this.__element)\n      {\n        if (listener.$$wrapped_callback && listener.$$wrapped_callback[type + this.$$hash]) {\n          var callback = listener.$$wrapped_callback[type + this.$$hash];\n          delete listener.$$wrapped_callback[type + this.$$hash];\n          listener = callback;\n        }\n        qx.event.Registration.removeListener(this.__element, type, listener, self, capture);\n      }\n      else\n      {\n        var values = this.__eventValues;\n        var entry;\n\n        if (capture == null) {\n          capture = false;\n        }\n\n        for (var key in values)\n        {\n          entry = values[key];\n\n          // Optimized for performance: Testing references first\n          if (entry.listener === listener && entry.self === self && entry.capture === capture && entry.type === type)\n          {\n            delete values[key];\n            break;\n          }\n        }\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Removes an event listener from an event target by an id returned by\n     * {@link #addListener}\n     *\n     * @param id {var} The id returned by {@link #addListener}\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    removeListenerById : function(id)\n    {\n      if (this.$$disposed) {\n        return null;\n      }\n\n      if (this.__element) {\n        qx.event.Registration.removeListenerById(this.__element, id);\n      } else {\n        delete this.__eventValues[id];\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Check if there are one or more listeners for an event type.\n     *\n     * @param type {String} name of the event type\n     * @param capture {Boolean ? false} Whether to check for listeners of\n     *         the bubbling or of the capturing phase.\n     * @return {Boolean} Whether the object has a listener of the given type.\n     */\n    hasListener : function(type, capture)\n    {\n      if (this.$$disposed) {\n        return false;\n      }\n\n      if (this.__element) {\n        return qx.event.Registration.hasListener(this.__element, type, capture);\n      }\n\n      var values = this.__eventValues;\n      var entry;\n\n      if (capture == null) {\n        capture = false;\n      }\n\n      for (var key in values)\n      {\n        entry = values[key];\n\n        // Optimized for performance: Testing fast types first\n        if (entry.capture === capture && entry.type === type) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Serializes and returns all event listeners attached to this element\n     * @return {Map[]} an Array containing a map for each listener. The maps\n     * have the following keys:\n     * <ul>\n     *   <li><code>type</code> (String): Event name</li>\n     *   <li><code>handler</code> (Function): Callback function</li>\n     *   <li><code>self</code> (Object): The callback's context</li>\n     *   <li><code>capture</code> (Boolean): If <code>true</code>, the listener is\n     * attached to the capturing phase</li>\n     * </ul>\n     */\n    getListeners : function() {\n      if (this.$$disposed) {\n        return null;\n      }\n\n      if (this.__element) {\n        return qx.event.Registration.getManager(this.__element).serializeListeners(this.__element);\n      }\n\n      var listeners = [];\n      for (var id in this.__eventValues) {\n        var listenerData = this.__eventValues[id];\n        listeners.push({\n          type: listenerData.type,\n          handler: listenerData.listener,\n          self: listenerData.self,\n          capture: listenerData.capture\n        });\n      }\n\n      return listeners;\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics) {\n    statics.__deferredCall = new qx.util.DeferredCall(statics.flush, statics);\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCT\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    if (this.$$hash) {\n      delete qx.html.Element._modified[this.$$hash];\n      delete qx.html.Element._scroll[this.$$hash];\n    }\n\n    var el = this.__element;\n    if (el)\n    {\n      qx.event.Registration.getManager(el).removeAllListeners(el);\n      el.$$element = \"\";\n      delete el.$$elementObject;\n      el.$$widget = \"\";\n      delete el.$$widgetObject;\n    }\n\n    if (!qx.core.ObjectRegistry.inShutDown)\n    {\n      var parent = this.__parent;\n      if (parent && !parent.$$disposed) {\n        parent.remove(this);\n      }\n    }\n\n    this._disposeArray(\"__children\");\n\n    this.__attribValues = this.__styleValues = this.__eventValues =\n      this.__propertyValues = this.__attribJobs = this.__styleJobs =\n      this.__propertyJobs = this.__element = this.__parent =\n      this.__lazyScrollIntoViewX = this.__lazyScrollIntoViewY = null;\n  }\n});\n"
  ]
}