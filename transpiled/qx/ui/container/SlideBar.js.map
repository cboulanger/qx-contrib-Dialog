{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/container/SlideBar.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MRemoteChildrenHandling",
    "MRemoteLayoutHandling",
    "construct",
    "orientation",
    "scrollPane",
    "getChildControl",
    "_add",
    "flex",
    "setOrientation",
    "initOrientation",
    "addListener",
    "_onRoll",
    "properties",
    "appearance",
    "refine",
    "init",
    "check",
    "apply",
    "scrollStep",
    "themeable",
    "events",
    "scrollAnimationEnd",
    "members",
    "getChildrenContainer",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "form",
    "RepeatButton",
    "_onExecuteForward",
    "setFocusable",
    "_addAt",
    "_onExecuteBackward",
    "container",
    "Composite",
    "add",
    "scroll",
    "ScrollPane",
    "_onResize",
    "_onScroll",
    "_onScrollAnimationEnd",
    "_forwardStates",
    "barLeft",
    "barTop",
    "barRight",
    "barBottom",
    "scrollBy",
    "offset",
    "duration",
    "pane",
    "getOrientation",
    "scrollByX",
    "scrollByY",
    "scrollTo",
    "value",
    "scrollToX",
    "scrollToY",
    "_applyEnabled",
    "old",
    "name",
    "_updateArrowsEnabled",
    "_applyOrientation",
    "oldLayouts",
    "getLayout",
    "_getLayout",
    "buttonForward",
    "buttonBackward",
    "removeState",
    "addState",
    "_setLayout",
    "layout",
    "HBox",
    "setLayout",
    "VBox",
    "dispose",
    "e",
    "getPointerType",
    "delta",
    "getDelta",
    "x",
    "position",
    "getScrollX",
    "max",
    "getScrollMaxX",
    "steps",
    "parseInt",
    "stop",
    "stopMomentum",
    "y",
    "getScrollY",
    "getScrollMaxY",
    "getMomentum",
    "fireEvent",
    "content",
    "getChildren",
    "innerSize",
    "getInnerSize",
    "contentSize",
    "getBounds",
    "overflow",
    "width",
    "height",
    "_showArrows",
    "_hideArrows",
    "getScrollStep",
    "getEnabled",
    "setEnabled",
    "_showChildControl",
    "_excludeChildControl",
    "SlideBar"
  ],
  "mappings": "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",
  "file": "SlideBar.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Container, which provides scrolling in one dimension (vertical or horizontal).\n *\n * @childControl button-forward {qx.ui.form.RepeatButton} button to step forward\n * @childControl button-backward {qx.ui.form.RepeatButton} button to step backward\n * @childControl content {qx.ui.container.Composite} container to hold the content\n * @childControl scrollpane {qx.ui.core.scroll.ScrollPane} the scroll pane holds the content to enable scrolling\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   // create slide bar container\n *   slideBar = new qx.ui.container.SlideBar().set({\n *     width: 300\n *   });\n *\n *   // set layout\n *   slideBar.setLayout(new qx.ui.layout.HBox());\n *\n *   // add some widgets\n *   for (var i=0; i<10; i++)\n *   {\n *     slideBar.add((new qx.ui.core.Widget()).set({\n *       backgroundColor : (i % 2 == 0) ? \"red\" : \"blue\",\n *       width : 60\n *     }));\n *   }\n *\n *   this.getRoot().add(slideBar);\n * </pre>\n *\n * This example creates a SlideBar and add some widgets with alternating\n * background colors. Since the content is larger than the container, two\n * scroll buttons at the left and the right edge are shown.\n *\n * *External Documentation*\n *\n * <a href='http://manual.qooxdoo.org/${qxversion}/pages/widget/slidebar.html' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.container.SlideBar\",\n{\n  extend : qx.ui.core.Widget,\n\n  include :\n  [\n    qx.ui.core.MRemoteChildrenHandling,\n    qx.ui.core.MRemoteLayoutHandling\n  ],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param orientation {String?\"horizontal\"} The slide bar orientation\n   */\n  construct : function(orientation)\n  {\n    this.base(arguments);\n\n    var scrollPane = this.getChildControl(\"scrollpane\");\n    this._add(scrollPane, {flex: 1});\n\n    if (orientation != null) {\n      this.setOrientation(orientation);\n    } else {\n      this.initOrientation();\n    }\n\n    this.addListener(\"roll\", this._onRoll, this);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"slidebar\"\n    },\n\n    /** Orientation of the bar */\n    orientation :\n    {\n      check : [\"horizontal\", \"vertical\"],\n      init : \"horizontal\",\n      apply : \"_applyOrientation\"\n    },\n\n    /** The number of pixels to scroll if the buttons are pressed */\n    scrollStep :\n    {\n      check : \"Integer\",\n      init : 15,\n      themeable : true\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fired on scroll animation end invoked by 'scroll*' methods. */\n    scrollAnimationEnd : \"qx.event.type.Event\"\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    getChildrenContainer : function() {\n      return this.getChildControl(\"content\");\n    },\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"button-forward\":\n          control = new qx.ui.form.RepeatButton;\n          control.addListener(\"execute\", this._onExecuteForward, this);\n          control.setFocusable(false);\n          this._addAt(control, 2);\n          break;\n\n        case \"button-backward\":\n          control = new qx.ui.form.RepeatButton;\n          control.addListener(\"execute\", this._onExecuteBackward, this);\n          control.setFocusable(false);\n          this._addAt(control, 0);\n          break;\n\n        case \"content\":\n          control = new qx.ui.container.Composite();\n\n          this.getChildControl(\"scrollpane\").add(control);\n          break;\n\n        case \"scrollpane\":\n          control = new qx.ui.core.scroll.ScrollPane();\n          control.addListener(\"update\", this._onResize, this);\n          control.addListener(\"scrollX\", this._onScroll, this);\n          control.addListener(\"scrollY\", this._onScroll, this);\n          control.addListener(\"scrollAnimationEnd\", this._onScrollAnimationEnd, this);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates :\n    {\n      barLeft : true,\n      barTop : true,\n      barRight : true,\n      barBottom : true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC SCROLL API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Scrolls the element's content by the given amount.\n     *\n     * @param offset {Integer?0} Amount to scroll\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollBy : function(offset, duration)\n    {\n      var pane = this.getChildControl(\"scrollpane\");\n      if (this.getOrientation() === \"horizontal\") {\n        pane.scrollByX(offset, duration);\n      } else {\n        pane.scrollByY(offset, duration);\n      }\n    },\n\n\n    /**\n     * Scrolls the element's content to the given coordinate\n     *\n     * @param value {Integer} The position to scroll to.\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollTo : function(value, duration)\n    {\n      var pane = this.getChildControl(\"scrollpane\");\n      if (this.getOrientation() === \"horizontal\") {\n        pane.scrollToX(value, duration);\n      } else {\n        pane.scrollToY(value, duration);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n    // overridden\n    _applyEnabled : function(value, old, name) {\n      this.base(arguments, value, old, name);\n      this._updateArrowsEnabled();\n    },\n\n\n    // property apply\n    _applyOrientation : function(value, old)\n    {\n      var oldLayouts = [this.getLayout(), this._getLayout()];\n      var buttonForward = this.getChildControl(\"button-forward\");\n      var buttonBackward = this.getChildControl(\"button-backward\");\n\n      // old can also be null, so we have to check both explicitly to set\n      // the states correctly.\n      if (old == \"vertical\" && value == \"horizontal\")\n      {\n        buttonForward.removeState(\"vertical\");\n        buttonBackward.removeState(\"vertical\");\n        buttonForward.addState(\"horizontal\");\n        buttonBackward.addState(\"horizontal\");\n      }\n      else if (old == \"horizontal\" && value == \"vertical\")\n      {\n        buttonForward.removeState(\"horizontal\");\n        buttonBackward.removeState(\"horizontal\");\n        buttonForward.addState(\"vertical\");\n        buttonBackward.addState(\"vertical\");\n      }\n\n\n      if (value == \"horizontal\")\n      {\n        this._setLayout(new qx.ui.layout.HBox());\n        this.setLayout(new qx.ui.layout.HBox());\n      }\n      else\n      {\n        this._setLayout(new qx.ui.layout.VBox());\n        this.setLayout(new qx.ui.layout.VBox());\n      }\n\n      if (oldLayouts[0]) {\n        oldLayouts[0].dispose();\n      }\n\n      if (oldLayouts[1]) {\n        oldLayouts[1].dispose();\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Scrolls pane on roll events\n     *\n     * @param e {qx.event.type.Roll} the roll event\n     */\n    _onRoll : function(e)\n    {\n      // only wheel and touch\n      if (e.getPointerType() == \"mouse\") {\n        return;\n      }\n\n      var delta = 0;\n      var pane = this.getChildControl(\"scrollpane\");\n      if (this.getOrientation() === \"horizontal\") {\n        delta = e.getDelta().x;\n\n        var position = pane.getScrollX();\n        var max = pane.getScrollMaxX();\n        var steps = parseInt(delta);\n\n        // pass the event to the parent if both scrollbars are at the end\n        if (!(\n          steps < 0 && position <= 0 ||\n          steps > 0 && position >= max ||\n          delta == 0)\n        ) {\n          e.stop();\n        } else {\n          e.stopMomentum();\n        }\n      } else {\n        delta = e.getDelta().y;\n\n        var position = pane.getScrollY();\n        var max = pane.getScrollMaxY();\n        var steps = parseInt(delta);\n\n        // pass the event to the parent if both scrollbars are at the end\n        if (!(\n          steps < 0 && position <= 0 ||\n          steps > 0 && position >= max ||\n          delta == 0\n        )) {\n          e.stop();\n        } else {\n          e.stopMomentum();\n        }\n      }\n      this.scrollBy(parseInt(delta, 10));\n\n      // block all momentum scrolling\n      if (e.getMomentum()) {\n        e.stop();\n      }\n    },\n\n\n    /**\n     * Update arrow enabled state after scrolling\n     */\n    _onScroll : function() {\n      this._updateArrowsEnabled();\n    },\n\n\n    /**\n     * Handler to fire the 'scrollAnimationEnd' event.\n     */\n    _onScrollAnimationEnd : function() {\n      this.fireEvent(\"scrollAnimationEnd\");\n    },\n\n\n    /**\n     * Listener for resize event. This event is fired after the\n     * first flush of the element which leads to another queuing\n     * when the changes modify the visibility of the scroll buttons.\n     *\n     * @param e {Event} Event object\n     */\n    _onResize : function(e)\n    {\n      var content = this.getChildControl(\"scrollpane\").getChildren()[0];\n      if (!content) {\n        return;\n      }\n\n      var innerSize = this.getInnerSize();\n      var contentSize = content.getBounds();\n\n      var overflow = (this.getOrientation() === \"horizontal\") ?\n        contentSize.width > innerSize.width :\n        contentSize.height > innerSize.height;\n\n      if (overflow) {\n        this._showArrows();\n        this._updateArrowsEnabled();\n      } else {\n        this._hideArrows();\n      }\n    },\n\n\n    /**\n     * Scroll handler for left scrolling\n     *\n     */\n    _onExecuteBackward : function() {\n      this.scrollBy(-this.getScrollStep());\n    },\n\n\n    /**\n     * Scroll handler for right scrolling\n     *\n     */\n    _onExecuteForward : function() {\n      this.scrollBy(this.getScrollStep());\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      UTILITIES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Update arrow enabled state\n     */\n    _updateArrowsEnabled : function()\n    {\n      // set the disables state directly because we are overriding the\n      // inheritance\n      if (!this.getEnabled()) {\n        this.getChildControl(\"button-backward\").setEnabled(false);\n        this.getChildControl(\"button-forward\").setEnabled(false);\n        return;\n      }\n\n      var pane = this.getChildControl(\"scrollpane\");\n\n      if (this.getOrientation() === \"horizontal\")\n      {\n        var position = pane.getScrollX();\n        var max = pane.getScrollMaxX();\n      }\n      else\n      {\n        var position = pane.getScrollY();\n        var max = pane.getScrollMaxY();\n      }\n\n      this.getChildControl(\"button-backward\").setEnabled(position > 0);\n      this.getChildControl(\"button-forward\").setEnabled(position < max);\n    },\n\n\n    /**\n     * Show the arrows (Called from resize event)\n     *\n     */\n    _showArrows : function()\n    {\n      this._showChildControl(\"button-forward\");\n      this._showChildControl(\"button-backward\");\n    },\n\n\n    /**\n     * Hide the arrows (Called from resize event)\n     *\n     */\n    _hideArrows : function()\n    {\n      this._excludeChildControl(\"button-forward\");\n      this._excludeChildControl(\"button-backward\");\n\n      this.scrollTo(0);\n    }\n  }\n\n});\n"
  ]
}