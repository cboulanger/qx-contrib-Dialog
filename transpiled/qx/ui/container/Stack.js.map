{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/container/Stack.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "form",
    "IField",
    "ISingleSelection",
    "include",
    "MSingleSelectionHandling",
    "MChildrenHandling",
    "construct",
    "_setLayout",
    "layout",
    "Grow",
    "addListener",
    "__onChangeSelection",
    "properties",
    "dynamic",
    "check",
    "init",
    "apply",
    "members",
    "_applyDynamic",
    "value",
    "children",
    "_getChildren",
    "selected",
    "getSelection",
    "child",
    "i",
    "l",
    "length",
    "exclude",
    "hide",
    "_getItems",
    "getChildren",
    "_isAllowEmptySelection",
    "_isItemSelectable",
    "item",
    "e",
    "old",
    "getOldData",
    "getData",
    "isDynamic",
    "show",
    "_afterAddChild",
    "setSelection",
    "_afterRemoveChild",
    "first",
    "resetSelection",
    "previous",
    "go",
    "_indexOf",
    "prev",
    "next",
    "container",
    "Stack"
  ],
  "mappings": "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",
  "file": "Stack.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Christian Hagendorn (chris_schmidt)\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n/**\n * The stack container puts its child widgets on top of each other and only the\n * topmost widget is visible.\n *\n * This is used e.g. in the tab view widget. Which widget is visible can be\n * controlled by using the {@link #getSelection} method.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   // create stack container\n *   var stack = new qx.ui.container.Stack();\n *\n *   // add some children\n *   stack.add(new qx.ui.core.Widget().set({\n *    backgroundColor: \"red\"\n *   }));\n *   stack.add(new qx.ui.core.Widget().set({\n *    backgroundColor: \"green\"\n *   }));\n *   stack.add(new qx.ui.core.Widget().set({\n *    backgroundColor: \"blue\"\n *   }));\n *\n *   // select green widget\n *   stack.setSelection([stack.getChildren()[1]]);\n *\n *   this.getRoot().add(stack);\n * </pre>\n *\n * This example creates an stack with three children. Only the selected \"green\"\n * widget is visible.\n *\n * *External Documentation*\n *\n * <a href='http://manual.qooxdoo.org/${qxversion}/pages/widget/stack.html' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.container.Stack\",\n{\n  extend : qx.ui.core.Widget,\n  implement : [\n    qx.ui.form.IField,\n    qx.ui.core.ISingleSelection\n  ],\n  include : [\n    qx.ui.core.MSingleSelectionHandling,\n    qx.ui.core.MChildrenHandling\n  ],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this._setLayout(new qx.ui.layout.Grow);\n\n    this.addListener(\"changeSelection\", this.__onChangeSelection, this);\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * Whether the size of the widget depends on the selected child. When\n     * disabled (default) the size is configured to the largest child.\n     */\n    dynamic :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyDynamic\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n\n  members :\n  {\n    // property apply\n    _applyDynamic : function(value)\n    {\n      var children = this._getChildren();\n      var selected = this.getSelection()[0];\n      var child;\n\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n\n        if (child != selected)\n        {\n          if (value) {\n            children[i].exclude();\n          } else {\n            children[i].hide();\n          }\n        }\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS FOR SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Returns the widget for the selection.\n     * @return {qx.ui.core.Widget[]} Widgets to select.\n     */\n    _getItems : function() {\n      return this.getChildren();\n    },\n\n    /**\n     * Returns if the selection could be empty or not.\n     *\n     * @return {Boolean} <code>true</code> If selection could be empty,\n     *    <code>false</code> otherwise.\n     */\n    _isAllowEmptySelection : function() {\n      return true;\n    },\n\n    /**\n     * Returns whether the given item is selectable.\n     *\n     * @param item {qx.ui.core.Widget} The item to be checked\n     * @return {Boolean} Whether the given item is selectable\n     */\n    _isItemSelectable : function(item) {\n      return true;\n    },\n\n    /**\n     * Event handler for <code>changeSelection</code>.\n     *\n     * Shows the new selected widget and hide the old one.\n     *\n     * @param e {qx.event.type.Data} Data event.\n     */\n    __onChangeSelection : function(e)\n    {\n      var old = e.getOldData()[0];\n      var value = e.getData()[0];\n\n      if (old)\n      {\n        if (this.isDynamic()) {\n          old.exclude();\n        } else {\n          old.hide();\n        }\n      }\n\n      if (value) {\n        value.show();\n      }\n    },\n\n\n    //overridden\n    _afterAddChild : function(child) {\n      var selected = this.getSelection()[0];\n\n      if (!selected) {\n        this.setSelection([child]);\n      } else if (selected !== child) {\n        if (this.isDynamic()) {\n          child.exclude();\n        } else {\n          child.hide();\n        }\n      }\n    },\n\n\n    //overridden\n    _afterRemoveChild : function(child) {\n      if (this.getSelection()[0] === child) {\n        var first = this._getChildren()[0];\n\n        if (first) {\n          this.setSelection([first]);\n        } else {\n          this.resetSelection();\n        }\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Go to the previous child in the children list.\n     */\n    previous : function()\n    {\n      var selected = this.getSelection()[0];\n      var go = this._indexOf(selected)-1;\n      var children = this._getChildren();\n\n      if (go < 0) {\n        go = children.length - 1;\n      }\n\n      var prev = children[go];\n      this.setSelection([prev]);\n    },\n\n    /**\n     * Go to the next child in the children list.\n     */\n    next : function()\n    {\n      var selected = this.getSelection()[0];\n      var go = this._indexOf(selected)+1;\n      var children = this._getChildren();\n\n      var next = children[go] || children[0];\n\n      this.setSelection([next]);\n    }\n  }\n});\n"
  ]
}