{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/root/Inline.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "root",
    "Abstract",
    "include",
    "core",
    "MLayoutHandling",
    "construct",
    "el",
    "dynamicX",
    "dynamicY",
    "assertElement",
    "__elem",
    "style",
    "overflow",
    "textAlign",
    "__dynX",
    "__dynY",
    "__initDynamicMode",
    "_setLayout",
    "layout",
    "Basic",
    "queue",
    "Layout",
    "add",
    "FocusHandler",
    "getInstance",
    "connectTo",
    "Environment",
    "get",
    "setKeepFocus",
    "window",
    "dom",
    "Node",
    "getWindow",
    "event",
    "Registration",
    "addListener",
    "_onWindowResize",
    "getContentElement",
    "setStyle",
    "members",
    "elementDimensions",
    "bom",
    "element",
    "Dimension",
    "getSize",
    "width",
    "Error",
    "height",
    "Style",
    "set",
    "_onResize",
    "_createContentElement",
    "rootEl",
    "document",
    "createElement",
    "appendChild",
    "html",
    "Root",
    "position",
    "connectWidget",
    "Timer",
    "once",
    "e",
    "fireEvent",
    "data",
    "getData",
    "oldWidth",
    "oldHeight",
    "popup",
    "Manager",
    "hideAll",
    "menu",
    "_computeSizeHint",
    "dynX",
    "dynY",
    "hint",
    "getContentWidth",
    "minWidth",
    "maxWidth",
    "getContentHeight",
    "minHeight",
    "maxHeight",
    "defer",
    "statics",
    "remap",
    "destruct",
    "removeListener",
    "Inline"
  ],
  "mappings": "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",
  "file": "Inline.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Alexander Steitz (aback)\n\n************************************************************************ */\n\n/**\n * This classes could be used to insert qooxdoo islands into existing\n * web pages. You can use the isles to place any qooxdoo powered widgets\n * inside a layout made using traditional HTML markup and CSS.\n *\n * The size of the widget in each dimension can either be determined by the\n * size hint of the inline's children or by the size of the root DOM element. If\n * <code>dynamicX</code>/<code>dynamicY</code> is true the width/height of the DOM\n * element is used.\n *\n * This class uses {@link qx.ui.layout.Basic} as default layout. The layout\n * can be changed using the {@link #setLayout} method.\n *\n * To position popups and tooltips please have a look at {@link qx.ui.root.Page}.\n *\n * @use(qx.event.handler.ElementResize)\n * @ignore(qx.ui.popup, qx.ui.popup.Manager.*)\n * @ignore(qx.ui.menu, qx.ui.menu.Manager.*)\n */\nqx.Class.define(\"qx.ui.root.Inline\",\n{\n  extend : qx.ui.root.Abstract,\n  include : [qx.ui.core.MLayoutHandling],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param el {Element} DOM element to use as isle for qooxdoo content. Please\n   *    note that existing content gets removed on the first layout flush.\n   * @param dynamicX {Boolean} If <code>true</code> the widget's width is\n   *    determined by the DOM element's width. Otherwise the children's size hint\n   *    is used.\n   * @param dynamicY {Boolean} If <code>true</code> the widget's height is\n   *    determined by the DOM element's height. Otherwise the children's size hint\n   *    is used.\n   */\n  construct : function(el, dynamicX, dynamicY)\n  {\n    // check the parameter\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      this.assertElement(el, \"Please use a DOM element to create an inline root.\");\n    }\n\n    // Temporary storage of element to use\n    this.__elem = el;\n\n    // Avoid any problems with dynamic resizing\n    el.style.overflow = \"hidden\";\n\n    // Avoid any problems with broken layout\n    el.style.textAlign = \"left\";\n\n    this.__dynX = dynamicX || false;\n    this.__dynY = dynamicY || false;\n    this.__initDynamicMode();\n\n    this.base(arguments);\n\n    // Use static layout\n    this._setLayout(new qx.ui.layout.Basic());\n\n    // Directly schedule layout for root element\n    qx.ui.core.queue.Layout.add(this);\n\n    // Register as root\n    qx.ui.core.FocusHandler.getInstance().connectTo(this);\n\n    // Avoid the automatically scroll in to view.\n    // See http://bugzilla.qooxdoo.org/show_bug.cgi?id=3236 for details.\n    if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\")) {\n      this.setKeepFocus(true);\n    }\n\n    // Resize handling for the window\n    var window = qx.dom.Node.getWindow(el);\n    qx.event.Registration.addListener(window, \"resize\", this._onWindowResize, this);\n\n    // quick fix for [BUG #7680]\n    this.getContentElement().setStyle(\"-webkit-backface-visibility\", \"hidden\");\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __dynX : false,\n    __dynY : false,\n    __elem : null,\n\n\n    /**\n     * Performs several checks for dynamic mode and adds the \"resize\" listener\n     */\n    __initDynamicMode : function()\n    {\n      if (this.__dynX || this.__dynY)\n      {\n        // Check the DOM element for an usable width and height\n        var elementDimensions = qx.bom.element.Dimension.getSize(this.__elem);\n\n        if (this.__dynX && elementDimensions.width < 1) {\n          throw new Error(\"The root element \" + this.__elem + \" of \" + this +\n            \" needs a width when its width size should be used!\");\n        }\n\n        if (this.__dynY)\n        {\n          if (elementDimensions.height < 1) {\n            throw new Error(\"The root element \" + this.__elem + \" of \" + this +\n            \" needs a height when its height size should be used!\");\n          }\n\n          // check for implicit height. Set the height explicit to prevent that\n          // the element grows indefinitely\n          if (elementDimensions.height >= 1 &&\n              qx.bom.element.Style.get(this.__elem, \"height\", 3) == \"\") {\n            qx.bom.element.Style.set(this.__elem, \"height\", elementDimensions.height + \"px\");\n          }\n        }\n\n        qx.event.Registration.addListener(this.__elem, \"resize\", this._onResize, this);\n      }\n    },\n\n\n    // overridden\n    _createContentElement : function()\n    {\n      var el = this.__elem;\n\n      if (this.__dynX || this.__dynY)\n      {\n        var rootEl = document.createElement(\"div\");\n        el.appendChild(rootEl);\n      } else {\n        rootEl = el;\n      }\n\n      var root = new qx.html.Root(rootEl);\n\n      // Make relative\n      rootEl.style.position = \"relative\";\n\n      // Store reference to the widget in the DOM element.\n      root.connectWidget(this);\n\n      // fire event asynchronously, otherwise the browser will fire the event\n      // too early and no listener will be informed since they're not added\n      // at this time\n      qx.event.Timer.once(function(e) {\n        this.fireEvent(\"appear\");\n      }, this, 0);\n\n      return root;\n    },\n\n\n    /**\n     * Listener for the element's resize event\n     *\n     * @param e {qx.event.type.Event} Event object\n     */\n    _onResize : function(e)\n    {\n      var data = e.getData();\n      if (\n        (data.oldWidth !== data.width) && this.__dynX ||\n        (data.oldHeight !== data.height) && this.__dynY\n      ) {\n        qx.ui.core.queue.Layout.add(this);\n      }\n    },\n\n\n    /**\n     * Listener for the window's resize event.\n     */\n    _onWindowResize : function() {\n      // close all popups\n      if (qx.ui.popup && qx.ui.popup.Manager) {\n        qx.ui.popup.Manager.getInstance().hideAll();\n      }\n\n      // close all menus\n      if (qx.ui.menu && qx.ui.menu.Manager) {\n        qx.ui.menu.Manager.getInstance().hideAll();\n      }\n    },\n\n\n    // overridden\n    _computeSizeHint : function()\n    {\n      var dynX = this.__dynX;\n      var dynY = this.__dynY;\n\n      if (!dynX || !dynY) {\n        var hint = this.base(arguments);\n      } else {\n        hint = {};\n      }\n\n      var Dimension = qx.bom.element.Dimension;\n\n      if (dynX)\n      {\n        var width = Dimension.getContentWidth(this.__elem);\n        hint.width = width;\n        hint.minWidth = width;\n        hint.maxWidth = width;\n      }\n\n      if (dynY)\n      {\n        var height = Dimension.getContentHeight(this.__elem);\n        hint.height = height;\n        hint.minHeight = height;\n        hint.maxHeight = height;\n      }\n\n      return hint;\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics, members) {\n    qx.ui.core.MLayoutHandling.remap(members);\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCT\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    qx.event.Registration.removeListener(this.__elem, \"resize\", this._onResize, this);\n    this.__elem = null;\n  }\n});\n"
  ]
}