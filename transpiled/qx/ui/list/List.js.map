{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/list/List.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "core",
    "Scroller",
    "include",
    "selection",
    "MModel",
    "implement",
    "data",
    "controller",
    "ISelection",
    "construct",
    "model",
    "_init",
    "__defaultGroups",
    "Array",
    "initGroups",
    "initModel",
    "initItemHeight",
    "events",
    "properties",
    "appearance",
    "refine",
    "init",
    "focusable",
    "width",
    "height",
    "check",
    "apply",
    "event",
    "nullable",
    "deferredInit",
    "itemHeight",
    "themeable",
    "groupItemHeight",
    "labelPath",
    "iconPath",
    "groupLabelPath",
    "labelOptions",
    "iconOptions",
    "groupLabelOptions",
    "delegate",
    "autoGrouping",
    "groups",
    "variableItemHeight",
    "members",
    "_background",
    "_provider",
    "_layer",
    "__lookupTable",
    "__lookupTableForGroup",
    "__groupHashMap",
    "__groupStringsUsed",
    "__groupObjectsUsed",
    "__defaultGroupUsed",
    "__deferredLayerUpdate",
    "refresh",
    "__buildUpLookupTable",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "layer",
    "Row",
    "list",
    "provider",
    "WidgetProvider",
    "getPane",
    "addListener",
    "_onResize",
    "_initBackground",
    "_initLayer",
    "getChildControl",
    "addLayer",
    "createLayer",
    "_onLayerUpdated",
    "_getDataFromRow",
    "row",
    "getModel",
    "_isGroup",
    "getGroups",
    "getItem",
    "_lookupGroup",
    "_lookup",
    "_getLookupTable",
    "indexOf",
    "_reverseLookup",
    "index",
    "_getSelectables",
    "_applyModel",
    "value",
    "old",
    "_onModelChange",
    "removeListener",
    "_applyRowHeight",
    "getRowConfig",
    "setDefaultItemSize",
    "_applyGroupRowHeight",
    "__updateGroupRowHeight",
    "_applyLabelPath",
    "setLabelPath",
    "_applyIconPath",
    "setIconPath",
    "_applyGroupLabelPath",
    "setGroupLabelPath",
    "_applyLabelOptions",
    "setLabelOptions",
    "_applyIconOptions",
    "setIconOptions",
    "_applyGroupLabelOptions",
    "setGroupLabelOptions",
    "_applyDelegate",
    "setDelegate",
    "_applyVariableItemHeight",
    "_setRowItemSize",
    "resetItemSizes",
    "fullUpdate",
    "e",
    "getColumnConfig",
    "setItemSize",
    "getData",
    "removeBindings",
    "_applyDefaultSelection",
    "type",
    "Data",
    "fireDataEvent",
    "getOldData",
    "isVariableItemHeight",
    "util",
    "DeferredCall",
    "schedule",
    "__updateRowCount",
    "setItemCount",
    "length",
    "rc",
    "gh",
    "getGroupItemHeight",
    "i",
    "l",
    "isAutoGrouping",
    "removeAll",
    "_runDelegateFilter",
    "_runDelegateSorter",
    "_runDelegateGroup",
    "_updateSelection",
    "filter",
    "Delegate",
    "getMethod",
    "getDelegate",
    "push",
    "sorter",
    "sort",
    "a",
    "b",
    "groupMethod",
    "item",
    "group",
    "__addGroup",
    "__createLookupFromGroup",
    "name",
    "__getUniqueGroupName",
    "__checkGroupStructure",
    "result",
    "getLength",
    "key",
    "groupMembers",
    "k",
    "lang",
    "Type",
    "isString",
    "Error",
    "rowConfig",
    "firstRow",
    "getFirstRow",
    "lastRow",
    "getRowSizes",
    "widget",
    "getRenderedCellWidget",
    "getSizeHint",
    "destruct",
    "_disposeObjects",
    "pane",
    "dispose",
    "List"
  ],
  "mappings": "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",
  "file": "List.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * The <code>qx.ui.list.List</code> is based on the virtual infrastructure and\n * supports filtering, sorting, grouping, single selection, multi selection,\n * data binding and custom rendering.\n *\n * Using the virtual infrastructure has considerable advantages when there is a\n * huge amount of model items to render because the virtual infrastructure only\n * creates widgets for visible items and reuses them. This saves both creation\n * time and memory.\n *\n * With the {@link qx.ui.list.core.IListDelegate} interface it is possible\n * to configure the list's behavior (item and group renderer configuration,\n * filtering, sorting, grouping, etc.).\n *\n * Here's an example of how to use the widget:\n * <pre class=\"javascript\">\n * //create the model data\n * var rawData = [];\n * for (var i = 0; i < 2500; i++) {\n *  rawData[i] = \"Item No \" + i;\n * }\n * var model = qx.data.marshal.Json.createModel(rawData);\n *\n * //create the list\n * var list = new qx.ui.list.List(model);\n *\n * //configure the lists's behavior\n * var delegate = {\n *   sorter : function(a, b) {\n *     return a > b ? 1 : a < b ? -1 : 0;\n *   }\n * };\n * list.setDelegate(delegate);\n *\n * //Pre-Select \"Item No 20\"\n * list.getSelection().push(model.getItem(20));\n *\n * //log selection changes\n * list.getSelection().addListener(\"change\", function(e) {\n *   this.debug(\"Selection: \" + list.getSelection().getItem(0));\n * }, this);\n * </pre>\n *\n * @childControl row-layer {qx.ui.virtual.layer.Row} layer for all rows\n */\nqx.Class.define(\"qx.ui.list.List\",\n{\n  extend : qx.ui.virtual.core.Scroller,\n  include : [qx.ui.virtual.selection.MModel],\n  implement : qx.data.controller.ISelection,\n\n  /**\n   * Creates the <code>qx.ui.list.List</code> with the passed model.\n   *\n   * @param model {qx.data.IListData|null?} model for the list.\n   */\n  construct : function(model)\n  {\n    this.base(arguments, 0, 1, 20, 100);\n\n    this._init();\n\n    this.__defaultGroups = new qx.data.Array();\n    this.initGroups(this.__defaultGroups);\n\n    if(model != null) {\n      this.initModel(model);\n    }\n\n    this.initItemHeight();\n  },\n\n\n  events :\n  {\n    /**\n     * Fired when the length of {@link #model} changes.\n     */\n    \"changeModelLength\" : \"qx.event.type.Data\"\n  },\n\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"virtual-list\"\n    },\n\n\n    // overridden\n    focusable :\n    {\n      refine : true,\n      init : true\n    },\n\n\n    // overridden\n    width :\n    {\n      refine : true,\n      init : 100\n    },\n\n\n    // overridden\n    height :\n    {\n      refine : true,\n      init : 200\n    },\n\n\n    /** Data array containing the data which should be shown in the list. */\n    model :\n    {\n      check : \"qx.data.IListData\",\n      apply : \"_applyModel\",\n      event: \"changeModel\",\n      nullable : true,\n      deferredInit : true\n    },\n\n\n    /** Default item height */\n    itemHeight :\n    {\n      check : \"Integer\",\n      init : 25,\n      apply : \"_applyRowHeight\",\n      themeable : true\n    },\n\n\n    /** Group item height */\n    groupItemHeight :\n    {\n      check : \"Integer\",\n      init : null,\n      nullable : true,\n      apply : \"_applyGroupRowHeight\",\n      themeable : true\n    },\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * displayed as a label. This is only needed if objects are stored in the\n     * model.\n     */\n    labelPath :\n    {\n      check: \"String\",\n      apply: \"_applyLabelPath\",\n      nullable: true\n    },\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * displayed as an icon. This is only needed if objects are stored in the\n     * model and icons should be displayed.\n     */\n    iconPath :\n    {\n      check: \"String\",\n      apply: \"_applyIconPath\",\n      nullable: true\n    },\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * displayed as a group label. This is only needed if objects are stored in the\n     * model.\n     */\n    groupLabelPath :\n    {\n      check: \"String\",\n      apply: \"_applyGroupLabelPath\",\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    labelOptions :\n    {\n      apply: \"_applyLabelOptions\",\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    iconOptions :\n    {\n      apply: \"_applyIconOptions\",\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the group label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    groupLabelOptions :\n    {\n      apply: \"_applyGroupLabelOptions\",\n      nullable: true\n    },\n\n\n    /**\n     * Delegation object which can have one or more functions defined by the\n     * {@link qx.ui.list.core.IListDelegate} interface.\n     */\n    delegate :\n    {\n      apply: \"_applyDelegate\",\n      event: \"changeDelegate\",\n      init: null,\n      nullable: true\n    },\n\n\n    /**\n     * Indicates that the list is managing the {@link #groups} automatically.\n     */\n    autoGrouping :\n    {\n      check: \"Boolean\",\n      init: true\n    },\n\n\n    /**\n     * Contains all groups for data binding, but do only manipulate the array\n     * when the {@link #autoGrouping} is set to <code>false</code>.\n     */\n    groups :\n    {\n      check: \"qx.data.Array\",\n      event: \"changeGroups\",\n      nullable: false,\n      deferredInit: true\n    },\n\n\n    /** \n     * Render list items with variable height, \n     * calculated from the individual item size. \n     */\n    variableItemHeight :\n    {\n      check : \"Boolean\",\n      apply : \"_applyVariableItemHeight\",\n      nullable : false,\n      init : true\n    }\n  },\n\n\n  members :\n  {\n    /** @type {qx.ui.virtual.layer.Row} background renderer */\n    _background : null,\n\n\n    /** @type {qx.ui.list.provider.IListProvider} provider for cell rendering */\n    _provider : null,\n\n\n    /** @type {qx.ui.virtual.layer.Abstract} layer which contains the items. */\n    _layer : null,\n\n\n    /**\n     * @type {Array} lookup table to get the model index from a row. To get the\n     *   correct value after applying filter, sorter, group.\n     *\n     * Note the value <code>-1</code> indicates that the value is a group item.\n     */\n    __lookupTable : null,\n\n\n    /** @type {Array} lookup table for getting the group index from the row */\n    __lookupTableForGroup : null,\n\n\n    /**\n     * @type {Map} contains all groups with the items as children. The key is\n     *   the group name and the value is an <code>Array</code> containing each\n     *   item's model index.\n     */\n    __groupHashMap : null,\n\n\n    /**\n     * @type {Boolean} indicates when one or more <code>String</code> are used for grouping.\n     */\n    __groupStringsUsed : false,\n\n\n    /**\n     * @type {Boolean} indicates when one or more <code>Object</code> are used for grouping.\n     */\n    __groupObjectsUsed : false,\n\n\n    /**\n     * @type {Boolean} indicates when a default group is used for grouping.\n     */\n    __defaultGroupUsed : false,\n\n    __defaultGroups : null,\n\n    __deferredLayerUpdate : null,\n\n\n    /**\n     * Trigger a rebuild from the internal data structure.\n     */\n    refresh : function() {\n      this.__buildUpLookupTable();\n    },\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"row-layer\" :\n          control = new qx.ui.virtual.layer.Row(null, null);\n          break;\n      }\n      return control || this.base(arguments, id);\n    },\n\n\n    /**\n     * Initializes the virtual list.\n     */\n    _init : function()\n    {\n      this._provider = new qx.ui.list.provider.WidgetProvider(this);\n\n      this.__lookupTable = [];\n      this.__lookupTableForGroup = [];\n      this.__groupHashMap = {};\n      this.__groupStringsUsed = false;\n      this.__groupObjectsUsed = false;\n      this.__defaultGroupUsed = false;\n\n      this.getPane().addListener(\"resize\", this._onResize, this);\n\n      this._initBackground();\n      this._initLayer();\n    },\n\n\n    /**\n     * Initializes the background renderer.\n     */\n    _initBackground : function()\n    {\n      this._background = this.getChildControl(\"row-layer\");\n      this.getPane().addLayer(this._background);\n    },\n\n\n    /**\n     * Initializes the layer for rendering.\n     */\n    _initLayer : function()\n    {\n      this._layer = this._provider.createLayer();\n      this._layer.addListener(\"updated\", this._onLayerUpdated, this);\n      this.getPane().addLayer(this._layer);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Returns the model data for the given row.\n     *\n     * @param row {Integer} row to get data for.\n     * @return {var|null} the row's model data.\n     */\n    _getDataFromRow : function(row) {\n      var data = null;\n\n      var model = this.getModel();\n      if (model == null) {\n        return null;\n      }\n\n      if (this._isGroup(row)) {\n        data = this.getGroups().getItem(this._lookupGroup(row));\n      } else {\n        data = model.getItem(this._lookup(row));\n      }\n\n      if (data != null) {\n        return data;\n      } else {\n        return null;\n      }\n    },\n\n\n    /**\n     * Return the internal lookup table. But do not manipulate the\n     * lookup table!\n     *\n     * @return {Array} The internal lookup table.\n     */\n    _getLookupTable : function() {\n      return this.__lookupTable;\n    },\n\n\n    /**\n     * Performs a lookup from row to model index.\n     *\n     * @param row {Number} The row to look at.\n     * @return {Number} The model index or\n     *   <code>-1</code> if the row is a group item.\n     */\n    _lookup : function(row) {\n      return this.__lookupTable[row];\n    },\n\n\n    /**\n     * Performs a lookup from row to group index.\n     *\n     * @param row {Number} The row to look at.\n     * @return {Number} The group index or\n     *   <code>-1</code> if the row is a not a group item.\n     */\n    _lookupGroup : function(row) {\n      return this.__lookupTableForGroup.indexOf(row);\n    },\n\n\n    /**\n     * Performs a lookup from model index to row.\n     *\n     * @param index {Number} The index to look at.\n     * @return {Number} The row or <code>-1</code>\n     *  if the index is not a model index.\n     */\n    _reverseLookup : function(index) {\n      if (index < 0) {\n        return -1;\n      }\n      return this.__lookupTable.indexOf(index);\n    },\n\n\n    /**\n     * Checks if the passed row is a group or an item.\n     *\n     * @param row {Integer} row to check.\n     * @return {Boolean} <code>true</code> if the row is a group element,\n     *  <code>false</code> if the row is an item element.\n     */\n    _isGroup : function(row) {\n      return this._lookup(row) == -1;\n    },\n\n\n    /**\n     * Returns the selectable model items.\n     *\n     * @return {qx.data.Array | null} The selectable items.\n     */\n    _getSelectables : function() {\n      return this.getModel();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n\n    // apply method\n    _applyModel : function(value, old)\n    {\n      if (value != null) {\n        value.addListener(\"changeLength\", this._onModelChange, this);\n      }\n\n      if (old != null) {\n        old.removeListener(\"changeLength\", this._onModelChange, this);\n      }\n\n      this._onModelChange();\n    },\n\n\n    // apply method\n    _applyRowHeight : function(value, old) {\n      this.getPane().getRowConfig().setDefaultItemSize(value);\n    },\n\n    // apply method\n    _applyGroupRowHeight : function(value, old) {\n      this.__updateGroupRowHeight();\n    },\n\n    // apply method\n    _applyLabelPath : function(value, old) {\n      this._provider.setLabelPath(value);\n    },\n\n\n    // apply method\n    _applyIconPath : function(value, old) {\n      this._provider.setIconPath(value);\n    },\n\n\n    // apply method\n    _applyGroupLabelPath : function(value, old) {\n      this._provider.setGroupLabelPath(value);\n    },\n\n\n    // apply method\n    _applyLabelOptions : function(value, old) {\n      this._provider.setLabelOptions(value);\n    },\n\n\n    // apply method\n    _applyIconOptions : function(value, old) {\n      this._provider.setIconOptions(value);\n    },\n\n\n    // apply method\n    _applyGroupLabelOptions : function(value, old) {\n      this._provider.setGroupLabelOptions(value);\n    },\n\n\n    // apply method\n    _applyDelegate : function(value, old) {\n      this._provider.setDelegate(value);\n      this.__buildUpLookupTable();\n    },\n\n\n    // property apply\n    _applyVariableItemHeight : function(value, old) {\n      if(value) {\n        this._setRowItemSize();\n      }\n      else {\n        this.getPane().getRowConfig().resetItemSizes();\n        this.getPane().fullUpdate();\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event handler for the resize event.\n     *\n     * @param e {qx.event.type.Data} resize event.\n     */\n    _onResize : function(e) {\n      this.getPane().getColumnConfig().setItemSize(0, e.getData().width);\n    },\n\n\n    /**\n     * Event handler for the model change event.\n     *\n     * @param e {qx.event.type.Data} model change event.\n     */\n    _onModelChange : function(e) {\n      // we have to remove the bindings before we rebuild the lookup table\n      // otherwise bindings might be dispatched to wrong items\n      // see: https://github.com/qooxdoo/qooxdoo/issues/196\n      this._provider.removeBindings();\n      this.__buildUpLookupTable();\n      this._applyDefaultSelection();\n\n      if (e instanceof qx.event.type.Data) {\n        this.fireDataEvent(\"changeModelLength\", e.getData(), e.getOldData());\n      }\n    },\n\n\n    /**\n     * Event handler for the updated event of the \n     * qx.ui.virtual.layer.WidgetCell layer.\n     *\n     * Recalculates the item sizes in a deffered call,\n     * which only happens if we have variable item heights\n     */\n    _onLayerUpdated: function () {\n      if (this.isVariableItemHeight() === false) {\n        return;\n      }\n\n      if (this.__deferredLayerUpdate === null) {\n        this.__deferredLayerUpdate = new qx.util.DeferredCall(function () {\n          this._setRowItemSize();\n        }, this);\n      }\n\n      this.__deferredLayerUpdate.schedule();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Helper method to update the row count.\n     */\n    __updateRowCount : function()\n    {\n      this.getPane().getRowConfig().setItemCount(this.__lookupTable.length);\n      this.getPane().fullUpdate();\n    },\n\n\n    /**\n     * Helper method to update row heights.\n     */\n    __updateGroupRowHeight : function()\n    {\n      var rc = this.getPane().getRowConfig();\n      var gh = this.getGroupItemHeight();\n      rc.resetItemSizes();\n\n      if (gh) {\n        for (var i = 0,l = this.__lookupTable.length; i < l; ++i)\n        {\n          if (this.__lookupTable[i] == -1) {\n            rc.setItemSize(i, gh);\n          }\n        }\n      }\n    },\n\n\n    /**\n     * Internal method for building the lookup table.\n     */\n    __buildUpLookupTable : function()\n    {\n      this.__lookupTable = [];\n      this.__lookupTableForGroup = [];\n      this.__groupHashMap = {};\n\n      if (this.isAutoGrouping()) {\n        this.getGroups().removeAll();\n      }\n\n      var model = this.getModel();\n\n      if (model != null) {\n        this._runDelegateFilter(model);\n        this._runDelegateSorter(model);\n        this._runDelegateGroup(model);\n      }\n\n      this._updateSelection();\n      this.__updateGroupRowHeight();\n      this.__updateRowCount();\n    },\n\n\n    /**\n     * Invokes filtering using the filter given in the delegate.\n     *\n     * @param model {qx.data.IListData} The model.\n     */\n    _runDelegateFilter : function (model)\n    {\n      var filter = qx.util.Delegate.getMethod(this.getDelegate(), \"filter\");\n\n      for (var i = 0,l = model.length; i < l; ++i)\n      {\n        if (filter == null || filter(model.getItem(i))) {\n          this.__lookupTable.push(i);\n        }\n      }\n    },\n\n\n    /**\n     * Invokes sorting using the sorter given in the delegate.\n     *\n     * @param model {qx.data.IListData} The model.\n     */\n    _runDelegateSorter : function (model)\n    {\n      if (this.__lookupTable.length == 0) {\n        return;\n      }\n\n      var sorter = qx.util.Delegate.getMethod(this.getDelegate(), \"sorter\");\n\n      if (sorter != null)\n      {\n        this.__lookupTable.sort(function(a, b)\n        {\n          return sorter(model.getItem(a), model.getItem(b));\n        });\n      }\n    },\n\n\n    /**\n     * Invokes grouping using the group result given in the delegate.\n     *\n     * @param model {qx.data.IListData} The model.\n     */\n    _runDelegateGroup : function (model)\n    {\n      var groupMethod = qx.util.Delegate.getMethod(this.getDelegate(), \"group\");\n\n      if (groupMethod != null)\n      {\n        for (var i = 0,l = this.__lookupTable.length; i < l; ++i)\n        {\n          var index = this.__lookupTable[i];\n          var item = this.getModel().getItem(index);\n          var group = groupMethod(item);\n\n          this.__addGroup(group, index);\n        }\n        this.__lookupTable = this.__createLookupFromGroup();\n      }\n    },\n\n\n    /**\n     * Adds a model index the the group.\n     *\n     * @param group {String|Object|null} the group.\n     * @param index {Integer} model index to add.\n     */\n    __addGroup : function(group, index)\n    {\n      // if group is null add to default group\n      if (group == null)\n      {\n        this.__defaultGroupUsed = true;\n        group = \"???\";\n      }\n\n      var name = this.__getUniqueGroupName(group);\n      if (this.__groupHashMap[name] == null)\n      {\n        this.__groupHashMap[name] = [];\n        if (this.isAutoGrouping()) {\n          this.getGroups().push(group);\n        }\n      }\n      this.__groupHashMap[name].push(index);\n    },\n\n\n    /**\n     * Creates a lookup table form the internal group hash map.\n     *\n     * @return {Array} the lookup table based on the internal group hash map.\n     */\n    __createLookupFromGroup : function()\n    {\n      this.__checkGroupStructure();\n\n      var result = [];\n      var row = 0;\n      var groups = this.getGroups();\n      for (var i = 0; i < groups.getLength(); i++)\n      {\n        var group = groups.getItem(i);\n\n        // indicate that the value is a group\n        result.push(-1);\n        this.__lookupTableForGroup.push(row);\n        row++;\n\n        var key = this.__getUniqueGroupName(group);\n        var groupMembers = this.__groupHashMap[key];\n        if (groupMembers != null)\n        {\n          for (var k = 0; k < groupMembers.length; k++) {\n            result.push(groupMembers[k]);\n            row++;\n          }\n        }\n      }\n      return result;\n    },\n\n\n    /**\n     * Returns an unique group name for the passed group.\n     *\n     * @param group {String|Object} Group to find unique group name.\n     * @return {String} Unique group name.\n     */\n    __getUniqueGroupName : function(group)\n    {\n      var name = null;\n      if (!qx.lang.Type.isString(group))\n      {\n        var index = this.getGroups().indexOf(group);\n        this.__groupObjectsUsed = true;\n\n        name = \"group\";\n        if (index == -1) {\n           name += this.getGroups().getLength();\n        } else {\n          name += index;\n        }\n      }\n      else\n      {\n        this.__groupStringsUsed = true;\n        var name = group;\n      }\n      return name;\n    },\n\n\n    /**\n     * Checks that <code>Object</code> and <code>String</code> are not mixed\n     * as group identifier, otherwise an exception occurs.\n     */\n    __checkGroupStructure : function() {\n      if (this.__groupObjectsUsed && this.__defaultGroupUsed ||\n          this.__groupObjectsUsed && this.__groupStringsUsed)\n      {\n        throw new Error(\"GroupingTypeError: You can't mix 'Objects' and 'Strings' as\" +\n          \" group identifier!\");\n      }\n    },\n\n\n    /**\n     * Get the height of each visible item and set it as the\n     * row size\n     */\n    _setRowItemSize : function() {\n      var rowConfig = this.getPane().getRowConfig();\n      var layer = this._layer;\n      \n      var firstRow = layer.getFirstRow();\n      var lastRow = firstRow + layer.getRowSizes().length;\n\n      for (var row = firstRow; row < lastRow; row++) {\n        var widget = layer.getRenderedCellWidget(row, 0);\n        if (widget !== null) {\n          var height = widget.getSizeHint().height;\n          \n          rowConfig.setItemSize(\n              row,\n              height\n          );\n        }\n      }\n    }\n  },\n\n\n  destruct : function()\n  {\n    this._disposeObjects(\"__deferredLayerUpdate\");\n    \n    var model = this.getModel();\n    if (model != null) {\n      model.removeListener(\"changeLength\", this._onModelChange, this);\n    }\n\n    var pane = this.getPane();\n    if (pane != null) {\n      pane.removeListener(\"resize\", this._onResize, this);\n    }\n\n    this._background.dispose();\n    this._provider.dispose();\n    this._layer.dispose();\n    this._background = this._provider = this._layer =\n      this.__lookupTable = this.__lookupTableForGroup =\n      this.__groupHashMap = null;\n\n    if (this.__defaultGroups) {\n      this.__defaultGroups.dispose();\n    }\n  }\n});\n"
  ]
}