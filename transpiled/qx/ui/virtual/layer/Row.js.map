{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/virtual/layer/Row.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "layer",
    "AbstractBackground",
    "properties",
    "appearance",
    "refine",
    "init",
    "members",
    "_fullUpdate",
    "firstRow",
    "firstColumn",
    "rowSizes",
    "columnSizes",
    "html",
    "width",
    "lang",
    "Array",
    "sum",
    "top",
    "row",
    "childIndex",
    "y",
    "length",
    "color",
    "getColor",
    "backgroundColor",
    "decorator",
    "getBackground",
    "styles",
    "bom",
    "element",
    "Style",
    "compile",
    "getStyles",
    "push",
    "el",
    "getContentElement",
    "getDomElement",
    "style",
    "display",
    "innerHTML",
    "join",
    "_width",
    "_updateLayerWindow",
    "getFirstRow",
    "getRowSizes",
    "setColor",
    "index",
    "__isRowRendered",
    "updateLayerData",
    "setBackground",
    "lastRow",
    "Row"
  ],
  "mappings": "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",
  "file": "Row.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n\n/**\n * EXPERIMENTAL!\n *\n * The Row layer renders row background colors.\n */\nqx.Class.define(\"qx.ui.virtual.layer.Row\",\n{\n  extend : qx.ui.virtual.layer.AbstractBackground,\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"row-layer\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden\n    _fullUpdate : function(firstRow, firstColumn, rowSizes, columnSizes)\n    {\n      var html = [];\n\n      var width = qx.lang.Array.sum(columnSizes);\n\n      var top = 0;\n      var row = firstRow;\n      var childIndex = 0;\n\n      for (var y=0; y<rowSizes.length; y++)\n      {\n        var color = this.getColor(row);\n        var backgroundColor = color ? \"background-color:\" + color + \";\" : \"\";\n\n        var decorator = this.getBackground(row);\n        var styles = decorator ? qx.bom.element.Style.compile(decorator.getStyles()) : \"\";\n\n        html.push(\n          \"<div style='\",\n          \"position: absolute;\",\n          \"left: 0;\",\n          \"top:\", top, \"px;\",\n          \"height:\", rowSizes[y], \"px;\",\n          \"width:\", width, \"px;\",\n          backgroundColor,\n          styles,\n          \"'>\",\n          \"</div>\"\n        );\n        childIndex++;\n\n        top += rowSizes[y];\n        row += 1;\n      }\n\n      var el = this.getContentElement().getDomElement();\n      // hide element before changing the child nodes to avoid\n      // premature reflow calculations\n      el.style.display = \"none\";\n      el.innerHTML = html.join(\"\");\n\n      el.style.display = \"block\";\n      this._width = width;\n    },\n\n\n    // overridden\n    _updateLayerWindow : function(firstRow, firstColumn, rowSizes, columnSizes)\n    {\n      if (\n        firstRow !== this.getFirstRow() ||\n        rowSizes.length !== this.getRowSizes().length ||\n        this._width < qx.lang.Array.sum(columnSizes)\n      ) {\n        this._fullUpdate(firstRow, firstColumn, rowSizes, columnSizes);\n      }\n    },\n\n\n    // overridden\n    setColor : function(index, color)\n    {\n      this.base(arguments, index, color);\n\n      if (this.__isRowRendered(index)) {\n        this.updateLayerData();\n      }\n    },\n\n\n    // overridden\n    setBackground : function(index, decorator)\n    {\n      this.base(arguments, index, decorator);\n      if (this.__isRowRendered(index)) {\n        this.updateLayerData();\n      }\n    },\n\n\n    /**\n     * Whether the row with the given index is currently rendered (i.e. in the\n     * layer's view port).\n     *\n     * @param index {Integer} The row's index\n     * @return {Boolean} Whether the row is rendered\n     */\n    __isRowRendered : function(index)\n    {\n      var firstRow = this.getFirstRow();\n      var lastRow = firstRow + this.getRowSizes().length - 1;\n      return index >= firstRow && index <= lastRow;\n    }\n  }\n});\n"
  ]
}