{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/virtual/layer/Column.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "layer",
    "AbstractBackground",
    "properties",
    "appearance",
    "refine",
    "init",
    "members",
    "_fullUpdate",
    "firstRow",
    "firstColumn",
    "rowSizes",
    "columnSizes",
    "html",
    "height",
    "lang",
    "Array",
    "sum",
    "left",
    "column",
    "childIndex",
    "x",
    "length",
    "color",
    "getColor",
    "backgroundColor",
    "decorator",
    "getBackground",
    "styles",
    "bom",
    "element",
    "Style",
    "compile",
    "getStyles",
    "push",
    "el",
    "getContentElement",
    "getDomElement",
    "style",
    "display",
    "innerHTML",
    "join",
    "_height",
    "updateLayerWindow",
    "getFirstColumn",
    "getColumnSizes",
    "setColor",
    "index",
    "lastColumn",
    "updateLayerData",
    "Column"
  ],
  "mappings": ";;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAwBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,4BAAhB,EACA;AACEC,YAASN,GAAGO,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBC,kBAD/B;;AAIE;;;;;;AAMAC,gBACA;AACE;AACAC,kBACA;AACEC,gBAAS,IADX;AAEEC,cAAO;AAFT;AAHF,KAXF;;AAqBE;;;;;;AAMAC,aACA;AACE;AACAC,mBAAc,qBACZC,QADY,EACFC,WADE,EAEZC,QAFY,EAEFC,WAFE,EAId;AACE,YAAIC,OAAO,EAAX;;AAEA,YAAIC,SAAStB,GAAGuB,IAAH,CAAQC,KAAR,CAAcC,GAAd,CAAkBN,QAAlB,CAAb;;AAEA,YAAIO,OAAO,CAAX;AACA,YAAIC,SAAST,WAAb;AACA,YAAIU,aAAa,CAAjB;;AAEA,aAAK,IAAIC,IAAE,CAAX,EAAcA,IAAET,YAAYU,MAA5B,EAAoCD,GAApC,EACA;;AAEE,cAAIE,QAAQ,KAAKC,QAAL,CAAcL,MAAd,CAAZ;AACA,cAAIM,kBAAkBF,QAAQ,sBAAsBA,KAAtB,GAA8B,GAAtC,GAA4C,EAAlE;;AAEA,cAAIG,YAAY,KAAKC,aAAL,CAAmBR,MAAnB,CAAhB;AACA,cAAIS,SAASF,YAAYlC,GAAGqC,GAAH,CAAOC,OAAP,CAAeC,KAAf,CAAqBC,OAArB,CAA6BN,UAAUO,SAAV,EAA7B,CAAZ,GAAkE,EAA/E;;AAEApB,eAAKqB,IAAL,CACE,cADF,EAEE,qBAFF,EAGE,SAHF,EAIE,OAJF,EAIWhB,IAJX,EAIiB,KAJjB,EAKE,QALF,EAKYN,YAAYS,CAAZ,CALZ,EAK4B,KAL5B,EAME,SANF,EAMaP,MANb,EAMqB,KANrB,EAOEW,eAPF,EAQEG,MARF,EASE,IATF,EAUE,QAVF;AAYAR;;AAEAF,kBAAQN,YAAYS,CAAZ,CAAR;AACAF,oBAAU,CAAV;AACD;;AAED,YAAIgB,KAAK,KAAKC,iBAAL,GAAyBC,aAAzB,EAAT;AACA;AACA;AACAF,WAAGG,KAAH,CAASC,OAAT,GAAmB,MAAnB;AACAJ,WAAGK,SAAH,GAAe3B,KAAK4B,IAAL,CAAU,EAAV,CAAf;;AAEAN,WAAGG,KAAH,CAASC,OAAT,GAAmB,OAAnB;;AAEA,aAAKG,OAAL,GAAe5B,MAAf;AACD,OAnDH;;AAqDE6B,yBAAoB,2BAASlC,QAAT,EAAmBC,WAAnB,EAAgCC,QAAhC,EAA0CC,WAA1C,EACpB;AACE,YACEF,gBAAgB,KAAKkC,cAAL,EAAhB,IACAhC,YAAYU,MAAZ,KAAuB,KAAKuB,cAAL,GAAsBvB,MAD7C,IAEA,KAAKoB,OAAL,GAAelD,GAAGuB,IAAH,CAAQC,KAAR,CAAcC,GAAd,CAAkBN,QAAlB,CAHjB,EAIE;AACA,eAAKH,WAAL,CACEC,QADF,EACYC,WADZ,EAEEC,QAFF,EAEYC,WAFZ;AAID;AACF,OAjEH;;AAoEE;AACAkC,gBAAW,kBAASC,KAAT,EAAgBxB,KAAhB,EACX;AACE,sEAAqBwB,KAArB,EAA4BxB,KAA5B;;AAEA,YAAIb,cAAc,KAAKkC,cAAL,EAAlB;AACA,YAAII,aAAatC,cAAc,KAAKmC,cAAL,GAAsBvB,MAApC,GAA6C,CAA9D;AACA,YAAIyB,SAASrC,WAAT,IAAwBqC,SAASC,UAArC,EAAiD;AAC/C,eAAKC,eAAL;AACD;AACF;AA9EH;AA5BF,GADA,C;AAxBAzD,KAAGO,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBiD,MAApB,CAA2BvD,aAA3B,GAA2CA,aAA3C",
  "file": "Column.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n\n/**\n * EXPERIMENTAL!\n *\n * The Row layer renders row background colors.\n */\nqx.Class.define(\"qx.ui.virtual.layer.Column\",\n{\n  extend : qx.ui.virtual.layer.AbstractBackground,\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"column-layer\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden\n    _fullUpdate : function(\n      firstRow, firstColumn,\n      rowSizes, columnSizes\n    )\n    {\n      var html = [];\n\n      var height = qx.lang.Array.sum(rowSizes);\n\n      var left = 0;\n      var column = firstColumn;\n      var childIndex = 0;\n\n      for (var x=0; x<columnSizes.length; x++)\n      {\n\n        var color = this.getColor(column);\n        var backgroundColor = color ? \"background-color:\" + color + \";\" : \"\";\n\n        var decorator = this.getBackground(column);\n        var styles = decorator ? qx.bom.element.Style.compile(decorator.getStyles()) : \"\";\n\n        html.push(\n          \"<div style='\",\n          \"position: absolute;\",\n          \"top: 0;\",\n          \"left:\", left, \"px;\",\n          \"width:\", columnSizes[x], \"px;\",\n          \"height:\", height, \"px;\",\n          backgroundColor,\n          styles,\n          \"'>\",\n          \"</div>\"\n        );\n        childIndex++;\n\n        left += columnSizes[x];\n        column += 1;\n      }\n\n      var el = this.getContentElement().getDomElement();\n      // hide element before changing the child nodes to avoid\n      // premature reflow calculations\n      el.style.display = \"none\";\n      el.innerHTML = html.join(\"\");\n\n      el.style.display = \"block\";\n\n      this._height = height;\n    },\n\n    updateLayerWindow : function(firstRow, firstColumn, rowSizes, columnSizes)\n    {\n      if (\n        firstColumn !== this.getFirstColumn() ||\n        columnSizes.length !== this.getColumnSizes().length ||\n        this._height < qx.lang.Array.sum(rowSizes)\n      ) {\n        this._fullUpdate(\n          firstRow, firstColumn,\n          rowSizes, columnSizes\n        );\n      }\n    },\n\n\n    // overridden\n    setColor : function(index, color)\n    {\n      this.base(arguments, index, color);\n\n      var firstColumn = this.getFirstColumn();\n      var lastColumn = firstColumn + this.getColumnSizes().length - 1;\n      if (index >= firstColumn && index <= lastColumn) {\n        this.updateLayerData();\n      }\n    }\n  }\n});\n"
  ]
}