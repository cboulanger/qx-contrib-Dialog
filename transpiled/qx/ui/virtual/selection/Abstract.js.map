{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/virtual/selection/Abstract.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "selection",
    "Abstract",
    "construct",
    "pane",
    "selectionDelegate",
    "assertInstance",
    "virtual",
    "Pane",
    "_pane",
    "_delegate",
    "members",
    "_autoScrollIntoView",
    "_isSelectable",
    "item",
    "isItemSelectable",
    "_styleSelectable",
    "type",
    "enabled",
    "styleSelectable",
    "attachPointerEvents",
    "paneElement",
    "getContentElement",
    "addListener",
    "handlePointerDown",
    "handleTap",
    "handlePointerOver",
    "handlePointerMove",
    "handleLoseCapture",
    "detatchPointerEvents",
    "removeListener",
    "attachKeyEvents",
    "target",
    "handleKeyPress",
    "detachKeyEvents",
    "attachListEvents",
    "list",
    "handleAddItem",
    "handleRemoveItem",
    "detachListEvents",
    "_capture",
    "capture",
    "_releaseCapture",
    "releaseCapture",
    "_getScroll",
    "left",
    "getScrollX",
    "top",
    "getScrollY",
    "_scrollBy",
    "xoff",
    "yoff",
    "setScrollX",
    "setScrollY",
    "_getLocation",
    "elem",
    "getDomElement",
    "bom",
    "element",
    "Location",
    "get",
    "_getDimension",
    "getInnerSize",
    "destruct"
  ],
  "mappings": "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",
  "file": "Abstract.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n\n/**\n * EXPERIMENTAL!\n *\n * Abstract base class for selection manager, which manage selectable items\n * rendered in a virtual {@link qx.ui.virtual.core.Pane}.\n */\nqx.Class.define(\"qx.ui.virtual.selection.Abstract\",\n{\n  extend : qx.ui.core.selection.Abstract,\n\n\n  /*\n   *****************************************************************************\n      CONSTRUCTOR\n   *****************************************************************************\n   */\n\n  /**\n   * @param pane {qx.ui.virtual.core.Pane} The virtual pane on which the\n   *    selectable item are rendered\n   * @param selectionDelegate {qx.ui.virtual.selection.ISelectionDelegate?null} An optional delegate,\n   *    which can be used to customize the behavior of the selection manager\n   *    without sub classing it.\n   */\n  construct : function(pane, selectionDelegate)\n  {\n    this.base(arguments);\n\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      this.assertInstance(pane, qx.ui.virtual.core.Pane);\n    }\n\n    this._pane = pane;\n    this._delegate = selectionDelegate || {};\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // Determines if automatically scrolling of selected item into view is active.\n    _autoScrollIntoView : true,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      DELEGATE METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _isSelectable : function(item) {\n      return this._delegate.isItemSelectable ?\n        this._delegate.isItemSelectable(item) :\n        true;\n    },\n\n\n    // overridden\n    _styleSelectable : function(item, type, enabled)\n    {\n      if (this._delegate.styleSelectable) {\n        this._delegate.styleSelectable(item, type, enabled);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENTS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Attach pointer events to the managed pane.\n     */\n    attachPointerEvents : function()\n    {\n      var paneElement = this._pane.getContentElement();\n      paneElement.addListener(\"pointerdown\", this.handlePointerDown, this);\n      paneElement.addListener(\"tap\", this.handleTap, this);\n      paneElement.addListener(\"pointerover\", this.handlePointerOver, this);\n      paneElement.addListener(\"pointermove\", this.handlePointerMove, this);\n      paneElement.addListener(\"losecapture\", this.handleLoseCapture, this);\n    },\n\n\n    /**\n     * Detach pointer events from the managed pane.\n     */\n    detatchPointerEvents : function()\n    {\n      var paneElement = this._pane.getContentElement();\n      paneElement.removeListener(\"pointerdown\", this.handlePointerDown, this);\n      paneElement.removeListener(\"tap\", this.handleTap, this);\n      paneElement.removeListener(\"pointerover\", this.handlePointerOver, this);\n      paneElement.removeListener(\"pointermove\", this.handlePointerMove, this);\n      paneElement.removeListener(\"losecapture\", this.handleLoseCapture, this);\n    },\n\n\n    /**\n     * Attach key events to manipulate the selection using the keyboard. The\n     * event target doesn't need to be the pane itself. It can be an widget,\n     * which received key events. Usually the key event target is the\n     * {@link qx.ui.virtual.core.Scroller}.\n     *\n     * @param target {qx.core.Object} the key event target.\n     *\n     */\n    attachKeyEvents : function(target) {\n      target.addListener(\"keypress\", this.handleKeyPress, this);\n    },\n\n\n    /**\n     * Detach key events.\n     *\n     * @param target {qx.core.Object} the key event target.\n     */\n    detachKeyEvents : function(target) {\n      target.removeListener(\"keypress\", this.handleKeyPress, this);\n    },\n\n\n    /**\n     * Attach list events. The selection mode <code>one</code> need to know,\n     * when selectable items are added or removed. If this mode is used the\n     * <code>list</code> parameter must fire <code>addItem</code> and\n     * <code>removeItem</code> events.\n     *\n     * @param list {qx.core.Object} the event target for <code>addItem</code> and\n     *    <code>removeItem</code> events\n     */\n    attachListEvents : function(list)\n    {\n      list.addListener(\"addItem\", this.handleAddItem, this);\n      list.addListener(\"removeItem\", this.handleRemoveItem, this);\n    },\n\n\n    /**\n     * Detach list events.\n     *\n     * @param list {qx.core.Object} the event target for <code>addItem</code> and\n     *    <code>removeItem</code> events\n     */\n    detachListEvents : function(list)\n    {\n      list.removeListener(\"addItem\", this.handleAddItem, this);\n      list.removeListener(\"removeItem\", this.handleRemoveItem, this);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      IMPLEMENT ABSTRACT METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _capture : function() {\n      this._pane.capture();\n    },\n\n\n    // overridden\n    _releaseCapture : function() {\n      this._pane.releaseCapture();\n    },\n\n\n    // overridden\n    _getScroll : function()\n    {\n      return {\n        left : this._pane.getScrollX(),\n        top: this._pane.getScrollY()\n      };\n    },\n\n\n    // overridden\n    _scrollBy : function(xoff, yoff)\n    {\n      this._pane.setScrollX(this._pane.getScrollX() + xoff);\n      this._pane.setScrollY(this._pane.getScrollY() + yoff);\n    },\n\n\n    // overridden\n    _getLocation : function()\n    {\n      var elem = this._pane.getContentElement().getDomElement();\n      return elem ? qx.bom.element.Location.get(elem) : null;\n    },\n\n\n    // overridden\n    _getDimension : function() {\n      return this._pane.getInnerSize();\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCT\n   *****************************************************************************\n   */\n\n  destruct : function() {\n    this._pane = this._delegate = null;\n  }\n});\n"
  ]
}