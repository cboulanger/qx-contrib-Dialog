{
  "className": "qx.ui.virtual.selection.Abstract",
  "packageName": "qx.ui.virtual.selection",
  "name": "Abstract",
  "superClass": "qx.ui.core.selection.Abstract",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0
      },
      "end": {
        "line": 239,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nFabian Jakobs (fjakobs)\nJonathan Wei√ü (jonathan_rass)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "EXPERIMENTAL!\n\nAbstract base class for selection manager, which manage selectable items\nrendered in a virtual {@link qx.ui.virtual.core.Pane}."
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 45,
        "column": 2
      },
      "end": {
        "line": 55,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nCONSTRUCTOR\n****************************************************************************"
        },
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "pane {qx.ui.virtual.core.Pane} The virtual pane on which the\nselectable item are rendered",
          "paramName": "pane",
          "description": " The virtual pane on which the\nselectable item are rendered",
          "type": "qx.ui.virtual.core.Pane"
        },
        {
          "name": "@param",
          "body": "selectionDelegate {qx.ui.virtual.selection.ISelectionDelegate?null} An optional delegate,\nwhich can be used to customize the behavior of the selection manager\nwithout sub classing it.",
          "paramName": "selectionDelegate",
          "description": " An optional delegate,\nwhich can be used to customize the behavior of the selection manager\nwithout sub classing it.",
          "optional": true,
          "defaultValue": "null",
          "type": "qx.ui.virtual.selection.ISelectionDelegate"
        }
      ]
    }
  },
  "members": {
    "_autoScrollIntoView": {
      "location": {
        "start": {
          "line": 67,
          "column": 4
        },
        "end": {
          "line": 67,
          "column": 30
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Determines if automatically scrolling of selected item into view is active."
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_isSelectable": {
      "location": {
        "start": {
          "line": 77,
          "column": 4
        },
        "end": {
          "line": 81,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nDELEGATE METHODS\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {var} Any item",
            "paramName": "item",
            "description": " Any item",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> when the item is selectable",
            "type": "Boolean",
            "description": " <code>true</code> when the item is selectable"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "appearsIn": [
        "qx.ui.core.selection.Abstract"
      ]
    },
    "_styleSelectable": {
      "location": {
        "start": {
          "line": 85,
          "column": 4
        },
        "end": {
          "line": 90,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {var} Item to modify",
            "paramName": "item",
            "description": " Item to modify",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "type {String} Any of <code>selected</code>, <code>anchor</code> or <code>lead</code>",
            "paramName": "type",
            "description": " Any of <code>selected</code>, <code>anchor</code> or <code>lead</code>",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "enabled {Boolean} Whether the given style should be added or removed.",
            "paramName": "enabled",
            "description": " Whether the given style should be added or removed.",
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "appearsIn": [
        "qx.ui.core.selection.Abstract"
      ]
    },
    "attachPointerEvents": {
      "location": {
        "start": {
          "line": 102,
          "column": 4
        },
        "end": {
          "line": 110,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nEVENTS\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Attach pointer events to the managed pane."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "detatchPointerEvents": {
      "location": {
        "start": {
          "line": 116,
          "column": 4
        },
        "end": {
          "line": 124,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Detach pointer events from the managed pane."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "attachKeyEvents": {
      "location": {
        "start": {
          "line": 136,
          "column": 4
        },
        "end": {
          "line": 138,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Attach key events to manipulate the selection using the keyboard. The\nevent target doesn't need to be the pane itself. It can be an widget,\nwhich received key events. Usually the key event target is the\n{@link qx.ui.virtual.core.Scroller}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "target {qx.core.Object} the key event target.",
            "paramName": "target",
            "description": " the key event target.",
            "type": "qx.core.Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "detachKeyEvents": {
      "location": {
        "start": {
          "line": 146,
          "column": 4
        },
        "end": {
          "line": 148,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Detach key events."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "target {qx.core.Object} the key event target.",
            "paramName": "target",
            "description": " the key event target.",
            "type": "qx.core.Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "attachListEvents": {
      "location": {
        "start": {
          "line": 160,
          "column": 4
        },
        "end": {
          "line": 164,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Attach list events. The selection mode <code>one</code> need to know,\nwhen selectable items are added or removed. If this mode is used the\n<code>list</code> parameter must fire <code>addItem</code> and\n<code>removeItem</code> events."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "list {qx.core.Object} the event target for <code>addItem</code> and\n<code>removeItem</code> events",
            "paramName": "list",
            "description": " the event target for <code>addItem</code> and\n<code>removeItem</code> events",
            "type": "qx.core.Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "detachListEvents": {
      "location": {
        "start": {
          "line": 173,
          "column": 4
        },
        "end": {
          "line": 177,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Detach list events."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "list {qx.core.Object} the event target for <code>addItem</code> and\n<code>removeItem</code> events",
            "paramName": "list",
            "description": " the event target for <code>addItem</code> and\n<code>removeItem</code> events",
            "type": "qx.core.Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_capture": {
      "location": {
        "start": {
          "line": 187,
          "column": 4
        },
        "end": {
          "line": 189,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nIMPLEMENT ABSTRACT METHODS\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "appearsIn": [
        "qx.ui.core.selection.Abstract"
      ]
    },
    "_releaseCapture": {
      "location": {
        "start": {
          "line": 193,
          "column": 4
        },
        "end": {
          "line": 195,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "appearsIn": [
        "qx.ui.core.selection.Abstract"
      ]
    },
    "_getScroll": {
      "location": {
        "start": {
          "line": 199,
          "column": 4
        },
        "end": {
          "line": 205,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map with the keys <code>left</code> and <code>top</code>.",
            "type": "Map",
            "description": " Map with the keys <code>left</code> and <code>top</code>."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "appearsIn": [
        "qx.ui.core.selection.Abstract"
      ]
    },
    "_scrollBy": {
      "location": {
        "start": {
          "line": 209,
          "column": 4
        },
        "end": {
          "line": 213,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "xoff {Integer} Horizontal offset to scroll by",
            "paramName": "xoff",
            "description": " Horizontal offset to scroll by",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "yoff {Integer} Vertical offset to scroll by",
            "paramName": "yoff",
            "description": " Vertical offset to scroll by",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "appearsIn": [
        "qx.ui.core.selection.Abstract"
      ]
    },
    "_getLocation": {
      "location": {
        "start": {
          "line": 217,
          "column": 4
        },
        "end": {
          "line": 221,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map with the keys <code>top</code>, <code>right</code>,\n<code>bottom</code> and <code>left</code>.",
            "type": "Map",
            "description": " Map with the keys <code>top</code>, <code>right</code>,\n<code>bottom</code> and <code>left</code>."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "appearsIn": [
        "qx.ui.core.selection.Abstract"
      ]
    },
    "_getDimension": {
      "location": {
        "start": {
          "line": 225,
          "column": 4
        },
        "end": {
          "line": 227,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map with the keys <code>width</code> and <code>height</code>.",
            "type": "Map",
            "description": " Map with the keys <code>width</code> and <code>height</code>."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "appearsIn": [
        "qx.ui.core.selection.Abstract"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "property": "reset"
    },
    "getMode": {
      "type": "function",
      "name": "getMode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>mode</code>.\n\nFor further details take a look at the property definition: {@link #mode}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for mode"
          }
        ]
      }
    },
    "setMode": {
      "type": "function",
      "name": "setMode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>mode</code>.\n\nFor further details take a look at the property definition: {@link #mode}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for mode"
          }
        ]
      }
    },
    "resetMode": {
      "type": "function",
      "name": "resetMode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "property": "reset"
    },
    "getDrag": {
      "type": "function",
      "name": "getDrag",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>drag</code>.\n\nFor further details take a look at the property definition: {@link #drag}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for drag"
          }
        ]
      }
    },
    "isDrag": {
      "type": "function",
      "name": "isDrag",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>drag</code>.\n\nFor further details take a look at the property definition: {@link #drag}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for drag"
          }
        ]
      }
    },
    "setDrag": {
      "type": "function",
      "name": "setDrag",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>drag</code>.\n\nFor further details take a look at the property definition: {@link #drag}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for drag"
          }
        ]
      }
    },
    "resetDrag": {
      "type": "function",
      "name": "resetDrag",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "property": "reset"
    },
    "getQuick": {
      "type": "function",
      "name": "getQuick",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>quick</code>.\n\nFor further details take a look at the property definition: {@link #quick}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for quick"
          }
        ]
      }
    },
    "isQuick": {
      "type": "function",
      "name": "isQuick",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>quick</code>.\n\nFor further details take a look at the property definition: {@link #quick}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for quick"
          }
        ]
      }
    },
    "setQuick": {
      "type": "function",
      "name": "setQuick",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>quick</code>.\n\nFor further details take a look at the property definition: {@link #quick}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for quick"
          }
        ]
      }
    },
    "resetQuick": {
      "type": "function",
      "name": "resetQuick",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.selection.Abstract",
      "property": "reset"
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 236,
        "column": 2
      },
      "end": {
        "line": 238,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nDESTRUCT\n****************************************************************************"
        }
      ]
    }
  },
  "descendants": [
    "qx.ui.virtual.selection.CellRectangle",
    "qx.ui.virtual.selection.Row"
  ]
}