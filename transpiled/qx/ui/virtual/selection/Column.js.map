{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/virtual/selection/Column.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "selection",
    "Row",
    "members",
    "_getItemCount",
    "_pane",
    "getColumnConfig",
    "getItemCount",
    "_getSelectableFromPointerEvent",
    "event",
    "cell",
    "getCellAtPosition",
    "getDocumentLeft",
    "getDocumentTop",
    "_isSelectable",
    "column",
    "_getRelatedSelectable",
    "item",
    "relation",
    "startIndex",
    "endIndex",
    "increment",
    "i",
    "_scrollItemIntoView",
    "_autoScrollIntoView",
    "scrollColumnIntoView",
    "_getSelectableLocationX",
    "columnConfig",
    "itemLeft",
    "getItemPosition",
    "itemRight",
    "getItemSize",
    "left",
    "right",
    "_getSelectableLocationY",
    "top",
    "bottom",
    "getRowConfig",
    "getTotalSize",
    "Column"
  ],
  "mappings": ";;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAwBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,gCAAhB,EACA;AACEC,YAASN,GAAGO,EAAH,CAAMC,OAAN,CAAcC,SAAd,CAAwBC,GADnC;;AAIE;;;;;;AAMAC,aACA;AACE;;;;;;AAMAC,qBAAgB,yBAAW;AACzB,eAAO,KAAKC,KAAL,CAAWC,eAAX,GAA6BC,YAA7B,EAAP;AACD,OATH;;AAYE;;;;;;AAMA;AACAC,sCAAiC,wCAASC,KAAT,EACjC;AACE,YAAIC,OAAO,KAAKL,KAAL,CAAWM,iBAAX,CACTF,MAAMG,eAAN,EADS,EAETH,MAAMI,cAAN,EAFS,CAAX;;AAKA,YAAI,CAACH,IAAL,EAAW;AACT,iBAAO,IAAP;AACD;;AAED,eAAO,KAAKI,aAAL,CAAmBJ,KAAKK,MAAxB,IAAkCL,KAAKK,MAAvC,GAAgD,IAAvD;AACD,OA/BH;;AAkCE;AACAC,6BAAwB,+BAASC,IAAT,EAAeC,QAAf,EACxB;AACE,YAAIA,YAAY,MAAhB,EACA;AACE,cAAIC,aAAaF,OAAK,CAAtB;AACA,cAAIG,WAAW,CAAf;AACA,cAAIC,YAAY,CAAC,CAAjB;AACD,SALD,MAMK,IAAIH,YAAY,OAAhB,EACL;AACE,cAAIC,aAAaF,OAAK,CAAtB;AACA,cAAIG,WAAW,KAAKhB,aAAL,KAAqB,CAApC;AACA,cAAIiB,YAAY,CAAhB;AACD,SALI,MAOL;AACE,iBAAO,IAAP;AACD;;AAED,aAAK,IAAIC,IAAEH,UAAX,EAAuBG,MAAMF,WAASC,SAAtC,EAAiDC,KAAKD,SAAtD,EACA;AACE,cAAI,KAAKP,aAAL,CAAmBQ,CAAnB,CAAJ,EAA2B;AACzB,mBAAOA,CAAP;AACD;AACF;AACD,eAAO,IAAP;AACD,OA7DH;;AAgEE;AACAC,2BAAsB,6BAASN,IAAT,EAAe;AACnC,YAAI,KAAKO,mBAAT,EAA8B;AAC5B,eAAKnB,KAAL,CAAWoB,oBAAX,CAAgCR,IAAhC;AACD;AACF,OArEH;;AAwEE;AACAS,+BAA0B,iCAAST,IAAT,EAC1B;AACE,YAAIU,eAAe,KAAKtB,KAAL,CAAWC,eAAX,EAAnB;;AAEA,YAAIsB,WAAWD,aAAaE,eAAb,CAA6BZ,IAA7B,CAAf;AACA,YAAIa,YAAYF,WAAWD,aAAaI,WAAb,CAAyBd,IAAzB,CAAX,GAA4C,CAA5D;;AAEA,eAAO;AACLe,gBAAMJ,QADD;AAELK,iBAAOH;AAFF,SAAP;AAID,OApFH;;AAuFE;AACAI,+BAA0B,iCAASjB,IAAT,EAC1B;AACE,eAAO;AACLkB,eAAK,CADA;AAELC,kBAAQ,KAAK/B,KAAL,CAAWgC,YAAX,GAA0BC,YAA1B,KAA2C;AAF9C,SAAP;AAID;AA9FH;AAXF,GADA,C;AAxBA9C,KAAGO,EAAH,CAAMC,OAAN,CAAcC,SAAd,CAAwBsC,MAAxB,CAA+B5C,aAA/B,GAA+CA,aAA/C",
  "file": "Column.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n\n/**\n * EXPERIMENTAL!\n *\n * Column selection manager\n */\nqx.Class.define(\"qx.ui.virtual.selection.Column\",\n{\n  extend : qx.ui.virtual.selection.Row,\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * Returns the number of all items in the pane. This number may contain\n     * unselectable items as well.\n     *\n     * @return {Integer} number of items\n     */\n    _getItemCount : function() {\n      return this._pane.getColumnConfig().getItemCount();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      IMPLEMENT ABSTRACT METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getSelectableFromPointerEvent : function(event)\n    {\n      var cell = this._pane.getCellAtPosition(\n        event.getDocumentLeft(),\n        event.getDocumentTop()\n      );\n\n      if (!cell) {\n        return null;\n      }\n\n      return this._isSelectable(cell.column) ? cell.column : null;\n    },\n\n\n    // overridden\n    _getRelatedSelectable : function(item, relation)\n    {\n      if (relation == \"left\")\n      {\n        var startIndex = item-1;\n        var endIndex = 0;\n        var increment = -1;\n      }\n      else if (relation == \"right\")\n      {\n        var startIndex = item+1;\n        var endIndex = this._getItemCount()-1;\n        var increment = 1;\n      }\n      else\n      {\n        return null;\n      }\n\n      for (var i=startIndex; i !== endIndex+increment; i += increment)\n      {\n        if (this._isSelectable(i)) {\n          return i;\n        }\n      }\n      return null;\n    },\n\n\n    // overridden\n    _scrollItemIntoView : function(item) {\n      if (this._autoScrollIntoView) {\n        this._pane.scrollColumnIntoView(item);\n      }\n    },\n\n\n    // overridden\n    _getSelectableLocationX : function(item)\n    {\n      var columnConfig = this._pane.getColumnConfig();\n\n      var itemLeft = columnConfig.getItemPosition(item);\n      var itemRight = itemLeft + columnConfig.getItemSize(item) - 1;\n\n      return {\n        left: itemLeft,\n        right: itemRight\n      };\n    },\n\n\n    // overridden\n    _getSelectableLocationY : function(item)\n    {\n      return {\n        top: 0,\n        bottom: this._pane.getRowConfig().getTotalSize() - 1\n      };\n    }\n  }\n});\n"
  ]
}