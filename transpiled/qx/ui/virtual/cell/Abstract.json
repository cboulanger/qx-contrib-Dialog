{
  "className": "qx.ui.virtual.cell.Abstract",
  "packageName": "qx.ui.virtual.cell",
  "name": "Abstract",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.ui.virtual.cell.ICell"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 29,
        "column": 0
      },
      "end": {
        "line": 120,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nJonathan Wei√ü (jonathan_rass)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Abstract base class for HTML based cell renderer.\n\nHTML cell renderer are used to construct an HTML string, which is used to\nrender the cell."
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "(qx.bom.Stylesheet)\n\nEXPERIMENTAL!"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": false,
  "construct": {
    "location": {
      "start": {
        "line": 35,
        "column": 2
      },
      "end": {
        "line": 41,
        "column": 3
      }
    }
  },
  "members": {
    "getCssClasses": {
      "location": {
        "start": {
          "line": 53,
          "column": 4
        },
        "end": {
          "line": 55,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the css classes for the cell"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The cell's data value",
            "paramName": "value",
            "description": " The cell's data value",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "states {Object} A map containing the cell's state names as map keys.",
            "paramName": "states",
            "description": " A map containing the cell's state names as map keys.",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} Space separated list of CSS classes",
            "type": "qx.ui.virtual.cell.String",
            "description": " Space separated list of CSS classes"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAttributes": {
      "location": {
        "start": {
          "line": 66,
          "column": 4
        },
        "end": {
          "line": 68,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the element attributes for the cell"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The cell's data value",
            "paramName": "value",
            "description": " The cell's data value",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "states {Object} A map containing the cell's state names as map keys.",
            "paramName": "states",
            "description": " A map containing the cell's state names as map keys.",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} Compiled string of cell attributes. e.g.\n<code>'tabIndex=\"1\" readonly=\"false\"'</code>",
            "type": "qx.ui.virtual.cell.String",
            "description": " Compiled string of cell attributes. e.g.\n<code>'tabIndex=\"1\" readonly=\"false\"'</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getStyles": {
      "location": {
        "start": {
          "line": 79,
          "column": 4
        },
        "end": {
          "line": 81,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the CSS styles for the cell"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The cell's data value",
            "paramName": "value",
            "description": " The cell's data value",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "states {Object} A map containing the cell's state names as map keys.",
            "paramName": "states",
            "description": " A map containing the cell's state names as map keys.",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} Compiled string of CSS styles. e.g.\n<code>'color=\"red; padding: 10px'</code>",
            "type": "qx.ui.virtual.cell.String",
            "description": " Compiled string of CSS styles. e.g.\n<code>'color=\"red; padding: 10px'</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getInsets": {
      "location": {
        "start": {
          "line": 93,
          "column": 4
        },
        "end": {
          "line": 95,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the cell's insets. Insets are the sum of the cell's padding and\nborder width."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The cell's data value",
            "paramName": "value",
            "description": " The cell's data value",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "states {Object} A map containing the cell's state names as map keys.",
            "paramName": "states",
            "description": " A map containing the cell's state names as map keys.",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer[]} An array containing the sum of horizontal insets at index\n<code>0</code> and the sum of vertical insets at index <code>1</code>.",
            "type": "Integer[]",
            "description": " An array containing the sum of horizontal insets at index\n<code>0</code> and the sum of vertical insets at index <code>1</code>."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getContent": {
      "location": {
        "start": {
          "line": 105,
          "column": 4
        },
        "end": {
          "line": 107,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get cell'S HTML content"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The cell's data value",
            "paramName": "value",
            "description": " The cell's data value",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "states {Object} A map containing the cell's state names as map keys.",
            "paramName": "states",
            "description": " A map containing the cell's state names as map keys.",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The cell's content as HTML fragment.",
            "type": "qx.ui.virtual.cell.String",
            "description": " The cell's content as HTML fragment."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getCellProperties": {
      "location": {
        "start": {
          "line": 109,
          "column": 4
        },
        "end": {
          "line": 118,
          "column": 5
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.cell.ICell",
      "appearsIn": [
        "qx.ui.virtual.cell.ICell"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "data {var} Data needed for the cell to render.",
            "paramName": "data",
            "description": " Data needed for the cell to render.",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "states {Map} The states set on the cell (e.g. <i>selected</i>,\n<i>focused</i>, <i>editable</i>).",
            "paramName": "states",
            "description": " The states set on the cell (e.g. <i>selected</i>,\n<i>focused</i>, <i>editable</i>).",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Cell properties (see above.)",
            "type": "Map",
            "description": " Cell properties (see above.)"
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    }
  },
  "descendants": [
    "qx.ui.virtual.cell.Cell"
  ]
}