{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/virtual/cell/Cell.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "cell",
    "Abstract",
    "construct",
    "__stylesheet",
    "CellStylesheet",
    "getInstance",
    "__userStyles",
    "__themeStyles",
    "__userPaddings",
    "__themePaddings",
    "__states",
    "__themeValues",
    "initAppearance",
    "__initializeThemableProperties",
    "properties",
    "appearance",
    "check",
    "init",
    "apply",
    "backgroundColor",
    "nullable",
    "themeable",
    "textColor",
    "textAlign",
    "font",
    "paddingTop",
    "paddingRight",
    "paddingBottom",
    "paddingLeft",
    "padding",
    "group",
    "mode",
    "members",
    "__themableProperties",
    "__statesKey",
    "__isThemed",
    "PropertyUtil",
    "util",
    "cssProperties",
    "lang",
    "Object",
    "fromArray",
    "_getCssProperties",
    "clazz",
    "constructor",
    "getProperties",
    "prop",
    "push",
    "superclass",
    "_applyAppearance",
    "value",
    "old",
    "_getValue",
    "propertyName",
    "getThemeValue",
    "getUserValue",
    "_storeStyle",
    "styles",
    "store",
    "_applyBackgroundColor",
    "name",
    "theme",
    "manager",
    "Color",
    "resolve",
    "_applyTextColor",
    "_applyTextAlign",
    "_applyFont",
    "Font",
    "bom",
    "element",
    "Style",
    "compile",
    "getStyles",
    "_applyPadding",
    "paddingStore",
    "cssKey",
    "getCssName",
    "getCellProperties",
    "states",
    "__setStates",
    "classes",
    "getCssClasses",
    "style",
    "attributes",
    "getAttributes",
    "content",
    "getContent",
    "insets",
    "getInsets",
    "cssClass",
    "getCssClass",
    "getAppearance",
    "statesKey",
    "keys",
    "sort",
    "join",
    "themeStyles",
    "__clearThemedPropertyValues",
    "__updateThemeableProperties",
    "__computeCssClassForStates",
    "__cacheThemedValues",
    "__applyThemeValues",
    "themableProperties",
    "i",
    "length",
    "deleteThemeValue",
    "Appearance",
    "styleFrom",
    "undefined",
    "setThemed",
    "styleString",
    "values",
    "computeClassForStyles",
    "themeValues",
    "key",
    "user",
    "top",
    "right",
    "bottom",
    "left",
    "destruct",
    "Cell"
  ],
  "mappings": "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",
  "file": "Cell.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * EXPERIMENTAL!\n *\n * Themeable Cell renderer.\n *\n * This cell renderer can be styled by an appearance theme.\n */\nqx.Class.define(\"qx.ui.virtual.cell.Cell\",\n{\n  extend : qx.ui.virtual.cell.Abstract,\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.__stylesheet = qx.ui.virtual.cell.CellStylesheet.getInstance();\n\n    this.__userStyles = {};\n    this.__themeStyles = {};\n\n    this.__userPaddings = {};\n    this.__themePaddings = {};\n\n    this.__states = {};\n\n    this.__themeValues = {};\n\n    this.initAppearance();\n    this.__initializeThemableProperties();\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * The appearance ID. This ID is used to identify the appearance theme\n     * entry to use for this cell.\n     */\n    appearance :\n    {\n      check : \"String\",\n      init : \"cell\",\n      apply : \"_applyAppearance\"\n    },\n\n\n    /** The cell's background color */\n    backgroundColor :\n    {\n      nullable : true,\n      check : \"Color\",\n      apply : \"_applyBackgroundColor\",\n      themeable : true\n    },\n\n\n    /** The cell's text color */\n    textColor :\n    {\n      nullable : true,\n      check : \"Color\",\n      apply : \"_applyTextColor\",\n      themeable : true\n    },\n\n\n    /** The text alignment of the cell's content */\n    textAlign :\n    {\n      check : [\"left\", \"center\", \"right\", \"justify\"],\n      nullable : true,\n      themeable : true,\n      apply : \"_applyTextAlign\"\n    },\n\n\n    /**\n     * The cell's font. The value is either a font name defined in the font\n     * theme or an instance of {@link qx.bom.Font}.\n     */\n    font :\n    {\n      nullable : true,\n      apply : \"_applyFont\",\n      check : \"Font\",\n      themeable : true\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PADDING\n    ---------------------------------------------------------------------------\n    */\n\n    /** Padding of the widget (top) */\n    paddingTop :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyPadding\",\n      themeable : true\n    },\n\n\n    /** Padding of the widget (right) */\n    paddingRight :\n    {\n      check : \"Integer\",\n      nullable : true,\n      apply : \"_applyPadding\",\n      themeable : true\n    },\n\n\n    /** Padding of the widget (bottom) */\n    paddingBottom :\n    {\n      check : \"Integer\",\n      nullable : true,\n      apply : \"_applyPadding\",\n      themeable : true\n    },\n\n\n    /** Padding of the widget (left) */\n    paddingLeft :\n    {\n      check : \"Integer\",\n      nullable : true,\n      apply : \"_applyPadding\",\n      themeable : true\n    },\n\n\n    /**\n     * The 'padding' property is a shorthand property for setting 'paddingTop',\n     * 'paddingRight', 'paddingBottom' and 'paddingLeft' at the same time.\n     *\n     * If four values are specified they apply to top, right, bottom and left\n     * respectively. If there is only one value, it applies to all sides, if\n     * there are two or three, the missing values are taken from the opposite\n     * side.\n     */\n    padding :\n    {\n      group : [ \"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\" ],\n      mode  : \"shorthand\",\n      themeable : true\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n\n  members :\n  {\n    /** @type {Array} List of all non CSS themable properties */\n    __themableProperties : null,\n\n    /** @type {String} Unique key over the current set of states */\n    __statesKey : null,\n\n    __states : null,\n\n    __themeValues : null,\n    __themeStyles : null,\n    __userStyles : null,\n\n    __userPaddings : null,\n    __themePaddings : null,\n\n    __isThemed : false,\n    __stylesheet : null,\n\n\n    /**\n     * Collect all themable properties, which are not CSS properties\n     */\n    __initializeThemableProperties : function()\n    {\n      var PropertyUtil = qx.util.PropertyUtil;\n\n      var cssProperties = qx.lang.Object.fromArray(this._getCssProperties());\n      this.__themableProperties = [];\n\n      var clazz = this.constructor;\n      while(clazz)\n      {\n        var properties = PropertyUtil.getProperties(clazz);\n        for (var prop in properties) {\n          if (!cssProperties[prop]) {\n            this.__themableProperties.push(prop);\n          }\n        }\n        clazz = clazz.superclass;\n      }\n    },\n\n\n    /**\n     * Get a list of all properties, which should be applied as CSS styles.\n     *\n     * @return {Array} List of property names\n     */\n    _getCssProperties : function()\n    {\n      return [\n        \"backgroundColor\", \"textColor\", \"font\", \"textAlign\",\n        \"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\"\n      ];\n    },\n\n\n    // property apply\n    _applyAppearance : function(value, old)\n    {\n      if (old) {\n        this.__themeStyles = {};\n      }\n    },\n\n\n    /**\n     * Compute the value of the given property\n     *\n     * @param propertyName {String} Name of the property\n     * @return {var} The Property value\n     */\n    _getValue : function(propertyName)\n    {\n      if (this.__isThemed) {\n        return qx.util.PropertyUtil.getThemeValue(this, propertyName);\n      } else {\n        return qx.util.PropertyUtil.getUserValue(this, propertyName);\n      }\n    },\n\n\n    /**\n     * Store a properties computed style string either in the user or in the\n     * theme values. User values will be applied as inline styles, while theme\n     * values are stored in a stylesheet.\n     *\n     * @param propertyName {String} The property name\n     * @param styles {String} String with computed CSS styles\n     */\n    _storeStyle : function(propertyName, styles)\n    {\n      var store;\n\n      if (this.__isThemed) {\n        store = this.__themeStyles;\n      } else {\n        store = this.__userStyles;\n      }\n\n      if (styles === null) {\n        delete store[propertyName];\n      } else {\n        store[propertyName] = styles;\n      }\n    },\n\n\n    // property apply\n    _applyBackgroundColor : function(value, old, name)\n    {\n      var value = this._getValue(name);\n      if (!value) {\n        this._storeStyle(name, null);\n      } else {\n        this._storeStyle(name, \"background-color:\" + qx.theme.manager.Color.getInstance().resolve(value));\n      }\n    },\n\n\n    // property apply\n    _applyTextColor : function(value, old, name)\n    {\n      var value = this._getValue(name);\n      if (!value) {\n        this._storeStyle(name, null);\n      } else {\n        this._storeStyle(name, \"color:\" + qx.theme.manager.Color.getInstance().resolve(value));\n      }\n    },\n\n\n    // property apply\n    _applyTextAlign : function(value, old, name)\n    {\n      var value = this._getValue(name);\n      if (!value) {\n        this._storeStyle(name, null);\n      } else {\n        this._storeStyle(name, \"text-align:\" + value);\n      }\n    },\n\n\n    // property apply\n    _applyFont : function(value, old, name)\n    {\n      var value = this._getValue(name);\n      if (!value) {\n        this._storeStyle(name, null);\n      } else {\n        var font = qx.theme.manager.Font.getInstance().resolve(value);\n        this._storeStyle(name, qx.bom.element.Style.compile(font.getStyles()));\n      }\n    },\n\n\n    // property apply\n    _applyPadding : function(value, old, name)\n    {\n      var value = this._getValue(name);\n\n      if (this.__isThemed) {\n        var paddingStore = this.__themePaddings;\n      } else {\n        paddingStore = this.__userPaddings;\n      }\n\n      if (value === null) {\n        delete paddingStore[name];\n      } else {\n        paddingStore[name] = value;\n      }\n\n      if (value === null) {\n        this._storeStyle(name, null);\n      } else {\n        var cssKey = qx.bom.Style.getCssName(name);\n        this._storeStyle(name, cssKey + \":\" + value + \"px\");\n      }\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      IMPLEMENT CELL API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    getCellProperties : function(value, states)\n    {\n      this.__setStates(states);\n      return {\n        classes : this.getCssClasses(value, states),\n        style : this.getStyles(value, states),\n        attributes : this.getAttributes(value, states),\n        content : this.getContent(value, states),\n        insets : this.getInsets(value, states)\n      };\n    },\n\n\n    // overridden\n    getAttributes : function(value, states) {\n      return \"\";\n    },\n\n\n    // overridden\n    getContent : function(value, states) {\n      return value;\n    },\n\n\n    // overridden\n    getCssClasses : function(value, states)\n    {\n      var cssClass = this.__stylesheet.getCssClass(this.__statesKey) || \"\";\n      return \"qx-cell \" + cssClass;\n    },\n\n\n    /**\n     * Set the cell states and set the correct CSS class for the given state\n     * combination\n     *\n     * @param states {Object} A map containing the cell's state names as map keys.\n     */\n    __setStates : function(states)\n    {\n      // Avoid errors if no states are set\n      if (!states) {\n        states = {};\n      }\n\n      var appearance = this.getAppearance();\n      var statesKey = appearance + \"-\" + Object.keys(states).sort().join(\" \");\n      if (this.__statesKey == statesKey) {\n        return;\n      }\n      this.__statesKey = statesKey;\n\n      var themeStyles = this.__states[this.__statesKey];\n      if (!themeStyles)\n      {\n        this.__clearThemedPropertyValues();\n        this.__updateThemeableProperties(states);\n        this.__computeCssClassForStates(states);\n        this.__cacheThemedValues();\n\n        this.__states[this.__statesKey] = 1;\n      }\n      this.__applyThemeValues();\n    },\n\n\n    /**\n     * Remove the themed value from all CSS properties\n     */\n    __clearThemedPropertyValues : function()\n    {\n      var PropertyUtil = qx.util.PropertyUtil;\n      var themableProperties = this._getCssProperties();\n      for (var i=0; i<themableProperties.length; i++) {\n        PropertyUtil.deleteThemeValue(this, themableProperties[i]);\n      }\n    },\n\n\n    /**\n     * Set the new themed value for all CSS properties given the set of states\n     *\n     * @param states {Object} A map containing the cell's state names as map keys.\n     */\n    __updateThemeableProperties : function(states)\n    {\n      this.__themeStyles = {};\n\n      this.__isThemed = true;\n\n      var appearance = this.getAppearance();\n      var PropertyUtil = qx.util.PropertyUtil;\n\n      var styles = qx.theme.manager.Appearance.getInstance().styleFrom(appearance, states);\n      for (var prop in styles)\n      {\n        if (styles[prop] !== undefined) {\n          PropertyUtil.setThemed(this, prop, styles[prop]);\n        }\n      }\n\n      this.__isThemed = false;\n    },\n\n\n    /**\n     * Compute a CSS class for the current values of all CSS properties\n     */\n    __computeCssClassForStates : function()\n    {\n      var styleString = Object.values(this.__themeStyles).join(\";\");\n      this.__stylesheet.computeClassForStyles(this.__statesKey, styleString);\n    },\n\n\n    /**\n     * Cache the themed values for the current state combination\n     */\n    __cacheThemedValues : function()\n    {\n      var properties = this.__themableProperties;\n      var PropertyUtil = qx.util.PropertyUtil;\n\n      var themeValues = {};\n      for (var i=0; i<properties.length; i++)\n      {\n        var key = properties[i];\n        var value = PropertyUtil.getThemeValue(this, key);\n        if (value !== undefined) {\n          themeValues[key] = value;\n        }\n      }\n      this.__themeValues[this.__statesKey] = themeValues;\n    },\n\n\n    /**\n     * Apply the themed values to the properties\n     */\n    __applyThemeValues : function()\n    {\n      var PropertyUtil = qx.util.PropertyUtil;\n      var themeValues = this.__themeValues[this.__statesKey] || {};\n      for (var key in themeValues) {\n        PropertyUtil.setThemed(this, key, themeValues[key]);\n      }\n    },\n\n\n    // overridden\n    getStyles: function(value, states) {\n      return Object.values(this.__userStyles).join(\";\");\n    },\n\n\n    // overridden\n    getInsets : function(value, states)\n    {\n      var user = this.__userPaddings;\n      var theme = this.__themePaddings;\n\n      var top = (user.paddingTop !== undefined ? user.paddingTop : theme.paddingTop) || 0;\n      var right = (user.paddingRight !== undefined ? user.paddingRight : theme.paddingRight) || 0;\n      var bottom = (user.paddingBottom !== undefined ? user.paddingBottom : theme.paddingBottom) || 0;\n      var left = (user.paddingLeft !== undefined ? user.paddingLeft : theme.paddingLeft) || 0;\n\n      return [left + right, top + bottom];\n    }\n  },\n\n\n  destruct : function()\n  {\n    this.__stylesheet = this.__userStyles = this.__themeStyles =\n      this.__userPaddings = this.__themePaddings = this.__states =\n      this.__themeValues = this.__themableProperties = null;\n  }\n});\n"
  ]
}