{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/virtual/cell/Number.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "cell",
    "Cell",
    "construct",
    "numberFormat",
    "setNumberFormat",
    "properties",
    "check",
    "init",
    "util",
    "format",
    "NumberFormat",
    "appearance",
    "refine",
    "members",
    "getContent",
    "value",
    "states",
    "getNumberFormat",
    "Number"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EA0BAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,2BAAhB,EACA;AACEC,YAASN,GAAGO,EAAH,CAAMC,OAAN,CAAcC,IAAd,CAAmBC,IAD9B;;AAIE;;;;AAIAC,eAAY,mBAASC,YAAT,EACZ;AACE;;AAEA,UAAIA,YAAJ,EAAkB;AAChB,aAAKC,eAAL,CAAqBD,YAArB;AACD;AACF,KAfH;;AAkBEE,gBACA;AACE;AACAF,oBACA;AACEG,eAAQ,6BADV;AAEE;AACA;AACAC,cAAO,IAAIhB,GAAGiB,IAAH,CAAQC,MAAR,CAAeC,YAAnB;AAJT,OAHF;;AAUE;AACAC,kBACA;AACEC,gBAAS,IADX;AAEEL,cAAO;AAFT;AAZF,KAnBF;;AAsCEM,aACA;AACE;AACAC,kBAAa,oBAASC,KAAT,EAAgBC,MAAhB,EAAwB;AACnC,eAAOD,UAAU,IAAV,GAAiB,KAAKE,eAAL,GAAuBR,MAAvB,CAA8BM,KAA9B,CAAjB,GAAwD,EAA/D;AACD;AAJH;AAvCF,GADA,C;AA1BAxB,KAAGO,EAAH,CAAMC,OAAN,CAAcC,IAAd,CAAmBkB,MAAnB,CAA0BxB,aAA1B,GAA0CA,aAA1C",
  "file": "Number.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Number cell renderer.\n *\n * Renders the call using the configured number formatter.\n *\n * EXPERIMENTAL!\n */\nqx.Class.define(\"qx.ui.virtual.cell.Number\",\n{\n  extend : qx.ui.virtual.cell.Cell,\n\n\n  /**\n   * @param numberFormat {qx.util.format.NumberFormat|null} Optional number\n   *   format to use.\n   */\n  construct : function(numberFormat)\n  {\n    this.base(arguments);\n\n    if (numberFormat) {\n      this.setNumberFormat(numberFormat);\n    }\n  },\n\n\n  properties :\n  {\n    /** The number format used to render the cell */\n    numberFormat :\n    {\n      check : \"qx.util.format.NumberFormat\",\n      // it is on intension that only one number format is used for\n      // all instances\n      init : new qx.util.format.NumberFormat()\n    },\n\n    // overridden\n    appearance:\n    {\n      refine : true,\n      init : \"cell-number\"\n    }\n  },\n\n\n  members :\n  {\n    // overridden\n    getContent : function(value, states) {\n      return value !== null ? this.getNumberFormat().format(value) : \"\";\n    }\n  }\n});"
  ]
}