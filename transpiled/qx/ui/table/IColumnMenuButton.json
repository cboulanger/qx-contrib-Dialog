{
  "className": "qx.ui.table.IColumnMenuButton",
  "packageName": "qx.ui.table",
  "name": "IColumnMenuButton",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 22,
        "column": 0
      },
      "end": {
        "line": 92,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2009 Derrell Lipman\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nDerrell Lipman (derrell)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Interface for creating the column visibility menu"
        }
      ]
    }
  },
  "type": "interface",
  "properties": {
    "menu": {
      "type": "property",
      "name": "menu",
      "abstract": true,
      "mixin": false,
      "access": "public"
    }
  },
  "members": {
    "factory": {
      "location": {
        "start": {
          "line": 77,
          "column": 4
        },
        "end": {
          "line": 80,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Instantiate a sub-widget."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {String}\nOne of the following strings, indicating what type of\ncolumn-menu-specific object to instantiate:\n<dl>\n<dt>menu</dt>\n<dd>\nInstantiate a menu which will appear when the column visibility\nbutton is pressed. No options are provided in this case.\n</dd>\n<dt>menu-button</dt>\n<dd>\nInstantiate a button to correspond to a column within the\ntable. The options are a map containing <i>text</i>, the name of\nthe column; <i>column</i>, the column number; and\n<i>bVisible</i>, a boolean indicating whether this column is\ncurrently visible. The instantiated return object must implement\ninterface {@link qx.ui.table.IColumnMenuItem}\n</dd>\n<dt>user-button</dt>\n<dd>\nInstantiate a button for other than a column name. This is used,\nfor example, to add the \"Reset column widths\" button when the\nResize column model is requested. The options is a map containing\n<i>text</i>, the text to present in the button.\n</dd>\n<dt>separator</dt>\n<dd>\nInstantiate a separator object to added to the menu. This is\nused, for example, to separate the table column name list from\nthe \"Reset column widths\" button when the Resize column model is\nrequested. No options are provided in this case.\n</dd>\n</dl>",
            "paramName": "item",
            "description": "\nOne of the following strings, indicating what type of\ncolumn-menu-specific object to instantiate:\n<dl>\n<dt>menu</dt>\n<dd>\nInstantiate a menu which will appear when the column visibility\nbutton is pressed. No options are provided in this case.\n</dd>\n<dt>menu-button</dt>\n<dd>\nInstantiate a button to correspond to a column within the\ntable. The options are a map containing <i>text</i>, the name of\nthe column; <i>column</i>, the column number; and\n<i>bVisible</i>, a boolean indicating whether this column is\ncurrently visible. The instantiated return object must implement\ninterface {@link qx.ui.table.IColumnMenuItem}\n</dd>\n<dt>user-button</dt>\n<dd>\nInstantiate a button for other than a column name. This is used,\nfor example, to add the \"Reset column widths\" button when the\nResize column model is requested. The options is a map containing\n<i>text</i>, the text to present in the button.\n</dd>\n<dt>separator</dt>\n<dd>\nInstantiate a separator object to added to the menu. This is\nused, for example, to separate the table column name list from\nthe \"Reset column widths\" button when the Resize column model is\nrequested. No options are provided in this case.\n</dd>\n</dl>",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "options {Map}\nOptions specific to the <i>item</i> being requested.",
            "paramName": "options",
            "description": "\nOptions specific to the <i>item</i> being requested.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget}\nThe instantiated object as specified by <i>item</i>.",
            "type": "qx.ui.core.Widget",
            "description": "\nThe instantiated object as specified by <i>item</i>."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "empty": {
      "location": {
        "start": {
          "line": 87,
          "column": 4
        },
        "end": {
          "line": 90,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Empty the menu of all items, in preparation for building a new column\nvisibility menu."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getMenu": {
      "type": "function",
      "name": "getMenu",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>menu</code>.\n\nFor further details take a look at the property definition: {@link #menu}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for menu"
          }
        ]
      }
    },
    "setMenu": {
      "type": "function",
      "name": "setMenu",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>menu</code>.\n\nFor further details take a look at the property definition: {@link #menu}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for menu"
          }
        ]
      }
    },
    "resetMenu": {
      "type": "function",
      "name": "resetMenu",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>menu</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #menu}."
          }
        ]
      }
    }
  },
  "descendants": []
}