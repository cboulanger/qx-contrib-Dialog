{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/table/celleditor/TextField.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "table",
    "celleditor",
    "AbstractField",
    "members",
    "getCellEditorValue",
    "cellEditor",
    "value",
    "getValue",
    "validationFunc",
    "getValidationFunction",
    "originalValue",
    "parseFloat",
    "_createEditor",
    "form",
    "TextField",
    "setAppearance"
  ],
  "mappings": ";;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAsBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,kCAAhB,EACA;AACEC,YAASN,GAAGO,EAAH,CAAMC,KAAN,CAAYC,UAAZ,CAAuBC,aADlC;;AAGEC,aACA;AACE;AACAC,0BAAqB,4BAASC,UAAT,EACrB;AACE,YAAIC,QAAQD,WAAWE,QAAX,EAAZ;;AAEA;AACA,YAAIC,iBAAiB,KAAKC,qBAAL,EAArB;AACA,YAAID,cAAJ,EAAqB;AACnBF,kBAAQE,eAAgBF,KAAhB,EAAuBD,WAAWK,aAAlC,CAAR;AACD;;AAED,YAAI,OAAOL,WAAWK,aAAlB,IAAmC,QAAvC,EAAiD;AAC/C;AACA;AACA,cAAIJ,SAAS,IAAT,IAAiBA,SAAS,EAA9B,EAAkC;AAChCA,oBAAQK,WAAWL,KAAX,CAAR;AACD;AACF;AACD,eAAOA,KAAP;AACD,OApBH;;AAuBEM,qBAAgB,yBAChB;AACE,YAAIP,aAAa,IAAIb,GAAGO,EAAH,CAAMc,IAAN,CAAWC,SAAf,EAAjB;AACAT,mBAAWU,aAAX,CAAyB,wBAAzB;AACA,eAAOV,UAAP;AACD;AA5BH;AAJF,GADA,C;AAtBAb,KAAGO,EAAH,CAAMC,KAAN,CAAYC,UAAZ,CAAuBa,SAAvB,CAAiCnB,aAAjC,GAAiDA,aAAjD",
  "file": "TextField.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A cell editor factory creating text fields.\n */\nqx.Class.define(\"qx.ui.table.celleditor.TextField\",\n{\n  extend : qx.ui.table.celleditor.AbstractField,\n\n  members :\n  {\n    // overridden\n    getCellEditorValue : function(cellEditor)\n    {\n      var value = cellEditor.getValue();\n\n      // validation function will be called with new and old value\n      var validationFunc = this.getValidationFunction();\n      if (validationFunc ) {\n        value = validationFunc( value, cellEditor.originalValue );\n      }\n     \n      if (typeof cellEditor.originalValue == \"number\") {\n        // Correct problem of NaN displaying when value is null string.\n        //if (value != null) {\n        if (value != null && value != '') {\n          value = parseFloat(value);\n        }\n      }\n      return value;\n    },\n\n\n    _createEditor : function()\n    {\n      var cellEditor = new qx.ui.form.TextField();\n      cellEditor.setAppearance(\"table-editor-textfield\");\n      return cellEditor;\n    }\n  }\n});\n"
  ]
}