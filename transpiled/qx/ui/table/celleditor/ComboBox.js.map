{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/table/celleditor/ComboBox.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "ui",
    "table",
    "ICellEditorFactory",
    "properties",
    "validationFunction",
    "check",
    "nullable",
    "init",
    "listData",
    "members",
    "createCellEditor",
    "cellInfo",
    "cellEditor",
    "form",
    "ComboBox",
    "set",
    "appearance",
    "value",
    "originalValue",
    "cellRenderer",
    "getTableColumnModel",
    "getDataCellRenderer",
    "col",
    "label",
    "_getContentHtml",
    "undefined",
    "list",
    "getListData",
    "item",
    "i",
    "l",
    "length",
    "row",
    "Array",
    "ListItem",
    "add",
    "setValue",
    "addListener",
    "selectAllText",
    "getCellEditorValue",
    "getValue",
    "validationFunc",
    "getValidationFunction",
    "parseFloat",
    "celleditor"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAqBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,iCAAhB,EACA;AACEC,YAASN,GAAGO,IAAH,CAAQC,MADnB;AAEEC,eAAYT,GAAGU,EAAH,CAAMC,KAAN,CAAYC,kBAF1B;;AAKEC,gBACA;AACE;;;;;AAKAC,0BACA;AACEC,eAAQ,UADV;AAEEC,kBAAW,IAFb;AAGEC,cAAO;AAHT,OAPF;;AAaE;AACAC,gBACA;AACEH,eAAQ,OADV;AAEEE,cAAO,IAFT;AAGED,kBAAW;AAHb;;AAfF,KANF;;AA8BEG,aACA;AACE;AACAC,wBAAmB,0BAASC,QAAT,EACnB;AACE,YAAIC,aAAa,IAAItB,GAAGU,EAAH,CAAMa,IAAN,CAAWC,QAAf,GAA0BC,GAA1B,CAA8B;AAC7CC,sBAAY;AADiC,SAA9B,CAAjB;;AAIA,YAAIC,QAAQN,SAASM,KAArB;AACAL,mBAAWM,aAAX,GAA2BD,KAA3B;;AAEA;AACA,YAAIE,eAAeR,SAASV,KAAT,CAAemB,mBAAf,GAAqCC,mBAArC,CAAyDV,SAASW,GAAlE,CAAnB;AACA,YAAIC,QAAQJ,aAAaK,eAAb,CAA6Bb,QAA7B,CAAZ;AACA,YAAKM,SAASM,KAAd,EAAsB;AACpBN,kBAAQM,KAAR;AACD;;AAED;AACA,YAAIN,UAAU,IAAV,IAAkBA,UAAUQ,SAAhC,EAA2C;AACzCR,kBAAQ,EAAR;AACD;;AAED,YAAIS,OAAO,KAAKC,WAAL,EAAX;AACA,YAAID,IAAJ,EACA;AACE,cAAIE,IAAJ;;AAEA,eAAK,IAAIC,IAAE,CAAN,EAAQC,IAAEJ,KAAKK,MAApB,EAA4BF,IAAEC,CAA9B,EAAiCD,GAAjC,EACA;AACE,gBAAIG,MAAMN,KAAKG,CAAL,CAAV;AACA,gBAAKG,eAAeC,KAApB,EAA4B;AAC1BL,qBAAO,IAAItC,GAAGU,EAAH,CAAMa,IAAN,CAAWqB,QAAf,CAAwBF,IAAI,CAAJ,CAAxB,EAAgCA,IAAI,CAAJ,CAAhC,CAAP;AACD,aAFD,MAEO;AACLJ,qBAAO,IAAItC,GAAGU,EAAH,CAAMa,IAAN,CAAWqB,QAAf,CAAwBF,GAAxB,EAA6B,IAA7B,CAAP;AACD;AACDpB,uBAAWuB,GAAX,CAAeP,IAAf;AACD;AACF;;AAEDhB,mBAAWwB,QAAX,CAAoB,KAAKnB,KAAzB;;AAEAL,mBAAWyB,WAAX,CAAuB,QAAvB,EAAiC,YAAW;AAC1CzB,qBAAW0B,aAAX;AACD,SAFD;;AAIA,eAAO1B,UAAP;AACD,OA/CH;;AAiDE;AACA2B,0BAAqB,4BAAS3B,UAAT,EACrB;AACE,YAAIK,QAAQL,WAAW4B,QAAX,MAAyB,EAArC;;AAEA;AACA,YAAIC,iBAAiB,KAAKC,qBAAL,EAArB;AACA,YAAID,cAAJ,EAAoB;AACjBxB,kBAAQwB,eAAgBxB,KAAhB,EAAuBL,WAAWM,aAAlC,CAAR;AACF;;AAED,YAAI,OAAON,WAAWM,aAAlB,IAAmC,QAAvC,EAAiD;AAC/CD,kBAAQ0B,WAAW1B,KAAX,CAAR;AACD;;AAED,eAAOA,KAAP;AACD;AAjEH;AA/BF,GADA,C;AArBA3B,KAAGU,EAAH,CAAMC,KAAN,CAAY2C,UAAZ,CAAuB9B,QAAvB,CAAgCrB,aAAhC,GAAgDA,aAAhD",
  "file": "ComboBox.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger (cboulanger)\n\n************************************************************************ */\n\n/**\n * A cell editor factory creating combo boxes.\n */\nqx.Class.define(\"qx.ui.table.celleditor.ComboBox\",\n{\n  extend : qx.core.Object,\n  implement : qx.ui.table.ICellEditorFactory,\n\n\n  properties :\n  {\n    /**\n     * function that validates the result\n     * the function will be called with the new value and the old value and is\n     * supposed to return the value that is set as the table value.\n     **/\n    validationFunction :\n    {\n      check : \"Function\",\n      nullable : true,\n      init : null\n    },\n\n    /** array of data to construct ListItem widgets with */\n    listData :\n    {\n      check : \"Array\",\n      init : null,\n      nullable : true\n    }\n\n  },\n\n\n  members :\n  {\n    // interface implementation\n    createCellEditor : function(cellInfo)\n    {\n      var cellEditor = new qx.ui.form.ComboBox().set({\n        appearance: \"table-editor-combobox\"\n      });\n\n      var value = cellInfo.value;\n      cellEditor.originalValue = value;\n\n      // check if renderer does something with value\n      var cellRenderer = cellInfo.table.getTableColumnModel().getDataCellRenderer(cellInfo.col);\n      var label = cellRenderer._getContentHtml(cellInfo);\n      if ( value != label ) {\n        value = label;\n      }\n\n      // replace null values\n      if (value === null || value === undefined) {\n        value = \"\";\n      }\n\n      var list = this.getListData();\n      if (list)\n      {\n        var item;\n\n        for (var i=0,l=list.length; i<l; i++)\n        {\n          var row = list[i];\n          if ( row instanceof Array ) {\n            item = new qx.ui.form.ListItem(row[0], row[1]);\n          } else {\n            item = new qx.ui.form.ListItem(row, null);\n          }\n          cellEditor.add(item);\n        };\n      }\n\n      cellEditor.setValue(\"\" + value);\n\n      cellEditor.addListener(\"appear\", function() {\n        cellEditor.selectAllText();\n      });\n\n      return cellEditor;\n    },\n\n    // interface implementations\n    getCellEditorValue : function(cellEditor)\n    {\n      var value = cellEditor.getValue() || \"\";\n\n      // validation function will be called with new and old value\n      var validationFunc = this.getValidationFunction();\n      if (validationFunc) {\n         value = validationFunc( value, cellEditor.originalValue );\n      }\n\n      if (typeof cellEditor.originalValue == \"number\") {\n        value = parseFloat(value);\n      }\n\n      return value;\n    }\n  }\n});\n"
  ]
}