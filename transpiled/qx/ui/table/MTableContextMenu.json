{
  "className": "qx.ui.table.MTableContextMenu",
  "packageName": "qx.ui.table",
  "name": "MTableContextMenu",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 22,
        "column": 0
      },
      "end": {
        "line": 186,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2006-2009 Derrell Lipman\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nDerrell Lipman (derrell)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "This mixin allows easily adding handlers for context menus on table columns."
        }
      ]
    }
  },
  "type": "mixin",
  "construct": {
    "location": {
      "start": {
        "line": 24,
        "column": 2
      },
      "end": {
        "line": 102,
        "column": 3
      }
    }
  },
  "members": {
    "__contextMenuHandler": {
      "location": {
        "start": {
          "line": 106,
          "column": 4
        },
        "end": {
          "line": 106,
          "column": 31
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__contextMenuHandlerContext": {
      "location": {
        "start": {
          "line": 107,
          "column": 4
        },
        "end": {
          "line": 107,
          "column": 38
        }
      },
      "type": "variable",
      "access": "private"
    },
    "setContextMenuHandler": {
      "location": {
        "start": {
          "line": 152,
          "column": 4
        },
        "end": {
          "line": 156,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Add a handler for a context menu which is initiated in a specific\ncolumn."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "col {Integer}\nThe column number in which the context menu request originated",
            "paramName": "col",
            "description": "\nThe column number in which the context menu request originated",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "handler {Function}\nThe function to call when a context menu request originates in the\nspecified column. The handler is called with the following arguments:\n<ul>\n<li>\n<b>column</b>: (Integer)\nThe number of the column in which the right click was issued\n</li>\n<li>\n<b>row</b>: (Integer)\nThe number of the row in which the right click was issued\n</li>\n<li>\n<b>table</b>: {@link qx.ui.table.Table}\nThe table in which the right click was issued\n</li>\n<li>\n<b>dataModel</b>: {@link qx.ui.table.model.Abstract}\nComplete data model of the table\n</li>\n<li>\n<b>contextMenu</b>: {@link qx.ui.menu.Menu}\nMenu in which buttons can be added to implement this context menu\n</li>\n</ul>\nThe function must return a (Boolean), indicating whether the context\nmenu should be shown or not. The context menu will be shown when the\nhandler function returns <code>true</code>. When the handler function\nreturns <code>false</code> the context menu will <b>not</b> be shown.",
            "paramName": "handler",
            "description": "\nThe function to call when a context menu request originates in the\nspecified column. The handler is called with the following arguments:\n<ul>\n<li>\n<b>column</b>: (Integer)\nThe number of the column in which the right click was issued\n</li>\n<li>\n<b>row</b>: (Integer)\nThe number of the row in which the right click was issued\n</li>\n<li>\n<b>table</b>: {@link qx.ui.table.Table}\nThe table in which the right click was issued\n</li>\n<li>\n<b>dataModel</b>: {@link qx.ui.table.model.Abstract}\nComplete data model of the table\n</li>\n<li>\n<b>contextMenu</b>: {@link qx.ui.menu.Menu}\nMenu in which buttons can be added to implement this context menu\n</li>\n</ul>\nThe function must return a (Boolean), indicating whether the context\nmenu should be shown or not. The context menu will be shown when the\nhandler function returns <code>true</code>. When the handler function\nreturns <code>false</code> the context menu will <b>not</b> be shown.",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "context {Object?this}\nOptional execution context for the callback (i.e. \"this\").\nIf not provided, the {@link qx.ui.table.Table} object this mixin is\napplied to is used.",
            "paramName": "context",
            "description": "\nOptional execution context for the callback (i.e. \"this\").\nIf not provided, the {@link qx.ui.table.Table} object this mixin is\napplied to is used.",
            "optional": true,
            "defaultValue": "this",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getContextMenuHandler": {
      "location": {
        "start": {
          "line": 169,
          "column": 4
        },
        "end": {
          "line": 172,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Return the registered context menu handler for a column."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "col {Integer}\nThe column number for which the context menu handler is requested",
            "paramName": "col",
            "description": "\nThe column number for which the context menu handler is requested",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Function}\nThe handler function which has been registered for the specified\ncolumn. The arguments of the handler is documented in\n{@link #setContextMenuHandler}.",
            "type": "Function",
            "description": "\nThe handler function which has been registered for the specified\ncolumn. The arguments of the handler is documented in\n{@link #setContextMenuHandler}."
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 181,
        "column": 2
      },
      "end": {
        "line": 185,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nDESTRUCTOR\n****************************************************************************"
        }
      ]
    }
  },
  "descendants": []
}