{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/table/pane/CellEvent.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "event",
    "type",
    "Pointer",
    "properties",
    "row",
    "check",
    "nullable",
    "column",
    "members",
    "init",
    "scroller",
    "me",
    "clone",
    "setBubbles",
    "setRow",
    "_getRowForPagePos",
    "getDocumentLeft",
    "getDocumentTop",
    "setColumn",
    "_getColumnForPageX",
    "embryo",
    "set",
    "getRow",
    "getColumn",
    "ui",
    "table",
    "pane",
    "CellEvent"
  ],
  "mappings": ";;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAsBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,4BAAhB,EACA;AACEC,YAASN,GAAGO,KAAH,CAASC,IAAT,CAAcC,OADzB;;AAIE;;;;;;AAMAC,gBACA;AACE;AACAC,WACA;AACEC,eAAQ,SADV;AAEEC,kBAAU;AAFZ,OAHF;;AAQE;AACAC,cACA;AACEF,eAAQ,SADV;AAEEC,kBAAU;AAFZ;AAVF,KAXF;;AA8BE;;;;;;AAMAE,aACA;AACE;;;;;;AAMC;;;;;;;;AAQDC,YAAO,cAASC,QAAT,EAAmBC,EAAnB,EAAuBP,GAAvB,EAA4BG,MAA5B,EACP;AACEI,WAAGC,KAAH,CAAS,IAAT;AACA,aAAKC,UAAL,CAAgB,KAAhB;;AAEA,YAAIT,OAAO,IAAX,EAAiB;AACf,eAAKU,MAAL,CAAYV,GAAZ;AACD,SAFD,MAEO;AACL,eAAKU,MAAL,CAAYJ,SAASK,iBAAT,CAA2B,KAAKC,eAAL,EAA3B,EAAmD,KAAKC,cAAL,EAAnD,CAAZ;AACD;;AAED,YAAIV,UAAU,IAAd,EAAoB;AAClB,eAAKW,SAAL,CAAeX,MAAf;AACD,SAFD,MAEO;AACL,eAAKW,SAAL,CAAeR,SAASS,kBAAT,CAA4B,KAAKH,eAAL,EAA5B,CAAf;AACD;AACF,OA/BH;;AAkCE;AACAJ,aAAQ,eAASQ,MAAT,EACR;AACE,YAAIR,mEAA6BQ,MAA7B,CAAJ;;AAEAR,cAAMS,GAAN,CAAU;AACRjB,eAAK,KAAKkB,MAAL,EADG;AAERf,kBAAQ,KAAKgB,SAAL;AAFA,SAAV;;AAKA,eAAOX,KAAP;AACD;AA7CH;AArCF,GADA,C;AAtBAnB,KAAG+B,EAAH,CAAMC,KAAN,CAAYC,IAAZ,CAAiBC,SAAjB,CAA2B/B,aAA3B,GAA2CA,aAA3C",
  "file": "CellEvent.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * David Perez Carmona (david-perez)\n\n************************************************************************ */\n\n/**\n * A cell event instance contains all data for pointer events related to cells in\n * a table.\n **/\nqx.Class.define(\"qx.ui.table.pane.CellEvent\",\n{\n  extend : qx.event.type.Pointer,\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** The table row of the event target */\n    row :\n    {\n      check : \"Integer\",\n      nullable: true\n    },\n\n    /** The table column of the event target */\n    column :\n    {\n      check : \"Integer\",\n      nullable: true\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n     *****************************************************************************\n        CONSTRUCTOR\n     *****************************************************************************\n     */\n\n     /**\n      * Initialize the event\n      *\n      * @param scroller {qx.ui.table.pane.Scroller} The tables pane scroller\n      * @param me {qx.event.type.Pointer} The original pointer event\n      * @param row {Integer?null} The cell's row index\n      * @param column {Integer?null} The cell's column index\n      */\n    init : function(scroller, me, row, column)\n    {\n      me.clone(this);\n      this.setBubbles(false);\n\n      if (row != null) {\n        this.setRow(row);\n      } else {\n        this.setRow(scroller._getRowForPagePos(this.getDocumentLeft(), this.getDocumentTop()));\n      }\n\n      if (column != null) {\n        this.setColumn(column);\n      } else {\n        this.setColumn(scroller._getColumnForPageX(this.getDocumentLeft()));\n      }\n    },\n\n\n    // overridden\n    clone : function(embryo)\n    {\n      var clone = this.base(arguments, embryo);\n\n      clone.set({\n        row: this.getRow(),\n        column: this.getColumn()\n      });\n\n      return clone;\n    }\n  }\n});\n"
  ]
}