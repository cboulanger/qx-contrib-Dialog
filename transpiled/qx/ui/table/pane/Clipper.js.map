{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/table/pane/Clipper.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "container",
    "Composite",
    "construct",
    "layout",
    "Grow",
    "setMinWidth",
    "members",
    "scrollToX",
    "value",
    "getContentElement",
    "scrollToY",
    "table",
    "pane",
    "Clipper"
  ],
  "mappings": ";;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAqBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,0BAAhB,EACA;AACEC,YAASN,GAAGO,EAAH,CAAMC,SAAN,CAAgBC,SAD3B;;AAGEC,eAAY,qBACZ;AACE,uDAAqB,IAAIV,GAAGO,EAAH,CAAMI,MAAN,CAAaC,IAAjB,EAArB;AACA,WAAKC,WAAL,CAAiB,CAAjB;AACD,KAPH;;AASEC,aACA;AACE;;;;;AAKAC,iBAAY,mBAASC,KAAT,EAAgB;AAC1B,aAAKC,iBAAL,GAAyBF,SAAzB,CAAmCC,KAAnC,EAA0C,KAA1C;AACD,OARH;;AAWE;;;;;AAKAE,iBAAY,mBAASF,KAAT,EAAgB;AAC1B,aAAKC,iBAAL,GAAyBC,SAAzB,CAAmCF,KAAnC,EAA0C,IAA1C;AACD;AAlBH;AAVF,GADA,C;AArBAhB,KAAGO,EAAH,CAAMY,KAAN,CAAYC,IAAZ,CAAiBC,OAAjB,CAAyBlB,aAAzB,GAAyCA,aAAzC",
  "file": "Clipper.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Clipping area for the table header and table pane.\n */\nqx.Class.define(\"qx.ui.table.pane.Clipper\",\n{\n  extend : qx.ui.container.Composite,\n\n  construct : function()\n  {\n    this.base(arguments, new qx.ui.layout.Grow());\n    this.setMinWidth(0);\n  },\n\n  members :\n  {\n    /**\n     * Scrolls the element's content to the given left coordinate\n     *\n     * @param value {Integer} The vertical position to scroll to.\n     */\n    scrollToX : function(value) {\n      this.getContentElement().scrollToX(value, false);\n    },\n\n\n    /**\n     * Scrolls the element's content to the given top coordinate\n     *\n     * @param value {Integer} The horizontal position to scroll to.\n     */\n    scrollToY : function(value) {\n      this.getContentElement().scrollToY(value, true);\n    }\n  }\n});"
  ]
}