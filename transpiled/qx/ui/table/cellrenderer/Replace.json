{
  "className": "qx.ui.table.cellrenderer.Replace",
  "packageName": "qx.ui.table.cellrenderer",
  "name": "Replace",
  "superClass": "qx.ui.table.cellrenderer.Default",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 61,
        "column": 0
      },
      "end": {
        "line": 145,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2007 by Christian Boulanger\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nChristian Boulanger (cboulanger)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "The cell will use, if given, the\nreplaceMap property and/or the replaceFunction to look up labels for a\nspecific cell value. if the replaceMap, which does not need to be used but\ntakes precedence if given, has no entry for a specific value, you can implement\na fallback lookup in the replacementFunction, or use the replacementFunction exclusively.\n\nIn editable cells, you need to make sure that the method returning the data\nto the data storage (for example, a database backend) translates the replaced\ncell value (the label) back into the corresponding value. Thus, both map and\nfunction MUST also take care of the reverse translation of labels into\nvalues. Example: if you have a field that should display \"Active\" on a \"1\"\nvalue and \"Inactive\" on a \"0\" value, you must use the following map:\n\n<pre class='javascript'>\n{\n0 : \"Inactive\",\n1 : \"Active\",\n\"Inactive\" : 0,\n\"Active\" : 1\n}\n</pre>\n\nYou can use the addReversedReplaceMap() method to do this for you:\n<pre class='javascript'>\nvar propertyCellRenderer = new qx.ui.table.cellrenderer.Replace;\npropertyCellRenderer.setReplaceMap({\n1 : \"Active\",\n0 : \"Inactive\",\n2  : \"Waiting\",\n'admin' : \"System Administrator\",\n'manager' : \"User Manager\",\n'user' : \"Website User\"\n});\npropertyCellRenderer.addReversedReplaceMap();\n</pre>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "cellInfo {Map} The information about the cell.\nSee {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
          "paramName": "cellInfo",
          "description": " The information about the cell.\nSee {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
          "type": "Map"
        }
      ],
      "@return": [
        {
          "name": "@return",
          "body": "{String}",
          "type": "qx.ui.table.cellrenderer.String",
          "description": ""
        }
      ]
    }
  },
  "type": "class",
  "properties": {
    "replaceMap": {
      "location": {
        "start": {
          "line": 75,
          "column": 4
        },
        "end": {
          "line": 80,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "a hashmap which is used to replace values by labels"
          }
        ]
      },
      "name": "replaceMap",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "Object"
    },
    "replaceFunction": {
      "location": {
        "start": {
          "line": 85,
          "column": 4
        },
        "end": {
          "line": 90,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "function that provides the label for a specific value"
          }
        ]
      },
      "name": "replaceFunction",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "Function"
    }
  },
  "members": {
    "_getContentHtml": {
      "location": {
        "start": {
          "line": 104,
          "column": 4
        },
        "end": {
          "line": 128,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\nSee {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\nSee {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the inner HTML of the cell.",
            "type": "qx.ui.table.cellrenderer.String",
            "description": " the inner HTML of the cell."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.table.cellrenderer.Default",
      "appearsIn": [
        "qx.ui.table.cellrenderer.Default",
        "qx.ui.table.cellrenderer.Abstract"
      ]
    },
    "addReversedReplaceMap": {
      "location": {
        "start": {
          "line": 134,
          "column": 4
        },
        "end": {
          "line": 143,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "adds a reversed replaceMap to itself to translate labels back to the original values"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code>",
            "type": "qx.ui.table.cellrenderer.Boolean",
            "description": " <code>true</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Default",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Default",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Default",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Default",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Default",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Default",
      "property": "reset"
    },
    "getDefaultCellStyle": {
      "type": "function",
      "name": "getDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Default",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>defaultCellStyle</code>.\n\nFor further details take a look at the property definition: {@link #defaultCellStyle}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for defaultCellStyle"
          }
        ]
      }
    },
    "setDefaultCellStyle": {
      "type": "function",
      "name": "setDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Default",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>defaultCellStyle</code>.\n\nFor further details take a look at the property definition: {@link #defaultCellStyle}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for defaultCellStyle"
          }
        ]
      }
    },
    "resetDefaultCellStyle": {
      "type": "function",
      "name": "resetDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Default",
      "property": "reset"
    },
    "getUseAutoAlign": {
      "type": "function",
      "name": "getUseAutoAlign",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Default",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>useAutoAlign</code>.\n\nFor further details take a look at the property definition: {@link #useAutoAlign}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for useAutoAlign"
          }
        ]
      }
    },
    "isUseAutoAlign": {
      "type": "function",
      "name": "isUseAutoAlign",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Default",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>useAutoAlign</code>.\n\nFor further details take a look at the property definition: {@link #useAutoAlign}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for useAutoAlign"
          }
        ]
      }
    },
    "setUseAutoAlign": {
      "type": "function",
      "name": "setUseAutoAlign",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Default",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>useAutoAlign</code>.\n\nFor further details take a look at the property definition: {@link #useAutoAlign}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for useAutoAlign"
          }
        ]
      }
    },
    "resetUseAutoAlign": {
      "type": "function",
      "name": "resetUseAutoAlign",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Default",
      "property": "reset"
    },
    "getReplaceMap": {
      "type": "function",
      "name": "getReplaceMap",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>replaceMap</code>.\n\nFor further details take a look at the property definition: {@link #replaceMap}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Object",
            "desc": "Returns the value for replaceMap"
          }
        ]
      }
    },
    "setReplaceMap": {
      "type": "function",
      "name": "setReplaceMap",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>replaceMap</code>.\n\nFor further details take a look at the property definition: {@link #replaceMap}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Object",
            "paramName": "value",
            "desc": "Value for replaceMap"
          }
        ]
      }
    },
    "resetReplaceMap": {
      "type": "function",
      "name": "resetReplaceMap",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>replaceMap</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #replaceMap}."
          }
        ]
      }
    },
    "getReplaceFunction": {
      "type": "function",
      "name": "getReplaceFunction",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>replaceFunction</code>.\n\nFor further details take a look at the property definition: {@link #replaceFunction}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Function",
            "desc": "Returns the value for replaceFunction"
          }
        ]
      }
    },
    "setReplaceFunction": {
      "type": "function",
      "name": "setReplaceFunction",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>replaceFunction</code>.\n\nFor further details take a look at the property definition: {@link #replaceFunction}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Function",
            "paramName": "value",
            "desc": "Value for replaceFunction"
          }
        ]
      }
    },
    "resetReplaceFunction": {
      "type": "function",
      "name": "resetReplaceFunction",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>replaceFunction</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #replaceFunction}."
          }
        ]
      }
    }
  },
  "descendants": []
}