{
  "className": "qx.ui.table.cellrenderer.Abstract",
  "packageName": "qx.ui.table.cellrenderer",
  "name": "Abstract",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.ui.table.ICellRenderer"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0
      },
      "end": {
        "line": 244,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2006 STZ-IDA, Germany, http://www.stz-ida.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nTil Schneider (til132)\nFabian Jakobs (fjakobs)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "An abstract data cell renderer that does the basic coloring\n(borders, selected look, ...)."
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.bom.Stylesheet"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": false,
  "construct": {
    "location": {
      "start": {
        "line": 32,
        "column": 2
      },
      "end": {
        "line": 49,
        "column": 3
      }
    }
  },
  "properties": {
    "defaultCellStyle": {
      "location": {
        "start": {
          "line": 58,
          "column": 4
        },
        "end": {
          "line": 63,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The default cell style. The value of this property will be provided\nto the cell renderer as cellInfo.style."
          }
        ]
      },
      "name": "defaultCellStyle",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    }
  },
  "members": {
    "_onChangeTheme": {
      "location": {
        "start": {
          "line": 73,
          "column": 4
        },
        "end": {
          "line": 82,
          "column": 6
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Handler for the theme change."
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_insetX": {
      "location": {
        "start": {
          "line": 89,
          "column": 4
        },
        "end": {
          "line": 89,
          "column": 19
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "the sum of the horizontal insets. This is needed to compute the box model\nindependent size"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_insetY": {
      "location": {
        "start": {
          "line": 95,
          "column": 4
        },
        "end": {
          "line": 95,
          "column": 15
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "paddingLeft + paddingRight + borderRight"
          },
          {
            "name": "@description",
            "body": "the sum of the vertical insets. This is needed to compute the box model\nindependent size"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_createStyleSheet": {
      "location": {
        "start": {
          "line": 101,
          "column": 4
        },
        "end": {
          "line": 128,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Creates the style sheet used for the table cells."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getCellClass": {
      "location": {
        "start": {
          "line": 139,
          "column": 4
        },
        "end": {
          "line": 141,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get a string of the cell element's HTML classes.\n\nThis method may be overridden by sub classes."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} cellInfo of the cell",
            "paramName": "cellInfo",
            "description": " cellInfo of the cell",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The table cell HTML classes as string.",
            "type": "qx.ui.table.cellrenderer.String",
            "description": " The table cell HTML classes as string."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getCellStyle": {
      "location": {
        "start": {
          "line": 154,
          "column": 4
        },
        "end": {
          "line": 156,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the CSS styles that should be applied to the main div of this\ncell.\n\nThis method may be overridden by sub classes."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\nSee {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\nSee {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} the CSS styles of the main div.",
            "type": "var",
            "description": " the CSS styles of the main div."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getCellAttributes": {
      "location": {
        "start": {
          "line": 169,
          "column": 4
        },
        "end": {
          "line": 172,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Retrieve any extra attributes the cell renderer wants applied to this\ncell."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\nSee {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\nSee {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}\nThe extra attributes to be applied to this cell.",
            "type": "qx.ui.table.cellrenderer.String",
            "description": "\nThe extra attributes to be applied to this cell."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getContentHtml": {
      "location": {
        "start": {
          "line": 184,
          "column": 4
        },
        "end": {
          "line": 186,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the HTML that should be used inside the main div of this cell.\n\nThis method may be overridden by sub classes."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\nSee {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\nSee {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the inner HTML of the cell.",
            "type": "qx.ui.table.cellrenderer.String",
            "description": " the inner HTML of the cell."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getCellSizeStyle": {
      "location": {
        "start": {
          "line": 200,
          "column": 4
        },
        "end": {
          "line": 213,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the cell size taking the box model into account"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "width {Integer} The cell's (border-box) width in pixel",
            "paramName": "width",
            "description": " The cell's (border-box) width in pixel",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "height {Integer} The cell's (border-box) height in pixel",
            "paramName": "height",
            "description": " The cell's (border-box) height in pixel",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "insetX {Integer} The cell's horizontal insets, i.e. the sum of\nhorizontal paddings and borders",
            "paramName": "insetX",
            "description": " The cell's horizontal insets, i.e. the sum of\nhorizontal paddings and borders",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "insetY {Integer} The cell's vertical insets, i.e. the sum of\nvertical paddings and borders",
            "paramName": "insetY",
            "description": " The cell's vertical insets, i.e. the sum of\nvertical paddings and borders",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The CSS style string for the cell size",
            "type": "qx.ui.table.cellrenderer.String",
            "description": " The CSS style string for the cell size"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "createDataCellHtml": {
      "location": {
        "start": {
          "line": 217,
          "column": 4
        },
        "end": {
          "line": 231,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "interface implementation"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} A map containing the information about the cell to\ncreate.",
            "paramName": "cellInfo",
            "description": " A map containing the information about the cell to\ncreate.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "htmlArr {String[]} Target string container. The HTML of the data\ncell should be appended to this array.",
            "paramName": "htmlArr",
            "description": " Target string container. The HTML of the data\ncell should be appended to this array.",
            "type": "String[]"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean|undefined}\nA return value of <i>true</i> specifies that no additional cells in\nthe row shall be rendered. This may be used, for example, for\nseparator rows or for other special rendering purposes. Traditional\ncell renderers had no defined return value, so returned nothing\n(undefined). If this method returns either false or nothing, then\nrendering continues with the next cell in the row, which the normal\nmode of operation.",
            "type": "Boolean|undefined",
            "description": "\nA return value of <i>true</i> specifies that no additional cells in\nthe row shall be rendered. This may be used, for example, for\nseparator rows or for other special rendering purposes. Traditional\ncell renderers had no defined return value, so returned nothing\n(undefined). If this method returns either false or nothing, then\nrendering continues with the next cell in the row, which the normal\nmode of operation."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.table.ICellRenderer",
      "appearsIn": [
        "qx.ui.table.ICellRenderer"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getDefaultCellStyle": {
      "type": "function",
      "name": "getDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>defaultCellStyle</code>.\n\nFor further details take a look at the property definition: {@link #defaultCellStyle}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for defaultCellStyle"
          }
        ]
      }
    },
    "setDefaultCellStyle": {
      "type": "function",
      "name": "setDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>defaultCellStyle</code>.\n\nFor further details take a look at the property definition: {@link #defaultCellStyle}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for defaultCellStyle"
          }
        ]
      }
    },
    "resetDefaultCellStyle": {
      "type": "function",
      "name": "resetDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>defaultCellStyle</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #defaultCellStyle}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 236,
        "column": 2
      },
      "end": {
        "line": 243,
        "column": 3
      }
    }
  },
  "descendants": [
    "qx.ui.table.cellrenderer.AbstractImage",
    "qx.ui.table.cellrenderer.Debug",
    "qx.ui.table.cellrenderer.Default",
    "qx.ui.treevirtual.SimpleTreeDataCellRenderer"
  ]
}