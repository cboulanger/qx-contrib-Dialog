{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/table/rowrenderer/Default.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "ui",
    "table",
    "IRowRenderer",
    "construct",
    "initThemeValues",
    "theme",
    "manager",
    "Meta",
    "getInstance",
    "addListener",
    "properties",
    "highlightFocusRow",
    "check",
    "init",
    "members",
    "_colors",
    "_fontStyle",
    "_fontStyleString",
    "_renderFont",
    "Font",
    "resolve",
    "colorMgr",
    "Color",
    "bgcolFocusedSelected",
    "bgcolFocused",
    "bgcolSelected",
    "bgcolEven",
    "bgcolOdd",
    "colSelected",
    "colNormal",
    "horLine",
    "_insetY",
    "font",
    "getStyles",
    "bom",
    "element",
    "Style",
    "compile",
    "replace",
    "getDefaultStyles",
    "updateDataRowElement",
    "rowInfo",
    "rowElem",
    "fontStyle",
    "style",
    "setStyles",
    "focusedRow",
    "getHighlightFocusRow",
    "backgroundColor",
    "selected",
    "row",
    "color",
    "borderBottom",
    "getRowHeightStyle",
    "height",
    "Environment",
    "get",
    "createRowStyle",
    "rowStyle",
    "push",
    "join",
    "getRowClass",
    "getRowAttributes",
    "destruct",
    "removeListener",
    "rowrenderer",
    "Default"
  ],
  "mappings": "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",
  "file": "Default.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n     2007 Visionet GmbH, http://www.visionet.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132) STZ-IDA\n     * Dietrich Streifert (level420) Visionet\n\n************************************************************************ */\n\n/**\n * The default data row renderer.\n */\nqx.Class.define(\"qx.ui.table.rowrenderer.Default\",\n{\n  extend : qx.core.Object,\n  implement : qx.ui.table.IRowRenderer,\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.initThemeValues();\n\n    // dynamic theme switch\n    if (qx.core.Environment.get(\"qx.dyntheme\")) {\n      qx.theme.manager.Meta.getInstance().addListener(\n        \"changeTheme\", this.initThemeValues, this\n      );\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** Whether the focused row should be highlighted. */\n    highlightFocusRow :\n    {\n      check : \"Boolean\",\n      init : true\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    _colors : null,\n    _fontStyle : null,\n    _fontStyleString : null,\n\n    /**\n     * Initializes the colors from the color theme.\n     * @internal\n     */\n    initThemeValues : function() {\n      this._fontStyleString = \"\";\n      this._fontStyle = {};\n\n      this._colors = {};\n\n      // link to font theme\n      this._renderFont(qx.theme.manager.Font.getInstance().resolve(\"default\"));\n\n      // link to color theme\n      var colorMgr = qx.theme.manager.Color.getInstance();\n      this._colors.bgcolFocusedSelected = colorMgr.resolve(\"table-row-background-focused-selected\");\n      this._colors.bgcolFocused = colorMgr.resolve(\"table-row-background-focused\");\n      this._colors.bgcolSelected = colorMgr.resolve(\"table-row-background-selected\");\n      this._colors.bgcolEven = colorMgr.resolve(\"table-row-background-even\");\n      this._colors.bgcolOdd = colorMgr.resolve(\"table-row-background-odd\");\n      this._colors.colSelected = colorMgr.resolve(\"table-row-selected\");\n      this._colors.colNormal = colorMgr.resolve(\"table-row\");\n      this._colors.horLine = colorMgr.resolve(\"table-row-line\");\n    },\n\n\n    /**\n     * the sum of the vertical insets. This is needed to compute the box model\n     * independent size\n     */\n    _insetY : 1, // borderBottom\n\n    /**\n     * Render the new font and update the table pane content\n     * to reflect the font change.\n     *\n     * @param font {qx.bom.Font} The font to use for the table row\n     */\n    _renderFont : function(font)\n    {\n      if (font)\n      {\n        this._fontStyle = font.getStyles();\n        this._fontStyleString = qx.bom.element.Style.compile(this._fontStyle);\n        this._fontStyleString = this._fontStyleString.replace(/\"/g, \"'\");\n      }\n      else\n      {\n        this._fontStyleString = \"\";\n        this._fontStyle = qx.bom.Font.getDefaultStyles();\n      }\n    },\n\n\n    // interface implementation\n    updateDataRowElement : function(rowInfo, rowElem)\n    {\n      var fontStyle = this._fontStyle;\n      var style = rowElem.style;\n\n      // set font styles\n      qx.bom.element.Style.setStyles(rowElem, fontStyle);\n\n      if (rowInfo.focusedRow && this.getHighlightFocusRow())\n      {\n        style.backgroundColor = rowInfo.selected ? this._colors.bgcolFocusedSelected : this._colors.bgcolFocused;\n      }\n      else\n      {\n        if (rowInfo.selected)\n        {\n          style.backgroundColor = this._colors.bgcolSelected;\n        }\n        else\n        {\n          style.backgroundColor = (rowInfo.row % 2 == 0) ? this._colors.bgcolEven : this._colors.bgcolOdd;\n        }\n      }\n\n      style.color = rowInfo.selected ? this._colors.colSelected : this._colors.colNormal;\n      style.borderBottom = \"1px solid \" + this._colors.horLine;\n    },\n\n\n    /**\n     * Get the row's height CSS style taking the box model into account\n     *\n     * @param height {Integer} The row's (border-box) height in pixel\n     * @return {String} CSS rule for the row height\n     */\n    getRowHeightStyle : function(height)\n    {\n      if (qx.core.Environment.get(\"css.boxmodel\") == \"content\") {\n        height -= this._insetY;\n      }\n\n      return \"height:\" + height + \"px;\";\n    },\n\n\n    // interface implementation\n    createRowStyle : function(rowInfo)\n    {\n      var rowStyle = [];\n      rowStyle.push(\";\");\n      rowStyle.push(this._fontStyleString);\n      rowStyle.push(\"background-color:\");\n\n      if (rowInfo.focusedRow && this.getHighlightFocusRow())\n      {\n        rowStyle.push(rowInfo.selected ? this._colors.bgcolFocusedSelected : this._colors.bgcolFocused);\n      }\n      else\n      {\n        if (rowInfo.selected)\n        {\n          rowStyle.push(this._colors.bgcolSelected);\n        }\n        else\n        {\n          rowStyle.push((rowInfo.row % 2 == 0) ? this._colors.bgcolEven : this._colors.bgcolOdd);\n        }\n      }\n\n      rowStyle.push(';color:');\n      rowStyle.push(rowInfo.selected ? this._colors.colSelected : this._colors.colNormal);\n\n      rowStyle.push(';border-bottom: 1px solid ', this._colors.horLine);\n\n      return rowStyle.join(\"\");\n    },\n\n\n    getRowClass : function(rowInfo) {\n      return \"\";\n    },\n\n    /**\n     * Add extra attributes to each row.\n     *\n     * @param rowInfo {Object}\n     *   The following members are available in rowInfo:\n     *   <dl>\n     *     <dt>table {qx.ui.table.Table}</dt>\n     *     <dd>The table object</dd>\n     *\n     *     <dt>styleHeight {Integer}</dt>\n     *     <dd>The height of this (and every) row</dd>\n     *\n     *     <dt>row {Integer}</dt>\n     *     <dd>The number of the row being added</dd>\n     *\n     *     <dt>selected {Boolean}</dt>\n     *     <dd>Whether the row being added is currently selected</dd>\n     *\n     *     <dt>focusedRow {Boolean}</dt>\n     *     <dd>Whether the row being added is currently focused</dd>\n     *\n     *     <dt>rowData {Array}</dt>\n     *     <dd>The array row from the data model of the row being added</dd>\n     *   </dl>\n     *\n     * @return {String}\n     *   Any additional attributes and their values that should be added to the\n     *   div tag for the row.\n     */\n    getRowAttributes : function(rowInfo)\n    {\n      return \"\";\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    this._colors = this._fontStyle = this._fontStyleString = null;\n\n    // remove dynamic theme listener\n    if (qx.core.Environment.get(\"qx.dyntheme\")) {\n      qx.theme.manager.Meta.getInstance().removeListener(\n        \"changeTheme\", this.initThemeValues, this\n      );\n    }\n  }\n});\n"
  ]
}