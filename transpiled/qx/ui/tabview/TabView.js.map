{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/tabview/TabView.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "ISingleSelection",
    "include",
    "MContentPadding",
    "construct",
    "barPosition",
    "__barPositionToState",
    "top",
    "right",
    "bottom",
    "left",
    "_createChildControl",
    "mgr",
    "__radioGroup",
    "_createRadioGroupInstance",
    "setWrap",
    "addListener",
    "_onChangeSelection",
    "setBarPosition",
    "initBarPosition",
    "events",
    "properties",
    "appearance",
    "refine",
    "init",
    "check",
    "apply",
    "members",
    "setValue",
    "item",
    "resetSelection",
    "tabview",
    "Page",
    "setSelection",
    "TypeError",
    "getValue",
    "pages",
    "getSelection",
    "length",
    "resetValue",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "container",
    "SlideBar",
    "setZIndex",
    "_add",
    "Stack",
    "flex",
    "form",
    "RadioGroup",
    "_getContentPaddingTarget",
    "getChildControl",
    "add",
    "page",
    "Error",
    "button",
    "getButton",
    "bar",
    "pane",
    "exclude",
    "addState",
    "getBarPosition",
    "children",
    "getChildren",
    "removeState",
    "_onPageClose",
    "addAt",
    "index",
    "remove",
    "indexOf",
    "hasState",
    "removeListener",
    "getRadioGroup",
    "_applyBarPosition",
    "value",
    "old",
    "horizontal",
    "reversed",
    "layoutClass",
    "layout",
    "HBox",
    "VBox",
    "_getLayout",
    "_setLayout",
    "setReversed",
    "setOrientation",
    "i",
    "l",
    "oldState",
    "newState",
    "buttons",
    "result",
    "push",
    "getUserData",
    "items",
    "isSelected",
    "isSelectionEmpty",
    "getSelectables",
    "all",
    "e",
    "getData",
    "oldButton",
    "getOldData",
    "scrollChildIntoView",
    "fireDataEvent",
    "_onBeforeChangeSelection",
    "fireNonBubblingEvent",
    "event",
    "type",
    "Event",
    "preventDefault",
    "_onRadioChangeSelection",
    "element",
    "getTarget",
    "closeButton",
    "reset",
    "destruct",
    "_disposeObjects",
    "TabView"
  ],
  "mappings": "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",
  "file": "TabView.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n     * Jonathan Weiß (jonathan_rass)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A tab view is a multi page view where only one page is visible\n * at each moment. It is possible to switch the pages using the\n * buttons rendered by each page.\n * \n * Note that prior to v6.0, when changing the currently selected tab via code\n * (ie changing the selection property) TabView would automatically set the \n * focus to that tab; this is undesirable (and inconsistent with other parts\n * of the framework) and is no longer done automatically.\n *\n * @childControl bar {qx.ui.container.SlideBar} slidebar for all tab buttons\n * @childControl pane {qx.ui.container.Stack} stack container to show one tab page\n */\nqx.Class.define(\"qx.ui.tabview.TabView\",\n{\n  extend : qx.ui.core.Widget,\n  implement : qx.ui.core.ISingleSelection,\n  include : [qx.ui.core.MContentPadding],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n\n  /**\n   * @param barPosition {String} Initial bar position ({@link #barPosition})\n   */\n  construct : function(barPosition)\n  {\n    this.base(arguments);\n\n    this.__barPositionToState = {\n      top : \"barTop\",\n      right : \"barRight\",\n      bottom : \"barBottom\",\n      left : \"barLeft\"\n    };\n\n    this._createChildControl(\"bar\");\n    this._createChildControl(\"pane\");\n\n    // Create manager\n    var mgr = this.__radioGroup = this._createRadioGroupInstance();\n    mgr.setWrap(false);\n    mgr.addListener(\"changeSelection\", this._onChangeSelection, this);\n\n    // Initialize bar position\n    if (barPosition != null) {\n      this.setBarPosition(barPosition);\n    } else {\n      this.initBarPosition();\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n\n  events :\n  {\n    /** Fires after the selection was modified */\n    \"changeSelection\" : \"qx.event.type.Data\",\n\n    /** Fires after the value was modified */\n    \"changeValue\" : \"qx.event.type.Data\"\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"tabview\"\n    },\n\n    /**\n     * This property defines on which side of the TabView the bar should be positioned.\n     */\n    barPosition :\n    {\n      check : [\"left\", \"right\", \"top\", \"bottom\"],\n      init : \"top\",\n      apply : \"_applyBarPosition\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n\n  members :\n  {\n    /** @type {qx.ui.form.RadioGroup} instance containing the radio group */\n    __radioGroup : null,\n\n\n    /**\n     * setValue implements part of the {@link qx.ui.form.IField} interface.\n     *\n     * @param item {null|qx.ui.tabview.Page} Page to set as selected value.\n     * @returns {null|TypeError} The status of this operation.\n     */\n    setValue : function(item) {\n      if (null === item) {\n        this.resetSelection();\n        return null;\n      }\n\n      if (item instanceof qx.ui.tabview.Page) {\n        this.setSelection([item]);\n        return null;\n\n      } else {\n        return new TypeError(\"Given argument is not null or a {qx.ui.tabview.Page}.\");\n      }\n    },\n\n\n    /**\n     * getValue implements part of the {@link qx.ui.form.IField} interface.\n     *\n     * @returns {null|qx.ui.tabview.Page} The currently selected page or null if there is none.\n     */\n    getValue : function() {\n      var pages = this.getSelection();\n      if (pages.length) {\n        return pages[0];\n      } else {\n        return null;\n      }\n    },\n\n\n    /**\n     * resetValue implements part of the {@link qx.ui.form.IField} interface.\n     */\n    resetValue : function() {\n      this.resetSelection();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"bar\":\n          control = new qx.ui.container.SlideBar();\n          control.setZIndex(10);\n          this._add(control);\n          break;\n\n        case \"pane\":\n          control = new qx.ui.container.Stack;\n          control.setZIndex(5);\n          this._add(control, {flex:1});\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n    /**\n     * Creates the radio group manager instance.\n     * \n     * Allows override customizations of the instance \n     * \n     * @return {qx.ui.form.RadioGroup} \n     */\n    _createRadioGroupInstance : function() {\n      return new qx.ui.form.RadioGroup;\n    },\n    \n    /**\n     * Returns the element, to which the content padding should be applied.\n     *\n     * @return {qx.ui.core.Widget} The content padding target.\n     */\n    _getContentPaddingTarget : function() {\n      return this.getChildControl(\"pane\");\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Adds a page to the tabview including its needed button\n     * (contained in the page).\n     *\n     * @param page {qx.ui.tabview.Page} The page which should be added.\n     */\n    add : function(page)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (!(page instanceof qx.ui.tabview.Page)) {\n          throw new Error(\"Incompatible child for TabView: \" + page);\n        }\n      }\n\n      var button = page.getButton();\n      var bar = this.getChildControl(\"bar\");\n      var pane = this.getChildControl(\"pane\");\n\n      // Exclude page\n      page.exclude();\n\n      // Add button and page\n      bar.add(button);\n      pane.add(page);\n\n      // Register button\n      this.__radioGroup.add(button);\n\n      // Add state to page\n      page.addState(this.__barPositionToState[this.getBarPosition()]);\n\n      // Update states\n      page.addState(\"lastTab\");\n      var children = this.getChildren();\n      if (children[0] == page) {\n        page.addState(\"firstTab\");\n      } else {\n        children[children.length-2].removeState(\"lastTab\");\n      }\n\n      page.addListener(\"close\", this._onPageClose, this);\n    },\n\n    /**\n     * Adds a page to the tabview including its needed button\n     * (contained in the page).\n     *\n     * @param page {qx.ui.tabview.Page} The page which should be added.\n     * @param index {Integer?null} Optional position where to add the page.\n     */\n    addAt : function(page, index)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (!(page instanceof qx.ui.tabview.Page)) {\n          throw new Error(\"Incompatible child for TabView: \" + page);\n        }\n      }\n      var children = this.getChildren();\n      if(!(index == null) && index > children.length) {\n        throw new Error(\"Index should be less than : \" + children.length);\n      }\n\n      if(index == null) {\n        index = children.length;\n      }\n\n      var button = page.getButton();\n      var bar = this.getChildControl(\"bar\");\n      var pane = this.getChildControl(\"pane\");\n\n      // Exclude page\n      page.exclude();\n\n      // Add button and page\n      bar.addAt(button, index);\n      pane.addAt(page, index);\n\n      // Register button\n      this.__radioGroup.add(button);\n\n      // Add state to page\n      page.addState(this.__barPositionToState[this.getBarPosition()]);\n\n      // Update states\n      children = this.getChildren();\n      if(index == children.length-1) {\n        page.addState(\"lastTab\");\n      }\n\n      if (children[0] == page) {\n        page.addState(\"firstTab\");\n      } else {\n        children[children.length-2].removeState(\"lastTab\");\n      }\n\n      page.addListener(\"close\", this._onPageClose, this);\n    },\n\n    /**\n     * Removes a page (and its corresponding button) from the TabView.\n     *\n     * @param page {qx.ui.tabview.Page} The page to be removed.\n     */\n    remove : function(page)\n    {\n      var pane = this.getChildControl(\"pane\");\n      var bar = this.getChildControl(\"bar\");\n      var button = page.getButton();\n      var children = pane.getChildren();\n\n      // Try to select next page\n      if (this.getSelection()[0] == page)\n      {\n        var index = children.indexOf(page);\n        if (index == 0)\n        {\n          if (children[1]) {\n            this.setSelection([children[1]]);\n          } else {\n            this.resetSelection();\n          }\n        }\n        else\n        {\n          this.setSelection([children[index-1]]);\n        }\n      }\n\n      // Remove the button and page\n      bar.remove(button);\n      pane.remove(page);\n\n      // Remove the button from the radio group\n      this.__radioGroup.remove(button);\n\n      // Remove state from page\n      page.removeState(this.__barPositionToState[this.getBarPosition()]);\n\n      // Update states\n      if (page.hasState(\"firstTab\"))\n      {\n        page.removeState(\"firstTab\");\n        if (children[0]) {\n          children[0].addState(\"firstTab\");\n        }\n      }\n\n      if (page.hasState(\"lastTab\"))\n      {\n        page.removeState(\"lastTab\");\n        if (children.length > 0) {\n          children[children.length-1].addState(\"lastTab\");\n        }\n      }\n\n      page.removeListener(\"close\", this._onPageClose, this);\n    },\n\n    /**\n     * Returns TabView's children widgets.\n     *\n     * @return {qx.ui.tabview.Page[]} List of children.\n     */\n    getChildren : function() {\n      return this.getChildControl(\"pane\").getChildren();\n    },\n\n    /**\n     * Returns the position of the given page in the TabView.\n     *\n     * @param page {qx.ui.tabview.Page} The page to query for.\n     * @return {Integer} Position of the page in the TabView.\n     */\n    indexOf : function(page) {\n      return this.getChildControl(\"pane\").indexOf(page);\n    },\n\n    /**\n     * Returns the radio group manager.\n     *\n     * @return {qx.ui.form.RadioGroup} the radio group.\n     */\n    getRadioGroup : function() {\n      return this.__radioGroup;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n\n    /** @type {Map} Maps the bar position to an appearance state */\n    __barPositionToState : null,\n\n    /**\n     * Apply method for the placeBarOnTop-Property.\n     *\n     * Passes the desired value to the layout of the tabview so\n     * that the layout can handle it.\n     * It also sets the states to all buttons so they know the\n     * position of the bar.\n     *\n     * @param value {Boolean} The new value.\n     * @param old {Boolean} The old value.\n     */\n    _applyBarPosition : function(value, old)\n    {\n      var bar = this.getChildControl(\"bar\");\n      var pane = this.getChildControl(\"pane\");\n\n      var horizontal = value == \"left\" || value == \"right\";\n      var reversed = value == \"right\" || value == \"bottom\";\n\n      var layoutClass = horizontal ? qx.ui.layout.HBox : qx.ui.layout.VBox;\n\n      var layout = this._getLayout();\n      if (layout && layout instanceof layoutClass) {\n        // pass\n      } else {\n        this._setLayout(layout = new layoutClass);\n      }\n\n      // Update reversed\n      layout.setReversed(reversed);\n\n      // Sync orientation to bar\n      bar.setOrientation(horizontal ? \"vertical\" : \"horizontal\");\n\n      // Read children\n      var children = this.getChildren();\n\n      var i, l;\n      // Toggle state to bar\n      if (old)\n      {\n        var oldState = this.__barPositionToState[old];\n\n        // Update bar\n        bar.removeState(oldState);\n\n        // Update pane\n        pane.removeState(oldState);\n\n        // Update pages\n        for (i=0, l=children.length; i<l; i++) {\n          children[i].removeState(oldState);\n        }\n      }\n\n      if (value)\n      {\n        var newState = this.__barPositionToState[value];\n\n        // Update bar\n        bar.addState(newState);\n\n        // Update pane\n        pane.addState(newState);\n\n        // Update pages\n        for (i=0, l=children.length; i<l; i++) {\n          children[i].addState(newState);\n        }\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns an array of currently selected items.\n     *\n     * Note: The result is only a set of selected items, so the order can\n     * differ from the sequence in which the items were added.\n     *\n     * @return {qx.ui.tabview.Page[]} List of items.\n     */\n    getSelection : function() {\n      var buttons = this.__radioGroup.getSelection();\n      var result = [];\n\n      for (var i = 0; i < buttons.length; i++) {\n        result.push(buttons[i].getUserData(\"page\"));\n      }\n\n      return result;\n    },\n\n    /**\n     * Replaces current selection with the given items.\n     *\n     * @param items {qx.ui.tabview.Page[]} Items to select.\n     * @throws {Error} if one of the items is not a child element and if\n     *    items contains more than one elements.\n     */\n    setSelection : function(items) {\n      var buttons = [];\n\n      for (var i = 0; i < items.length; i++) {\n        buttons.push(items[i].getChildControl(\"button\"));\n      }\n      this.__radioGroup.setSelection(buttons);\n    },\n\n    /**\n     * Clears the whole selection at once.\n     */\n    resetSelection : function() {\n      this.__radioGroup.resetSelection();\n    },\n\n    /**\n     * Detects whether the given item is currently selected.\n     *\n     * @param item {qx.ui.tabview.Page} Any valid selectable item.\n     * @return {Boolean} Whether the item is selected.\n     * @throws {Error} if one of the items is not a child element.\n     */\n    isSelected : function(item) {\n      var button = item.getChildControl(\"button\");\n      return this.__radioGroup.isSelected(button);\n    },\n\n    /**\n     * Whether the selection is empty.\n     *\n     * @return {Boolean} Whether the selection is empty.\n     */\n    isSelectionEmpty : function() {\n      return this.__radioGroup.isSelectionEmpty();\n    },\n\n\n    /**\n     * Returns all elements which are selectable.\n     *\n     * @return {qx.ui.tabview.Page[]} The contained items.\n     * @param all {Boolean} true for all selectables, false for the\n     *   selectables the user can interactively select\n     */\n    getSelectables: function(all) {\n      var buttons = this.__radioGroup.getSelectables(all);\n      var result = [];\n\n      for (var i = 0; i <buttons.length; i++) {\n        result.push(buttons[i].getUserData(\"page\"));\n      }\n\n      return result;\n    },\n\n    /**\n     * Event handler for <code>changeSelection</code>.\n     *\n     * @param e {qx.event.type.Data} Data event.\n     */\n    _onChangeSelection : function(e)\n    {\n      var pane = this.getChildControl(\"pane\");\n      var button = e.getData()[0];\n      var oldButton = e.getOldData()[0];\n      var value = [];\n      var old = [];\n\n      if (button)\n      {\n        value = [button.getUserData(\"page\")];\n        pane.setSelection(value);\n        this.scrollChildIntoView(button, null, null, false);\n      }\n      else\n      {\n        pane.resetSelection();\n      }\n\n      if (oldButton) {\n        old = [oldButton.getUserData(\"page\")];\n      }\n\n      this.fireDataEvent(\"changeSelection\", value, old);\n    },\n\n    /**\n     * Event handler for <code>beforeChangeSelection</code>.\n     *\n     * @param e {qx.event.type.Event} Data event.\n     */\n    _onBeforeChangeSelection : function(e)\n    {\n      if (!this.fireNonBubblingEvent(\"beforeChangeSelection\",\n          qx.event.type.Event, [false, true])) {\n        e.preventDefault();\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event handler for the change of the selected item of the radio group.\n     * @param e {qx.event.type.Data} The data event\n     */\n    _onRadioChangeSelection : function(e) {\n      var element = e.getData()[0];\n      if (element) {\n        this.setSelection([element.getUserData(\"page\")]);\n      } else {\n        this.resetSelection();\n      }\n    },\n\n\n    /**\n     * Removes the Page widget on which the close button was tapped.\n     *\n     * @param e {qx.event.type.Pointer} pointer event\n     */\n    _onPageClose : function(e)\n    {\n      // reset the old close button states, before remove page\n      // see http://bugzilla.qooxdoo.org/show_bug.cgi?id=3763 for details\n      var page = e.getTarget();\n      var closeButton = page.getButton().getChildControl(\"close-button\");\n      closeButton.reset();\n\n      this.remove(page);\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n\n  destruct : function() {\n    this._disposeObjects(\"__radioGroup\");\n    this.__barPositionToState = null;\n  }\n});\n"
  ]
}