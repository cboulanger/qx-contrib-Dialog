{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/mobile/core/Widget.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "include",
    "locale",
    "MTranslation",
    "construct",
    "_setContainerElement",
    "_createContainerElement",
    "__children",
    "setId",
    "getId",
    "initDefaultCssClass",
    "initName",
    "initAnonymous",
    "initActivatable",
    "events",
    "mousemove",
    "mouseover",
    "mouseout",
    "mousedown",
    "mouseup",
    "click",
    "dblclick",
    "contextmenu",
    "beforeContextmenuOpen",
    "mousewheel",
    "touchstart",
    "touchend",
    "touchmove",
    "touchcancel",
    "tap",
    "longtap",
    "swipe",
    "rotate",
    "pinch",
    "track",
    "keyup",
    "keydown",
    "keypress",
    "keyinput",
    "domupdated",
    "appear",
    "disappear",
    "focus",
    "blur",
    "focusin",
    "focusout",
    "activate",
    "deactivate",
    "roll",
    "properties",
    "defaultCssClass",
    "check",
    "init",
    "nullable",
    "apply",
    "enabled",
    "event",
    "name",
    "anonymous",
    "id",
    "transform",
    "visibility",
    "activatable",
    "rotation",
    "transformUnit",
    "scaleX",
    "scaleY",
    "translateX",
    "translateY",
    "translateZ",
    "statics",
    "ID_PREFIX",
    "__registry",
    "__idCounter",
    "__domUpdatedScheduleId",
    "onShutdown",
    "window",
    "clearTimeout",
    "ui",
    "mobile",
    "Widget",
    "getCurrentId",
    "registerWidget",
    "widget",
    "registry",
    "Assert",
    "assertUndefined",
    "unregisterWidget",
    "getWidgetById",
    "scheduleDomUpdated",
    "setTimeout",
    "domUpdated",
    "GlobalError",
    "observeMethod",
    "clazz",
    "handler",
    "Appear",
    "refresh",
    "DomUpdatedHandler",
    "addAttributeMapping",
    "property",
    "attribute",
    "values",
    "attributeMapping",
    "ATTRIBUTE_MAPPING",
    "addStyleMapping",
    "style",
    "styleMapping",
    "STYLE_MAPPING",
    "members",
    "__containerElement",
    "__contentElement",
    "__layoutParent",
    "__layoutManager",
    "_getTagName",
    "dom",
    "Element",
    "create",
    "_domUpdated",
    "_transformId",
    "value",
    "_applyId",
    "old",
    "element",
    "getContainerElement",
    "_applyEnabled",
    "removeCssClass",
    "_setStyle",
    "getAnonymous",
    "addCssClass",
    "_add",
    "child",
    "layoutProperties",
    "getLayoutParent",
    "Error",
    "_initializeChildLayout",
    "getContentElement",
    "appendChild",
    "push",
    "_addAt",
    "index",
    "options",
    "lang",
    "Array",
    "remove",
    "ref",
    "_addBefore",
    "beforeWidget",
    "assertInArray",
    "_getChildren",
    "insertBefore",
    "_addAfter",
    "afterWidget",
    "length",
    "_indexOf",
    "insertAfter",
    "_remove",
    "setLayoutParent",
    "_removeAt",
    "_removeAll",
    "children",
    "concat",
    "i",
    "l",
    "indexOf",
    "parent",
    "oldParent",
    "$$disposed",
    "removeChild",
    "layout",
    "_getLayout",
    "disconnectFromChildWidget",
    "_hasChildren",
    "_setLayout",
    "assertInstance",
    "Abstract",
    "connectToWidget",
    "setLayoutProperties",
    "connectToChildWidget",
    "updateLayoutProperties",
    "updateLayout",
    "action",
    "_setHtml",
    "innerHTML",
    "_transform",
    "propertyValue",
    "getRotation",
    "getScaleX",
    "getScaleY",
    "resolutionFactor",
    "getTransformUnit",
    "getTranslateX",
    "getTranslateY",
    "isTransform3d",
    "Environment",
    "get",
    "getTranslateZ",
    "bom",
    "Style",
    "set",
    "_applyAttribute",
    "_setAttribute",
    "mapping",
    "Attribute",
    "reset",
    "_getAttribute",
    "_applyStyle",
    "_getStyle",
    "_applyDefaultCssClass",
    "cssClass",
    "add",
    "addCssClasses",
    "cssClasses",
    "addClasses",
    "hasCssClass",
    "removeCssClasses",
    "removeClasses",
    "toggleCssClass",
    "has",
    "_applyVisibility",
    "__setVisibility",
    "setVisibility",
    "show",
    "hide",
    "exclude",
    "isVisible",
    "getVisibility",
    "isHidden",
    "isExcluded",
    "isSeeable",
    "offsetWidth",
    "_getContentElement",
    "destroy",
    "dispose",
    "destruct",
    "ObjectRegistry",
    "inShutDown",
    "Registration",
    "removeAllListeners",
    "defer",
    "Lifecycle"
  ],
  "mappings": "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",
  "file": "Widget.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\n/**\n * This is the base class for all mobile widgets.\n *\n * @use(qx.ui.mobile.core.EventHandler)\n */\nqx.Class.define(\"qx.ui.mobile.core.Widget\",\n{\n  extend : qx.core.Object,\n  include : [qx.locale.MTranslation],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this._setContainerElement(this._createContainerElement());\n\n    // Init member variables\n\n    this.__children = [];\n\n    this.setId(this.getId());\n    this.initDefaultCssClass();\n    this.initName();\n    this.initAnonymous();\n    this.initActivatable();\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fired if the mouse cursor moves over the widget. */\n    mousemove : \"qx.event.type.Mouse\",\n\n    /** Fired if the mouse cursor enters the widget. */\n    mouseover : \"qx.event.type.Mouse\",\n\n    /** Fired if the mouse cursor leaves widget. */\n    mouseout : \"qx.event.type.Mouse\",\n\n    /** Mouse button is pressed on the widget. */\n    mousedown : \"qx.event.type.Mouse\",\n\n    /** Mouse button is released on the widget. */\n    mouseup : \"qx.event.type.Mouse\",\n\n    /** Widget is clicked using left or middle button.\n        {@link qx.event.type.Mouse#getButton} for more details.*/\n    click : \"qx.event.type.Mouse\",\n\n    /** Widget is double clicked using left or middle button.\n        {@link qx.event.type.Mouse#getButton} for more details.*/\n    dblclick : \"qx.event.type.Mouse\",\n\n    /** Widget is clicked using the right mouse button. */\n    contextmenu : \"qx.event.type.Mouse\",\n\n    /** Fired before the context menu is opened. */\n    beforeContextmenuOpen : \"qx.event.type.Mouse\",\n\n    /** Fired if the mouse wheel is used over the widget. */\n    mousewheel : \"qx.event.type.MouseWheel\",\n\n    /** Fired if a touch at the screen is started. */\n    touchstart : \"qx.event.type.Touch\",\n\n    /** Fired if a touch at the screen has ended. */\n    touchend : \"qx.event.type.Touch\",\n\n    /** Fired during a touch at the screen. */\n    touchmove : \"qx.event.type.Touch\",\n\n    /** Fired if a touch at the screen is canceled. */\n    touchcancel : \"qx.event.type.Touch\",\n\n    /** Fired when a finger taps on the screen. */\n    tap : \"qx.event.type.Tap\",\n\n    /** Fired when a finger holds on the screen. */\n    longtap : \"qx.event.type.Tap\",\n\n    /** Fired when a finger swipes over the screen. */\n    swipe : \"qx.event.type.Touch\",\n\n    /** Fired when two pointers performing a rotate gesture on the screen. */\n    rotate : \"qx.event.type.Rotate\",\n\n    /** Fired when two pointers performing a pinch in/out gesture on the screen. */\n    pinch : \"qx.event.type.Pinch\",\n\n    /** Fired when an active pointer moves on the screen (after pointerdown till pointerup). */\n    track : \"qx.event.type.Track\",\n\n    /**\n     * This event if fired if a keyboard key is released.\n     **/\n    keyup : \"qx.event.type.KeySequence\",\n\n    /**\n     * This event if fired if a keyboard key is pressed down. This event is\n     * only fired once if the user keeps the key pressed for a while.\n     */\n    keydown : \"qx.event.type.KeySequence\",\n\n    /**\n     * This event is fired any time a key is pressed. It will be repeated if\n     * the user keeps the key pressed. The pressed key can be determined using\n     * {@link qx.event.type.KeySequence#getKeyIdentifier}.\n     */\n    keypress : \"qx.event.type.KeySequence\",\n\n    /**\n     * This event is fired if the pressed key or keys result in a printable\n     * character. Since the character is not necessarily associated with a\n     * single physical key press, the event does not have a key identifier\n     * getter. This event gets repeated if the user keeps pressing the key(s).\n     *\n     * The unicode code of the pressed key can be read using\n     * {@link qx.event.type.KeyInput#getCharCode}.\n     */\n    keyinput : \"qx.event.type.KeyInput\",\n\n\n    /**\n     * Fired after a massive DOM manipulation, e.g. when DOM elements were\n     * added or styles were changed. Listen to this event, if you need to\n     * recalculate a layout or have to update your view.\n     */\n    domupdated : \"qx.event.type.Event\",\n\n    /**\n     * Fired after the widget appears on the screen.\n     */\n    appear : \"qx.event.type.Event\",\n\n    /**\n     * Fired after the widget disappears from the screen.\n     */\n    disappear : \"qx.event.type.Event\",\n\n\n    /**\n     * The event is fired when the widget gets focused.\n     */\n    focus : \"qx.event.type.Focus\",\n\n    /**\n     * The event is fired when the widget gets blurred.\n     */\n    blur : \"qx.event.type.Focus\",\n\n    /**\n     * When the widget itself or any child of the widget receive the focus.\n     */\n    focusin : \"qx.event.type.Focus\",\n\n    /**\n     * When the widget itself or any child of the widget lost the focus.\n     */\n    focusout : \"qx.event.type.Focus\",\n\n    /**\n     * When the widget gets active (receives keyboard events etc.)\n     */\n    activate : \"qx.event.type.Focus\",\n\n    /**\n     * When the widget gets inactive\n     */\n    deactivate : \"qx.event.type.Focus\",\n\n    /**\n     * Fired when an active pointer moves on the screen or the mouse wheel is used.\n     */\n    roll : \"qx.event.type.Roll\"\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * The default CSS class used for this widget. The default CSS class\n     * should contain the common appearance of the widget.\n     * It is set to the container element of the widget. Use {@link #addCssClass}\n     * to enhance the default appearance of the widget.\n     */\n    defaultCssClass :\n    {\n      check : \"String\",\n      init : null,\n      nullable : true,\n      apply  : \"_applyDefaultCssClass\"\n    },\n\n\n    /**\n     * Whether this widget is enabled or not\n     */\n    enabled :\n    {\n      init: true,\n      check : \"Boolean\",\n      nullable: false,\n      event : \"changeEnabled\",\n      apply: \"_applyEnabled\"\n    },\n\n\n    /**\n     * The name attribute of the container element. Useful when you want to find\n     * an element by its name attribute.\n     */\n    name :\n    {\n      check : \"String\",\n      init : null,\n      nullable : true,\n      apply : \"_applyAttribute\"\n    },\n\n\n    /**\n     * Whether the widget should be the target of an event. Set this property\n     * to <code>false</code> when the widget is a child of another widget and\n     * shouldn't react on events.\n     */\n    anonymous :\n    {\n      check : \"Boolean\",\n      init : null,\n      nullable : true,\n      apply : \"_applyStyle\"\n    },\n\n\n    /**\n     * The ID of the widget. When the ID is set to <code>null</code> an auto\n     * id will be generated.\n     */\n    id :\n    {\n      check : \"String\",\n      init : null,\n      nullable : true,\n      apply : \"_applyId\",\n      transform : \"_transformId\",\n      event : \"changeId\"\n    },\n\n\n    /**\n     * Controls the visibility. Valid values are:\n     *\n     * <ul>\n     *   <li><b>visible</b>: Render the widget</li>\n     *   <li><b>hidden</b>: Hide the widget. The space will be still available.</li>\n     *   <li><b>excluded</b>: Hide the widget. The space will be released.</li>\n     * </ul>\n     */\n    visibility :\n    {\n      check : [\"visible\", \"hidden\", \"excluded\"],\n      init : \"visible\",\n      apply : \"_applyVisibility\",\n      event : \"changeVisibility\"\n    },\n\n\n    /**\n     * Whether the widget can be activated or not. When the widget is activated\n     * a css class <code>active</code> is automatically added to the widget, which\n     * can indicate the activation status.\n     */\n    activatable :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyAttribute\"\n    },\n\n\n    /**\n     * Rotates the widget. Negative and positive values are allowed.\n     */\n    rotation :\n    {\n      check : \"Number\",\n      nullable : true,\n      init : null,\n      apply : \"_transform\"\n    },\n\n\n    /**\n    * This property controls whether the transformation uses the length unit <code>px<code> or <code>rem</code>.\n    * This feature is important for creating a resolution independent transformation.\n    */\n    transformUnit :\n    {\n      check : [\"rem\", \"px\"],\n      nullable : false,\n      init : \"rem\",\n      apply : \"_transform\"\n    },\n\n\n    /**\n     * Scales the widget in X direction (width).\n     */\n    scaleX :\n    {\n      check : \"Number\",\n      nullable : true,\n      init : null,\n      apply : \"_transform\"\n    },\n\n\n    /**\n     * Scales the widget in Y direction (height).\n     */\n    scaleY :\n    {\n      check : \"Number\",\n      nullable : true,\n      init : null,\n      apply : \"_transform\"\n    },\n\n\n    /**\n     * Moves the widget on X axis.\n     */\n    translateX :\n    {\n      check : \"Number\",\n      nullable : true,\n      init : 0,\n      apply : \"_transform\"\n    },\n\n\n    /**\n     * Moves the widget on Y axis.\n     */\n    translateY :\n    {\n      check : \"Number\",\n      nullable : true,\n      init : 0,\n      apply : \"_transform\"\n    },\n\n\n    /**\n     * Moves the widget on Z axis.\n     */\n    translateZ :\n    {\n      check : \"Number\",\n      nullable : true,\n      init : 0,\n      apply : \"_transform\"\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {String} Prefix for the auto id */\n    ID_PREFIX : \"qx_id_\",\n\n    /** @type {Map} Internal data structure to store widgets */\n    __registry : {},\n\n    /** @type {Integer} Incremental counter of the current id */\n    __idCounter : 0,\n\n    /** @type {Integer} ID of the timeout for the DOM update */\n    __domUpdatedScheduleId : null,\n\n    /**\n     * Event handler. Called when the application is in shutdown.\n     * @internal\n     */\n    onShutdown : function()\n    {\n      window.clearTimeout(qx.ui.mobile.core.Widget.__domUpdatedScheduleId);\n      delete qx.ui.mobile.core.Widget.__registry;\n    },\n\n    /**\n     * Returns the current widget id of the registry.\n\n     * @return {Integer} The current id\n     * @internal\n     */\n    getCurrentId : function()\n    {\n      return qx.ui.mobile.core.Widget.__idCounter;\n    },\n\n\n    /**\n     * Registers a widget with its id for internal widget handling.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to register\n     *\n     * @internal\n     */\n    registerWidget : function(widget)\n    {\n      var id = widget.getId();\n      var registry = qx.ui.mobile.core.Widget.__registry;\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertUndefined(registry[id], \"Widget with the id '\" + id + \"' is already registered\");\n      }\n      registry[id] = widget;\n    },\n\n\n    /**\n     * Unregisters the widget with the given id.\n     *\n     * @param id {String} The id of the widget to unregister\n     *\n     * @internal\n     */\n    unregisterWidget : function(id)\n    {\n      delete qx.ui.mobile.core.Widget.__registry[id];\n    },\n\n\n   /**\n     * Returns the widget with the given id.\n     *\n     * @param id {String} The id of the widget\n     * @return {qx.ui.core.Widget} The widget with the given id\n     */\n    getWidgetById : function(id) {\n      return qx.ui.mobile.core.Widget.__registry[id];\n    },\n\n\n    /**\n     * Schedules the {@link #domUpdated} method. The method will be called after a timeout\n     * to prevent the triggered events to be fired too often, during massive DOM manipulations.\n     *\n     * @internal\n     */\n    scheduleDomUpdated : function()\n    {\n      if (qx.ui.mobile.core.Widget.__domUpdatedScheduleId == null)\n      {\n        qx.ui.mobile.core.Widget.__domUpdatedScheduleId = window.setTimeout(\n          qx.ui.mobile.core.Widget.domUpdated,\n          0\n        );\n      }\n    },\n\n\n    /**\n     * Fires the DOM updated event directly. Triggers the {@link qx.event.handler.Appear#refresh} and\n     * {@link qx.ui.mobile.core.DomUpdatedHandler#refresh} methods. Do not use this\n     * method during massive DOM manipulations. Use {@link #scheduleDomUpdated} instead.\n     *\n     * @internal\n     */\n    domUpdated : qx.event.GlobalError.observeMethod(function()\n    {\n      var clazz = qx.ui.mobile.core.Widget;\n      window.clearTimeout(clazz.__domUpdatedScheduleId);\n      clazz.__domUpdatedScheduleId = null;\n      qx.event.handler.Appear.refresh();\n      qx.ui.mobile.core.DomUpdatedHandler.refresh();\n    }),\n\n\n    /**\n     * Adds an attribute mapping entry. This entry is used by the {@link #_applyAttribute}\n     * method. Shortcut when the property name differs from the real\n     * attribute name. Use this method if you want to add an attribute entry to the mapping\n     * from the defer function of a different widget.\n     *\n     * e.g.:\n     * \"selectable\" :\n     * {\n     *   attribute : \"data-selectable\",\n     *   values :\n     *   {\n     *     \"true\" : null,\n     *     \"false\" : \"false\"\n     *   }\n     * }\n     *\n     * @param property {String} The property name\n     * @param attribute {String} The real attribute name\n     * @param values {Map} Values of the property to the real attribute value.\n     *      Use null, when you want not to set the attribute.\n     */\n    addAttributeMapping : function(property, attribute, values)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        var attributeMapping = qx.ui.mobile.core.Widget.ATTRIBUTE_MAPPING;\n        qx.core.Assert.assertUndefined(attributeMapping[property], \"Attribute mapping for \" + property + \" already exists\");\n      }\n\n      qx.ui.mobile.core.Widget.ATTRIBUTE_MAPPING[property] = {\n        attribute : attribute,\n        values : values\n      };\n    },\n\n\n    /**\n     * Adds a style mapping entry. This entry is used by the {@link #_applyStyle}\n     * method. Shortcut when the property name differs from the real\n     * style name. Use this method if you want to add a style entry to the mapping\n     * from the defer function of a different widget.\n     *\n     * e.g.:\n     * \"anonymous\" :\n     * {\n     *  style : \"pointer-events\",\n     *  values :\n     *  {\n     *    \"true\" : \"none\",\n     *    \"false\" : null\n     *  }\n     * }\n     *\n     * @param property {String} The property name\n     * @param style {String} The real style name\n     * @param values {Map} Values of the property to the real style value.\n     *      Use null, when you want not to set the style.\n     */\n    addStyleMapping : function(property, style, values)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        var styleMapping = qx.ui.mobile.core.Widget.STYLE_MAPPING;\n        qx.core.Assert.assertUndefined(styleMapping[property], \"Style mapping for \" + property + \" already exists\");\n      }\n\n      qx.ui.mobile.core.Widget.STYLE_MAPPING[property] = {\n        style : style,\n        values : values\n      };\n    },\n\n\n    /**\n     * Mapping of attribute properties to their real attribute name.\n     *\n     * @internal\n     */\n    ATTRIBUTE_MAPPING :\n    {\n      \"selectable\" :\n      {\n        attribute : \"data-selectable\",\n        values :\n        {\n          \"true\" : null,\n          \"false\" : \"false\"\n        }\n      },\n      \"activatable\" :\n      {\n        attribute : \"data-activatable\",\n        values :\n        {\n          \"true\" :\"true\",\n          \"false\" : null\n        }\n      },\n      \"readOnly\" :\n      {\n        attribute : \"readonly\"\n      }\n    },\n\n\n    /**\n     * Mapping of style properties to their real style name.\n     *\n     * @internal\n     */\n    STYLE_MAPPING :\n    {\n      \"anonymous\" :\n      {\n        style : \"pointerEvents\",\n        values :\n        {\n          \"true\" : \"none\",\n          \"false\" : null\n        }\n      }\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __containerElement : null,\n    __contentElement : null,\n\n    __layoutParent : null,\n    __children : null,\n    __layoutManager : null,\n\n    /*\n    ---------------------------------------------------------------------------\n      Basic Template\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the tag name of the container element of this widget.\n     * Override this method if you want to create a custom widget.\n     * @return {String} The container element's tag name\n     */\n    _getTagName : function()\n    {\n      return \"div\";\n    },\n\n\n   /**\n    * Creates the container DOM element of the widget.\n    * Override this method if you want to create a custom widget.\n    *\n    * @return {Element} the container element.\n    */\n    _createContainerElement : function()\n    {\n      return qx.dom.Element.create(this._getTagName());\n    },\n\n\n    /**\n     * Triggers the {@link #scheduleDomUpdated} method. This method needs to be called\n     * when the DOM has changed, e.g. an element was added / removed / styled.\n     */\n    _domUpdated : function()\n    {\n      qx.ui.mobile.core.Widget.scheduleDomUpdated();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      ID Handling\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Transforms the value of the ID property. When the value is null, an auto\n     * generated ID is set. This makes sure that an ID is always set.\n     *\n     * @param value {String} The set id of the widget\n     * @return {String} The transformed ID\n     */\n    _transformId : function(value)\n    {\n      if (value == null)\n      {\n        var clazz = qx.ui.mobile.core.Widget;\n        value = clazz.ID_PREFIX + clazz.__idCounter++;\n      }\n      return value;\n    },\n\n\n    // property apply\n    _applyId : function(value, old)\n    {\n      if (old != null)\n      {\n        // Unregister widget with old id\n        qx.ui.mobile.core.Widget.unregisterWidget(old);\n      }\n      // Change the id of the DOM element\n      var element = this.getContainerElement();\n      element.id = value;\n      // Register the widget\n      qx.ui.mobile.core.Widget.registerWidget(this);\n\n    },\n\n    /**\n     * Sets the enable property to the new value\n     * @param value {Boolean}, the new value of the widget\n     * @param old {Boolean?}, the old value of the widget\n     *\n     */\n    _applyEnabled : function(value,old)\n    {\n      if(value)\n      {\n        this.removeCssClass(\"disabled\");\n        this._setStyle('anonymous',this.getAnonymous());\n      }\n      else\n      {\n        this.addCssClass(\"disabled\");\n        this._setStyle('anonymous',true);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      Child Handling\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Adds a new child widget.\n     *\n     * @param child {qx.ui.core.Widget} the widget to add.\n     * @param layoutProperties {Map?null} Optional layout data for widget.\n     */\n    _add : function(child, layoutProperties)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (child.getLayoutParent() === this) {\n          throw new Error(\"The widget is already added this widget. Please remove it first.\");\n        }\n      }\n\n      this._initializeChildLayout(child, layoutProperties);\n\n      this.getContentElement().appendChild(child.getContainerElement());\n      this.__children.push(child);\n\n      this._domUpdated();\n    },\n\n\n    /**\n     * Add a child widget at the specified index\n     *\n     * @param child {qx.ui.core.Widget} widget to add\n     * @param index {Integer} Index, at which the widget will be inserted. If no\n     *   widget exists at the given index, the new widget gets appended to the\n     *   current list of children.\n     * @param options {Map?null} Optional layout data for widget.\n     */\n    _addAt : function(child, index, options)\n    {\n      // When moving in the same widget, remove widget first\n      if (child.getLayoutParent() == this) {\n        qx.lang.Array.remove(this.__children, child);\n      }\n\n      var ref = this.__children[index];\n\n      if (ref) {\n        this._addBefore(child, ref, options);\n      } else {\n        this._add(child, options);\n      }\n    },\n\n\n    /**\n     * Add a widget before another already inserted widget\n     *\n     * @param child {qx.ui.core.Widget} widget to add\n     * @param beforeWidget {qx.ui.core.Widget} widget before the new widget will be inserted.\n     * @param layoutProperties {Map?null} Optional layout data for widget.\n     */\n    _addBefore : function(child, beforeWidget, layoutProperties)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (child.getLayoutParent() === this) {\n          throw new Error(\"The widget is already added this widget. Please remove it first.\");\n        }\n\n        this.assertInArray(beforeWidget, this._getChildren(), \"The 'before' widget is not a child of this widget!\");\n      }\n\n      if (child == beforeWidget) {\n        return;\n      }\n\n      this._initializeChildLayout(child, layoutProperties);\n\n      this.getContentElement().insertBefore(child.getContainerElement(), beforeWidget.getContainerElement());\n      qx.lang.Array.insertBefore(this.__children, child, beforeWidget);\n\n      this._domUpdated();\n    },\n\n\n    /**\n     * Add a widget after another already inserted widget.\n     *\n     * @param child {qx.ui.core.Widget} The widget to add.\n     * @param afterWidget {qx.ui.core.Widget} Widget, after which the new widget will be inserted.\n     * @param layoutProperties {Map?null} Optional layout data for widget.\n     */\n    _addAfter : function(child, afterWidget, layoutProperties)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (child.getLayoutParent() === this) {\n          throw new Error(\"The child is already added to this widget. Please remove it first.\");\n        }\n\n        this.assertInArray(afterWidget, this._getChildren(), \"The 'after' widget is not a child of this widget!\");\n      }\n\n      if (child == afterWidget) {\n        return;\n      }\n\n      this._initializeChildLayout(child, layoutProperties);\n\n      var length = this._getChildren().length;\n      var index = this._indexOf(afterWidget);\n\n      if (index == length - 1) {\n        this.getContentElement().appendChild(child.getContainerElement());\n      }\n      else\n      {\n        var beforeWidget = this._getChildren()[index+1];\n        this.getContentElement().insertBefore(child.getContainerElement(), beforeWidget.getContainerElement());\n      }\n\n      qx.lang.Array.insertAfter(this.__children, child, afterWidget);\n\n      this._domUpdated();\n    },\n\n\n\n    /**\n     * Removes a given child from the widget.\n     *\n     * @param child {qx.ui.core.Widget} The widget to remove.\n     */\n    _remove : function(child)\n    {\n      child.setLayoutParent(null);\n      this._domUpdated();\n    },\n\n\n    /**\n     * Remove the widget at the specified index.\n     *\n     * @param index {Integer} Index of the widget to remove.\n     */\n    _removeAt : function(index)\n    {\n      if (!this.__children) {\n        throw new Error(\"This widget has no children!\");\n      }\n\n      var child = this.__children[index];\n      this._remove(child);\n    },\n\n\n    /**\n     * Removes all children from the widget.\n     * @return {Array} An Array including the removed children.\n     */\n    _removeAll : function()\n    {\n      // create a copy of the array\n      var children = this.__children.concat();\n      for (var i = 0, l=children.length; i < l; i++) {\n        this._remove(children[i]);\n      }\n      return children;\n    },\n\n\n    /**\n     * Returns the index position of the given widget if it is\n     * a child widget. Otherwise it returns <code>-1</code>.\n     *\n     * @param child {qx.ui.core.Widget} the widget to query for\n     * @return {Integer} The index position or <code>-1</code> when\n     *   the given widget is no child of this layout.\n     */\n    _indexOf : function(child)\n    {\n      var children = this.__children;\n      if (!children) {\n        return -1;\n      }\n\n      return children.indexOf(child);\n    },\n\n\n    /**\n     * Internal method. Sets the layout parent.\n     *\n     * @param parent {qx.ui.mobile.core.Widget} The parent widget\n     *\n     * @internal\n     */\n    setLayoutParent : function(parent)\n    {\n      if (this.__layoutParent === parent) {\n        return;\n      }\n\n      var oldParent = this.__layoutParent;\n      if (oldParent && !oldParent.$$disposed) {\n        this.__layoutParent.removeChild(this);\n      }\n\n      this.__layoutParent = parent || null;\n    },\n\n\n    /**\n     * Internal method. Removes a given child widget and the corresponding DOM element.\n     *\n     * @param child {qx.ui.core.Widget} The widget to remove\n     *\n     * @internal\n     */\n    removeChild : function(child)\n    {\n      qx.lang.Array.remove(this.__children, child);\n      this.getContentElement().removeChild(child.getContainerElement());\n      var layout = this._getLayout();\n      if (layout) {\n        layout.disconnectFromChildWidget(child);\n      }\n    },\n\n\n    /**\n     * Returns the parent widget of this widget.\n     *\n     * @return {qx.ui.core.Widget} The parent of the widget\n     */\n    getLayoutParent : function()\n    {\n      return this.__layoutParent;\n    },\n\n\n    /**\n     * Returns the children of the widget.\n     *\n     * @return {qx.ui.core.Widget[]} The children of the widget\n     */\n    _getChildren : function() {\n      return this.__children;\n    },\n\n\n    /**\n     * Whether the widget has child widgets.\n     *\n     * @return {Boolean} Whether the widget has children or not.\n     */\n    _hasChildren : function() {\n      return this.__children && this.__children.length > 0;\n    },\n\n\n   /*\n    ---------------------------------------------------------------------------\n      Layout handling\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Set a layout manager for the widget. A layout manager can only be connected\n     * with one widget. Reset the connection with a previous widget first, if you\n     * like to use it in another widget instead.\n     *\n     * @param layout {qx.ui.mobile.layout.Abstract} The new layout or\n     *     <code>null</code> to reset the layout.\n     */\n    _setLayout : function(layout)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (layout) {\n          this.assertInstance(layout, qx.ui.mobile.layout.Abstract);\n        }\n      }\n\n      if (this.__layoutManager) {\n        this.__layoutManager.connectToWidget(null);\n        for (var i=0; i < this._getChildren().length; i++) {\n          var child = this._getChildren()[i];\n          this.__layoutManager.disconnectFromChildWidget(child);\n        }\n      }\n\n      if (layout) {\n        layout.connectToWidget(this);\n      }\n      this.__layoutManager = layout;\n      this._domUpdated();\n    },\n\n\n\n    /**\n     * Initializes the layout of the given child widget.\n     *\n     * @param child {qx.ui.core.Widget} The child widget\n     * @param layoutProperties {Map?null} Optional layout data for widget\n     */\n    _initializeChildLayout : function(child, layoutProperties)\n    {\n      child.setLayoutParent(this);\n      child.setLayoutProperties(layoutProperties);\n      var layout = this._getLayout();\n      if (layout) {\n        layout.connectToChildWidget(child);\n      }\n    },\n\n\n    /**\n     * Returns the set layout manager for the widget.\n     *\n     * @return  {qx.ui.mobile.layout.Abstract} the layout manager of the widget.\n     */\n    _getLayout : function() {\n      return this.__layoutManager;\n    },\n\n\n    /**\n     * Stores the given layout properties.\n     *\n     * @param properties {Map} Incoming layout property data\n     */\n    setLayoutProperties : function(properties)\n    {\n      // Check values through parent\n      var parent = this.getLayoutParent();\n      if (parent) {\n        parent.updateLayoutProperties(this, properties);\n      }\n    },\n\n\n    /**\n     * Updates the layout properties of a given widget.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The widget that should be updated\n     * @param properties {Map} Incoming layout property data\n     *\n     * @internal\n     */\n    updateLayoutProperties : function(widget, properties)\n    {\n      var layout = this._getLayout();\n      if (layout) {\n        layout.setLayoutProperties(widget, properties);\n      }\n      this._domUpdated();\n    },\n\n\n    /**\n     * Updates the layout with the given arguments.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The target widget\n     * @param action {String} The causing action that triggered the layout update.\n     * @param properties {Map} The animation properties to set. Key / value pairs.\n     *\n     * @internal\n     */\n    updateLayout : function(widget, action, properties) {\n      var layout = this._getLayout();\n      if (layout) {\n        layout.updateLayout(widget, action, properties);\n      }\n      this._domUpdated();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      Content handling\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n    * Sets the innerHTML of the content element and calls the {@link #_domUpdated}\n    * method.\n    *\n    * @param value {String?\"\"} The html to set in the content element.\n    */\n    _setHtml : function(value)\n    {\n      this.getContentElement().innerHTML = value || \"\";\n      this._domUpdated();\n    },\n\n\n    /**\n     * Transforms this widget (rotate, scale, translate3d)\n     */\n    _transform : function() {\n      var propertyValue = \"\";\n      if(this.getRotation() != null) {\n        propertyValue = propertyValue + \"rotate(\"+this.getRotation()+\"deg) \";\n      }\n\n      if(this.getScaleX() != null && this.getScaleY() != null) {\n        propertyValue = propertyValue + \"scale(\"+this.getScaleX()+\",\"+this.getScaleY()+\") \";\n      }\n\n      var resolutionFactor = 1;\n      if (this.getTransformUnit() == \"rem\") {\n        resolutionFactor = 16;\n      }\n\n      if (this.getTranslateX() != null && this.getTranslateY() != null) {\n        var isTransform3d = qx.core.Environment.get(\"css.transform.3d\");\n        if (isTransform3d && this.getTranslateZ() != null) {\n          propertyValue = propertyValue + \"translate3d(\" + (this.getTranslateX()/resolutionFactor) + this.getTransformUnit() + \",\" + (this.getTranslateY()/resolutionFactor) + this.getTransformUnit() + \",\" + (this.getTranslateZ()/resolutionFactor) + this.getTransformUnit() + \") \";\n        } else {\n          propertyValue = propertyValue + \"translate(\" + (this.getTranslateX()/resolutionFactor) + this.getTransformUnit() + \",\" + (this.getTranslateY()/resolutionFactor) + this.getTransformUnit() + \") \";\n        }\n      }\n\n      qx.bom.element.Style.set(this.getContainerElement(),\"transform\", propertyValue);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      Attributes handling\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Shortcut for each property that should change a certain attribute of the\n     * container element.\n     * Use the {@link #addAttributeMapping} method to add a property to attribute\n     * mapping when the attribute name or value differs from the property name or\n     * value.\n     *\n     * @param value {var} The set value\n     * @param old {var} The old value\n     * @param attribute {String} The property name\n     */\n    _applyAttribute : function(value, old, attribute)\n    {\n      this._setAttribute(attribute, value);\n    },\n\n\n    /**\n     * Sets an attribute with the given value of the container element. The\n     * <code>null</code> value resets the attribute.\n     *\n     * @param attribute {String} The attribute name.\n     * @param value {var} The attribute value. <code>Null</code> will reset the attribute.\n     */\n    _setAttribute : function(attribute, value)\n    {\n      var mapping = qx.ui.mobile.core.Widget.ATTRIBUTE_MAPPING[attribute];\n      if (mapping)\n      {\n        attribute = mapping.attribute || attribute;\n        var values = mapping.values;\n        value = values && typeof values[value] !== \"undefined\" ? values[value] : value;\n      }\n\n      var element = this.getContainerElement();\n      if (value != null) {\n        qx.bom.element.Attribute.set(element, attribute, value);\n      }\n      else\n      {\n        qx.bom.element.Attribute.reset(element, attribute);\n      }\n      this._domUpdated();\n    },\n\n\n    /**\n     * Returns the set value of the given attribute.\n     *\n     * @param attribute {String} The attribute name\n     * @return {var} The attribute's value\n     */\n    _getAttribute : function(attribute)\n    {\n      var element = this.getContainerElement();\n      return qx.bom.element.Attribute.get(element, attribute);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      Styles handling\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Shortcut for each property that should change a certain style of the container\n     * element.\n     * Use the {@link #addStyleMapping} method to add a property to style\n     * mapping when the style name or value differs from the property name or\n     * value.\n     */\n    _applyStyle : function(value, old, style)\n    {\n      this._setStyle(style, value);\n    },\n\n\n    /**\n     * Sets the value of a certain style of the container element. The\n     * <code>null</code> value resets the attribute.\n     *\n     * @param style {String} The style of which the value should be set\n     * @param value {var} The value of the style. <code>Null</code> will reset the attribute.\n     */\n    _setStyle : function(style, value)\n    {\n      var mapping = qx.ui.mobile.core.Widget.STYLE_MAPPING[style];\n      if (mapping)\n      {\n        style = mapping.style || style;\n        value = mapping.values[value];\n      }\n\n      var element = this.getContainerElement();\n      if (value != null) {\n        qx.bom.element.Style.set(element, style, value);\n      }\n      else\n      {\n        qx.bom.element.Style.reset(element, style);\n      }\n      this._domUpdated();\n    },\n\n\n    /**\n     * Returns the value of a certain style of the container element.\n     *\n     * @param style {String} The style name of which the value should be returned\n     * @return {var} The value of the style\n     */\n    _getStyle : function(style)\n    {\n      var element = this.getContainerElement();\n      return qx.bom.element.Style.get(element, style);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CSS Handling\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyDefaultCssClass : function(value, old)\n    {\n      if (old) {\n        this.removeCssClass(old);\n      }\n      if (value) {\n        this.addCssClass(value);\n      }\n    },\n\n\n    /**\n     * Adds a CSS class to the container element of the widget. Use this method\n     * to enhance the default appearance of the widget.\n     *\n     * @param cssClass {String} The CSS class to add\n     */\n    addCssClass : function(cssClass) {\n      qx.bom.element.Class.add(this.getContainerElement(), cssClass);\n      this._domUpdated();\n    },\n\n\n    /**\n     * Adds an array of CSS classes to the container element of the widget. Use this method\n     * to enhance the default appearance of the widget.\n     *\n     * @param cssClasses {String[]} The CSS classes to add, wrapped by an array.\n     */\n    addCssClasses : function(cssClasses) {\n      if(cssClasses){\n        qx.bom.element.Class.addClasses(this.getContainerElement(), cssClasses);\n        this._domUpdated();\n      }\n    },\n\n\n    /**\n     * Removes a CSS class from the container element of the widget.\n     *\n     * @param cssClass {String} The CSS class to remove\n     */\n    removeCssClass : function(cssClass) {\n      if (this.hasCssClass(cssClass)) {\n        qx.bom.element.Class.remove(this.getContainerElement(), cssClass);\n        this._domUpdated();\n      }\n    },\n\n\n    /**\n     * Removes an array of CSS classes from the container element of the widget.\n     *\n     * @param cssClasses {String[]} The CSS classes to remove from widget.\n     */\n    removeCssClasses : function(cssClasses) {\n       if(cssClasses){\n         qx.bom.element.Class.removeClasses(this.getContainerElement(), cssClasses);\n         this._domUpdated();\n       }\n    },\n\n\n    /**\n     * Toggles the given CSS. Adds or removes the CSS class from the container element of the widget.\n     *\n     * @param cssClass {String} The CSS class to toggle\n     */\n    toggleCssClass : function(cssClass) {\n      if (this.hasCssClass(cssClass)) {\n        this.removeCssClass(cssClass);\n      } else {\n        this.addCssClass(cssClass);\n      }\n    },\n\n\n    /**\n     * Checks if the widget has a certain CSS class set.\n     *\n     * @param cssClass {String} The CSS class to check\n     * @return {Boolean} Whether the CSS class is set or not\n     */\n    hasCssClass : function(cssClass) {\n      return qx.bom.element.Class.has(this.getContainerElement(), cssClass);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      Visibility handling\n    ---------------------------------------------------------------------------\n    */\n\n\n    // property apply\n    _applyVisibility : function(value, old)\n    {\n      if (value == \"excluded\") {\n        this.addCssClass(\"exclude\");\n      }\n      else if(value == \"visible\")\n      {\n        this.removeCssClass(\"exclude\");\n        this._setStyle(\"visibility\", \"visible\");\n      }\n      else if (value == \"hidden\") {\n        this._setStyle(\"visibility\", \"hidden\");\n      }\n      this._domUpdated();\n    },\n\n\n    /**\n     * Sets the visibility of the widget.\n     *\n     * @param action {String} The causing action that triggered the layout update.\n     * @param properties {Map} The animation properties to set. Key / value pairs.\n     */\n    __setVisibility : function(action, properties) {\n      this.setVisibility(action);\n\n      var parent = this.getLayoutParent();\n      if (parent) {\n        parent.updateLayout(this, action, properties);\n      }\n    },\n\n\n    /**\n     * Make this widget visible.\n     *\n     * @param properties {Map} The animation properties to set. Key / value pairs.\n     *\n     */\n    show : function(properties) {\n      this.__setVisibility(\"visible\", properties);\n    },\n\n\n    /**\n     * Hide this widget.\n     *\n     * @param properties {Map} The animation properties to set. Key / value pairs.\n     *\n     */\n    hide : function(properties) {\n      this.__setVisibility(\"hidden\", properties);\n    },\n\n\n    /**\n     * Hide this widget and exclude it from the underlying layout.\n     *\n     * @param properties {Map} The animation properties to set. Key / value pairs.\n     *\n     */\n    exclude : function(properties) {\n      this.__setVisibility(\"excluded\", properties);\n    },\n\n\n    /**\n     * Whether the widget is locally visible.\n     *\n     * Note: This method does not respect the hierarchy.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget is visible\n     */\n    isVisible : function() {\n      return this.getVisibility() === \"visible\";\n    },\n\n\n    /**\n     * Whether the widget is locally hidden.\n     *\n     * Note: This method does not respect the hierarchy.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget is hidden\n     */\n    isHidden : function() {\n      return this.getVisibility() !== \"visible\";\n    },\n\n\n    /**\n     * Whether the widget is locally excluded.\n     *\n     * Note: This method does not respect the hierarchy.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget is excluded\n     */\n    isExcluded : function() {\n      return this.getVisibility() === \"excluded\";\n    },\n\n\n    /**\n     * Detects if the widget and all its parents are visible.\n     *\n     * Warning: forces rendering of the browser. Do not use this method during\n     * animations or performance critical tasks.\n     * @return {Boolean} <code>true</code>if the widget is seeable\n     */\n    isSeeable : function()\n    {\n      return this.getContainerElement().offsetWidth > 0;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n     Element handling\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the container DOM element of the widget.\n     *\n     * @param element {Element} The container DOM element of the widget\n     */\n    _setContainerElement : function(element)\n    {\n      this.__containerElement = element;\n    },\n\n\n    /**\n     * Returns the container DOM element of the widget.\n     *\n     * @return {Element} the container DOM element of the widget\n     *\n     * @internal\n     */\n    getContainerElement : function()\n    {\n      return this.__containerElement;\n    },\n\n\n    /**\n     * Returns the content DOM element of the widget.\n     *\n     * @return {Element} the content DOM element of the widget\n     *\n     * @internal\n     */\n    getContentElement : function()\n    {\n      if (!this.__contentElement) {\n        this.__contentElement = this._getContentElement();\n      }\n      return this.__contentElement;\n    },\n\n\n    /**\n     * Returns the content DOM element of the widget.\n     * Override this method, to define another element as the content element.\n     *\n     * Note: Most times this element points to to the container element.\n     * When the widget has a more complex element structure,\n     * the function should return a reference of the element that should contain\n     * the content.\n     *\n     * @return {Element} the content DOM element of the widget\n     */\n    _getContentElement : function()\n    {\n      return this.getContainerElement();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      ENHANCED DISPOSE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Removes this widget from its parent and disposes it.\n     */\n    destroy : function()\n    {\n      if (this.$$disposed) {\n        return;\n      }\n\n      var parent = this.__layoutParent;\n      if (parent) {\n        parent._remove(this);\n      }\n      this.dispose();\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    if (!qx.core.ObjectRegistry.inShutDown)\n    {\n      // Cleanup event listeners\n      // Needed as we rely on the containerElement in the qx.ui.mobile.core.EventHandler\n      qx.event.Registration.removeAllListeners(this);\n\n      if (this.getId())\n      {\n        qx.ui.mobile.core.Widget.unregisterWidget(this.getId());\n      }\n    }\n\n    this.__layoutParent = this.__containerElement = this.__contentElement = null;\n    if(this.__layoutManager) {\n      this.__layoutManager.dispose();\n    }\n    this.__layoutManager = null;\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics) {\n    qx.bom.Lifecycle.onShutdown(statics.onShutdown, statics);\n  }\n});\n"
  ]
}