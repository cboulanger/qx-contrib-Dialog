{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/mobile/page/NavigationPage.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "mobile",
    "page",
    "Page",
    "implement",
    "container",
    "INavigation",
    "construct",
    "wrapContentByGroup",
    "layout",
    "_wrapContentByGroup",
    "events",
    "action",
    "properties",
    "title",
    "check",
    "init",
    "event",
    "apply",
    "backButtonText",
    "buttonText",
    "buttonIcon",
    "nullable",
    "showBackButton",
    "showBackButtonOnTablet",
    "showButton",
    "navigationBarHidden",
    "navigationBarToggleDuration",
    "contentCssClass",
    "members",
    "_isTablet",
    "__backButton",
    "__actionButton",
    "__content",
    "__scrollContainer",
    "__title",
    "__leftContainer",
    "__rightContainer",
    "getTitleWidget",
    "_createTitleWidget",
    "navigationbar",
    "Title",
    "getTitle",
    "_applyTitle",
    "value",
    "old",
    "setValue",
    "getLeftContainer",
    "_createLeftContainer",
    "getRightContainer",
    "_createRightContainer",
    "HBox",
    "Composite",
    "addCssClass",
    "_createBackButton",
    "addListener",
    "_onBackButtonTap",
    "_showBackButton",
    "add",
    "_createButton",
    "_onButtonTap",
    "_showButton",
    "BackButton",
    "getBackButtonText",
    "Button",
    "getButtonText",
    "getButtonIcon",
    "getContent",
    "_getBackButton",
    "_getButton",
    "setIsTablet",
    "isTablet",
    "_getScrollContainer",
    "addAfterNavigationBar",
    "widget",
    "addBefore",
    "_applyBackButtonText",
    "_applyActionButtonText",
    "_applyActionButtonIcon",
    "setIcon",
    "_applyShowBackButton",
    "_applyShowButton",
    "_applyContentCssClass",
    "setDefaultCssClass",
    "getShowBackButton",
    "show",
    "exclude",
    "getShowButton",
    "_initialize",
    "_createScrollContainer",
    "_createContent",
    "flex",
    "Scroll",
    "content",
    "getContentCssClass",
    "evt",
    "back",
    "fireEvent",
    "destruct",
    "_disposeObjects",
    "NavigationPage"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAoDAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,kCAAhB,EACA;AACEC,YAASN,GAAGO,EAAH,CAAMC,MAAN,CAAaC,IAAb,CAAkBC,IAD7B;AAEEC,eAAYX,GAAGO,EAAH,CAAMC,MAAN,CAAaI,SAAb,CAAuBC,WAFrC;;AAKE;;;;;;AAMA;;;;AAIAC,eAAY,mBAASC,kBAAT,EAA6BC,MAA7B,EACZ;AACE;;AAEA,UAAGD,sBAAsB,IAAzB,EAA+B;AAC7B,aAAKE,mBAAL,GAA2BF,kBAA3B;AACD;AACF,KAtBH;;AAwBE;;;;;;AAMAG,YACA;AACE;AACAC,cAAS;AAFX,KA/BF;;AAqCE;;;;;;AAMAC,gBACA;AACE;AACAC,aACA;AACEC,eAAQ,QADV;AAEEC,cAAO,EAFT;AAGEC,eAAQ,aAHV;AAIEC,eAAQ;AAJV,OAHF;;AAWE;AACAC,sBACA;AACEJ,eAAQ,QADV;AAEEC,cAAO,EAFT;AAGEE,eAAQ;AAHV,OAbF;;AAoBE;AACAE,kBACA;AACEL,eAAQ,QADV;AAEEC,cAAO,EAFT;AAGEE,eAAQ;AAHV,OAtBF;;AA6BE;AACAG,kBACA;AACEN,eAAQ,QADV;AAEEC,cAAO,IAFT;AAGEM,kBAAW,IAHb;AAIEJ,eAAQ;AAJV,OA/BF;;AAuCE;;;AAGAK,sBACA;AACER,eAAQ,SADV;AAEEC,cAAO,KAFT;AAGEE,eAAQ;AAHV,OA3CF;;AAkDE;;;AAGAM,8BACA;AACET,eAAQ,SADV;AAEEC,cAAO;AAFT,OAtDF;;AA4DE;;;AAGAS,kBACA;AACEV,eAAQ,SADV;AAEEC,cAAO,KAFT;AAGEE,eAAQ;AAHV,OAhEF;;AAuEE;;;;AAIAQ,2BACA;AACEX,eAAQ,SADV;AAEEC,cAAO;AAFT,OA5EF;;AAkFE;;;;AAIAW,mCACA;AACEZ,eAAQ,QADV;AAEEC,cAAO;AAFT,OAvFF;;AA6FE;;;AAGAY,uBACA;AACEb,eAAQ,QADV;AAEEC,cAAO,SAFT;AAGEM,kBAAW,IAHb;AAIEJ,eAAQ;AAJV;AAjGF,KA5CF;;AAsJC;;;;;;AAMCW,aACA;AACEC,iBAAY,KADd;AAEEpB,2BAAsB,IAFxB;AAGEqB,oBAAe,IAHjB;AAIEC,sBAAiB,IAJnB;AAKEC,iBAAY,IALd;AAMEC,yBAAoB,IANtB;AAOEC,eAAU,IAPZ;AAQEC,uBAAkB,IARpB;AASEC,wBAAmB,IATrB;;AAYE;AACAC,sBAAiB,0BAAW;AAC1B,YAAI,CAAC,KAAKH,OAAV,EAAmB;AACjB,eAAKA,OAAL,GAAe,KAAKI,kBAAL,EAAf;AACD;AACD,eAAO,KAAKJ,OAAZ;AACD,OAlBH;;AAqBE;;;;;AAKAI,0BAAqB,8BACrB;AACE,eAAO,IAAI9C,GAAGO,EAAH,CAAMC,MAAN,CAAauC,aAAb,CAA2BC,KAA/B,CAAqC,KAAKC,QAAL,EAArC,CAAP;AACD,OA7BH;;AAgCE;AACAC,mBAAc,qBAASC,KAAT,EAAgBC,GAAhB,EAAqB;AACjC,YAAI,KAAKV,OAAT,EAAkB;AAChB,eAAKA,OAAL,CAAaW,QAAb,CAAsBF,KAAtB;AACD;AACF,OArCH;;AAwCE;AACAG,wBAAmB,4BAAW;AAC5B,YAAI,CAAC,KAAKX,eAAV,EAA2B;AACzB,eAAKA,eAAL,GAAuB,KAAKY,oBAAL,EAAvB;AACD;AACD,eAAO,KAAKZ,eAAZ;AACD,OA9CH;;AAiDE;AACAa,yBAAoB,6BAAW;AAC7B,YAAI,CAAC,KAAKZ,gBAAV,EAA4B;AAC1B,eAAKA,gBAAL,GAAwB,KAAKa,qBAAL,EAAxB;AACD;AACD,eAAO,KAAKb,gBAAZ;AACD,OAvDH;;AA0DE;;;;;AAKAW,4BAAuB,gCAAW;AAChC,YAAIvC,SAAQ,IAAIhB,GAAGO,EAAH,CAAMC,MAAN,CAAaQ,MAAb,CAAoB0C,IAAxB,EAAZ;AACA,YAAI9C,YAAY,IAAIZ,GAAGO,EAAH,CAAMC,MAAN,CAAaI,SAAb,CAAuB+C,SAA3B,CAAqC3C,MAArC,CAAhB;AACAJ,kBAAUgD,WAAV,CAAsB,gBAAtB;AACA,aAAKtB,YAAL,GAAoB,KAAKuB,iBAAL,EAApB;AACA,aAAKvB,YAAL,CAAkBwB,WAAlB,CAA8B,KAA9B,EAAqC,KAAKC,gBAA1C,EAA4D,IAA5D;AACA,aAAKC,eAAL;AACApD,kBAAUqD,GAAV,CAAc,KAAK3B,YAAnB;AACA,eAAO1B,SAAP;AACD,OAxEH;;AA2EE;;;;;AAKA6C,6BAAwB,iCAAW;AACjC,YAAIzC,SAAS,IAAIhB,GAAGO,EAAH,CAAMC,MAAN,CAAaQ,MAAb,CAAoB0C,IAAxB,EAAb;AACA,YAAI9C,YAAY,IAAIZ,GAAGO,EAAH,CAAMC,MAAN,CAAaI,SAAb,CAAuB+C,SAA3B,CAAqC3C,MAArC,CAAhB;AACAJ,kBAAUgD,WAAV,CAAsB,iBAAtB;AACA,aAAKrB,cAAL,GAAsB,KAAK2B,aAAL,EAAtB;AACA,aAAK3B,cAAL,CAAoBuB,WAApB,CAAgC,KAAhC,EAAuC,KAAKK,YAA5C,EAA0D,IAA1D;AACA,aAAKC,WAAL;AACAxD,kBAAUqD,GAAV,CAAc,KAAK1B,cAAnB;AACA,eAAO3B,SAAP;AACD,OAzFH;;AA4FE;;;;;;AAMAiD,yBAAoB,6BAAW;AAC7B,eAAO,IAAI7D,GAAGO,EAAH,CAAMC,MAAN,CAAauC,aAAb,CAA2BsB,UAA/B,CAA0C,KAAKC,iBAAL,EAA1C,CAAP;AACD,OApGH;;AAwGE;;;;;;AAMAJ,qBAAgB,yBAAW;AAC1B,eAAO,IAAIlE,GAAGO,EAAH,CAAMC,MAAN,CAAauC,aAAb,CAA2BwB,MAA/B,CAAsC,KAAKC,aAAL,EAAtC,EAA4D,KAAKC,aAAL,EAA5D,CAAP;AACA,OAhHH;;AAmHE;;;;;AAKAC,kBAAa,sBACb;AACE,eAAO,KAAKlC,SAAZ;AACD,OA3HH;;AA8HE;;;;;AAKAmC,sBAAiB,0BACjB;AACE,eAAO,KAAKrC,YAAZ;AACD,OAtIH;;AAyIE;;;;;AAKAsC,kBAAa,sBACb;AACE,eAAO,KAAKrC,cAAZ;AACD,OAjJH;;AAoJE;;;;AAIAsC,mBAAc,qBAAUC,QAAV,EAAoB;AAChC,aAAKzC,SAAL,GAAiByC,QAAjB;AACD,OA1JH;;AA6JE;;;;AAIAA,gBAAW,oBAAW;AACpB,eAAO,KAAKzC,SAAZ;AACD,OAnKH;;AAsKE;;;;;AAKA0C,2BAAsB,+BACtB;AACE,eAAO,KAAKtC,iBAAZ;AACD,OA9KH;;AAiLE;;;;;AAKAuC,6BAAwB,+BAASC,MAAT,EAAiB;AACvC,YAAGA,UAAU,KAAKxC,iBAAlB,EAAqC;AACnC,eAAKyC,SAAL,CAAeD,MAAf,EAAuB,KAAKxC,iBAA5B;AACD;AACF,OA1LH;;AA6LE;AACA0C,4BAAuB,8BAAShC,KAAT,EAAgBC,GAAhB,EACvB;AACE,YAAI,KAAKd,YAAT,EAAuB;AACrB,eAAKA,YAAL,CAAkBe,QAAlB,CAA2BF,KAA3B;AACD;AACF,OAnMH;;AAsME;AACAiC,8BAAyB,gCAASjC,KAAT,EAAgBC,GAAhB,EACzB;AACE,YAAI,KAAKb,cAAT,EAAyB;AACvB,eAAKA,cAAL,CAAoBc,QAApB,CAA6BF,KAA7B;AACD;AACF,OA5MH;;AA+ME;AACAkC,8BAAyB,gCAASlC,KAAT,EAAgBC,GAAhB,EACzB;AACE,YAAI,KAAKb,cAAT,EAAyB;AACvB,eAAKA,cAAL,CAAoB+C,OAApB,CAA4BnC,KAA5B;AACD;AACF,OArNH;;AAwNE;AACAoC,4BAAuB,8BAASpC,KAAT,EAAgBC,GAAhB,EACvB;AACE,aAAKY,eAAL;AACD,OA5NH;;AA+NE;AACAwB,wBAAmB,0BAASrC,KAAT,EAAgBC,GAAhB,EACnB;AACE,aAAKgB,WAAL;AACD,OAnOH;;AAsOE;AACAqB,6BAAwB,+BAAStC,KAAT,EAAgBC,GAAhB,EACxB;AACE,YAAI,KAAKZ,SAAT,EAAoB;AAClB,eAAKA,SAAL,CAAekD,kBAAf,CAAkCvC,KAAlC;AACD;AACF,OA5OH;;AA+OE;;;AAGAa,uBAAkB,2BAClB;AACE,YAAI,KAAK1B,YAAT,EACA;AACE,cAAI,KAAKqD,iBAAL,EAAJ,EAA8B;AAC5B,iBAAKrD,YAAL,CAAkBsD,IAAlB;AACD,WAFD,MAEO;AACL,iBAAKtD,YAAL,CAAkBuD,OAAlB;AACD;AACF;AACF,OA5PH;;AA+PE;;;AAGAzB,mBAAc,uBACd;AACE,YAAI,KAAK7B,cAAT,EACA;AACE,cAAI,KAAKuD,aAAL,EAAJ,EAA0B;AACxB,iBAAKvD,cAAL,CAAoBqD,IAApB;AACD,WAFD,MAEO;AACL,iBAAKrD,cAAL,CAAoBsD,OAApB;AACD;AACF;AACF,OA5QH;;AA+QE;AACAE,mBAAc,uBACd;AACE;;AAEA,aAAKtD,iBAAL,GAAyB,KAAKuD,sBAAL,EAAzB;AACA,aAAKxD,SAAL,GAAiB,KAAKyD,cAAL,EAAjB;;AAEA,YAAI,KAAKzD,SAAT,EAAoB;AAClB,eAAKC,iBAAL,CAAuBwB,GAAvB,CAA2B,KAAKzB,SAAhC,EAA2C,EAAC0D,MAAM,CAAP,EAA3C;AACD;AACD,YAAI,KAAKzD,iBAAT,EAA4B;AAC1B,eAAKwB,GAAL,CAAS,KAAKxB,iBAAd,EAAiC,EAACyD,MAAK,CAAN,EAAjC;AACD;AACF,OA7RH;;AAgSE;;;;;AAKAF,8BAAyB,kCACzB;AACE,eAAO,IAAIhG,GAAGO,EAAH,CAAMC,MAAN,CAAaI,SAAb,CAAuBuF,MAA3B,EAAP;AACD,OAxSH;;AA2SE;;;;;AAKAF,sBAAiB,0BACjB;AACE,YAAIG,UAAU,IAAIpG,GAAGO,EAAH,CAAMC,MAAN,CAAaI,SAAb,CAAuB+C,SAA3B,EAAd;AACAyC,gBAAQV,kBAAR,CAA2B,KAAKW,kBAAL,EAA3B;;AAEA,YAAG,KAAKpF,mBAAL,IAA4B,IAA/B,EAAqC;AACnCmF,kBAAQxC,WAAR,CAAoB,OAApB;AACD;;AAED,eAAOwC,OAAP;AACD,OA1TH;;AA6TE;;;;;AAKArC,wBAAmB,0BAASuC,GAAT,EACnB;AACE,aAAKC,IAAL;AACD,OArUH;;AAwUE;;;;;AAKApC,oBAAe,sBAASmC,GAAT,EACf;AACE,aAAKE,SAAL,CAAe,QAAf;AACD;AAhVH,KA7JF;;AAifEC,cAAW,oBACX;AACE,WAAKC,eAAL,CAAqB,iBAArB,EAAwC,kBAAxC,EAA4D,cAA5D,EACE,gBADF,EACoB,SADpB;AAEA,WAAK/D,eAAL,GAAuB,KAAKC,gBAAL,GAAwB,KAAKN,YAAL,GAAoB,KAAKC,cAAL,GAAsB,IAAzF;AACA,WAAKG,OAAL,GAAe,KAAKF,SAAL,GAAiB,KAAKC,iBAAL,GAAyB,IAAzD;AACA,WAAKJ,SAAL,GAAiB,IAAjB;AACD;AAxfH,GADA,C;AApDArC,KAAGO,EAAH,CAAMC,MAAN,CAAaC,IAAb,CAAkBkG,cAAlB,CAAiCxG,aAAjC,GAAiDA,aAAjD",
  "file": "NavigationPage.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\n/**\n * Specialized page. This page includes already a {@link qx.ui.mobile.navigationbar.NavigationBar}\n * and and a {@link qx.ui.mobile.container.Scroll} container.\n * The NavigationPage can only be used with a page manager {@link qx.ui.mobile.page.Manager}.\n\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *\n *  var manager = new qx.ui.mobile.page.Manager();\n *  var page = new qx.ui.mobile.page.NavigationPage();\n *  page.setTitle(\"Page Title\");\n *  page.setShowBackButton(true);\n *  page.setBackButtonText(\"Back\")\n *  page.addListener(\"initialize\", function()\n *  {\n *    var button = new qx.ui.mobile.form.Button(\"Next Page\");\n *    page.getContent().add(button);\n *  },this);\n *\n *  page.addListener(\"back\", function()\n *  {\n *    otherPage.show({animation:\"cube\", reverse:true});\n *  },this);\n *\n *  manager.addDetail(page);\n *  page.show();\n * </pre>\n *\n * This example creates a NavigationPage with a title and a back button. In the\n * <code>initialize</code> lifecycle method a button is added.\n */\nqx.Class.define(\"qx.ui.mobile.page.NavigationPage\",\n{\n  extend : qx.ui.mobile.page.Page,\n  implement : qx.ui.mobile.container.INavigation,\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param wrapContentByGroup {Boolean} Defines whether a group box should wrap the content. This can be used for defining a page margin.\n   * @param layout {qx.ui.mobile.layout.Abstract} The layout of this page.\n   */\n  construct : function(wrapContentByGroup, layout)\n  {\n    this.base(arguments);\n\n    if(wrapContentByGroup != null) {\n      this._wrapContentByGroup = wrapContentByGroup;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fired when the user tapped on the navigation button */\n    action : \"qx.event.type.Event\"\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** The title of the page */\n    title :\n    {\n      check : \"String\",\n      init : \"\",\n      event : \"changeTitle\",\n      apply : \"_applyTitle\"\n    },\n\n\n    /** The back button text */\n    backButtonText :\n    {\n      check : \"String\",\n      init : \"\",\n      apply : \"_applyBackButtonText\"\n    },\n\n\n    /** The action button text */\n    buttonText :\n    {\n      check : \"String\",\n      init : \"\",\n      apply : \"_applyActionButtonText\"\n    },\n\n\n    /** The action button icon */\n    buttonIcon :\n    {\n      check : \"String\",\n      init : null,\n      nullable : true,\n      apply : \"_applyActionButtonIcon\"\n    },\n\n\n    /**\n     * Whether to show the back button.\n     */\n    showBackButton:\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyShowBackButton\"\n    },\n\n\n    /**\n     * Indicates whether the back button should be shown on tablet.\n     */\n    showBackButtonOnTablet:\n    {\n      check : \"Boolean\",\n      init : false\n    },\n\n\n    /**\n     * Whether to show the action button.\n     */\n    showButton:\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyShowButton\"\n    },\n\n\n    /**\n     * Toggles visibility of NavigationBar in\n     * wrapping container {@link qx.ui.mobile.container.Navigation}\n     */\n    navigationBarHidden:\n    {\n      check : \"Boolean\",\n      init : false\n    },\n\n\n    /**\n     * Sets the transition duration (in seconds) for the effect when hiding/showing\n     * the NavigationBar through boolean property navigationBarHidden.\n     */\n    navigationBarToggleDuration:\n    {\n      check : \"Number\",\n      init : 0.8\n    },\n\n\n    /**\n     * The CSS class to add to the content per default.\n     */\n    contentCssClass :\n    {\n      check : \"String\",\n      init : \"content\",\n      nullable : true,\n      apply : \"_applyContentCssClass\"\n    }\n  },\n\n\n /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    _isTablet : false,\n    _wrapContentByGroup : true,\n    __backButton : null,\n    __actionButton : null,\n    __content : null,\n    __scrollContainer : null,\n    __title : null,\n    __leftContainer : null,\n    __rightContainer : null,\n\n\n    // interface implementation\n    getTitleWidget : function() {\n      if (!this.__title) {\n        this.__title = this._createTitleWidget();\n      }\n      return this.__title;\n    },\n\n\n    /**\n     * Creates the navigation bar title.\n     *\n     * @return {qx.ui.mobile.navigationbar.Title} The created title widget\n     */\n    _createTitleWidget : function()\n    {\n      return new qx.ui.mobile.navigationbar.Title(this.getTitle());\n    },\n\n\n    // property apply\n    _applyTitle : function(value, old) {\n      if (this.__title) {\n        this.__title.setValue(value);\n      }\n    },\n\n\n    // interface implementation\n    getLeftContainer : function() {\n      if (!this.__leftContainer) {\n        this.__leftContainer = this._createLeftContainer();\n      }\n      return this.__leftContainer;\n    },\n\n\n    // interface implementation\n    getRightContainer : function() {\n      if (!this.__rightContainer) {\n        this.__rightContainer = this._createRightContainer();\n      }\n      return this.__rightContainer;\n    },\n\n\n    /**\n     * Creates the left container for the navigation bar.\n     *\n     * @return {qx.ui.mobile.container.Composite} Creates the left container for the navigation bar.\n     */\n    _createLeftContainer : function() {\n      var layout =new qx.ui.mobile.layout.HBox();\n      var container = new qx.ui.mobile.container.Composite(layout);\n      container.addCssClass(\"left-container\");\n      this.__backButton = this._createBackButton();\n      this.__backButton.addListener(\"tap\", this._onBackButtonTap, this);\n      this._showBackButton();\n      container.add(this.__backButton);\n      return container;\n    },\n\n\n    /**\n     * Creates the right container for the navigation bar.\n     *\n     * @return {qx.ui.mobile.container.Composite} Creates the right container for the navigation bar.\n     */\n    _createRightContainer : function() {\n      var layout = new qx.ui.mobile.layout.HBox();\n      var container = new qx.ui.mobile.container.Composite(layout);\n      container.addCssClass(\"right-container\");\n      this.__actionButton = this._createButton();\n      this.__actionButton.addListener(\"tap\", this._onButtonTap, this);\n      this._showButton();\n      container.add(this.__actionButton);\n      return container;\n    },\n\n\n    /**\n      * Creates the navigation bar back button.\n      * Creates the scroll container.\n      *\n      * @return {qx.ui.mobile.navigationbar.BackButton} The created back button widget\n      */\n    _createBackButton : function() {\n      return new qx.ui.mobile.navigationbar.BackButton(this.getBackButtonText());\n    },\n\n\n\n    /**\n      * Creates the navigation bar button.\n      * Creates the content container.\n      *\n      * @return {qx.ui.mobile.navigationbar.Button} The created button widget\n      */\n    _createButton : function() {\n     return new qx.ui.mobile.navigationbar.Button(this.getButtonText(), this.getButtonIcon());\n    },\n\n\n    /**\n     * Returns the content container. Add all your widgets to this container.\n     *\n     * @return {qx.ui.mobile.container.Composite} The content container\n     */\n    getContent : function()\n    {\n      return this.__content;\n    },\n\n\n    /**\n     * Returns the back button widget.\n     *\n     * @return {qx.ui.mobile.navigationbar.BackButton} The back button widget\n     */\n    _getBackButton : function()\n    {\n      return this.__backButton;\n    },\n\n\n    /**\n     * Returns the action button widget.\n     *\n     * @return {qx.ui.mobile.navigationbar.Button} The action button widget\n     */\n    _getButton : function()\n    {\n      return this.__actionButton;\n    },\n\n\n    /**\n     * Sets the isTablet flag.\n     * @param isTablet {Boolean} value of the isTablet flag.\n     */\n    setIsTablet : function (isTablet) {\n      this._isTablet = isTablet;\n    },\n\n\n    /**\n     * Returns the isTablet flag.\n     * @return {Boolean} the isTablet flag of this page.\n     */\n    isTablet : function() {\n      return this._isTablet;\n    },\n\n\n    /**\n     * Returns the scroll container.\n     *\n     * @return {qx.ui.mobile.container.Scroll} The scroll container\n     */\n    _getScrollContainer : function()\n    {\n      return this.__scrollContainer;\n    },\n\n\n    /**\n     * Adds a widget, below the NavigationBar.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The widget to add, after NavigationBar.\n     */\n    addAfterNavigationBar : function(widget) {\n      if(widget && this.__scrollContainer) {\n        this.addBefore(widget, this.__scrollContainer);\n      }\n    },\n\n\n    // property apply\n    _applyBackButtonText : function(value, old)\n    {\n      if (this.__backButton) {\n        this.__backButton.setValue(value);\n      }\n    },\n\n\n    // property apply\n    _applyActionButtonText : function(value, old)\n    {\n      if (this.__actionButton) {\n        this.__actionButton.setValue(value);\n      }\n    },\n\n\n    // property apply\n    _applyActionButtonIcon : function(value, old)\n    {\n      if (this.__actionButton) {\n        this.__actionButton.setIcon(value);\n      }\n    },\n\n\n    // property apply\n    _applyShowBackButton : function(value, old)\n    {\n      this._showBackButton();\n    },\n\n\n    // property apply\n    _applyShowButton : function(value, old)\n    {\n      this._showButton();\n    },\n\n\n    // property apply\n    _applyContentCssClass : function(value, old)\n    {\n      if (this.__content) {\n        this.__content.setDefaultCssClass(value);\n      }\n    },\n\n\n    /**\n     * Helper method to show the back button.\n     */\n    _showBackButton : function()\n    {\n      if (this.__backButton)\n      {\n        if (this.getShowBackButton()) {\n          this.__backButton.show();\n        } else {\n          this.__backButton.exclude();\n        }\n      }\n    },\n\n\n    /**\n     * Helper method to show the button.\n     */\n    _showButton : function()\n    {\n      if (this.__actionButton)\n      {\n        if (this.getShowButton()) {\n          this.__actionButton.show();\n        } else {\n          this.__actionButton.exclude();\n        }\n      }\n    },\n\n\n    // overridden\n    _initialize : function()\n    {\n      this.base(arguments);\n\n      this.__scrollContainer = this._createScrollContainer();\n      this.__content = this._createContent();\n\n      if (this.__content) {\n        this.__scrollContainer.add(this.__content, {flex :1});\n      }\n      if (this.__scrollContainer) {\n        this.add(this.__scrollContainer, {flex:1});\n      }\n    },\n\n\n    /**\n     * Creates the scroll container.\n     *\n     * @return {qx.ui.mobile.container.Scroll} The created scroll container\n     */\n    _createScrollContainer : function()\n    {\n      return new qx.ui.mobile.container.Scroll();\n    },\n\n\n    /**\n     * Creates the content container.\n     *\n     * @return {qx.ui.mobile.container.Composite} The created content container\n     */\n    _createContent : function()\n    {\n      var content = new qx.ui.mobile.container.Composite();\n      content.setDefaultCssClass(this.getContentCssClass());\n\n      if(this._wrapContentByGroup == true) {\n        content.addCssClass(\"group\");\n      }\n\n      return content;\n    },\n\n\n    /**\n     * Event handler. Called when the tap event occurs on the back button.\n     *\n     * @param evt {qx.event.type.Tap} The tap event\n     */\n    _onBackButtonTap : function(evt)\n    {\n      this.back();\n    },\n\n\n    /**\n     * Event handler. Called when the tap event occurs on the button.\n     *\n     * @param evt {qx.event.type.Tap} The tap event\n     */\n    _onButtonTap : function(evt)\n    {\n      this.fireEvent(\"action\");\n    }\n  },\n\n\n  destruct : function()\n  {\n    this._disposeObjects(\"__leftContainer\", \"__rightContainer\", \"__backButton\",\n      \"__actionButton\", \"__title\");\n    this.__leftContainer = this.__rightContainer = this.__backButton = this.__actionButton = null;\n    this.__title = this.__content = this.__scrollContainer = null;\n    this._isTablet = null;\n  }\n});\n"
  ]
}