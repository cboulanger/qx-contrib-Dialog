{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/mobile/dialog/Menu.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "mobile",
    "dialog",
    "Popup",
    "construct",
    "itemsModel",
    "anchor",
    "__selectionList",
    "_createSelectionList",
    "setModel",
    "__menuContainer",
    "container",
    "Composite",
    "__clearButton",
    "_createClearButton",
    "__listScroller",
    "_createListScroller",
    "add",
    "setModal",
    "events",
    "changeSelection",
    "properties",
    "defaultCssClass",
    "refine",
    "init",
    "selectedItemClass",
    "unselectedItemClass",
    "nullable",
    "check",
    "apply",
    "clearButtonLabel",
    "selectedIndex",
    "visibleListItems",
    "members",
    "show",
    "scrollToItem",
    "getSelectedIndex",
    "clearButton",
    "form",
    "Button",
    "getClearButtonLabel",
    "addListener",
    "__onClearButtonTap",
    "exclude",
    "selectionList",
    "listScroller",
    "Scroll",
    "flex",
    "addCssClass",
    "_getListScroller",
    "_updatePosition",
    "parentHeight",
    "ROOT",
    "getHeight",
    "listScrollerHeight",
    "parseInt",
    "getVisibleListItems",
    "newListScrollerHeight",
    "getListItemHeight",
    "Math",
    "min",
    "bom",
    "element",
    "Style",
    "set",
    "getContainerElement",
    "self",
    "list",
    "List",
    "configureItem",
    "item",
    "data",
    "row",
    "setTitle",
    "setShowArrow",
    "isItemSelected",
    "removeCssClass",
    "getUnselectedItemClass",
    "getSelectedItemClass",
    "__onListChangeSelection",
    "_onSelectionListTap",
    "getSelectionList",
    "hideWithDelay",
    "setItems",
    "evt",
    "setSelectedIndex",
    "getData",
    "fireDataEvent",
    "index",
    "hide",
    "_applySelectedIndex",
    "value",
    "old",
    "listModel",
    "getModel",
    "selectedItem",
    "getItem",
    "_render",
    "_applyNullable",
    "setVisibility",
    "_applyClearButtonLabel",
    "setValue",
    "tmpModel",
    "listItems",
    "qxWeb",
    "getId",
    "targetListItemElement",
    "scrollToElement",
    "destruct",
    "removeListener",
    "_disposeObjects",
    "Menu"
  ],
  "mappings": "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",
  "file": "Menu.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011-2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christopher Zuendorf (czuendorf)\n\n************************************************************************ */\n\n/**\n * This widget displays a menu. A dialog menu extends a popup and contains a\n * list, which provides the user the possibility to select one value.\n * The selected value is identified through selected index.\n *\n *\n * *Example*\n * <pre class='javascript'>\n *\n * var model = new qx.data.Array([\"item1\",\"item2\",\"item3\"]);\n *\n * var menu = new qx.ui.mobile.dialog.Menu(model);\n * menu.show();\n * menu.addListener(\"changeSelection\", function(evt){\n *    var selectedIndex = evt.getData().index;\n *    var selectedItem = evt.getData().item;\n * }, this);\n * </pre>\n *\n * This example creates a menu with several choosable items.\n */\nqx.Class.define(\"qx.ui.mobile.dialog.Menu\",\n{\n  extend : qx.ui.mobile.dialog.Popup,\n\n\n  /**\n   * @param itemsModel {qx.data.Array ?}, the model which contains the choosable items of the menu.\n   * @param anchor {qx.ui.mobile.core.Widget ?} The anchor widget for this item. If no anchor is available, the menu will be displayed modal and centered on screen.\n   */\n  construct : function(itemsModel, anchor)\n  {\n    // Create the list with a delegate that\n    // configures the list item.\n    this.__selectionList = this._createSelectionList();\n\n    if(itemsModel) {\n      this.__selectionList.setModel(itemsModel);\n    }\n\n    this.__menuContainer = new qx.ui.mobile.container.Composite();\n    this.__clearButton = this._createClearButton();\n    this.__listScroller = this._createListScroller(this.__selectionList);\n\n    this.__menuContainer.add(this.__listScroller);\n    this.__menuContainer.add(this.__clearButton);\n\n    this.base(arguments, this.__menuContainer, anchor);\n\n    if(anchor) {\n      this.setModal(false);\n    } else {\n      this.setModal(true);\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /**\n     * Fired when the selection is changed.\n     */\n    changeSelection : \"qx.event.type.Data\"\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    defaultCssClass :\n    {\n      refine : true,\n      init : \"menu\"\n    },\n\n\n    /**\n     *  Class which is assigned to selected items.\n     *  Useful for re-styling your menu via LESS.\n     */\n    selectedItemClass :\n    {\n      init : \"item-selected\"\n    },\n\n\n    /**\n     * Class which is assigned to unselected items.\n     * Useful for re-styling your menu via LESS.\n     */\n    unselectedItemClass :\n    {\n      init : \"item-unselected\"\n    },\n\n\n    /**\n     * Defines if the menu has a null value in the list, which can be chosen\n     * by the user. The label\n     */\n    nullable :\n    {\n      init : false,\n      check : \"Boolean\",\n      apply : \"_applyNullable\"\n    },\n\n\n    /**\n     * The label of the null value entry of the list. Only relevant\n     * when nullable property is set to <code>true</code>.\n     */\n    clearButtonLabel :\n    {\n      init : \"None\",\n      check : \"String\",\n      apply : \"_applyClearButtonLabel\"\n    },\n\n\n    /**\n     * The selected index of this menu.\n     */\n    selectedIndex :\n    {\n      check : \"Integer\",\n      apply : \"_applySelectedIndex\",\n      nullable : true\n    },\n\n\n    /**\n    * This value defines how much list items are visible inside the menu.\n    */\n    visibleListItems :\n    {\n      check : \"Integer\",\n      apply : \"_updatePosition\",\n      nullable : true\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __selectionList: null,\n    __clearButton : null,\n    __listScroller : null,\n    __menuContainer : null,\n\n\n    // overridden\n    show : function() {\n      this.base(arguments);\n\n      this.scrollToItem(this.getSelectedIndex());\n    },\n\n\n    /**\n     * Creates the clearButton. Override this to customize the widget.\n     *\n     * @return {qx.ui.mobile.form.Button} the clearButton of this menu.\n     */\n    _createClearButton : function() {\n      var clearButton = new qx.ui.mobile.form.Button(this.getClearButtonLabel());\n      clearButton.addListener(\"tap\", this.__onClearButtonTap, this);\n      clearButton.exclude();\n      return clearButton;\n    },\n\n\n    /**\n     * Creates the scroll container for the selectionList. Override this to customize the widget.\n     * @param selectionList {qx.ui.mobile.list.List} The selectionList of this menu.\n     * @return {qx.ui.mobile.container.Scroll} the scroll container which contains the selectionList of this menu.\n     */\n    _createListScroller : function(selectionList) {\n      var listScroller = new qx.ui.mobile.container.Scroll({\"snap\":\".list-item\"});\n      listScroller.add(selectionList, {\n        flex: 1\n      });\n      listScroller.addCssClass(\"menu-scroller\");\n      return listScroller;\n    },\n\n\n    /**\n    * Getter for the scroll container which contains a @see {qx.ui.mobile.list.List} with the choosable items.\n    * @return {qx.ui.mobile.container.Scroll} the scroll container which contains the selectionList of this menu.\n    */\n    _getListScroller : function() {\n      return this.__listScroller;\n    },\n\n\n    // overridden\n    _updatePosition : function() {\n      var parentHeight = qx.ui.mobile.dialog.Popup.ROOT.getHeight();\n      var listScrollerHeight = parseInt(parentHeight, 10) * 0.75;\n      listScrollerHeight = parseInt(listScrollerHeight,10);\n\n      if (this.getVisibleListItems() !== null) {\n        var newListScrollerHeight = this.__selectionList.getListItemHeight() * this.getVisibleListItems();\n        listScrollerHeight = Math.min(newListScrollerHeight, listScrollerHeight);\n      }\n\n      qx.bom.element.Style.set(this.__listScroller.getContainerElement(), \"maxHeight\", listScrollerHeight + \"px\");\n\n      this.base(arguments);\n    },\n\n\n    /**\n     * Creates the selection list. Override this to customize the widget.\n     *\n     * @return {qx.ui.mobile.list.List} The selectionList of this menu.\n     */\n    _createSelectionList : function() {\n      var self = this;\n      var selectionList = new qx.ui.mobile.list.List({\n        configureItem : function(item, data, row)\n        {\n          item.setTitle(data);\n          item.setShowArrow(false);\n\n          var isItemSelected = (self.getSelectedIndex() == row);\n\n          if(isItemSelected) {\n            item.removeCssClass(self.getUnselectedItemClass());\n            item.addCssClass(self.getSelectedItemClass());\n          } else {\n            item.removeCssClass(self.getSelectedItemClass());\n            item.addCssClass(self.getUnselectedItemClass());\n          }\n        }\n      });\n\n      // Add an changeSelection event\n      selectionList.addListener(\"changeSelection\", this.__onListChangeSelection, this);\n      selectionList.addListener(\"tap\", this._onSelectionListTap, this);\n      return selectionList;\n    },\n\n\n    /**\n    * Getter for the selectionList of the menu.\n    * @return {qx.ui.mobile.list.List} The selectionList of this menu.\n    */\n    getSelectionList : function() {\n      return this.__selectionList;\n    },\n\n\n    /** Handler for tap event on selection list. */\n    _onSelectionListTap : function() {\n      this.hideWithDelay(500);\n    },\n\n\n    /**\n     * Sets the choosable items of the menu.\n     * @param itemsModel {qx.data.Array}, the model of choosable items in the menu.\n     */\n    setItems : function (itemsModel) {\n      if(this.__selectionList) {\n        this.__selectionList.setModel(null);\n        this.__selectionList.setModel(itemsModel);\n      }\n    },\n\n\n    /**\n     * Fires an event which contains index and data.\n     * @param evt {qx.event.type.Data}, contains the selected index number.\n     */\n    __onListChangeSelection : function (evt) {\n      this.setSelectedIndex(evt.getData());\n    },\n\n\n    /**\n     * Event handler for tap on clear button.\n     */\n    __onClearButtonTap : function() {\n      this.fireDataEvent(\"changeSelection\", {index: null, item: null});\n      this.hide();\n    },\n\n\n    // property apply\n    _applySelectedIndex : function(value, old) {\n      var listModel = this.__selectionList.getModel();\n\n      if(listModel !== null) {\n        var selectedItem = listModel.getItem(value);\n        this.fireDataEvent(\"changeSelection\", {index: value, item: selectedItem});\n      }\n\n      this._render();\n    },\n\n\n    // property apply\n    _applyNullable : function(value, old) {\n      if(value){\n        this.__clearButton.setVisibility(\"visible\");\n      } else {\n        this.__clearButton.setVisibility(\"excluded\");\n      }\n    },\n\n\n    // property apply\n    _applyClearButtonLabel : function(value, old) {\n      this.__clearButton.setValue(value);\n    },\n\n\n    /**\n     * Triggers (re-)rendering of menu items.\n     */\n    _render : function() {\n      var tmpModel = this.__selectionList.getModel();\n      this.__selectionList.setModel(null);\n      this.__selectionList.setModel(tmpModel);\n    },\n\n\n    /**\n     * Scrolls the scroll wrapper of the selectionList to the item with given index.\n     * @param index {Integer}, the index of the listItem to which the listScroller should scroll to.\n     */\n    scrollToItem : function(index) {\n      if (index !== null && this.__selectionList.getModel() != null) {\n        var listItems = qxWeb(\"#\"+this.__listScroller.getId()+ \" .list-item\");\n        var targetListItemElement = listItems[index];\n        this.__listScroller.scrollToElement(targetListItemElement);\n      }\n    }\n  },\n\n\n  destruct : function()\n  {\n    this.__selectionList.removeListener(\"tap\", this._onSelectionListTap, this);\n    this._disposeObjects(\"__selectionList\",\"__clearButton\",\"__listScroller\",\"__menuContainer\");\n  }\n\n});\n"
  ]
}