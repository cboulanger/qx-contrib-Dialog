{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/mobile/dialog/Manager.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "statics",
    "INPUT_DIALOG",
    "MESSAGE_DIALOG",
    "WARNING_DIALOG",
    "ERROR_DIALOG",
    "WAITING_DIALOG",
    "members",
    "alert",
    "title",
    "text",
    "handler",
    "scope",
    "button",
    "Environment",
    "get",
    "callback",
    "call",
    "__processDialogButtons",
    "navigator",
    "notification",
    "__showNonNativeDialog",
    "ui",
    "mobile",
    "dialog",
    "Manager",
    "confirm",
    "buttons",
    "index",
    "input",
    "error",
    "warning",
    "wait",
    "Array",
    "join",
    "dialogType",
    "widget",
    "container",
    "Composite",
    "layout",
    "VBox",
    "set",
    "alignY",
    "Popup",
    "setModal",
    "setTitle",
    "onBackButton",
    "evt",
    "isVisible",
    "getData",
    "preventDefault",
    "addListener",
    "application",
    "Init",
    "getApplication",
    "removeListener",
    "waitingWidget",
    "HBox",
    "alignX",
    "add",
    "BusyIndicator",
    "labelWidget",
    "basic",
    "Label",
    "addCssClass",
    "inputWidget",
    "inputText",
    "form",
    "TextField",
    "buttonContainer",
    "i",
    "l",
    "length",
    "Button",
    "flex",
    "hide",
    "getValue",
    "destroy",
    "show",
    "getContainerElement",
    "focus"
  ],
  "mappings": "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",
  "file": "Manager.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Gabriel Munteanu (gabios)\n\n************************************************************************ */\n\n/**\n * Very basic dialog manager. Displays a native alert or confirm dialog if\n * the application is running in a PhoneGap environment. For debugging in a browser\n * it displays the browser <code>alert</code> or <code>confirm</code> dialog. In the near\n * future this should be replaced by dialog widgets.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *    var buttons = [];\n *    buttons.push(qx.locale.Manager.tr(\"OK\"));\n *    buttons.push(qx.locale.Manager.tr(\"Cancel\"));\n *    var title = \"Delete item\";\n *    var text = \"Do you want to delete the item?\"\n *    qx.ui.mobile.dialog.Manager.getInstance().confirm(title, text, function(index) {\n *      if (index==1) {\n *        // delete the item\n *      }\n *    }, this, buttons);\n * </pre>\n *\n * This example displays a confirm dialog and defines a button click handler.\n */\nqx.Class.define(\"qx.ui.mobile.dialog.Manager\",\n{\n  extend : qx.core.Object,\n  type : \"singleton\",\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics:\n  {\n    INPUT_DIALOG: 1,\n    MESSAGE_DIALOG: 2,\n    WARNING_DIALOG: 3,\n    ERROR_DIALOG: 4,\n    WAITING_DIALOG: 5\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * Displays an alert box. When the application is running in a PhoneGap\n     * environment, a native alert box is shown. When debugging in a browser, a\n     * browser alert is shown.\n     *\n     * @param title {String} The title of the alert box\n     * @param text {String} The text to display in the alert box\n     * @param handler {Function} The handler to call when the <code>OK</code> button\n     *     was pressed\n     * @param scope {Object} The scope of the handler\n     * @param button {String} The button title\n     * @return {qx.ui.mobile.dialog.Popup|Object} a reference to an alert dialog\n     *          instance. An <code>Object</code>, if environment is\n     *          <code>phonegap</code>, or a {@link qx.ui.mobile.dialog.Popup}\n     *          if not.\n     * @lint ignoreDeprecated(alert)\n     */\n    alert : function(title, text, handler, scope, button)\n    {\n      // TOOD : MOVE THIS TO PHONEGAP CLASS\n      if (qx.core.Environment.get(\"phonegap\") && qx.core.Environment.get(\"phonegap.notification\")) {\n        var callback = function() {\n          if (handler) {\n            handler.call(scope);\n          }\n        };\n        var button = this.__processDialogButtons(button);\n        return navigator.notification.alert(text, callback, title, button);\n      }\n      else\n      {\n        return this.__showNonNativeDialog(title, text, handler, scope, [button], qx.ui.mobile.dialog.Manager.MESSAGE_DIALOG);\n      }\n    },\n\n\n    /**\n     * Displays a confirm box. When the application is running in a PhoneGap\n     * environment, a native confirm box is shown. When debugging in a browser, a\n     * browser confirm is shown.\n     *\n     * @param title {String} The title of the confirm box\n     * @param text {String} The text to display in the confirm box\n     * @param handler {Function} The handler to call when the <code>OK</code> button\n     *     was pressed. The first parameter of the function is the <code>index</code>\n     *     of the pressed button, starting from 0.\n     * @param scope {Object} The scope of the handler\n     * @param buttons {String[]} Each text entry of the array represents a button and\n     *     its title\n     * @return {qx.ui.mobile.dialog.Popup} The dialog widget\n     * @lint ignoreDeprecated(confirm)\n     */\n    confirm : function(title, text, handler, scope, buttons)\n    {\n      if (qx.core.Environment.get(\"phonegap\") && qx.core.Environment.get(\"phonegap.notification\"))\n      {\n        var callback = function(index)\n        {\n          handler.call(scope, index-1);\n        };\n        var buttons = this.__processDialogButtons(buttons);\n        return navigator.notification.confirm(text, callback, title, buttons);\n      }\n      else\n      {\n        return this.__showNonNativeDialog(title, text, handler, scope, buttons, qx.ui.mobile.dialog.Manager.MESSAGE_DIALOG);\n      }\n    },\n\n    /**\n     * Displays an input dialog.\n     *\n     * @param title {String} The title of the input dialog.\n     * @param text {String} The text to display in the input dialog.\n     * @param handler {Function} The handler to call when the <code>OK</code> button\n     *     was pressed. The first parameter of the function is the <code>index</code>\n     *     of the pressed button, starting from 1.\n     * @param scope {Object} The scope of the handler\n     * @param buttons {String[]} Each text entry of the array represents a button and\n     *     its title\n     * @return {qx.ui.mobile.dialog.Popup} The dialog widget\n     * @lint ignoreDeprecated(confirm)\n     */\n    input : function(title, text, handler, scope, buttons)\n    {\n      return this.__showNonNativeDialog(title, text, handler, scope, buttons, qx.ui.mobile.dialog.Manager.INPUT_DIALOG);\n    },\n\n    /**\n     * Displays an error dialog. When the application is running in an PhoneGap\n     * environment, a native error dialog is shown. For debugging in a browser, a\n     * browser confirm is shown.\n     *\n     * @param title {String} The title of the error dialog.\n     * @param text {String} The text to display in the error dialog.\n     * @param handler {Function} The handler to call when the <code>OK</code> button\n     *     was pressed. The first parameter of the function is the <code>index</code>\n     *     of the pressed button, starting from 1.\n     * @param scope {Object} The scope of the handler\n     * @param button {String} The text entry represents a button and its title\n     * @return {qx.ui.mobile.dialog.Popup} The dialog widget\n     * @lint ignoreDeprecated(confirm)\n     */\n    error : function(title, text, handler, scope, button)\n    {\n      if (qx.core.Environment.get(\"phonegap\") && qx.core.Environment.get(\"phonegap.notification\")) {\n        var callback = function() {\n          if (handler) {\n            handler.call(scope);\n          }\n        };\n        var button = this.__processDialogButtons(button);\n        return navigator.notification.alert(text, callback, title, button);\n      }\n      else\n      {\n        return this.__showNonNativeDialog(title, text, handler, scope, button, qx.ui.mobile.dialog.Manager.ERROR_DIALOG);\n      }\n    },\n\n\n    /**\n     * Displays a warning dialog. When the application is running in an PhoneGap\n     * environment, a native warning dialog is shown. For debugging in a browser, a\n     * browser confirm is shown.\n     *\n     * @param title {String} The title of the warning dialog.\n     * @param text {String} The text to display in the warning dialog.\n     * @param handler {Function} The handler to call when the <code>OK</code> button\n     *     was pressed. The first parameter of the function is the <code>index</code>\n     *     of the pressed button, starting from 1.\n     * @param scope {Object} The scope of the handler\n     * @param button {String} The text entry represents a button and its title\n     * @return {qx.ui.mobile.dialog.Popup} The dialog widget\n     * @lint ignoreDeprecated(confirm)\n     */\n    warning : function(title, text, handler, scope, button)\n    {\n      if (qx.core.Environment.get(\"phonegap\") && qx.core.Environment.get(\"phonegap.notification\")) {\n        var callback = function() {\n          if (handler) {\n            handler.call(scope);\n          }\n        };\n        var button = this.__processDialogButtons(button);\n        return navigator.notification.alert(text, callback, title, button);\n      }\n      else\n      {\n        return this.__showNonNativeDialog(title, text, handler, scope, button, qx.ui.mobile.dialog.Manager.WARNING_DIALOG);\n      }\n    },\n\n\n    /**\n     * Displays a waiting dialog.\n     *\n     * @param title {String} The title of the waiting dialog.\n     * @param text {String} The text to display in the waiting dialog.\n     * @param handler {Function} The handler to call when the <code>OK</code> button\n     *     was pressed. The first parameter of the function is the <code>index</code>\n     *     of the pressed button, starting from 1.\n     * @param scope {Object} The scope of the handler\n     * @param buttons {String[]} Each text entry of the array represents a button and\n     *     its title\n     * @return {qx.ui.mobile.dialog.Popup} The dialog widget\n     * @lint ignoreDeprecated(confirm)\n     */\n    wait : function(title, text, handler, scope, buttons)\n    {\n      return this.__showNonNativeDialog(title, text, handler, scope, buttons, qx.ui.mobile.dialog.Manager.WAITING_DIALOG);\n    },\n\n\n    /**\n     * Processes the dialog buttons. Converts them to PhoneGap compatible strings.\n     *\n     * @param buttons {String[]} Each text entry of the array represents a button and\n     *     its title\n     * @return {String} The concatenated, PhoneGap compatible, button string\n     */\n    __processDialogButtons: function(buttons)\n    {\n      if(buttons) {\n        if(buttons instanceof Array) {\n          buttons = buttons.join(\",\");\n        } else {\n          buttons = \"\"+buttons;\n        }\n      }\n      return buttons;\n    },\n\n\n    /**\n     * Shows a dialog widget.\n     *\n     * @param title {String} The title of the dialog.\n     * @param text {String} The text to display in the dialog.\n     * @param handler {Function} The handler to call when the <code>OK</code> button\n     *     was pressed. The first parameter of the function is the <code>index</code>\n     *     of the pressed button, starting from 1.\n     * @param scope {Object} The scope of the handler\n     * @param buttons {String[]} Each text entry of the array represents a button and\n     *     its title\n     * @return {qx.ui.mobile.dialog.Popup} The dialog widget\n     * @param dialogType {Integer} One of the static dialog types.\n     */\n    __showNonNativeDialog: function(title, text, handler, scope, buttons, dialogType)\n    {\n      var widget = new qx.ui.mobile.container.Composite(new qx.ui.mobile.layout.VBox().set({alignY: \"middle\"}));\n      var dialog = new qx.ui.mobile.dialog.Popup(widget);\n\n      dialog.setModal(true);\n      dialog.setTitle(title);\n\n      // prevent the back action until the dialog is visible\n      var onBackButton = function(evt)\n      {\n        if(dialog.isVisible() && !!evt.getData()) {\n          evt.preventDefault();\n        }\n      };\n      dialog.addListener(\"changeVisibility\", function(evt)\n      {\n        var application = qx.core.Init.getApplication();\n        if (evt.getData() === \"visible\") {\n          application.addListener(\"back\", onBackButton, this);\n        } else {\n          application.removeListener(\"back\", onBackButton, this);\n        }\n      });\n\n      if(dialogType == qx.ui.mobile.dialog.Manager.WAITING_DIALOG)\n      {\n        var waitingWidget = new qx.ui.mobile.container.Composite(new qx.ui.mobile.layout.HBox().set({alignX: \"center\"}));\n        widget.add(waitingWidget);\n        waitingWidget.add(new qx.ui.mobile.dialog.BusyIndicator(text));\n      }\n      else\n      {\n        var labelWidget = new qx.ui.mobile.container.Composite(new qx.ui.mobile.layout.HBox().set({alignX: \"center\"}));\n        labelWidget.add(new qx.ui.mobile.basic.Label(text));\n        labelWidget.addCssClass(\"gap\");\n        widget.add(labelWidget);\n        if(dialogType == qx.ui.mobile.dialog.Manager.INPUT_DIALOG)\n        {\n          var inputWidget = new qx.ui.mobile.container.Composite(new qx.ui.mobile.layout.HBox().set({alignX: \"center\"}));\n          inputWidget.addCssClass(\"gap\");\n          var inputText = new qx.ui.mobile.form.TextField();\n          inputWidget.add(inputText);\n          widget.add(inputWidget);\n        }\n\n        var buttonContainer = new qx.ui.mobile.container.Composite(new qx.ui.mobile.layout.HBox().set({alignX: \"center\"}));\n        buttonContainer.addCssClass(\"gap\");\n        for(var i=0, l=buttons.length; i<l; i++)\n        {\n          var button = new qx.ui.mobile.form.Button(buttons[i]);\n          /* see the comment in android.css for width: 0 for toolbar-button class*/\n          button.addCssClass('dialog-button');\n          buttonContainer.add(button, {flex:1});\n          var callback = (function(index){\n            return function()\n            {\n              dialog.hide();\n              if(handler) {\n                handler.call(scope, index, inputText ? inputText.getValue() : null);\n              }\n              dialog.destroy();\n            };\n          })(i);\n          button.addListener(\"tap\", callback);\n        }\n        widget.add(buttonContainer);\n      }\n\n      dialog.show();\n\n      if(inputText) {\n        inputText.getContainerElement().focus();\n      }\n\n      return dialog;\n    }\n  }\n});\n"
  ]
}