{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/mobile/tabbar/TabBar.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "mobile",
    "core",
    "Widget",
    "construct",
    "_setLayout",
    "layout",
    "HBox",
    "addListener",
    "_onTap",
    "properties",
    "defaultCssClass",
    "refine",
    "init",
    "selection",
    "check",
    "nullable",
    "apply",
    "event",
    "members",
    "evt",
    "target",
    "getTarget",
    "tabbar",
    "TabButton",
    "getLayoutParent",
    "layoutParent",
    "TabBar",
    "setSelection",
    "_applySelection",
    "value",
    "old",
    "removeCssClass",
    "getView",
    "exclude",
    "addCssClass",
    "show",
    "add",
    "button",
    "_add",
    "flex",
    "getSelection",
    "_onChangeView",
    "getData",
    "remove",
    "_remove",
    "removeListener",
    "destruct"
  ],
  "mappings": "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",
  "file": "TabBar.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\n/**\n * This widget displays a tab bar.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   var tabBar = new qx.ui.mobile.tabbar.TabBar();\n *   var tabButton1 = new qx.ui.mobile.tabbar.TabButton(\"Tab 1\");\n *   tabButton1.setView(view1);\n *   tabBar.add(tabButton1);\n *   var tabButton2 = new qx.ui.mobile.tabbar.TabButton(\"Tab 2\");\n *   tabButton2.setView(view2);\n *   tabBar.add(tabButton2);\n *\n *   this.getRoot.add(tabBar);\n * </pre>\n *\n * This example creates a tab bar and adds two tab buttons to it.\n */\nqx.Class.define(\"qx.ui.mobile.tabbar.TabBar\",\n{\n  extend : qx.ui.mobile.core.Widget,\n\n\n /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n    this._setLayout(new qx.ui.mobile.layout.HBox());\n    this.addListener(\"tap\", this._onTap, this);\n  },\n\n\n\n\n /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    defaultCssClass :\n    {\n      refine : true,\n      init : \"tabBar\"\n    },\n\n\n    /**\n     * Sets the selected tab.\n     */\n    selection :\n    {\n      check : \"qx.ui.mobile.tabbar.TabButton\",\n      nullable : true,\n      init : null,\n      apply : \"_applySelection\",\n      event : \"changeSelection\"\n    }\n  },\n\n\n\n\n /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * Event handler. Called when a tab event occurs.\n     *\n     * @param evt {qx.event.type.Tap} The event object\n     */\n    _onTap: function(evt) {\n      var target = evt.getTarget();\n\n      while (!(target instanceof qx.ui.mobile.tabbar.TabButton)) {\n        if (target.getLayoutParent) {\n          var layoutParent = target.getLayoutParent();\n          if (layoutParent == null || layoutParent instanceof qx.ui.mobile.tabbar.TabBar) {\n            target = null;\n            break;\n          }\n          target = layoutParent;\n        } else {\n          target = null;\n          break;\n        }\n      }\n      if (target !== null) {\n        this.setSelection(target);\n      }\n    },\n\n\n    // property apply\n    _applySelection : function(value, old)\n    {\n      if (old) {\n        old.removeCssClass(\"selected\");\n        if (old.getView()) {\n          old.getView().exclude();\n        }\n      }\n      if (value) {\n        value.addCssClass(\"selected\");\n        if (value.getView()) {\n          value.getView().show();\n        }\n      }\n    },\n\n\n    /**\n     * Adds a tab button to the tab bar.\n     *\n     * @param button {qx.ui.mobile.tabbar.TabButton} The button to add\n     */\n    add : function(button)\n    {\n      this._add(button, {flex:1});\n      if (!this.getSelection()) {\n        this.setSelection(button);\n      }\n      button.addListener(\"changeView\", this._onChangeView, this);\n    },\n\n\n    /**\n     * Event handler. Called when the view was changed.\n     *\n     * @param evt {qx.event.type.Data} The event\n     */\n    _onChangeView : function(evt)\n    {\n      if (this.getSelection() == evt.getTarget()) {\n        evt.getData().show();\n      }\n    },\n\n\n    /**\n     * Removes a tab button from the tab bar.\n     *\n     * @param button {qx.ui.mobile.tabbar.TabButton} The button to remove\n     */\n    remove : function(button)\n    {\n      this._remove(button);\n      if (this.getSelection() == button) {\n        this.setSelection(null);\n      }\n      button.removeListener(\"changeView\", this._onChangeView, this);\n    }\n  },\n\n\n  destruct : function()\n  {\n    this.removeListener(\"tap\", this._onTap, this);\n  }\n});\n"
  ]
}