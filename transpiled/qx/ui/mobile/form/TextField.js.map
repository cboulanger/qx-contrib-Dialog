{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/mobile/form/TextField.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "mobile",
    "form",
    "Input",
    "include",
    "MValue",
    "MText",
    "implement",
    "IStringForm",
    "construct",
    "value",
    "addListener",
    "_onKeyPress",
    "core",
    "Environment",
    "get",
    "blur",
    "properties",
    "defaultCssClass",
    "refine",
    "init",
    "members",
    "_getType",
    "evt",
    "getKeyCode",
    "destruct",
    "removeListener",
    "TextField"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAqBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,6BAAhB,EACA;AACEC,YAASN,GAAGO,EAAH,CAAMC,MAAN,CAAaC,IAAb,CAAkBC,KAD7B;AAEEC,aAAU,CAACX,GAAGO,EAAH,CAAMC,MAAN,CAAaC,IAAb,CAAkBG,MAAnB,EAA2BZ,GAAGO,EAAH,CAAMC,MAAN,CAAaC,IAAb,CAAkBI,KAA7C,CAFZ;AAGEC,eAAY,CAACd,GAAGO,EAAH,CAAME,IAAN,CAAWM,WAAZ,CAHd;;AAME;;;;;;AAMA;;;AAGAC,eAAY,mBAASC,KAAT,EACZ;AACE;;AAEA,WAAKC,WAAL,CAAiB,UAAjB,EAA6B,KAAKC,WAAlC,EAA+C,IAA/C;;AAEA,UAAInB,GAAGoB,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,SAAxB,KAAsC,KAA1C,EAAiD;AAC/C;AACA;AACA,aAAKJ,WAAL,CAAiB,WAAjB,EAA8B,KAAKK,IAAnC,EAAyC,IAAzC;AACD;AACF,KA1BH;;AA4BE;;;;;;AAMAC,gBACA;AACE;AACAC,uBACA;AACEC,gBAAS,IADX;AAEEC,cAAO;AAFT;AAHF,KAnCF;;AA6CEC,aACA;AACE;AACAC,gBAAW,oBACX;AACE,eAAO,MAAP;AACD,OALH;;AAQE;;;;AAIAV,mBAAc,qBAASW,GAAT,EAAc;AAC1B;AACA,YAAGA,IAAIC,UAAJ,MAAoB,EAAvB,EAA2B;AACzB,eAAKR,IAAL;AACD;AACF;AAjBH,KA9CF;;AAmEES,cAAW,oBAAW;AACpB,WAAKC,cAAL,CAAoB,UAApB,EAAgC,KAAKd,WAArC,EAAkD,IAAlD;;AAEA,UAAInB,GAAGoB,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,SAAxB,KAAsC,KAA1C,EAAiD;AAC/C,aAAKW,cAAL,CAAoB,WAApB,EAAiC,KAAKV,IAAtC,EAA4C,IAA5C;AACD;AACF;AAzEH,GADA,C;AArBAvB,KAAGO,EAAH,CAAMC,MAAN,CAAaC,IAAb,CAAkByB,SAAlB,CAA4B/B,aAA5B,GAA4CA,aAA5C",
  "file": "TextField.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\n/**\n * The TextField is a single-line text input field.\n */\nqx.Class.define(\"qx.ui.mobile.form.TextField\",\n{\n  extend : qx.ui.mobile.form.Input,\n  include : [qx.ui.mobile.form.MValue, qx.ui.mobile.form.MText],\n  implement : [qx.ui.form.IStringForm],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param value {var?null} The value of the widget.\n   */\n  construct : function(value)\n  {\n    this.base(arguments);\n\n    this.addListener(\"keypress\", this._onKeyPress, this);\n\n    if (qx.core.Environment.get(\"os.name\") == \"ios\") {\n      // IOS does not blur input fields automatically if a parent DOM element\n      // was set invisible, so blur manually on disappear\n      this.addListener(\"disappear\", this.blur, this);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    defaultCssClass :\n    {\n      refine : true,\n      init : \"text-field\"\n    }\n  },\n\n\n  members :\n  {\n    // overridden\n    _getType : function()\n    {\n      return \"text\";\n    },\n\n\n    /**\n    * Event handler for <code>keypress</code> event.\n    * @param evt {qx.event.type.KeySequence} the keypress event.\n    */\n    _onKeyPress : function(evt) {\n      // On return\n      if(evt.getKeyCode() == 13) {\n        this.blur();\n      }\n    }\n  },\n\n\n  destruct : function() {\n    this.removeListener(\"keypress\", this._onKeyPress, this);\n\n    if (qx.core.Environment.get(\"os.name\") == \"ios\") {\n      this.removeListener(\"disappear\", this.blur, this);\n    }\n  }\n});\n"
  ]
}