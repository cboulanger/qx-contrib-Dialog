{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/groupbox/CheckGroupBox.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "groupbox",
    "GroupBox",
    "implement",
    "form",
    "IExecutable",
    "IBooleanForm",
    "IModel",
    "include",
    "MModelProperty",
    "properties",
    "appearance",
    "refine",
    "init",
    "events",
    "members",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "CheckBox",
    "setValue",
    "setAllowGrowX",
    "addListener",
    "_onRadioChangeValue",
    "_repositionFrame",
    "_onExecute",
    "_add",
    "left",
    "right",
    "_applyEnabled",
    "value",
    "old",
    "getChildrenContainer",
    "setEnabled",
    "getValue",
    "e",
    "fireEvent",
    "checked",
    "getData",
    "fireDataEvent",
    "getOldData",
    "execute",
    "getChildControl",
    "setCommand",
    "command",
    "getCommand",
    "resetValue",
    "CheckGroupBox"
  ],
  "mappings": "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",
  "file": "CheckGroupBox.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * A group box, which has a check box near the legend.\n *\n * @childControl legend {qx.ui.form.CheckBox} checkbox to en-/disable the\n *   groupbox content\n */\nqx.Class.define(\"qx.ui.groupbox.CheckGroupBox\",\n{\n  extend : qx.ui.groupbox.GroupBox,\n  implement : [qx.ui.form.IExecutable, qx.ui.form.IBooleanForm, qx.ui.form.IModel],\n  include : [qx.ui.form.MModelProperty],\n\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init   : \"check-groupbox\"\n    }\n  },\n\n  events :\n  {\n    /** Fired when the included checkbox changed its value */\n    \"changeValue\" : \"qx.event.type.Data\",\n\n    /** Fired if the {@link #execute} method is invoked.*/\n    \"execute\" : \"qx.event.type.Event\"\n  },\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"legend\":\n          control = new qx.ui.form.CheckBox();\n          control.setValue(true);\n          control.setAllowGrowX(true);\n          control.addListener(\"changeValue\", this._onRadioChangeValue, this);\n          control.addListener(\"resize\", this._repositionFrame, this);\n          control.addListener(\"execute\", this._onExecute, this);\n\n          this._add(control, {left: 0, right: 0});\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n    // overridden\n    _applyEnabled : function(value, old) {\n      this.base(arguments, value, old);\n\n      this.getChildrenContainer().setEnabled(value && this.getValue());\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for execute event of checkbox.\n     *\n     * @param e {qx.event.type.Event} Event which holds the current status\n     */\n    _onExecute: function(e) {\n      this.fireEvent(\"execute\");\n    },\n\n\n    /**\n     * Event listener for change event of checkbox\n     *\n     * @param e {qx.event.type.Data} Data event which holds the current status\n     */\n    _onRadioChangeValue : function(e)\n    {\n      var checked = e.getData() ? true : false;\n      // Disable content\n      this.getChildrenContainer().setEnabled(checked);\n\n      // Fire event to the outside\n      this.fireDataEvent(\"changeValue\", checked, e.getOldData());\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      REDIRECTIONS TO LEGEND (CHECKBOX COMPATIBILITY MODE)\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    execute: function() {\n      this.getChildControl(\"legend\").execute();\n    },\n\n\n    // interface implementation\n    setCommand : function(command) {\n      this.getChildControl(\"legend\").setCommand(command);\n    },\n\n\n    // interface implementation\n    getCommand : function() {\n      return this.getChildControl(\"legend\").getCommand();\n    },\n\n\n    /**\n     * The value of the groupbox.\n     *\n     * @return {Boolean} <code>true</code> when enabled.\n     */\n    getValue : function() {\n      return this.getChildControl(\"legend\").getValue();\n    },\n\n\n    /**\n     * Configures the value of the groupbox.\n     *\n     * @param value {Boolean} <code>true</code> when enabled.\n     */\n    setValue : function(value) {\n      this.getChildControl(\"legend\").setValue(value);\n    },\n\n\n    /**\n     * Resets the value.\n     */\n    resetValue: function() {\n      this.getChildControl(\"legend\").resetValue();\n    }\n  }\n});\n"
  ]
}