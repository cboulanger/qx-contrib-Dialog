{
  "className": "qx.ui.layout.VBox",
  "packageName": "qx.ui.layout",
  "name": "VBox",
  "superClass": "qx.ui.layout.Abstract",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 82,
        "column": 0
      },
      "end": {
        "line": 545,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nSebastian Werner (wpbasti)\nFabian Jakobs (fjakobs)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "A vertical box layout.\n\nThe vertical box layout lays out widgets in a vertical column, from top\nto bottom.\n\n*Features*\n\n* Minimum and maximum dimensions\n* Prioritized growing/shrinking (flex)\n* Margins (with vertical collapsing)\n* Auto sizing (ignoring percent values)\n* Percent heights (not relevant for size hint)\n* Alignment (child property {@link qx.ui.core.LayoutItem#alignY} is ignored)\n* Vertical spacing (collapsed with margins)\n* Reversed children layout (from last to first)\n* Horizontal children stretching (respecting size hints)\n\n*Item Properties*\n\n<ul>\n<li><strong>flex</strong> <em>(Integer)</em>: The flexibility of a layout item determines how the container\ndistributes remaining empty space among its children. If items are made\nflexible, they can grow or shrink accordingly. Their relative flex values\ndetermine how the items are being resized, i.e. the larger the flex ratio\nof two items, the larger the resizing of the first item compared to the\nsecond.\n\nIf there is only one flex item in a layout container, its actual flex\nvalue is not relevant. To disallow items to become flexible, set the\nflex value to zero.\n</li>\n<li><strong>height</strong> <em>(String)</em>: Allows to define a percent\nheight for the item. The height in percent, if specified, is used instead\nof the height defined by the size hint. The minimum and maximum height still\ntakes care of the element's limits. It has no influence on the layout's\nsize hint. Percent values are mostly useful for widgets which are sized by\nthe outer hierarchy.\n</li>\n</ul>\n\n*Example*\n\nHere is a little example of how to use the vertical box layout.\n\n<pre class=\"javascript\">\nvar layout = new qx.ui.layout.VBox();\nlayout.setSpacing(4); // apply spacing\n\nvar container = new qx.ui.container.Composite(layout);\n\ncontainer.add(new qx.ui.core.Widget());\ncontainer.add(new qx.ui.core.Widget());\ncontainer.add(new qx.ui.core.Widget());\n</pre>\n\n*External Documentation*\n\nSee <a href='http://manual.qooxdoo.org/${qxversion}/pages/layout/box.html'>extended documentation</a>\nand links to demos for this layout."
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 101,
        "column": 2
      },
      "end": {
        "line": 116,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nCONSTRUCTOR\n****************************************************************************"
        },
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "spacing {Integer?0} The spacing between child widgets {@link #spacing}.",
          "paramName": "spacing",
          "description": " The spacing between child widgets {@link #spacing}.",
          "optional": true,
          "defaultValue": "0",
          "type": "Integer"
        },
        {
          "name": "@param",
          "body": "alignY {String?\"top\"} Vertical alignment of the whole children\nblock {@link #alignY}.",
          "paramName": "alignY",
          "description": " Vertical alignment of the whole children\nblock {@link #alignY}.",
          "optional": true,
          "defaultValue": "\"top\"",
          "type": "String"
        },
        {
          "name": "@param",
          "body": "separator {String|qx.ui.decoration.IDecorator?} A separator to be rendered between the items",
          "paramName": "separator",
          "description": " A separator to be rendered between the items",
          "optional": true,
          "type": [
            "String",
            "qx.ui.decoration.IDecorator"
          ]
        }
      ]
    }
  },
  "properties": {
    "alignY": {
      "location": {
        "start": {
          "line": 135,
          "column": 4
        },
        "end": {
          "line": 140,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Vertical alignment of the whole children block. The vertical\nalignment of the child is completely ignored in VBoxes (\n{@link qx.ui.core.LayoutItem#alignY})."
          }
        ]
      },
      "name": "alignY",
      "propertyType": "new",
      "apply": "_applyLayoutChange",
      "init": "top",
      "possibleValues": [
        "top",
        "middle",
        "bottom"
      ],
      "defaultValue": "top"
    },
    "alignX": {
      "location": {
        "start": {
          "line": 147,
          "column": 4
        },
        "end": {
          "line": 152,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Horizontal alignment of each child. Can be overridden through\n{@link qx.ui.core.LayoutItem#alignX}."
          }
        ]
      },
      "name": "alignX",
      "propertyType": "new",
      "apply": "_applyLayoutChange",
      "init": "left",
      "possibleValues": [
        "left",
        "center",
        "right"
      ],
      "defaultValue": "left"
    },
    "spacing": {
      "location": {
        "start": {
          "line": 156,
          "column": 4
        },
        "end": {
          "line": 161,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Vertical spacing between two children"
          }
        ]
      },
      "name": "spacing",
      "propertyType": "new",
      "apply": "_applyLayoutChange",
      "init": 0,
      "check": "Integer",
      "defaultValue": 0
    },
    "separator": {
      "location": {
        "start": {
          "line": 165,
          "column": 4
        },
        "end": {
          "line": 170,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Separator lines to use between the objects"
          }
        ]
      },
      "name": "separator",
      "propertyType": "new",
      "apply": "_applyLayoutChange",
      "nullable": true,
      "allowNull": true,
      "check": "Decorator"
    },
    "reversed": {
      "location": {
        "start": {
          "line": 174,
          "column": 4
        },
        "end": {
          "line": 179,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Whether the actual children list should be laid out in reversed order."
          }
        ]
      },
      "name": "reversed",
      "propertyType": "new",
      "apply": "_applyReversed",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    }
  },
  "members": {
    "__heights": {
      "location": {
        "start": {
          "line": 194,
          "column": 4
        },
        "end": {
          "line": 194,
          "column": 20
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__flexs": {
      "location": {
        "start": {
          "line": 195,
          "column": 4
        },
        "end": {
          "line": 195,
          "column": 18
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__enableFlex": {
      "location": {
        "start": {
          "line": 196,
          "column": 4
        },
        "end": {
          "line": 196,
          "column": 23
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__children": {
      "location": {
        "start": {
          "line": 197,
          "column": 4
        },
        "end": {
          "line": 197,
          "column": 21
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_applyReversed": {
      "location": {
        "start": {
          "line": 207,
          "column": 4
        },
        "end": {
          "line": 214,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nHELPER METHODS\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "reversed"
      ]
    },
    "__rebuildCache": {
      "location": {
        "start": {
          "line": 220,
          "column": 4
        },
        "end": {
          "line": 268,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Rebuilds caches for flex and percent layout properties"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "verifyLayoutProperty": {
      "location": {
        "start": {
          "line": 281,
          "column": 4
        },
        "end": {
          "line": 300,
          "column": 6
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nLAYOUT INTERFACE\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {Object} The affected layout item",
            "paramName": "item",
            "description": " The affected layout item",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "name {Object} Name of the layout property",
            "paramName": "name",
            "description": " Name of the layout property",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "value {Object} Value of the layout property",
            "paramName": "value",
            "description": " Value of the layout property",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.layout.Abstract",
      "appearsIn": [
        "qx.ui.layout.Abstract"
      ]
    },
    "renderLayout": {
      "location": {
        "start": {
          "line": 304,
          "column": 4
        },
        "end": {
          "line": 460,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "availWidth {Integer} Final width available for the content (in pixel)",
            "paramName": "availWidth",
            "description": " Final width available for the content (in pixel)",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "availHeight {Integer} Final height available for the content (in pixel)",
            "paramName": "availHeight",
            "description": " Final height available for the content (in pixel)",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "padding {Map} Map containing the padding values. Keys:\n<code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>",
            "paramName": "padding",
            "description": " Map containing the padding values. Keys:\n<code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.layout.Abstract",
      "appearsIn": [
        "qx.ui.layout.Abstract"
      ]
    },
    "_computeSizeHint": {
      "location": {
        "start": {
          "line": 464,
          "column": 4
        },
        "end": {
          "line": 531,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} The size hint.",
            "type": "Map",
            "description": " The size hint."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.layout.Abstract",
      "appearsIn": [
        "qx.ui.layout.Abstract"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.layout.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.layout.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.layout.Abstract",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.layout.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.layout.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.layout.Abstract",
      "property": "reset"
    },
    "getAlignY": {
      "type": "function",
      "name": "getAlignY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>alignY</code>.\n\nFor further details take a look at the property definition: {@link #alignY}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for alignY"
          }
        ]
      }
    },
    "setAlignY": {
      "type": "function",
      "name": "setAlignY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>alignY</code>.\n\nFor further details take a look at the property definition: {@link #alignY}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for alignY"
          }
        ]
      }
    },
    "resetAlignY": {
      "type": "function",
      "name": "resetAlignY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>alignY</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #alignY}."
          }
        ]
      }
    },
    "getAlignX": {
      "type": "function",
      "name": "getAlignX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>alignX</code>.\n\nFor further details take a look at the property definition: {@link #alignX}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for alignX"
          }
        ]
      }
    },
    "setAlignX": {
      "type": "function",
      "name": "setAlignX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>alignX</code>.\n\nFor further details take a look at the property definition: {@link #alignX}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for alignX"
          }
        ]
      }
    },
    "resetAlignX": {
      "type": "function",
      "name": "resetAlignX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>alignX</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #alignX}."
          }
        ]
      }
    },
    "getSpacing": {
      "type": "function",
      "name": "getSpacing",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>spacing</code>.\n\nFor further details take a look at the property definition: {@link #spacing}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for spacing"
          }
        ]
      }
    },
    "setSpacing": {
      "type": "function",
      "name": "setSpacing",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>spacing</code>.\n\nFor further details take a look at the property definition: {@link #spacing}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for spacing"
          }
        ]
      }
    },
    "resetSpacing": {
      "type": "function",
      "name": "resetSpacing",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>spacing</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #spacing}."
          }
        ]
      }
    },
    "getSeparator": {
      "type": "function",
      "name": "getSeparator",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>separator</code>.\n\nFor further details take a look at the property definition: {@link #separator}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Decorator",
            "desc": "Returns the value for separator"
          }
        ]
      }
    },
    "setSeparator": {
      "type": "function",
      "name": "setSeparator",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>separator</code>.\n\nFor further details take a look at the property definition: {@link #separator}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Decorator",
            "paramName": "value",
            "desc": "Value for separator"
          }
        ]
      }
    },
    "resetSeparator": {
      "type": "function",
      "name": "resetSeparator",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>separator</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #separator}."
          }
        ]
      }
    },
    "getReversed": {
      "type": "function",
      "name": "getReversed",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>reversed</code>.\n\nFor further details take a look at the property definition: {@link #reversed}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for reversed"
          }
        ]
      }
    },
    "isReversed": {
      "type": "function",
      "name": "isReversed",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>reversed</code>.\n\nFor further details take a look at the property definition: {@link #reversed}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for reversed"
          }
        ]
      }
    },
    "setReversed": {
      "type": "function",
      "name": "setReversed",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>reversed</code>.\n\nFor further details take a look at the property definition: {@link #reversed}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for reversed"
          }
        ]
      }
    },
    "resetReversed": {
      "type": "function",
      "name": "resetReversed",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>reversed</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #reversed}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 542,
        "column": 2
      },
      "end": {
        "line": 544,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nDESTRUCTOR\n****************************************************************************"
        }
      ]
    }
  },
  "descendants": [
    "qx.ui.menu.Layout"
  ]
}