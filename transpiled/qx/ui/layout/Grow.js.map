{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/layout/Grow.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "layout",
    "Abstract",
    "members",
    "verifyLayoutProperty",
    "item",
    "name",
    "value",
    "assert",
    "renderLayout",
    "availWidth",
    "availHeight",
    "padding",
    "children",
    "_getLayoutChildren",
    "child",
    "size",
    "width",
    "height",
    "i",
    "l",
    "length",
    "getSizeHint",
    "minWidth",
    "maxWidth",
    "minHeight",
    "maxHeight",
    "left",
    "top",
    "_computeSizeHint",
    "neededWidth",
    "neededHeight",
    "Infinity",
    "Math",
    "max",
    "min",
    "Grow"
  ],
  "mappings": ";;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAuDAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,mBAAhB,EACA;AACEC,YAASN,GAAGO,EAAH,CAAMC,MAAN,CAAaC,QADxB;;AAKE;;;;;;AAMAC,aACA;AACE;;;;;;AAMA;AACAC,4BAEW,8BAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4B;AACnC,aAAKC,MAAL,CAAY,KAAZ,EAAmB,mBAAiBF,IAAjB,GAAsB,wCAAzC;AACD,OAZL;;AAkBE;AACAG,oBAAe,sBAASC,UAAT,EAAqBC,WAArB,EAAkCC,OAAlC,EACf;AACE,YAAIC,WAAW,KAAKC,kBAAL,EAAf;AACA,YAAIC,KAAJ,EAAWC,IAAX,EAAiBC,KAAjB,EAAwBC,MAAxB;;AAEA;AACA,aAAK,IAAIC,IAAE,CAAN,EAASC,IAAEP,SAASQ,MAAzB,EAAiCF,IAAEC,CAAnC,EAAsCD,GAAtC,EACA;AACEJ,kBAAQF,SAASM,CAAT,CAAR;AACAH,iBAAOD,MAAMO,WAAN,EAAP;;AAEAL,kBAAQP,UAAR;AACA,cAAIO,QAAQD,KAAKO,QAAjB,EAA2B;AACzBN,oBAAQD,KAAKO,QAAb;AACD,WAFD,MAEO,IAAIN,QAAQD,KAAKQ,QAAjB,EAA2B;AAChCP,oBAAQD,KAAKQ,QAAb;AACD;;AAEDN,mBAASP,WAAT;AACA,cAAIO,SAASF,KAAKS,SAAlB,EAA6B;AAC3BP,qBAASF,KAAKS,SAAd;AACD,WAFD,MAEO,IAAIP,SAASF,KAAKU,SAAlB,EAA6B;AAClCR,qBAASF,KAAKU,SAAd;AACD;;AAEDX,gBAAMN,YAAN,CAAmBG,QAAQe,IAA3B,EAAiCf,QAAQgB,GAAzC,EAA8CX,KAA9C,EAAqDC,MAArD;AACD;AACF,OA9CH;;AAiDE;AACAW,wBAAmB,4BACnB;AACE,YAAIhB,WAAW,KAAKC,kBAAL,EAAf;AACA,YAAIC,KAAJ,EAAWC,IAAX;AACA,YAAIc,cAAY,CAAhB;AAAA,YAAmBC,eAAa,CAAhC;AACA,YAAIR,WAAS,CAAb;AAAA,YAAgBE,YAAU,CAA1B;AACA,YAAID,WAASQ,QAAb;AAAA,YAAuBN,YAAUM,QAAjC;;AAEA;AACA,aAAK,IAAIb,IAAE,CAAN,EAASC,IAAEP,SAASQ,MAAzB,EAAiCF,IAAEC,CAAnC,EAAsCD,GAAtC,EACA;AACEJ,kBAAQF,SAASM,CAAT,CAAR;AACAH,iBAAOD,MAAMO,WAAN,EAAP;;AAEAQ,wBAAcG,KAAKC,GAAL,CAASJ,WAAT,EAAsBd,KAAKC,KAA3B,CAAd;AACAc,yBAAeE,KAAKC,GAAL,CAASH,YAAT,EAAuBf,KAAKE,MAA5B,CAAf;;AAEAK,qBAAWU,KAAKC,GAAL,CAASX,QAAT,EAAmBP,KAAKO,QAAxB,CAAX;AACAE,sBAAYQ,KAAKC,GAAL,CAAST,SAAT,EAAoBT,KAAKS,SAAzB,CAAZ;;AAEAD,qBAAWS,KAAKE,GAAL,CAASX,QAAT,EAAmBR,KAAKQ,QAAxB,CAAX;AACAE,sBAAYO,KAAKE,GAAL,CAAST,SAAT,EAAoBV,KAAKU,SAAzB,CAAZ;AACD;;AAGD;AACA,eAAO;AACLT,iBAAQa,WADH;AAELZ,kBAASa,YAFJ;;AAILR,oBAAWA,QAJN;AAKLE,qBAAYA,SALP;;AAOLD,oBAAWA,QAPN;AAQLE,qBAAYA;AARP,SAAP;AAUD;AAtFH;AAZF,GADA,C;AAvDAjC,KAAGO,EAAH,CAAMC,MAAN,CAAamC,IAAb,CAAkBxC,aAAlB,GAAkCA,aAAlC",
  "file": "Grow.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * The grow layout stretches all children to the full available size\n * but still respects limits configured by min/max values.\n *\n * It will place all children over each other with the top and left coordinates\n * set to <code>0</code>. The {@link qx.ui.container.Stack} and the\n * {@link qx.ui.core.scroll.ScrollPane} are using this layout.\n *\n * *Features*\n *\n * * Auto-sizing\n * * Respects minimum and maximum child dimensions\n *\n * *Item Properties*\n *\n * None\n *\n * *Example*\n *\n * <pre class=\"javascript\">\n * var layout = new qx.ui.layout.Grow();\n *\n * var w1 = new qx.ui.core.Widget();\n * var w2 = new qx.ui.core.Widget();\n * var w3 = new qx.ui.core.Widget();\n *\n * var container = new qx.ui.container.Composite(layout);\n * container.add(w1);\n * container.add(w2);\n * container.add(w3);\n * </pre>\n *\n * *External Documentation*\n *\n * <a href='http://manual.qooxdoo.org/${qxversion}/pages/layout/grow.html'>\n * Extended documentation</a> and links to demos of this layout in the qooxdoo manual.\n */\nqx.Class.define(\"qx.ui.layout.Grow\",\n{\n  extend : qx.ui.layout.Abstract,\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    verifyLayoutProperty : qx.core.Environment.select(\"qx.debug\",\n    {\n      \"true\" : function(item, name, value) {\n        this.assert(false, \"The property '\"+name+\"' is not supported by the Grow layout!\");\n      },\n\n      \"false\" : null\n    }),\n\n\n    // overridden\n    renderLayout : function(availWidth, availHeight, padding)\n    {\n      var children = this._getLayoutChildren();\n      var child, size, width, height;\n\n      // Render children\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n        size = child.getSizeHint();\n\n        width = availWidth;\n        if (width < size.minWidth) {\n          width = size.minWidth;\n        } else if (width > size.maxWidth) {\n          width = size.maxWidth;\n        }\n\n        height = availHeight;\n        if (height < size.minHeight) {\n          height = size.minHeight;\n        } else if (height > size.maxHeight) {\n          height = size.maxHeight;\n        }\n\n        child.renderLayout(padding.left, padding.top, width, height);\n      }\n    },\n\n\n    // overridden\n    _computeSizeHint : function()\n    {\n      var children = this._getLayoutChildren();\n      var child, size;\n      var neededWidth=0, neededHeight=0;\n      var minWidth=0, minHeight=0;\n      var maxWidth=Infinity, maxHeight=Infinity;\n\n      // Iterate over children\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n        size = child.getSizeHint();\n\n        neededWidth = Math.max(neededWidth, size.width);\n        neededHeight = Math.max(neededHeight, size.height);\n\n        minWidth = Math.max(minWidth, size.minWidth);\n        minHeight = Math.max(minHeight, size.minHeight);\n\n        maxWidth = Math.min(maxWidth, size.maxWidth);\n        maxHeight = Math.min(maxHeight, size.maxHeight);\n      }\n\n\n      // Return hint\n      return {\n        width : neededWidth,\n        height : neededHeight,\n\n        minWidth : minWidth,\n        minHeight : minHeight,\n\n        maxWidth : maxWidth,\n        maxHeight : maxHeight\n      };\n    }\n  }\n});\n"
  ]
}