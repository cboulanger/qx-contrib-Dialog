{
  "className": "qx.ui.progressive.State",
  "packageName": "qx.ui.progressive",
  "name": "State",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 22,
        "column": 0
      },
      "end": {
        "line": 119,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2008 Derrell Lipman\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nDerrell Lipman (derrell)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "State of rendering by Progressive."
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 45,
        "column": 2
      },
      "end": {
        "line": 55,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "initialState {Map}\nMap containing these members:\n<dl>\n<dt>progressive</dt>\n<dd>see {@link #progressive}</dd>\n<dt>model</dt>\n<dd>see {@link #model}</dd>\n<dt>pane</dt>\n<dd>see {@link #pane}</dd>\n<dt>batchSize</dt>\n<dd>see {@link #batchSize}</dd>\n<dt>rendererData</dt>\n<dd>see {@link #rendererData}</dd>\n<dt>userData</dt>\n<dd>see {@link #userData}</dd>\n</dl>",
          "paramName": "initialState",
          "description": "\nMap containing these members:\n<dl>\n<dt>progressive</dt>\n<dd>see {@link #progressive}</dd>\n<dt>model</dt>\n<dd>see {@link #model}</dd>\n<dt>pane</dt>\n<dd>see {@link #pane}</dd>\n<dt>batchSize</dt>\n<dd>see {@link #batchSize}</dd>\n<dt>rendererData</dt>\n<dd>see {@link #rendererData}</dd>\n<dt>userData</dt>\n<dd>see {@link #userData}</dd>\n</dl>",
          "type": "Map"
        }
      ]
    }
  },
  "properties": {
    "progressive": {
      "location": {
        "start": {
          "line": 64,
          "column": 4
        },
        "end": {
          "line": 64,
          "column": 40
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The {@link qx.ui.progressive.Progressive} with which this {@link\nState} is associated. This property should be treated as read-only."
          }
        ]
      },
      "name": "progressive",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true
    },
    "model": {
      "location": {
        "start": {
          "line": 70,
          "column": 4
        },
        "end": {
          "line": 70,
          "column": 40
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The data model being used. This property should be treated as\nread-only."
          }
        ]
      },
      "name": "model",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true
    },
    "pane": {
      "location": {
        "start": {
          "line": 76,
          "column": 4
        },
        "end": {
          "line": 76,
          "column": 40
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The widget in which the element data should be rendered.  This property\nshould be treated as read-only."
          }
        ]
      },
      "name": "pane",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true
    },
    "batchSize": {
      "location": {
        "start": {
          "line": 82,
          "column": 4
        },
        "end": {
          "line": 82,
          "column": 24
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "How many elements are rendered at a time, before yielding to the\nbrowser.  This property should be treated as read-only."
          }
        ]
      },
      "name": "batchSize",
      "propertyType": "new"
    },
    "rendererData": {
      "location": {
        "start": {
          "line": 97,
          "column": 4
        },
        "end": {
          "line": 97,
          "column": 24
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Add a place for renderers' private data.  If multiple renderers are\nbeing used, each renderer should place its own private data in the the\nstate object area reserved for that renderer's use:\nstate.getRendererData()[element.renderer].  This property should be\naccessed only by renderers, and all elements of the array other than a\nrenderer's own element should be treated as read-only.\n\nIMPORTANT NOTE:  It is the renderer's responsibility to clean up its\nown mess.  If the renderer places data here, it should\nalso add an event listener for \"renderEnd\" so that it\ncan clean up."
          }
        ]
      },
      "name": "rendererData",
      "propertyType": "new"
    },
    "userData": {
      "location": {
        "start": {
          "line": 108,
          "column": 4
        },
        "end": {
          "line": 108,
          "column": 24
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "User data.  This is useful, for example, by communication between\nthe renderStart event listener and the renderers.\n\nIMPORTANT NOTE:  It is the user's responsibility to clean up his\nown mess.  If you place data here, you should\nalso add an event listener for \"renderEnd\" to\ndispose any objects you placed here."
          }
        ]
      },
      "name": "userData",
      "propertyType": "new"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId"
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 112,
        "column": 2
      },
      "end": {
        "line": 118,
        "column": 3
      }
    }
  },
  "members": {
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getProgressive": {
      "type": "function",
      "name": "getProgressive",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>progressive</code>.\n\nFor further details take a look at the property definition: {@link #progressive}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for progressive"
          }
        ]
      }
    },
    "setProgressive": {
      "type": "function",
      "name": "setProgressive",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>progressive</code>.\n\nFor further details take a look at the property definition: {@link #progressive}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for progressive"
          }
        ]
      }
    },
    "resetProgressive": {
      "type": "function",
      "name": "resetProgressive",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>progressive</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #progressive}."
          }
        ]
      }
    },
    "getModel": {
      "type": "function",
      "name": "getModel",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>model</code>.\n\nFor further details take a look at the property definition: {@link #model}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for model"
          }
        ]
      }
    },
    "setModel": {
      "type": "function",
      "name": "setModel",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>model</code>.\n\nFor further details take a look at the property definition: {@link #model}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for model"
          }
        ]
      }
    },
    "resetModel": {
      "type": "function",
      "name": "resetModel",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>model</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #model}."
          }
        ]
      }
    },
    "getPane": {
      "type": "function",
      "name": "getPane",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>pane</code>.\n\nFor further details take a look at the property definition: {@link #pane}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for pane"
          }
        ]
      }
    },
    "setPane": {
      "type": "function",
      "name": "setPane",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>pane</code>.\n\nFor further details take a look at the property definition: {@link #pane}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for pane"
          }
        ]
      }
    },
    "resetPane": {
      "type": "function",
      "name": "resetPane",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>pane</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #pane}."
          }
        ]
      }
    },
    "getBatchSize": {
      "type": "function",
      "name": "getBatchSize",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>batchSize</code>.\n\nFor further details take a look at the property definition: {@link #batchSize}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for batchSize"
          }
        ]
      }
    },
    "setBatchSize": {
      "type": "function",
      "name": "setBatchSize",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>batchSize</code>.\n\nFor further details take a look at the property definition: {@link #batchSize}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for batchSize"
          }
        ]
      }
    },
    "resetBatchSize": {
      "type": "function",
      "name": "resetBatchSize",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>batchSize</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #batchSize}."
          }
        ]
      }
    },
    "getRendererData": {
      "type": "function",
      "name": "getRendererData",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>rendererData</code>.\n\nFor further details take a look at the property definition: {@link #rendererData}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for rendererData"
          }
        ]
      }
    },
    "setRendererData": {
      "type": "function",
      "name": "setRendererData",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>rendererData</code>.\n\nFor further details take a look at the property definition: {@link #rendererData}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for rendererData"
          }
        ]
      }
    },
    "resetRendererData": {
      "type": "function",
      "name": "resetRendererData",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>rendererData</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #rendererData}."
          }
        ]
      }
    },
    "resetUserData": {
      "type": "function",
      "name": "resetUserData",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>userData</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #userData}."
          }
        ]
      }
    }
  },
  "descendants": []
}