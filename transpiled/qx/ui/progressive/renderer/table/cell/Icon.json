{
  "className": "qx.ui.progressive.renderer.table.cell.Icon",
  "packageName": "qx.ui.progressive.renderer.table.cell",
  "name": "Icon",
  "superClass": "qx.ui.progressive.renderer.table.cell.Abstract",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 25,
        "column": 0
      },
      "end": {
        "line": 230,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2006 STZ-IDA, Germany, http://www.stz-ida.de\n2008 Derrell Lipman\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nTil Schneider (til132)\nCarsten Lergenmueller (carstenl)\nDerrell Lipman (derrell)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Abstract Icon cell renderer."
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": false,
  "construct": {
    "location": {
      "start": {
        "line": 32,
        "column": 2
      },
      "end": {
        "line": 41,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "Create a new instance of an Icon cell renderer"
        }
      ]
    }
  },
  "members": {
    "__imageBlank": {
      "location": {
        "start": {
          "line": 49,
          "column": 4
        },
        "end": {
          "line": 49,
          "column": 23
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "A blank image for use as a spacer in place of another image"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "getBlankImage": {
      "location": {
        "start": {
          "line": 58,
          "column": 4
        },
        "end": {
          "line": 61,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Retrieve the URI for a blank image"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}\nThe URI of the blank image.",
            "type": "qx.ui.progressive.renderer.table.cell.String",
            "description": "\nThe URI of the blank image."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_identifyImage": {
      "location": {
        "start": {
          "line": 112,
          "column": 4
        },
        "end": {
          "line": 115,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Identify the image to be displayed in the cell."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map}\nInformation about the cell being renderered, including:\n<ul>\n<li>state</li>\n<li>rowDiv</li>\n<li>stylesheet</li>\n<li>element</li>\n<li>dataIndex</li>\n<li>cellData</li>\n<li>height</li>\n</ul>",
            "paramName": "cellInfo",
            "description": "\nInformation about the cell being renderered, including:\n<ul>\n<li>state</li>\n<li>rowDiv</li>\n<li>stylesheet</li>\n<li>element</li>\n<li>dataIndex</li>\n<li>cellData</li>\n<li>height</li>\n</ul>",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map}\nThe returned map should contain at least the <i>url</i> field, but\nmay contain any others of these:\n\n<dl>\n<dt>\nurl\n</dt>\n<dd>\nThe URL of the image to be displayed\n</dd>\n\n<dt>\nimageWidth\n</dt>\n<dd>\nThe width at which the image should be displayed\n</dd>\n\n<dt>\nimageHeight\n</dt>\n<dd>\nThe height at which the image should be displayed\n</dd>\n\n<dt>\nextras\n</dt>\n<dd>\nAny extra attributes to be include in the 'image' tag.\n</dd>\n</dl>",
            "type": "Map",
            "description": "\nThe returned map should contain at least the <i>url</i> field, but\nmay contain any others of these:\n\n<dl>\n<dt>\nurl\n</dt>\n<dd>\nThe URL of the image to be displayed\n</dd>\n\n<dt>\nimageWidth\n</dt>\n<dd>\nThe width at which the image should be displayed\n</dd>\n\n<dt>\nimageHeight\n</dt>\n<dd>\nThe height at which the image should be displayed\n</dd>\n\n<dt>\nextras\n</dt>\n<dd>\nAny extra attributes to be include in the 'image' tag.\n</dd>\n</dl>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getCellStyle": {
      "location": {
        "start": {
          "line": 118,
          "column": 4
        },
        "end": {
          "line": 125,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Object}\nSee {@link qx.ui.progressive.renderer.table.cell.Abstract} class\ndescription for details",
            "paramName": "cellInfo",
            "description": "\nSee {@link qx.ui.progressive.renderer.table.cell.Abstract} class\ndescription for details",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}\nThe style characteristics to be applied to this cell.",
            "type": "qx.ui.progressive.renderer.table.cell.String",
            "description": "\nThe style characteristics to be applied to this cell."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.progressive.renderer.table.cell.Abstract",
      "appearsIn": [
        "qx.ui.progressive.renderer.table.cell.Abstract"
      ]
    },
    "_getContentHtml": {
      "location": {
        "start": {
          "line": 128,
          "column": 4
        },
        "end": {
          "line": 186,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Object}\nSee {@link qx.ui.progressive.renderer.table.cell.Abstract} class\ndescription for details",
            "paramName": "cellInfo",
            "description": "\nSee {@link qx.ui.progressive.renderer.table.cell.Abstract} class\ndescription for details",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}\nThe HTML content to be added to the cell div.",
            "type": "qx.ui.progressive.renderer.table.cell.String",
            "description": "\nThe HTML content to be added to the cell div."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.progressive.renderer.table.cell.Abstract",
      "appearsIn": [
        "qx.ui.progressive.renderer.table.cell.Abstract"
      ]
    },
    "__getImageData": {
      "location": {
        "start": {
          "line": 206,
          "column": 4
        },
        "end": {
          "line": 228,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Obtain the image data (url, tooltip) that's appropriate for this cell"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map}\nInformation about the cell being renderered, including:\n<ul>\n<li>state</li>\n<li>rowDiv</li>\n<li>stylesheet</li>\n<li>element</li>\n<li>dataIndex</li>\n<li>cellData</li>\n<li>height</li>\n</ul>",
            "paramName": "cellInfo",
            "description": "\nInformation about the cell being renderered, including:\n<ul>\n<li>state</li>\n<li>rowDiv</li>\n<li>stylesheet</li>\n<li>element</li>\n<li>dataIndex</li>\n<li>cellData</li>\n<li>height</li>\n</ul>",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map}\nSee {@link #_identifyImage}",
            "type": "Map",
            "description": "\nSee {@link #_identifyImage}"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.progressive.renderer.table.cell.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.progressive.renderer.table.cell.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.progressive.renderer.table.cell.Abstract",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.progressive.renderer.table.cell.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.progressive.renderer.table.cell.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.progressive.renderer.table.cell.Abstract",
      "property": "reset"
    }
  },
  "descendants": [
    "qx.ui.progressive.renderer.table.cell.Boolean",
    "qx.ui.progressive.renderer.table.cell.Image"
  ]
}