{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/progressive/renderer/table/Row.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "progressive",
    "renderer",
    "Abstract",
    "construct",
    "columnWidths",
    "__columnWidths",
    "__renderers",
    "__defaultCellRenderer",
    "table",
    "cell",
    "Default",
    "__progressive",
    "__colors",
    "__linkColors",
    "__layout",
    "layout",
    "HBox",
    "connectToWidget",
    "theme",
    "manager",
    "Meta",
    "getInstance",
    "addListener",
    "statics",
    "__clazz",
    "__padding",
    "__tableCellStyleSheet",
    "core",
    "Environment",
    "get",
    "bom",
    "Style",
    "getCssName",
    "properties",
    "defaultRowHeight",
    "init",
    "members",
    "__name",
    "__hash",
    "colorMgr",
    "Color",
    "bgcol",
    "resolve",
    "join",
    "name",
    "Error",
    "tr",
    "Row",
    "hash",
    "toHashCode",
    "rowstylesheet",
    "cellstylesheet",
    "stylesheet",
    "Stylesheet",
    "createElement",
    "columnData",
    "getData",
    "i",
    "length",
    "pane",
    "getStructure",
    "getPane",
    "_resizeColumns",
    "addRenderer",
    "column",
    "removeRenderer",
    "render",
    "state",
    "element",
    "data",
    "html",
    "cellInfo",
    "height",
    "getRendererData",
    "end",
    "undefined",
    "start",
    "rows",
    "totalHeight",
    "div",
    "document",
    "rowDiv",
    "dataIndex",
    "cellData",
    "push",
    "getDefaultRowHeight",
    "rendererData",
    "style",
    "position",
    "className",
    "innerHTML",
    "location",
    "index",
    "backgroundColor",
    "getContentElement",
    "getDomElement",
    "appendChild",
    "elem",
    "children",
    "childNodes",
    "insertBefore",
    "getLayoutChildren",
    "e",
    "width",
    "getBounds",
    "Scroll",
    "getScrollbarWidth",
    "removeRule",
    "rule",
    "addRule",
    "renderLayout",
    "top",
    "right",
    "bottom",
    "left",
    "getComputedWidth",
    "debug",
    "inset",
    "widthRule",
    "paddingRule",
    "leftRule",
    "destruct",
    "removeListener",
    "_disposeObjects"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAqBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,sCAAhB,EACA;AACEC,YAAaN,GAAGO,EAAH,CAAMC,WAAN,CAAkBC,QAAlB,CAA2BC,QAD1C;;AAIE;;;;AAIAC,eAAY,mBAASC,YAAT,EACZ;AACE;;AAEA;AACA,WAAKC,cAAL,GAAsBD,YAAtB;;AAEA;AACA,WAAKE,WAAL,GAAmB,EAAnB;;AAEA;AACA,WAAKC,qBAAL,GACE,IAAIf,GAAGO,EAAH,CAAMC,WAAN,CAAkBC,QAAlB,CAA2BO,KAA3B,CAAiCC,IAAjC,CAAsCC,OAA1C,EADF;;AAGA;AACA,WAAKC,aAAL,GAAqB,IAArB;;AAEA,WAAKC,QAAL,GAAgB,EAAhB;AACA,WAAKC,YAAL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAKC,QAAL,GAAgB,IAAItB,GAAGO,EAAH,CAAMgB,MAAN,CAAaC,IAAjB,EAAhB;AACA,WAAKF,QAAL,CAAcG,eAAd,CAA8B,IAA9B;;AAEA;AAC4C;AAC1CzB,WAAG0B,KAAH,CAASC,OAAT,CAAiBC,IAAjB,CAAsBC,WAAtB,GAAoCC,WAApC,CACE,aADF,EACiB,KAAKT,YADtB,EACoC,IADpC;AAGD;AACF,KA5CH;;AA+CEU,aACA;AACE;;;;;AAKAC,eAAU,IANZ;;AAQE;;;;;AAKAC,iBAAY,CAbd,EAaiB;;AAEf;;;;;AAKAC,6BACI,uEAIClC,GAAGmC,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,kBAAxB,IACDrC,GAAGsC,GAAH,CAAOC,KAAP,CAAaC,UAAb,CAAwBxC,GAAGmC,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,kBAAxB,CAAxB,IACA,YAFC,GAEc,EANf,IAOA,uBAPA,GAQA,mCARA,GASA,oCATA,GAUA,8BAVA,GAWA,mBAXA,GAYA,oBAZA,GAaA,wFAbA,IAcCrC,GAAGmC,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,gBAAxB,IACDrC,GAAGsC,GAAH,CAAOC,KAAP,CAAaC,UAAb,CAAwBxC,GAAGmC,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,gBAAxB,CAAxB,IACA,GADA,GACMrC,GAAGmC,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,qBAAxB,CADN,GACuD,GAFtD,GAGC,EAjBF;AArBN,KAhDF;;AA0FEI,gBACA;AACE;AACAC,wBACA;AACEC,cAAO;AADT;AAHF,KA3FF;;AAoGEC,aACA;;AAEEzB,qBAAgB,IAFlB;AAGE0B,cAAS,IAHX;AAIEC,cAAS,IAJX;AAKEjC,sBAAiB,IALnB;AAMEC,mBAAc,IANhB;AAOEC,6BAAwB,IAP1B;AAQEK,gBAAW,IARb;AASEE,gBAAW,IATb;;AAYE;;;AAGAD,oBAAe,wBAAW;AACxB;AACA,YAAI0B,WAAW/C,GAAG0B,KAAH,CAASC,OAAT,CAAiBqB,KAAjB,CAAuBnB,WAAvB,EAAf;AACA,aAAKT,QAAL,CAAc6B,KAAd,GAAsB,EAAtB;AACA,aAAK7B,QAAL,CAAc6B,KAAd,CAAoB,CAApB,IACEF,SAASG,OAAT,CAAiB,uCAAjB,CADF;AAEA,aAAK9B,QAAL,CAAc6B,KAAd,CAAoB,CAApB,IACEF,SAASG,OAAT,CAAiB,sCAAjB,CADF;AAED,OAvBH;;AA0BE;AACAC,YAAO,cAAS3C,WAAT,EAAsB4C,IAAtB,EACP;AACE;AACA,YAAI,KAAKjC,aAAT,EACA;AACE;AACA,gBAAM,IAAIkC,KAAJ,CAAU,8CAAV,CAAN;AACD;;AAED;AACA,aAAKlC,aAAL,GAAqBX,WAArB;;AAEA;AACA,aAAKqC,MAAL,GAAcO,IAAd;;AAEA;AACA,YAAIE,KAAKtD,GAAGO,EAAH,CAAMC,WAAN,CAAkBC,QAAlB,CAA2BO,KAA3B,CAAiCuC,GAA1C;AACA,YAAI,CAACD,GAAGtB,OAAR,EACA;AACEsB,aAAGtB,OAAH,GAAa,EAAb;AACD;;AAED,YAAIwB,OAAOhD,YAAYiD,UAAZ,EAAX;AACA,YAAI,CAACH,GAAGtB,OAAH,CAAWwB,IAAX,CAAL,EACA;AACE;AACAF,aAAGtB,OAAH,CAAWwB,IAAX,IACE;AACEE,2BAAiB,IADnB;AAEEC,4BAAiB;AAFnB,WADF;;AAMA,cAAIC,aACF,qBAAqBJ,IAArB,GAA4B,QAA5B,GACA,iBADA,GAEA,GAHF;AAIAF,aAAGtB,OAAH,CAAWwB,IAAX,EAAiBE,aAAjB,GACE1D,GAAGsC,GAAH,CAAOuB,UAAP,CAAkBC,aAAlB,CAAgCF,UAAhC,CADF;;AAGA,cAAIG,aAAa,KAAKlD,cAAL,CAAoBmD,OAApB,EAAjB;;AAEA,eAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,WAAWG,MAA/B,EAAuCD,GAAvC,EACA;AACE,gBAAIL,aACF,qBAAqBJ,IAArB,GAA4B,OAA5B,GAAsCS,CAAtC,GAA0C,IAA1C,GACAX,GAAGpB,qBADH,GAEA,GAHF;AAIAoB,eAAGtB,OAAH,CAAWwB,IAAX,EAAiBG,cAAjB,CAAgCM,CAAhC,IACEjE,GAAGsC,GAAH,CAAOuB,UAAP,CAAkBC,aAAlB,CAAgCF,UAAhC,CADF;AAED;;AAED;AACA,eAAKd,MAAL,GAAcU,IAAd;;AAEA;AACA;AACA,cAAIW,OAAO3D,YAAY4D,YAAZ,GAA2BC,OAA3B,EAAX;AACAF,eAAKrC,WAAL,CAAiB,QAAjB,EAA2B,KAAKwC,cAAhC,EAAgD,IAAhD;AAED;AACF,OAvFH;;AAyFE;;;;;;;;;;;AAWAC,mBAAc,qBAASC,MAAT,EAAiB/D,QAAjB,EACd;AACE,YAAIsD,aAAa,KAAKlD,cAAL,CAAoBmD,OAApB,EAAjB;AACA,YAAIQ,SAAS,CAAT,IAAcA,UAAUT,WAAWG,MAAvC,EACA;AACE,gBAAM,IAAIb,KAAJ,CAAU,YACAmB,MADA,GAEA,sBAFA,IAGCT,WAAWG,MAAX,GAAoB,CAHrB,IAIA,GAJV,CAAN;AAKD;;AAED,aAAKpD,WAAL,CAAiB0D,MAAjB,IAA2B/D,QAA3B;AACD,OAjHH;;AAmHE;;;;;;;AAOAgE,sBAAiB,wBAASD,MAAT,EACjB;AACE,YAAIT,aAAa,KAAKlD,cAAL,CAAoBmD,OAApB,EAAjB;AACA,YAAIQ,SAAS,CAAT,IAAcA,UAAUT,WAAWG,MAAvC,EACA;AACE,gBAAM,IAAIb,KAAJ,CAAU,YACAmB,MADA,GAEA,sBAFA,IAGCT,WAAWG,MAAX,GAAoB,CAHrB,IAIA,GAJV,CAAN;AAKD;;AAED,YAAI,CAAE,KAAKpD,WAAL,CAAiB0D,MAAjB,CAAN,EACA;AACE,gBAAM,IAAInB,KAAJ,CAAU,qCAAqCmB,MAA/C,CAAN;AACD;;AAED,eAAO,KAAK1D,WAAL,CAAiB0D,MAAjB,CAAP;AACD,OA5IH;;AA8IE;AACAE,cAAS,gBAASC,KAAT,EAAgBC,OAAhB,EACT;AACE,YAAIC,OAAOD,QAAQC,IAAnB;AACA,YAAIC,OAAO,EAAX;AACA,YAAIC,QAAJ;AACA,YAAItE,QAAJ;AACA,YAAIuE,SAAS,CAAb;;AAEA;AACA;;AAEA,YAAIL,MAAMM,eAAN,GAAwB,KAAKpC,MAA7B,EAAqCqC,GAArC,KAA6CC,SAAjD,EACA;AACER,gBAAMM,eAAN,GAAwB,KAAKpC,MAA7B,IACE;AACEqC,iBAAc,CADhB;AAEEE,mBAAc,CAFhB;AAGEC,kBAAc,CAHhB;AAIEC,yBAAc;AAJhB,WADF;AAOD;;AAED;AACA,YAAIC,MAAMC,SAAS1B,aAAT,CAAuB,KAAvB,CAAV;;AAEA;AACA,aAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIY,KAAKX,MAAzB,EAAiCD,GAAjC,EACA;AACE,cAAIL,aAAa,oBAAoB,KAAKd,MAAzB,GAAkC,OAAlC,GAA4CmB,CAA7D;;AAEA;AACAxD,qBAAW,KAAKK,WAAL,CAAiBmD,CAAjB,KAAuB,KAAKlD,qBAAvC;;AAEA;AACAgE,qBACA;AACEJ,mBAAaA,KADf;AAEEc,oBAAaF,GAFf;AAGE3B,wBAAaA,UAHf;AAIEgB,qBAAaA,OAJf;AAKEc,uBAAazB,CALf;AAME0B,sBAAad,KAAKZ,CAAL,CANf;AAOEe,oBAAaA;AAPf,WADA;;AAWA;AACAF,eAAKc,IAAL,CAAUnF,SAASiE,MAAT,CAAgBK,QAAhB,CAAV;;AAEA;AACA,cAAIA,SAASC,MAAT,GAAkBA,MAAtB,EACA;AACE;AACAA,qBAASD,SAASC,MAAlB;AACD;AACF;;AAEDA,iBAAUA,SAAS,CAAT,GAAaA,MAAb,GAAsB,KAAKa,mBAAL,EAAhC;;AAEA;AACA,YAAIC,eAAenB,MAAMM,eAAN,GAAwB,KAAKpC,MAA7B,CAAnB;;AAEA;AACAiD,qBAAaR,WAAb,IAA4BN,MAA5B;;AAEA;AACAO,YAAIQ,KAAJ,CAAUC,QAAV,GAAqB,UAArB;AACAT,YAAIQ,KAAJ,CAAUf,MAAV,GAAmBA,SAAS,IAA5B;AACAO,YAAIU,SAAJ,GAAgB,oBAAoB,KAAKnD,MAAzB,GAAkC,MAAlD;AACAyC,YAAIW,SAAJ,GAAgBpB,KAAK3B,IAAL,CAAU,EAAV,CAAhB;;AAEA;AACA,gBAAOyB,QAAQuB,QAAf;AAEA,eAAK,KAAL;AACE;AACA,gBAAIC,QAAQN,aAAaZ,GAAb,IAAoB,CAAhC;;AAEA;AACAK,gBAAIQ,KAAJ,CAAUM,eAAV,GAA4B,KAAKjF,QAAL,CAAc6B,KAAd,CAAoBmD,KAApB,CAA5B;;AAEA;AACAN,yBAAaZ,GAAb,GAAoBkB,SAAS,CAAT,GAAa,CAAb,GAAiB,CAArC;;AAEA;AACAzB,kBAAMN,OAAN,GAAgBiC,iBAAhB,GAAoCC,aAApC,GAAoDC,WAApD,CAAgEjB,GAAhE;AACA;;AAEF,eAAK,OAAL;AACE;AACA,gBAAIkB,OAAO9B,MAAMN,OAAN,GAAgBiC,iBAAhB,GAAoCC,aAApC,EAAX;;AAEA;AACA,gBAAIG,WAAWD,KAAKE,UAApB;;AAEA;AACA,gBAAID,SAASxC,MAAT,GAAkB,CAAtB,EACA;AACE;AACA,kBAAIkC,QAAQN,aAAaV,KAAzB;;AAEA;AACAG,kBAAIQ,KAAJ,CAAUM,eAAV,GAA4B,KAAKjF,QAAL,CAAc6B,KAAd,CAAoBmD,KAApB,CAA5B;;AAEA;AACAN,2BAAaV,KAAb,GAAsBgB,SAAS,CAAT,GAAa,CAAb,GAAiB,CAAvC;;AAEA;AACAK,mBAAKG,YAAL,CAAkBrB,GAAlB,EAAuBmB,SAAS,CAAT,CAAvB;AACA;AACD,aAdD,MAgBA;AACE;AACAD,mBAAKD,WAAL,CAAiBjB,GAAjB;AACD;AACD;;AAEF;AACE,kBAAM,IAAIlC,KAAJ,CAAU,uBAAuBuB,QAAQuB,QAAzC,CAAN;AA/CF;;AAkDA;AACA,UAAEL,aAAaT,IAAf;AACD,OA1QH;;AA4QE;;;;;AAKAwB,yBAAoB,6BACpB;AACE,eAAO,KAAKhG,cAAL,CAAoBmD,OAApB,EAAP;AACD,OApRH;;AAuRE;;;;;;;;;AASAM,sBAAiB,wBAASwC,CAAT,EACjB;AACE,YAAI3C,OAAO,KAAKhD,aAAL,CAAmBiD,YAAnB,GAAkCC,OAAlC,EAAX;;AAEA,YAAI0C,QACF5C,KAAK6C,SAAL,GAAiBD,KAAjB,GAAyB/G,GAAGsC,GAAH,CAAOsC,OAAP,CAAeqC,MAAf,CAAsBC,iBAAtB,EAD3B;;AAGA;AACA,YAAItD,aAAa,qBAAqB,KAAKd,MAA1B,GAAmC,MAApD;;AAEA;AACA,YAAIQ,KAAKtD,GAAGO,EAAH,CAAMC,WAAN,CAAkBC,QAAlB,CAA2BO,KAA3B,CAAiCuC,GAA1C;AACAvD,WAAGsC,GAAH,CAAOuB,UAAP,CAAkBsD,UAAlB,CAA6B7D,GAAGtB,OAAH,CAAW,KAAKc,MAAhB,EAAwBY,aAArD,EAC8BE,UAD9B;;AAIA;AACA,YAAIwD,OAAO,YAAYL,KAAZ,GAAoB,KAA/B;;AAGA;AACA/G,WAAGsC,GAAH,CAAOuB,UAAP,CAAkBwD,OAAlB,CAA0B/D,GAAGtB,OAAH,CAAW,KAAKc,MAAhB,EAAwBY,aAAlD,EAC2BE,UAD3B,EAE2BwD,IAF3B;;AAIA;AACA,aAAK9F,QAAL,CAAcgG,YAAd,CAA2BP,KAA3B,EAAkC,GAAlC,EAAuC,EAACQ,KAAK,CAAN,EAASC,OAAO,CAAhB,EAAmBC,QAAQ,CAA3B,EAA8BC,MAAM,CAApC,EAAvC;;AAEA;AACA,YAAI3D,aAAa,KAAKlD,cAAL,CAAoBmD,OAApB,EAAjB;;AAEA;AACA,aAAK,IAAIC,IAAI,CAAR,EACEyD,OAAO,CADd,EAEKzD,IAAIF,WAAWG,MAFpB,EAGKD,KACEyD,QAAQX,KAJf,EAKA;AACE;AACA,cAAInD,aAAa,qBAAqB,KAAKd,MAA1B,GAAmC,OAAnC,GAA6CmB,CAA9D;;AAEA;AACA,cAAIX,KAAKtD,GAAGO,EAAH,CAAMC,WAAN,CAAkBC,QAAlB,CAA2BO,KAA3B,CAAiCuC,GAA1C;AACAvD,aAAGsC,GAAH,CAAOuB,UAAP,CAAkBsD,UAAlB,CAA6B7D,GAAGtB,OAAH,CAAW,KAAKc,MAAhB,EAAwBa,cAAxB,CAAuCM,CAAvC,CAA7B,EAC8BL,UAD9B;;AAGA;AACAmD,kBAAQhD,WAAWE,CAAX,EAAc0D,gBAAd,EAAR;;AAGA;AACE,gBAAI3H,GAAGmC,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,qBAAxB,CAAJ,EACA;AACE,mBAAKuF,KAAL,CAAW,SAAS3D,CAAT,GAAa,UAAb,GAA0B8C,KAArC;AACD;AACF;;AAED;AACA,cAAIc,KAAJ;AACA,cAAI7H,GAAGmC,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,cAAxB,KAA2C,SAA/C,EACA;AACEwF,oBAAQ7H,GAAGO,EAAH,CAAMC,WAAN,CAAkBC,QAAlB,CAA2BO,KAA3B,CAAiCuC,GAAjC,CAAqCtB,SAArC,GAAiD,CAAzD;AACD,WAHD,MAKA;AACE4F,oBAAQ,CAAC,CAAT;AACD;;AAED;AACA,cAAIC,YAAaf,QAAQc,KAAT,GAAkB,KAAlC;;AAEA,cAAIE,cACF,SAAS/H,GAAGO,EAAH,CAAMC,WAAN,CAAkBC,QAAlB,CAA2BO,KAA3B,CAAiCuC,GAAjC,CAAqCtB,SAA9C,GAA0D,KAA1D,GACA,MADA,GACSjC,GAAGO,EAAH,CAAMC,WAAN,CAAkBC,QAAlB,CAA2BO,KAA3B,CAAiCuC,GAAjC,CAAqCtB,SAD9C,GAC0D,KAF5D;;AAIA,cAAI+F,WAAWN,OAAO,KAAtB;;AAEA,cAAIN,OACF9D,GAAGpB,qBAAH,GACA,SADA,GACY4F,SADZ,GAEA,QAFA,GAEWE,QAFX,GAGA,WAHA,GAGcD,WAJhB;;AAMA;AACA/H,aAAGsC,GAAH,CAAOuB,UAAP,CAAkBwD,OAAlB,CAA0B/D,GAAGtB,OAAH,CAAW,KAAKc,MAAhB,EAAwBa,cAAxB,CAAuCM,CAAvC,CAA1B,EAC2BL,UAD3B,EAE2BwD,IAF3B;AAGD;AACF;AAxXH,KArGF;;AAieEa,cAAW,oBACX;AACE;AACAjI,SAAG0B,KAAH,CAASC,OAAT,CAAiBC,IAAjB,CAAsBC,WAAtB,GAAoCqG,cAApC,CACE,aADF,EACiB,KAAK7G,YADtB,EACoC,IADpC;;AAIA,UAAI+B,IAAJ;;AAEA,WAAKA,IAAL,IAAa,KAAKtC,WAAlB,EACA;AACE,aAAKA,WAAL,CAAiBsC,IAAjB,IAAyB,IAAzB;AACD;;AAED;AACA,UAAIE,KAAKtD,GAAGO,EAAH,CAAMC,WAAN,CAAkBC,QAAlB,CAA2BO,KAA3B,CAAiCuC,GAA1C;AACA,UAAIC,OAAO,KAAKrC,aAAL,CAAmBsC,UAAnB,EAAX;AACA,UAAIH,GAAGtB,OAAH,IAAcsB,GAAGtB,OAAH,CAAWwB,IAAX,CAAlB,EACA;AACE;AACA,YAAIF,GAAGtB,OAAH,CAAWwB,IAAX,EAAiBE,aAArB,EACA;AACE;AACA,cAAIE,aAAa,qBAAqB,KAAKd,MAA1B,GAAmC,MAApD;;AAEA;AACA,cAAIQ,KAAKtD,GAAGO,EAAH,CAAMC,WAAN,CAAkBC,QAAlB,CAA2BO,KAA3B,CAAiCuC,GAA1C;AACAvD,aAAGsC,GAAH,CAAOuB,UAAP,CAAkBsD,UAAlB,CAA6B7D,GAAGtB,OAAH,CAAW,KAAKc,MAAhB,EAAwBY,aAArD,EAC8BE,UAD9B;AAGD;;AAED;AACA,YAAIN,GAAGtB,OAAH,CAAWwB,IAAX,EAAiBG,cAArB,EACA;AACE,eAAK,IAAIM,IAAIX,GAAGtB,OAAH,CAAWwB,IAAX,EAAiBG,cAAjB,CAAgCO,MAAhC,GAAyC,CAAtD,EAAyDD,KAAK,CAA9D,EAAiEA,GAAjE,EACA;AACE;AACA,gBAAIL,aAAa,qBAAqB,KAAKd,MAA1B,GAAmC,OAAnC,GAA6CmB,CAA9D;AACA,gBAAImD,OAAO9D,GAAGtB,OAAH,CAAW,KAAKc,MAAhB,EAAwBa,cAAxB,CAAuCM,CAAvC,CAAX;;AAEA;AACA,gBAAIX,KAAKtD,GAAGO,EAAH,CAAMC,WAAN,CAAkBC,QAAlB,CAA2BO,KAA3B,CAAiCuC,GAA1C;AACAvD,eAAGsC,GAAH,CAAOuB,UAAP,CAAkBsD,UAAlB,CAA6BC,IAA7B,EAAmCxD,UAAnC;AACD;AACF;AACF;;AAED,UAAI,KAAKzC,aAAL,IAAsB,KAAKA,aAAL,CAAmB8D,eAA7C,EACA;AACE,YAAIa,eAAe,KAAK3E,aAAL,CAAmB8D,eAAnB,EAAnB;AACA,YAAIa,gBACAA,aAAa,KAAKjD,MAAlB,CADA,IAEAiD,aAAa,KAAKjD,MAAlB,EAA0BqC,GAA1B,KAAkCC,SAFtC,EAGA;AACEW,uBAAa,KAAKjD,MAAlB,IAA4B,IAA5B;AACD;AACF;;AAED,WAAKzB,QAAL,GAAgB,KAAKN,WAAL,GAAmB,KAAKK,aAAL,GACjC,KAAKN,cAAL,GAAsB,IADxB;;AAIA,WAAKsH,eAAL,CACE,UADF,EAEE,uBAFF,EAGE,cAHF;AAID;AApiBH,GADA,C;AArBAnI,KAAGO,EAAH,CAAMC,WAAN,CAAkBC,QAAlB,CAA2BO,KAA3B,CAAiCuC,GAAjC,CAAqCpD,aAArC,GAAqDA,aAArD",
  "file": "Row.js",
  "sourcesContent": [
    " /* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2008 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * Table Row renderer for Progressive.\n */\nqx.Class.define(\"qx.ui.progressive.renderer.table.Row\",\n{\n  extend     : qx.ui.progressive.renderer.Abstract,\n\n\n  /**\n   * @param columnWidths {qx.ui.progressive.renderer.table.Widths}\n   *   Information that indicates how to resize each of the column widths\n   */\n  construct : function(columnWidths)\n  {\n    this.base(arguments);\n\n    // Save the column widths\n    this.__columnWidths = columnWidths;\n\n    // Create space to store renderers for each column\n    this.__renderers = { };\n\n    // We need a default cell renderer to use if none is specified\n    this.__defaultCellRenderer =\n      new qx.ui.progressive.renderer.table.cell.Default();\n\n    // We don't yet know who our Progressive will be\n    this.__progressive = null;\n\n    this.__colors = {};\n    this.__linkColors();\n\n    // This layout is not connected to a widget but to this class. This class\n    // must implement the method \"getLayoutChildren\", which must return all\n    // columns (LayoutItems) which should be recalculated. The call\n    // \"layout.renderLayout\" will call the method \"renderLayout\" on each\n    // column data object The advantage of the use of the normal layout\n    // manager is that the semantics of flex and percent are exactly the same\n    // as in the widget code.\n    this.__layout = new qx.ui.layout.HBox();\n    this.__layout.connectToWidget(this);\n\n    // dynamic theme switch\n    if (qx.core.Environment.get(\"qx.dyntheme\")) {\n      qx.theme.manager.Meta.getInstance().addListener(\n        \"changeTheme\", this.__linkColors, this\n      );\n    }\n  },\n\n\n  statics :\n  {\n    /**\n     * Storage for each progressive.\n     *\n     * @internal\n     */\n    __clazz : null,\n\n    /**\n     * Default row padding.\n     *\n     * @internal\n     */\n    __padding : 6, // modify padding parameter below too if this changes\n\n    /**\n     * Default style sheet for table cells.\n     *\n     * @internal\n     */\n    __tableCellStyleSheet :\n        \"  position: absolute;\" +\n        \"  top: 0px;\" +\n        \"  height: 100%;\" +\n        \"  overflow:hidden;\" +\n        (qx.core.Environment.get(\"css.textoverflow\") ?\n        qx.bom.Style.getCssName(qx.core.Environment.get(\"css.textoverflow\")) +\n        ':ellipsis;' : \"\") +\n        \"  white-space:nowrap;\" +\n        \"  border-right:1px solid #f2f2f2;\" +\n        \"  border-bottom:1px solid #eeeeee;\" +\n        \"  padding : 0px 6px 0px 6px;\" +\n        \"  cursor:default;\" +\n        \"  font-size: 11px;\" +\n        \"  font-family: 'Segoe UI', Corbel, Calibri, Tahoma, 'Lucida Sans Unicode', sans-serif;\" +\n        (qx.core.Environment.get(\"css.userselect\") ?\n        qx.bom.Style.getCssName(qx.core.Environment.get(\"css.userselect\")) +\n        ':' + qx.core.Environment.get(\"css.userselect.none\") + ';'\n        : '')\n  },\n\n\n  properties :\n  {\n    /** The default height of a row, if not altered by a cell renderer. */\n    defaultRowHeight :\n    {\n      init : 16\n    }\n  },\n\n\n  members :\n  {\n\n    __progressive : null,\n    __name : null,\n    __hash : null,\n    __columnWidths : null,\n    __renderers : null,\n    __defaultCellRenderer : null,\n    __colors : null,\n    __layout : null,\n\n\n    /**\n     * Helper to link the theme colors to the current class\n     */\n    __linkColors : function() {\n      // link to color theme\n      var colorMgr = qx.theme.manager.Color.getInstance();\n      this.__colors.bgcol = [];\n      this.__colors.bgcol[0] =\n        colorMgr.resolve(\"progressive-table-row-background-even\");\n      this.__colors.bgcol[1] =\n        colorMgr.resolve(\"progressive-table-row-background-odd\");\n    },\n\n\n    // overridden\n    join : function(progressive, name)\n    {\n      // Are we already joined?\n      if (this.__progressive)\n      {\n        // Yup.  Let 'em know they can't do that.\n        throw new Error(\"Renderer is already joined to a Progressive.\");\n      }\n\n      // Save the Progressive to which we're joined\n      this.__progressive = progressive;\n\n      // Save the name that Progressive knows us by\n      this.__name = name;\n\n      // If we haven't created style sheets for this table yet...\n      var tr = qx.ui.progressive.renderer.table.Row;\n      if (!tr.__clazz)\n      {\n        tr.__clazz = { };\n      }\n\n      var hash = progressive.toHashCode();\n      if (!tr.__clazz[hash])\n      {\n        // ... then do it now.\n        tr.__clazz[hash] =\n          {\n            rowstylesheet  : null,\n            cellstylesheet : [ ]\n          };\n\n        var stylesheet =\n          \".qx-progressive-\" + hash + \"-row {\" +\n          \"  width : 100%;\" +\n          \"}\";\n        tr.__clazz[hash].rowstylesheet =\n          qx.bom.Stylesheet.createElement(stylesheet);\n\n        var columnData = this.__columnWidths.getData();\n\n        for (var i = 0; i < columnData.length; i++)\n        {\n          var stylesheet =\n            \".qx-progressive-\" + hash + \"-col-\" + i + \" {\" +\n            tr.__tableCellStyleSheet +\n            \"}\";\n          tr.__clazz[hash].cellstylesheet[i] =\n            qx.bom.Stylesheet.createElement(stylesheet);\n        }\n\n        // Save the hash too\n        this.__hash = hash;\n\n        // Arrange to be called when the window appears or is resized, so we\n        // can set each style sheet's left and width field appropriately.\n        var pane = progressive.getStructure().getPane();\n        pane.addListener(\"resize\", this._resizeColumns, this);\n\n      }\n    },\n\n    /**\n     * Add a cell renderer for use within a row rendered by this row\n     * renderer.\n     *\n     * @param column {Integer}\n     *   The column number for which the cell renderer applies\n     *\n     * @param renderer {qx.ui.progressive.renderer.table.cell.Abstract}\n     *   The cell renderer for the specified column.\n     *\n     */\n    addRenderer : function(column, renderer)\n    {\n      var columnData = this.__columnWidths.getData();\n      if (column < 0 || column >= columnData.length)\n      {\n        throw new Error(\"Column \" +\n                        column +\n                        \" out of range (max: \" +\n                        (columnData.length - 1) +\n                        \")\");\n      }\n\n      this.__renderers[column] = renderer;\n    },\n\n    /**\n     * Remove a cell renderer previously added with {@link #addRenderer}.\n     *\n     * @param column {Integer}\n     *   The column for which the cell renderer is to be removed.\n     *\n     */\n    removeRenderer : function(column)\n    {\n      var columnData = this.__columnWidths.getData();\n      if (column < 0 || column >= columnData.length)\n      {\n        throw new Error(\"Column \" +\n                        column +\n                        \" out of range (max: \" +\n                        (columnData.length - 1) +\n                        \")\");\n      }\n\n      if (! this.__renderers[column])\n      {\n        throw new Error(\"No existing renderer for column \" + column);\n      }\n\n      delete this.__renderers[column];\n    },\n\n    // overridden\n    render : function(state, element)\n    {\n      var data = element.data;\n      var html = [ ];\n      var cellInfo;\n      var renderer;\n      var height = 0;\n\n      // Initialize row counter, if necessary.  We'll use this for shading\n      // alternate rows.\n\n      if (state.getRendererData()[this.__name].end === undefined)\n      {\n        state.getRendererData()[this.__name] =\n          {\n            end         : 0,\n            start       : 1,\n            rows        : 0,\n            totalHeight : 0\n          };\n      }\n\n      // Create the div for this row\n      var div = document.createElement(\"div\");\n\n      // For each cell...\n      for (var i = 0; i < data.length; i++)\n      {\n        var stylesheet = \"qx-progressive-\" + this.__hash + \"-col-\" + i;\n\n        // Determine what renderer to use for this column\n        renderer = this.__renderers[i] || this.__defaultCellRenderer;\n\n        // Specify information that cell renderer will need\n        cellInfo =\n        {\n          state      : state,\n          rowDiv     : div,\n          stylesheet : stylesheet,\n          element    : element,\n          dataIndex  : i,\n          cellData   : data[i],\n          height     : height\n        };\n\n        // Render this cell\n        html.push(renderer.render(cellInfo));\n\n        // If this cell's height was greater than our current maximum...\n        if (cellInfo.height > height)\n        {\n          // ... then it becomes our row height\n          height = cellInfo.height;\n        }\n      }\n\n      height = (height > 0 ? height : this.getDefaultRowHeight());\n\n      // Get a reference to our renderer data\n      var rendererData = state.getRendererData()[this.__name];\n\n      // Track total height so we can determine if there's a vertical scrollbar\n      rendererData.totalHeight += height;\n\n      // Set properties for the row div\n      div.style.position = \"relative\";\n      div.style.height = height + \"px\";\n      div.className = \"qx-progressive-\" + this.__hash + \"-row\";\n      div.innerHTML = html.join(\"\");\n\n      // Add this row to the table\n      switch(element.location)\n      {\n      case \"end\":\n        // Determine color of row based on state of last added row\n        var index = rendererData.end || 0;\n\n        // Set the background color of this row\n        div.style.backgroundColor = this.__colors.bgcol[index];\n\n        // Update state for next time\n        rendererData.end = (index == 0 ? 1 : 0);\n\n        // Append our new row to the pane.\n        state.getPane().getContentElement().getDomElement().appendChild(div);\n        break;\n\n      case \"start\":\n        // Get the pane element\n        var elem = state.getPane().getContentElement().getDomElement();\n\n        // Get its children array\n        var children = elem.childNodes;\n\n        // Are there any children?\n        if (children.length > 0)\n        {\n          // Yup.  Determine color of row based on state of last added row\n          var index = rendererData.start;\n\n          // Set the background color of this row\n          div.style.backgroundColor = this.__colors.bgcol[index];\n\n          // Update state for next time\n          rendererData.start = (index == 0 ? 1 : 0);\n\n          // Insert our new row before the first child.\n          elem.insertBefore(div, children[0]);\n          break;\n        }\n        else\n        {\n          /* No children yet.  We can append our new row. */\n          elem.appendChild(div);\n        }\n        break;\n\n      default:\n        throw new Error(\"Invalid location: \" + element.location);\n      }\n\n      // Increment row count\n      ++rendererData.rows;\n    },\n\n    /**\n     * This method is required by the box layout. If returns an array of items\n     * to relayout.\n     * @return {Array} Array of column data.\n     */\n    getLayoutChildren : function()\n    {\n      return this.__columnWidths.getData();\n    },\n\n\n    /**\n     * Event handler for the \"resize\" event.  We recalculate the\n     * widths of each of the columns, and modify the stylesheet rule\n     * applicable to each column, to apply the new widths.\n     *\n     * @param e {qx.event.type.Event}\n     *   Ignored\n     *\n     */\n    _resizeColumns : function(e)\n    {\n      var pane = this.__progressive.getStructure().getPane();\n\n      var width =\n        pane.getBounds().width - qx.bom.element.Scroll.getScrollbarWidth();\n\n      // Get the style sheet rule name for this row\n      var stylesheet = \".qx-progressive-\" + this.__hash + \"-row\";\n\n      // Remove the style rule for this row\n      var tr = qx.ui.progressive.renderer.table.Row;\n      qx.bom.Stylesheet.removeRule(tr.__clazz[this.__hash].rowstylesheet,\n                                    stylesheet);\n\n\n      // Create the new rule for this row\n      var rule = \"width: \" + width + \"px;\";\n\n\n      // Apply the new rule\n      qx.bom.Stylesheet.addRule(tr.__clazz[this.__hash].rowstylesheet,\n                                 stylesheet,\n                                 rule);\n\n      // Compute the column widths\n      this.__layout.renderLayout(width, 100, {top: 0, right: 0, bottom: 0, left: 0});\n\n      // Get the column data\n      var columnData = this.__columnWidths.getData();\n\n      // Reset each of the column style sheets to deal with width changes\n      for (var i = 0,\n             left = 0;\n           i < columnData.length;\n           i++,\n             left += width)\n      {\n        // Get the style sheet rule name for this cell\n        var stylesheet = \".qx-progressive-\" + this.__hash + \"-col-\" + i;\n\n        // Remove the style rule for this column\n        var tr = qx.ui.progressive.renderer.table.Row;\n        qx.bom.Stylesheet.removeRule(tr.__clazz[this.__hash].cellstylesheet[i],\n                                      stylesheet);\n\n        // Get this column width.\n        width = columnData[i].getComputedWidth();\n\n        if (qx.core.Environment.get(\"qx.debug\"))\n        {\n          if (qx.core.Environment.get(\"qx.tableResizeDebug\"))\n          {\n            this.debug(\"col \" + i + \": width=\" + width);\n          }\n        }\n\n        // Make our width calculations box-model independent\n        var inset;\n        if (qx.core.Environment.get(\"css.boxmodel\") == \"content\")\n        {\n          inset = qx.ui.progressive.renderer.table.Row.__padding * 2;\n        }\n        else\n        {\n          inset = -1;\n        }\n\n        // Create the new rule, based on calculated widths\n        var widthRule = (width - inset) + \"px;\";\n\n        var paddingRule =\n          \"0px \" + qx.ui.progressive.renderer.table.Row.__padding + \"px \" +\n          \"0px \" + qx.ui.progressive.renderer.table.Row.__padding + \"px;\";\n\n        var leftRule = left + \"px;\";\n\n        var rule =\n          tr.__tableCellStyleSheet +\n          \"width: \" + widthRule +\n          \"left: \" + leftRule +\n          \"padding: \" + paddingRule;\n\n        // Apply the new rule\n        qx.bom.Stylesheet.addRule(tr.__clazz[this.__hash].cellstylesheet[i],\n                                   stylesheet,\n                                   rule);\n      }\n    }\n  },\n\n\n  destruct : function()\n  {\n    // remove dynamic theme listener\n    qx.theme.manager.Meta.getInstance().removeListener(\n      \"changeTheme\", this.__linkColors, this\n    );\n\n    var name;\n\n    for (name in this.__renderers)\n    {\n      this.__renderers[name] = null;\n    }\n\n    // Remove any style sheets that we had added\n    var tr = qx.ui.progressive.renderer.table.Row;\n    var hash = this.__progressive.toHashCode();\n    if (tr.__clazz && tr.__clazz[hash])\n    {\n      // Remove the row stylesheet\n      if (tr.__clazz[hash].rowstylesheet)\n      {\n        // Get the style sheet rule name for this row\n        var stylesheet = \".qx-progressive-\" + this.__hash + \"-row\";\n\n        // Remove the style rule for this row\n        var tr = qx.ui.progressive.renderer.table.Row;\n        qx.bom.Stylesheet.removeRule(tr.__clazz[this.__hash].rowstylesheet,\n                                      stylesheet);\n\n      }\n\n      // Remove each of the column style sheets\n      if (tr.__clazz[hash].cellstylesheet)\n      {\n        for (var i = tr.__clazz[hash].cellstylesheet.length - 1; i >= 0; i--)\n        {\n          // Get the style sheet rule name for this cell\n          var stylesheet = \".qx-progressive-\" + this.__hash + \"-col-\" + i;\n          var rule = tr.__clazz[this.__hash].cellstylesheet[i];\n\n          // Remove the style rule for this column\n          var tr = qx.ui.progressive.renderer.table.Row;\n          qx.bom.Stylesheet.removeRule(rule, stylesheet);\n        }\n      }\n    }\n\n    if (this.__progressive && this.__progressive.getRendererData)\n    {\n      var rendererData = this.__progressive.getRendererData();\n      if (rendererData &&\n          rendererData[this.__name] &&\n          rendererData[this.__name].end !== undefined)\n      {\n        rendererData[this.__name] = null;\n      }\n    }\n\n    this.__colors = this.__renderers = this.__progressive =\n      this.__columnWidths = null;\n\n\n    this._disposeObjects(\n      \"__layout\",\n      \"__defaultCellRenderer\",\n      \"__columnData\");\n  }\n});\n"
  ]
}