{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/progressive/model/Default.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "progressive",
    "model",
    "Abstract",
    "construct",
    "__elements",
    "members",
    "addElements",
    "elems",
    "concat",
    "fireDataEvent",
    "length",
    "addElement",
    "elem",
    "push",
    "getElementCount",
    "getNextElement",
    "element",
    "shift",
    "remaining",
    "destruct",
    "Default"
  ],
  "mappings": ";;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAqBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,iCAAhB,EACA;AACEC,YAAaN,GAAGO,EAAH,CAAMC,WAAN,CAAkBC,KAAlB,CAAwBC,QADvC;;AAIEC,eAAY,qBACZ;AACE;;AAEA,WAAKC,UAAL,GAAkB,EAAlB;AACD,KATH;;AAYEC,aACA;;AAEED,kBAAa,IAFf;;AAIE;;;;;;;;AAQAE,mBAAc,qBAASC,KAAT,EACd;AACE;AACA,aAAKH,UAAL,GAAkB,KAAKA,UAAL,CAAgBI,MAAhB,CAAuBD,KAAvB,CAAlB;;AAEA;AACA,aAAKE,aAAL,CAAmB,eAAnB,EAAoC,KAAKL,UAAL,CAAgBM,MAApD;AACD,OAnBH;;AAqBE;;;;;;;;AAQAC,kBAAa,oBAASC,IAAT,EACb;AACE;AACA,aAAKR,UAAL,CAAgBS,IAAhB,CAAqBD,IAArB;;AAEA;AACA,aAAKH,aAAL,CAAmB,eAAnB,EAAoC,KAAKL,UAAL,CAAgBM,MAApD;AACD,OApCH;;AAsCE;AACAI,uBAAkB,2BAClB;AACE,eAAO,KAAKV,UAAL,CAAgBM,MAAvB;AACD,OA1CH;;AA4CE;AACAK,sBAAiB,0BACjB;AACE;AACA,YAAI,KAAKX,UAAL,CAAgBM,MAAhB,GAAyB,CAA7B,EACA;AACE;AACA,iBACE;AACEM,qBAAY,KAAKZ,UAAL,CAAgBa,KAAhB,EADd;AAEEC,uBAAY,KAAKd,UAAL,CAAgBM;AAF9B,WADF;AAKD;;AAED,eAAO,IAAP;AACD;AA3DH,KAbF;;AA2EES,cAAW,oBAAW;AACpB,WAAKf,UAAL,GAAkB,IAAlB;AACD;AA7EH,GADA,C;AArBAZ,KAAGO,EAAH,CAAMC,WAAN,CAAkBC,KAAlB,CAAwBmB,OAAxB,CAAgCzB,aAAhC,GAAgDA,aAAhD",
  "file": "Default.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2008 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * Data Model for Progressive renderer.\n */\nqx.Class.define(\"qx.ui.progressive.model.Default\",\n{\n  extend     : qx.ui.progressive.model.Abstract,\n\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.__elements = [ ];\n  },\n\n\n  members :\n  {\n\n    __elements : null,\n\n    /**\n     * Add elements to be progressively rendered.  Each element must be an\n     * object which contains at least two members: renderer (the renderer\n     * name) and data.\n     *\n     * @param elems {Array}\n     *   An array of elements to be added to the element queue\n     */\n    addElements : function(elems)\n    {\n      // Add the new elements to our elements queue.\n      this.__elements = this.__elements.concat(elems);\n\n      // Tell Progressive that data is available\n      this.fireDataEvent(\"dataAvailable\", this.__elements.length);\n    },\n\n    /**\n     * Add a single element to be progressively rendered.  The element must\n     * be an object which contains at least two members: renderer (the\n     * renderer name) and data.\n     *\n     * @param elem {var}\n     *   An element to be added to the element queue\n     */\n    addElement : function(elem)\n    {\n      // Add the new elements to our elements queue.\n      this.__elements.push(elem);\n\n      // Tell Progressive that data is available\n      this.fireDataEvent(\"dataAvailable\", this.__elements.length);\n    },\n\n    // overridden\n    getElementCount : function()\n    {\n      return this.__elements.length;\n    },\n\n    // overridden\n    getNextElement : function()\n    {\n      // Do we have any remaining elements?\n      if (this.__elements.length > 0)\n      {\n        // Yup.  Give 'em the first one and remove it from our queue.\n        return(\n          {\n            element   : this.__elements.shift(),\n            remaining : this.__elements.length\n          });\n      }\n\n      return null;\n    }\n  },\n\n  destruct : function() {\n    this.__elements = null;\n  }\n});\n"
  ]
}