{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/menu/ButtonLayout.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "layout",
    "Abstract",
    "members",
    "verifyLayoutProperty",
    "item",
    "name",
    "value",
    "assert",
    "renderLayout",
    "availWidth",
    "availHeight",
    "padding",
    "children",
    "_getLayoutChildren",
    "child",
    "column",
    "columnChildren",
    "i",
    "l",
    "length",
    "getLayoutProperties",
    "menu",
    "__getMenu",
    "columns",
    "getColumnSizes",
    "spacing",
    "getSpacingX",
    "neededWidth",
    "lang",
    "Array",
    "sum",
    "left",
    "top",
    "Util",
    "hint",
    "getSizeHint",
    "childTop",
    "computeVerticalAlignOffset",
    "getAlignY",
    "height",
    "offsetLeft",
    "computeHorizontalAlignOffset",
    "getAlignX",
    "width",
    "getMarginLeft",
    "getMarginRight",
    "widget",
    "Menu",
    "getLayoutParent",
    "_computeSizeHint",
    "neededHeight",
    "Math",
    "max",
    "ButtonLayout"
  ],
  "mappings": "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",
  "file": "ButtonLayout.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Layout used for the menu buttons which may contain four elements. A icon,\n * a label, a shortcut text and an arrow (for a sub menu)\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.menu.ButtonLayout\",\n{\n  extend : qx.ui.layout.Abstract,\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden\n    verifyLayoutProperty : qx.core.Environment.select(\"qx.debug\",\n    {\n      \"true\" : function(item, name, value) {\n        this.assert(name==\"column\", \"The property '\"+name+\"' is not supported by the MenuButton layout!\");\n      },\n\n      \"false\" : null\n    }),\n\n\n    // overridden\n    renderLayout : function(availWidth, availHeight, padding)\n    {\n      var children = this._getLayoutChildren();\n      var child;\n      var column;\n\n      var columnChildren = [];\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n        column = child.getLayoutProperties().column;\n        columnChildren[column] = child;\n      }\n\n      var menu = this.__getMenu(children[0]);\n\n      var columns = menu.getColumnSizes();\n      var spacing = menu.getSpacingX();\n\n      // stretch label column\n      var neededWidth = qx.lang.Array.sum(columns) + spacing * (columns.length - 1);\n      if (neededWidth < availWidth) {\n        columns[1] += availWidth - neededWidth;\n      }\n\n\n      var left = padding.left, top = padding.top;\n      var Util = qx.ui.layout.Util;\n\n      for (var i=0, l=columns.length; i<l; i++)\n      {\n        child = columnChildren[i];\n\n        if (child)\n        {\n          var hint = child.getSizeHint();\n          var childTop = top + Util.computeVerticalAlignOffset(child.getAlignY()||\"middle\", hint.height, availHeight, 0, 0);\n          var offsetLeft = Util.computeHorizontalAlignOffset(child.getAlignX()||\"left\", hint.width, columns[i], child.getMarginLeft(), child.getMarginRight());\n          child.renderLayout(left + offsetLeft, childTop, hint.width, hint.height);\n        }\n\n        if (columns[i] > 0) {\n          left += columns[i] + spacing;\n        }\n      }\n    },\n\n\n    /**\n     * Get the widget's menu\n     *\n     * @param widget {qx.ui.core.Widget} the widget to get the menu for\n     * @return {qx.ui.menu.Menu} the menu\n     */\n    __getMenu : function(widget)\n    {\n      while (!(widget instanceof qx.ui.menu.Menu)) {\n        widget = widget.getLayoutParent();\n      }\n      return widget;\n    },\n\n\n    // overridden\n    _computeSizeHint : function()\n    {\n      var children = this._getLayoutChildren();\n      var neededHeight = 0;\n      var neededWidth = 0;\n\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        var hint = children[i].getSizeHint();\n        neededWidth += hint.width;\n        neededHeight = Math.max(neededHeight, hint.height);\n      }\n\n      return {\n        width : neededWidth,\n        height : neededHeight\n      };\n    }\n  }\n});\n"
  ]
}