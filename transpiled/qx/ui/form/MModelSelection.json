{
  "className": "qx.ui.form.MModelSelection",
  "packageName": "qx.ui.form",
  "name": "MModelSelection",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0
      },
      "end": {
        "line": 172,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nMartin Wittemann (martinwittemann)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "This mixin offers the selection of the model properties.\nIt can only be included if the object including it implements the\n{@link qx.ui.core.ISingleSelection} interface and the selectables implement\nthe {@link qx.ui.form.IModel} interface."
        }
      ]
    }
  },
  "type": "mixin",
  "construct": {
    "location": {
      "start": {
        "line": 27,
        "column": 2
      },
      "end": {
        "line": 34,
        "column": 3
      }
    }
  },
  "events": {
    "changeModelSelection": {
      "location": {
        "start": {
          "line": 43,
          "column": 4
        },
        "end": {
          "line": 43,
          "column": 47
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Pseudo event. It will never be fired because the array itself can not\nbe changed. But the event description is needed for the data binding."
          }
        ]
      },
      "name": "changeModelSelection",
      "type": "qx.event.type.Data"
    }
  },
  "members": {
    "__modelSelection": {
      "location": {
        "start": {
          "line": 50,
          "column": 4
        },
        "end": {
          "line": 50,
          "column": 27
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__inSelectionChange": {
      "location": {
        "start": {
          "line": 51,
          "column": 4
        },
        "end": {
          "line": 51,
          "column": 31
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__onModelSelectionChange": {
      "location": {
        "start": {
          "line": 59,
          "column": 4
        },
        "end": {
          "line": 83,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Handler for the selection change of the including class e.g. SelectBox,\nList, ...\nIt sets the new modelSelection via {@link #setModelSelection}."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onModelSelectionArrayChange": {
      "location": {
        "start": {
          "line": 89,
          "column": 4
        },
        "end": {
          "line": 116,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Listener for the change of the internal model selection data array."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getModelSelection": {
      "location": {
        "start": {
          "line": 128,
          "column": 4
        },
        "end": {
          "line": 131,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns always an array of the models of the selected items. If no\nitem is selected or no model is given, the array will be empty.\n\n*CAREFUL!* The model selection can only work if every item item in the\nselection providing widget has a model property!"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.data.Array} An array of the models of the selected items.",
            "type": "qx.data.Array",
            "description": " An array of the models of the selected items."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setModelSelection": {
      "location": {
        "start": {
          "line": 147,
          "column": 4
        },
        "end": {
          "line": 166,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Takes the given models in the array and searches for the corresponding\nselectables. If an selectable does have that model attached, it will be\nselected.\n\n*Attention:* This method can have a time complexity of O(n^2)!\n\n*CAREFUL!* The model selection can only work if every item item in the\nselection providing widget has a model property!"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "modelSelection {Array} An array of models, which should be\nselected.",
            "paramName": "modelSelection",
            "description": " An array of models, which should be\nselected.",
            "type": "Array"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 169,
        "column": 2
      },
      "end": {
        "line": 171,
        "column": 3
      }
    }
  },
  "descendants": []
}