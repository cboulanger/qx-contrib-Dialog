{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/form/IModel.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Interface",
    "define",
    "events",
    "members",
    "setModel",
    "value",
    "getModel",
    "resetModel",
    "ui",
    "form",
    "IModel"
  ],
  "mappings": ";;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAsBAH,GAAGI,SAAH,CAAaC,MAAb,CAAoB,mBAApB,EACA;;AAEE;;;;;;AAMAC,YACA;AACE;AACA,qBAAgB;AAFlB,KATF;;AAgBE;;;;;;AAMAC,aACA;AACE;;;;;AAKAC,gBAAW,kBAASC,KAAT,EAAgB,CAAE,CAN/B;;AASE;;;;;AAKAC,gBAAW,oBAAW,CAAE,CAd1B;;AAiBE;;;AAGAC,kBAAa,sBAAW,CAAE;AApB5B;AAvBF,GADA,C;AAtBAX,KAAGY,EAAH,CAAMC,IAAN,CAAWC,MAAX,CAAkBX,aAAlB,GAAkCA,aAAlC",
  "file": "IModel.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Each object which wants to store data representative for the real item\n * should implement this interface.\n */\nqx.Interface.define(\"qx.ui.form.IModel\",\n{\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fired when the model data changes */\n    \"changeModel\" : \"qx.event.type.Data\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * Set the representative data for the item.\n     *\n     * @param value {var} The data.\n     */\n    setModel : function(value) {},\n\n\n    /**\n     * Returns the representative data for the item\n     *\n     * @return {var} The data.\n     */\n    getModel : function() {},\n\n\n    /**\n     * Sets the representative data to null.\n     */\n    resetModel : function() {}\n  }\n});\n"
  ]
}