{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/form/List.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "scroll",
    "AbstractScrollArea",
    "implement",
    "IMultiSelection",
    "form",
    "IForm",
    "IField",
    "IModelSelection",
    "include",
    "MRemoteChildrenHandling",
    "MMultiSelectionHandling",
    "MForm",
    "MModelSelection",
    "construct",
    "horizontal",
    "__content",
    "_createListItemContainer",
    "addListener",
    "_onAddChild",
    "_onRemoveChild",
    "getChildControl",
    "add",
    "setOrientation",
    "initOrientation",
    "_onKeyPress",
    "_onKeyInput",
    "__pressedString",
    "events",
    "addItem",
    "removeItem",
    "properties",
    "appearance",
    "refine",
    "init",
    "focusable",
    "width",
    "height",
    "orientation",
    "check",
    "apply",
    "spacing",
    "themeable",
    "enableInlineFind",
    "members",
    "__lastKeyPress",
    "SELECTION_MANAGER",
    "selection",
    "ScrollArea",
    "getChildrenContainer",
    "e",
    "fireDataEvent",
    "getData",
    "handleKeyPress",
    "_getManager",
    "container",
    "Composite",
    "_applyOrientation",
    "value",
    "old",
    "content",
    "oldLayout",
    "getLayout",
    "layout",
    "HBox",
    "VBox",
    "setLayout",
    "setAllowGrowX",
    "setAllowGrowY",
    "_applySpacing",
    "getSpacing",
    "dispose",
    "setSpacing",
    "getKeyIdentifier",
    "isAltPressed",
    "items",
    "getSelection",
    "i",
    "length",
    "fireEvent",
    "getEnableInlineFind",
    "mode",
    "getSelectionMode",
    "Date",
    "valueOf",
    "getChar",
    "matchedItem",
    "findItemByLabelFuzzy",
    "setSelection",
    "search",
    "toLowerCase",
    "getChildren",
    "l",
    "currentLabel",
    "getLabel",
    "indexOf",
    "findItem",
    "ignoreCase",
    "item",
    "label",
    "isRich",
    "control",
    "labelNode",
    "getContentElement",
    "getDomElement",
    "bom",
    "element",
    "Attribute",
    "get",
    "translate",
    "toString",
    "destruct",
    "_disposeObjects",
    "List"
  ],
  "mappings": "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",
  "file": "List.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A list of items. Displays an automatically scrolling list for all\n * added {@link qx.ui.form.ListItem} instances. Supports various\n * selection options: single, multi, ...\n */\nqx.Class.define(\"qx.ui.form.List\",\n{\n  extend : qx.ui.core.scroll.AbstractScrollArea,\n  implement : [\n    qx.ui.core.IMultiSelection,\n    qx.ui.form.IForm,\n    qx.ui.form.IField,\n    qx.ui.form.IModelSelection\n  ],\n  include : [\n    qx.ui.core.MRemoteChildrenHandling,\n    qx.ui.core.MMultiSelectionHandling,\n    qx.ui.form.MForm,\n    qx.ui.form.MModelSelection\n  ],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param horizontal {Boolean?false} Whether the list should be horizontal.\n   */\n  construct : function(horizontal)\n  {\n    this.base(arguments);\n\n    // Create content\n    this.__content = this._createListItemContainer();\n\n    // Used to fire item add/remove events\n    this.__content.addListener(\"addChildWidget\", this._onAddChild, this);\n    this.__content.addListener(\"removeChildWidget\", this._onRemoveChild, this);\n\n    // Add to scrollpane\n    this.getChildControl(\"pane\").add(this.__content);\n\n    // Apply orientation\n    if (horizontal) {\n      this.setOrientation(\"horizontal\");\n    } else {\n      this.initOrientation();\n    }\n\n    // Add keypress listener\n    this.addListener(\"keypress\", this._onKeyPress);\n    this.addListener(\"keyinput\", this._onKeyInput);\n\n    // initialize the search string\n    this.__pressedString = \"\";\n  },\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n\n  events :\n  {\n    /**\n     * This event is fired after a list item was added to the list. The\n     * {@link qx.event.type.Data#getData} method of the event returns the\n     * added item.\n     */\n    addItem : \"qx.event.type.Data\",\n\n    /**\n     * This event is fired after a list item has been removed from the list.\n     * The {@link qx.event.type.Data#getData} method of the event returns the\n     * removed item.\n     */\n    removeItem : \"qx.event.type.Data\"\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"list\"\n    },\n\n    // overridden\n    focusable :\n    {\n      refine : true,\n      init : true\n    },\n\n    // overridden\n    width :\n    {\n      refine : true,\n      init : 100\n    },\n\n    // overridden\n    height :\n    {\n      refine : true,\n      init : 200\n    },\n\n    /**\n     * Whether the list should be rendered horizontal or vertical.\n     */\n    orientation :\n    {\n      check : [\"horizontal\", \"vertical\"],\n      init : \"vertical\",\n      apply : \"_applyOrientation\"\n    },\n\n    /** Spacing between the items */\n    spacing :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applySpacing\",\n      themeable : true\n    },\n\n    /** Controls whether the inline-find feature is activated or not */\n    enableInlineFind :\n    {\n      check : \"Boolean\",\n      init : true\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n\n  members :\n  {\n    __pressedString : null,\n    __lastKeyPress : null,\n\n    /** @type {qx.ui.core.Widget} The children container */\n    __content : null,\n\n    /** @type {Class} Pointer to the selection manager to use */\n    SELECTION_MANAGER : qx.ui.core.selection.ScrollArea,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n\n    // overridden\n    getChildrenContainer : function() {\n      return this.__content;\n    },\n\n    /**\n     * Handle child widget adds on the content pane\n     *\n     * @param e {qx.event.type.Data} the event instance\n     */\n    _onAddChild : function(e) {\n      this.fireDataEvent(\"addItem\", e.getData());\n    },\n\n    /**\n     * Handle child widget removes on the content pane\n     *\n     * @param e {qx.event.type.Data} the event instance\n     */\n    _onRemoveChild : function(e) {\n      this.fireDataEvent(\"removeItem\", e.getData());\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Used to route external <code>keypress</code> events to the list\n     * handling (in fact the manager of the list)\n     *\n     * @param e {qx.event.type.KeySequence} KeyPress event\n     */\n    handleKeyPress : function(e)\n    {\n      if (!this._onKeyPress(e)) {\n        this._getManager().handleKeyPress(e);\n      }\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This container holds the list item widgets.\n     *\n     * @return {qx.ui.container.Composite} Container for the list item widgets\n     */\n    _createListItemContainer : function() {\n      return new qx.ui.container.Composite;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n\n    // property apply\n    _applyOrientation : function(value, old)\n    {\n      var content = this.__content;\n\n      // save old layout for disposal\n      var oldLayout = content.getLayout();\n      \n      // Create new layout\n      var horizontal = value === \"horizontal\";\n      var layout = horizontal ? new qx.ui.layout.HBox() : new qx.ui.layout.VBox();\n\n      // Configure content\n      content.setLayout(layout);\n      content.setAllowGrowX(!horizontal);\n      content.setAllowGrowY(horizontal);\n\n      // Configure spacing\n      this._applySpacing(this.getSpacing());\n      \n      // dispose old layout\n      if(oldLayout) {\n        oldLayout.dispose();\n      }\n    },\n\n    // property apply\n    _applySpacing : function(value, old) {\n      this.__content.getLayout().setSpacing(value);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event listener for <code>keypress</code> events.\n     *\n     * @param e {qx.event.type.KeySequence} KeyPress event\n     * @return {Boolean} Whether the event was processed\n     */\n    _onKeyPress : function(e)\n    {\n      // Execute action on press <ENTER>\n      if (e.getKeyIdentifier() == \"Enter\" && !e.isAltPressed())\n      {\n        var items = this.getSelection();\n        for (var i=0; i<items.length; i++) {\n          items[i].fireEvent(\"action\");\n        }\n\n        return true;\n      }\n\n      return false;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      FIND SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Handles the inline find - if enabled\n     *\n     * @param e {qx.event.type.KeyInput} key input event\n     */\n    _onKeyInput : function(e)\n    {\n      // do nothing if the find is disabled\n      if (!this.getEnableInlineFind()) {\n        return;\n      }\n\n      // Only useful in single or one selection mode\n      var mode = this.getSelectionMode();\n      if (!(mode === \"single\" || mode === \"one\")) {\n        return;\n      }\n\n      // Reset string after a second of non pressed key\n      if (((new Date).valueOf() - this.__lastKeyPress) > 1000) {\n        this.__pressedString = \"\";\n      }\n\n      // Combine keys the user pressed to a string\n      this.__pressedString += e.getChar();\n\n      // Find matching item\n      var matchedItem = this.findItemByLabelFuzzy(this.__pressedString);\n\n      // if an item was found, select it\n      if (matchedItem) {\n        this.setSelection([matchedItem]);\n      }\n\n      // Store timestamp\n      this.__lastKeyPress = (new Date).valueOf();\n    },\n\n    /**\n     * Takes the given string and tries to find a ListItem\n     * which starts with this string. The search is not case sensitive and the\n     * first found ListItem will be returned. If there could not be found any\n     * qualifying list item, null will be returned.\n     *\n     * @param search {String} The text with which the label of the ListItem should start with\n     * @return {qx.ui.form.ListItem} The found ListItem or null\n     */\n    findItemByLabelFuzzy : function(search)\n    {\n      // lower case search text\n      search = search.toLowerCase();\n\n      // get all items of the list\n      var items = this.getChildren();\n\n      // go threw all items\n      for (var i=0, l=items.length; i<l; i++)\n      {\n        // get the label of the current item\n        var currentLabel = items[i].getLabel();\n\n        // if the label fits with the search text (ignore case, begins with)\n        if (currentLabel && currentLabel.toLowerCase().indexOf(search) == 0)\n        {\n          // just return the first found element\n          return items[i];\n        }\n      }\n\n      // if no element was found, return null\n      return null;\n    },\n\n    /**\n     * Find an item by its {@link qx.ui.basic.Atom#getLabel}.\n     *\n     * @param search {String} A label or any item\n     * @param ignoreCase {Boolean?true} description\n     * @return {qx.ui.form.ListItem} The found ListItem or null\n     */\n    findItem : function(search, ignoreCase)\n    {\n      // lowercase search\n      if (ignoreCase !== false) {\n        search = search.toLowerCase();\n      };\n\n      // get all items of the list\n      var items = this.getChildren();\n      var item;\n\n      // go through all items\n      for (var i=0, l=items.length; i<l; i++)\n      {\n        item = items[i];\n\n        // get the content of the label; text content when rich\n        var label;\n\n        if (item.isRich()) {\n          var control = item.getChildControl(\"label\", true);\n          if (control) {\n            var labelNode = control.getContentElement().getDomElement();\n            if (labelNode) {\n              label = qx.bom.element.Attribute.get(labelNode, \"text\");\n            }\n          }\n\n        } else {\n          label = item.getLabel();\n        }\n\n        if (label != null) {\n          if (label.translate) {\n            label = label.translate();\n          }\n          if (ignoreCase !== false) {\n            label = label.toLowerCase();\n          }\n\n          if (label.toString() == search.toString()) {\n            return item;\n          }\n        }\n      }\n\n      return null;\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    this._disposeObjects(\"__content\");\n  }\n});\n"
  ]
}