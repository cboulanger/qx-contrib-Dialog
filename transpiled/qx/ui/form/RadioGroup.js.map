{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/form/RadioGroup.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "ui",
    "ISingleSelection",
    "form",
    "IField",
    "IForm",
    "IModelSelection",
    "include",
    "MSingleSelectionHandling",
    "MModelSelection",
    "construct",
    "varargs",
    "__items",
    "addListener",
    "__onChangeSelection",
    "add",
    "apply",
    "arguments",
    "properties",
    "groupedProperty",
    "check",
    "event",
    "init",
    "groupProperty",
    "enabled",
    "wrap",
    "allowEmptySelection",
    "valid",
    "required",
    "invalidMessage",
    "requiredInvalidMessage",
    "nullable",
    "members",
    "getItems",
    "items",
    "item",
    "getGroupedProperty",
    "groupedPropertyUp",
    "lang",
    "String",
    "firstUp",
    "i",
    "l",
    "length",
    "includes",
    "_onItemChangeChecked",
    "push",
    "set",
    "getGroupProperty",
    "get",
    "setSelection",
    "isAllowEmptySelection",
    "getSelection",
    "remove",
    "Array",
    "reset",
    "removeListener",
    "resetSelection",
    "getChildren",
    "e",
    "getTarget",
    "_applyGroupedProperty",
    "value",
    "old",
    "oldFirstUp",
    "newFirstUp",
    "_applyInvalidMessage",
    "setInvalidMessage",
    "_applyValid",
    "setValid",
    "_applyEnabled",
    "resetEnabled",
    "setEnabled",
    "_applyAllowEmptySelection",
    "isSelectionEmpty",
    "selectNext",
    "index",
    "indexOf",
    "getWrap",
    "Math",
    "min",
    "getEnabled",
    "selectPrevious",
    "max",
    "_getItems",
    "_isAllowEmptySelection",
    "_isItemSelectable",
    "getData",
    "getOldData",
    "destruct",
    "_disposeArray",
    "RadioGroup"
  ],
  "mappings": "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",
  "file": "RadioGroup.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Christian Hagendorn (chris_schmidt)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The radio group handles a collection of items from which only one item\n * can be selected. Selection another item will deselect the previously selected\n * item.\n *\n * This class is e.g. used to create radio groups or {@link qx.ui.form.RadioButton}\n * or {@link qx.ui.toolbar.RadioButton} instances.\n *\n * We also offer a widget for the same purpose which uses this class. So if\n * you like to act with a widget instead of a pure logic coupling of the\n * widgets, take a look at the {@link qx.ui.form.RadioButtonGroup} widget.\n */\nqx.Class.define(\"qx.ui.form.RadioGroup\",\n{\n  extend : qx.core.Object,\n  implement : [\n    qx.ui.core.ISingleSelection,\n    qx.ui.form.IField,\n    qx.ui.form.IForm,\n    qx.ui.form.IModelSelection\n  ],\n  include : [\n    qx.ui.core.MSingleSelectionHandling,\n    qx.ui.form.MModelSelection\n  ],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n\n  /**\n   * @param varargs {qx.core.Object} A variable number of items, which are\n   *     initially added to the radio group, the first item will be selected.\n   */\n  construct : function(varargs)\n  {\n    this.base(arguments);\n\n    // create item array\n    this.__items = [];\n\n    // add listener before call add!!!\n    this.addListener(\"changeSelection\", this.__onChangeSelection, this);\n\n    if (varargs != null) {\n      this.add.apply(this, arguments);\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n\n  properties :\n  {\n    /**\n     * The property name in each of the added widgets that is grouped\n     */\n    groupedProperty :\n    {\n      check : \"String\",\n      apply : \"_applyGroupedProperty\",\n      event : \"changeGroupedProperty\",\n      init  : \"value\"\n    },\n\n    /**\n     * The property name in each of the added widgets that is informed of the\n     * RadioGroup object it is a member of\n     */\n    groupProperty :\n    {\n      check : \"String\",\n      event : \"changeGroupProperty\",\n      init  : \"group\"\n    },\n\n    /**\n     * Whether the radio group is enabled\n     */\n    enabled :\n    {\n      check : \"Boolean\",\n      apply : \"_applyEnabled\",\n      event : \"changeEnabled\",\n      init: true\n    },\n\n    /**\n     * Whether the selection should wrap around. This means that the successor of\n     * the last item is the first item.\n     */\n    wrap :\n    {\n      check : \"Boolean\",\n      init: true\n    },\n\n    /**\n     * If is set to <code>true</code> the selection could be empty,\n     * otherwise is always one <code>RadioButton</code> selected.\n     */\n    allowEmptySelection :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyAllowEmptySelection\"\n    },\n\n    /**\n     * Flag signaling if the group at all is valid. All children will have the\n     * same state.\n     */\n    valid : {\n      check : \"Boolean\",\n      init : true,\n      apply : \"_applyValid\",\n      event : \"changeValid\"\n    },\n\n    /**\n     * Flag signaling if the group is required.\n     */\n    required : {\n      check : \"Boolean\",\n      init : false,\n      event : \"changeRequired\"\n    },\n\n    /**\n     * Message which is shown in an invalid tooltip.\n     */\n    invalidMessage : {\n      check : \"String\",\n      init: \"\",\n      event : \"changeInvalidMessage\",\n      apply : \"_applyInvalidMessage\"\n    },\n\n\n    /**\n     * Message which is shown in an invalid tooltip if the {@link #required} is\n     * set to true.\n     */\n    requiredInvalidMessage : {\n      check : \"String\",\n      nullable : true,\n      event : \"changeInvalidMessage\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n\n  members :\n  {\n    /** @type {qx.ui.form.IRadioItem[]} The items of the radio group */\n    __items : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      UTILITIES\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Get all managed items\n     *\n     * @return {qx.ui.form.IRadioItem[]} All managed items.\n     */\n    getItems : function() {\n      return this.__items;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      REGISTRY\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Add the passed items to the radio group.\n     *\n     * @param varargs {qx.ui.form.IRadioItem} A variable number of items to add.\n     */\n    add : function(varargs)\n    {\n      var items = this.__items;\n      var item;\n      var groupedProperty = this.getGroupedProperty();\n      var groupedPropertyUp = qx.lang.String.firstUp(groupedProperty);\n\n      for (var i=0, l=arguments.length; i<l; i++)\n      {\n        item = arguments[i];\n\n        if (items.includes(item)) {\n          continue;\n        }\n\n        // Register listeners\n        item.addListener(\n          \"change\" + groupedPropertyUp, this._onItemChangeChecked, this);\n\n        // Push RadioButton to array\n        items.push(item);\n\n        // Inform radio button about new group\n        item.set(this.getGroupProperty(), this);\n\n        // Need to update internal value?\n        if (item.get(groupedProperty)) {\n          this.setSelection([item]);\n        }\n      }\n\n      // Select first item when only one is registered\n      if (!this.isAllowEmptySelection() && items.length > 0 && !this.getSelection()[0]) {\n        this.setSelection([items[0]]);\n      }\n    },\n\n    /**\n     * Remove an item from the radio group.\n     *\n     * @param item {qx.ui.form.IRadioItem} The item to remove.\n     */\n    remove : function(item)\n    {\n      var items = this.__items;\n      var groupedProperty = this.getGroupedProperty();\n      var groupedPropertyUp = qx.lang.String.firstUp(groupedProperty);\n\n      if (items.includes(item))\n      {\n        // Remove RadioButton from array\n        qx.lang.Array.remove(items, item);\n\n        // Inform radio button about new group\n        if (item.get(this.getGroupProperty()) === this) {\n          item.reset(this.getGroupProperty());\n        }\n\n        // Deregister listeners\n        item.removeListener(\n          \"change\" + groupedPropertyUp, this._onItemChangeChecked, this);\n\n        // if the radio was checked, set internal selection to null\n        if (item.get(groupedProperty)) {\n          this.resetSelection();\n        }\n      }\n    },\n\n\n    /**\n     * Returns an array containing the group's items.\n     *\n     * @return {qx.ui.form.IRadioItem[]} The item array\n     */\n    getChildren : function()\n    {\n      return this.__items;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LISTENER FOR ITEM CHANGES\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event listener for <code>changeValue</code> event of every managed item.\n     *\n     * @param e {qx.event.type.Data} Data event\n     */\n    _onItemChangeChecked : function(e)\n    {\n      var item = e.getTarget();\n      var groupedProperty = this.getGroupedProperty();\n\n      if (item.get(groupedProperty)) {\n        this.setSelection([item]);\n      } else if (this.getSelection()[0] == item) {\n        this.resetSelection();\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyGroupedProperty : function(value, old) {\n      var item;\n      var oldFirstUp = qx.lang.String.firstUp(old);\n      var newFirstUp = qx.lang.String.firstUp(value);\n\n      for (var i = 0; i < this.__items.length; i++) {\n        item = this.__items[i];\n\n        // remove the listener for the old change event\n        item.removeListener(\n          \"change\" + oldFirstUp, this._onItemChangeChecked, this);\n\n        // add the listener for the new change event\n        item.removeListener(\n          \"change\" + newFirstUp, this._onItemChangeChecked, this);\n      }\n    },\n\n    // property apply\n    _applyInvalidMessage : function(value, old) {\n      for (var i = 0; i < this.__items.length; i++) {\n        this.__items[i].setInvalidMessage(value);\n      }\n    },\n\n    // property apply\n    _applyValid: function(value, old) {\n      for (var i = 0; i < this.__items.length; i++) {\n        this.__items[i].setValid(value);\n      }\n    },\n\n    // property apply\n    _applyEnabled : function(value, old)\n    {\n      var items = this.__items;\n      if (value == null)\n      {\n        for (var i=0, l=items.length; i<l; i++) {\n          items[i].resetEnabled();\n        }\n      }\n      else\n      {\n        for (var i=0, l=items.length; i<l; i++) {\n          items[i].setEnabled(value);\n        }\n      }\n    },\n\n    // property apply\n    _applyAllowEmptySelection : function(value, old)\n    {\n      if (!value && this.isSelectionEmpty()) {\n        this.resetSelection();\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SELECTION\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Select the item following the given item.\n     */\n    selectNext : function()\n    {\n      var item = this.getSelection()[0];\n      var items = this.__items;\n      var index = items.indexOf(item);\n      if (index == -1) {\n        return;\n      }\n\n      var i = 0;\n      var length = items.length;\n\n      // Find next enabled item\n      if (this.getWrap()) {\n        index = (index + 1) % length;\n      } else {\n        index = Math.min(index + 1, length - 1);\n      }\n\n      while (i < length && !items[index].getEnabled())\n      {\n        index = (index + 1) % length;\n        i++;\n      }\n\n      this.setSelection([items[index]]);\n    },\n\n\n    /**\n     * Select the item previous the given item.\n     */\n    selectPrevious : function()\n    {\n      var item = this.getSelection()[0];\n      var items = this.__items;\n      var index = items.indexOf(item);\n      if (index == -1) {\n        return;\n      }\n\n      var i = 0;\n      var length = items.length;\n\n      // Find previous enabled item\n      if (this.getWrap()) {\n        index = (index - 1 + length) % length;\n      } else {\n        index = Math.max(index - 1, 0);\n      }\n\n      while (i < length && !items[index].getEnabled())\n      {\n        index = (index - 1 + length) % length;\n        i++;\n      }\n\n      this.setSelection([items[index]]);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS FOR SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Returns the items for the selection.\n     *\n     * @return {qx.ui.form.IRadioItem[]} Items to select.\n     */\n    _getItems : function() {\n      return this.getItems();\n    },\n\n    /**\n     * Returns if the selection could be empty or not.\n     *\n     * @return {Boolean} <code>true</code> If selection could be empty,\n     *    <code>false</code> otherwise.\n     */\n    _isAllowEmptySelection: function() {\n      return this.isAllowEmptySelection();\n    },\n\n\n    /**\n     * Returns whether the item is selectable. In opposite to the default\n     * implementation (which checks for visible items) every radio button\n     * which is part of the group is selected even if it is currently not visible.\n     *\n     * @param item {qx.ui.form.IRadioItem} The item to check if its selectable.\n     * @return {Boolean} <code>true</code> if the item is part of the radio group\n     *    <code>false</code> otherwise.\n     */\n    _isItemSelectable : function(item) {\n      return this.__items.indexOf(item) != -1;\n    },\n\n\n    /**\n     * Event handler for <code>changeSelection</code>.\n     *\n     * @param e {qx.event.type.Data} Data event.\n     */\n    __onChangeSelection : function(e)\n    {\n      var value = e.getData()[0];\n      var old = e.getOldData()[0];\n      var groupedProperty = this.getGroupedProperty();\n\n      if (old) {\n        old.set(groupedProperty, false);\n      }\n\n      if (value) {\n        value.set(groupedProperty, true);\n      }\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n\n  destruct : function() {\n    this._disposeArray(\"__items\");\n  }\n});\n"
  ]
}