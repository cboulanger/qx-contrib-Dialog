{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/decoration/Decorator.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "decoration",
    "Abstract",
    "implement",
    "IDecorator",
    "include",
    "MBackgroundColor",
    "MBorderRadius",
    "MBoxShadow",
    "MDoubleBorder",
    "MLinearBackgroundGradient",
    "MBorderImage",
    "MTransition",
    "members",
    "__initialized",
    "getPadding",
    "insets",
    "getInset",
    "slices",
    "_getDefaultInsetsForBorderImage",
    "borderTop",
    "top",
    "getWidthTop",
    "borderRight",
    "right",
    "getWidthRight",
    "borderBottom",
    "bottom",
    "getWidthBottom",
    "borderLeft",
    "left",
    "getWidthLeft",
    "getInnerWidthTop",
    "getInnerWidthRight",
    "getInnerWidthBottom",
    "getInnerWidthLeft",
    "getStyles",
    "css",
    "_getStyles",
    "jsStyles",
    "cssStyles",
    "property",
    "lang",
    "String",
    "camelCase",
    "styles",
    "name",
    "indexOf",
    "Function",
    "Type",
    "isArray",
    "join",
    "_getDefaultInsets",
    "directions",
    "defaultInsets",
    "currentInsets",
    "i",
    "length",
    "direction",
    "undefined",
    "_isInitialized",
    "_getExtendedPropertyValueArrays",
    "propertyNames",
    "propertyValues",
    "map",
    "propName",
    "value",
    "get",
    "items",
    "Math",
    "max",
    "apply",
    "prop",
    "__extendArray",
    "array",
    "to",
    "initial",
    "push",
    "Decorator"
  ],
  "mappings": "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",
  "file": "Decorator.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Decorator including all decoration possibilities from mixins:\n *\n * <ul>\n * <li>Background color</li>\n * <li>Background image</li>\n * <li>Background gradient</li>\n * <li>Single and double borders</li>\n * <li>Border radius</li>\n * <li>Box shadow</li>\n * </ul>\n */\nqx.Class.define(\"qx.ui.decoration.Decorator\", {\n\n  extend : qx.ui.decoration.Abstract,\n\n  implement : [qx.ui.decoration.IDecorator],\n\n  include : [\n    qx.ui.decoration.MBackgroundColor,\n    qx.ui.decoration.MBorderRadius,\n    qx.ui.decoration.MBoxShadow,\n    qx.ui.decoration.MDoubleBorder,\n    qx.ui.decoration.MLinearBackgroundGradient,\n    qx.ui.decoration.MBorderImage,\n    qx.ui.decoration.MTransition\n  ],\n\n  members :\n  {\n    __initialized : false,\n\n    /**\n     * Returns the configured padding minus the border width.\n     * @return {Map} Map of top, right, bottom and left padding values\n     */\n    getPadding : function()\n    {\n      var insets = this.getInset();\n      var slices = this._getDefaultInsetsForBorderImage();\n\n      var borderTop = insets.top - (slices.top ? slices.top : this.getWidthTop());\n      var borderRight = insets.right - (slices.right ? slices.right : this.getWidthRight());\n      var borderBottom = insets.bottom - (slices.bottom ? slices.bottom : this.getWidthBottom());\n      var borderLeft = insets.left - (slices.left ? slices.left : this.getWidthLeft());\n\n      return {\n        top : insets.top ? borderTop : this.getInnerWidthTop(),\n        right : insets.right ? borderRight : this.getInnerWidthRight(),\n        bottom : insets.bottom ? borderBottom : this.getInnerWidthBottom(),\n        left : insets.left ? borderLeft : this.getInnerWidthLeft()\n      };\n    },\n\n\n    /**\n     * Returns the styles of the decorator as a map with property names written\n     * in javascript style (e.g. <code>fontWeight</code> instead of <code>font-weight</code>).\n     *\n     * @param css {Boolean?} <code>true</code> if hyphenated CSS names should be returned.\n     * @return {Map} style information\n     */\n    getStyles : function(css)\n    {\n      if (css) {\n        return this._getStyles();\n      }\n\n      var jsStyles = {};\n      var cssStyles = this._getStyles();\n\n      for (var property in cssStyles)\n      {\n        jsStyles[qx.lang.String.camelCase(property)] = cssStyles[property];\n      }\n\n      return jsStyles;\n    },\n\n\n    /**\n     * Collects all the style information from the decorators.\n     *\n     * @return {Map} style information\n     */\n    _getStyles : function()\n    {\n      var styles = {};\n\n      for (var name in this) {\n        if (name.indexOf(\"_style\") == 0 && this[name] instanceof Function) {\n          this[name](styles);\n        }\n      }\n      for(var name in styles)\n      {\n        if(qx.lang.Type.isArray(styles[name])) {\n          styles[name] = styles[name].join(', ');\n        }\n      }\n\n\n      this.__initialized = true;\n      return styles;\n    },\n\n\n    // overridden\n    _getDefaultInsets : function() {\n      var directions = [\"top\", \"right\", \"bottom\", \"left\"];\n      var defaultInsets = {};\n\n      for (var name in this) {\n        if (name.indexOf(\"_getDefaultInsetsFor\") == 0 && this[name] instanceof Function) {\n          var currentInsets = this[name]();\n\n          for (var i=0; i < directions.length; i++) {\n            var direction = directions[i];\n            // initialize with the first insets found\n            if (defaultInsets[direction] == undefined) {\n              defaultInsets[direction] = currentInsets[direction];\n            }\n            // take the largest inset\n            if (currentInsets[direction] > defaultInsets[direction]) {\n              defaultInsets[direction] = currentInsets[direction];\n            }\n          }\n        }\n      }\n\n      // check if the mixins have created a default insets\n      if (defaultInsets[\"top\"] != undefined) {\n        return defaultInsets;\n      }\n      // return a fallback which is 0 for all insets\n      return {top: 0, right: 0, bottom: 0, left: 0};\n    },\n\n\n    // overridden\n    _isInitialized: function() {\n      return this.__initialized;\n    },\n\n    /**\n    * Ensures that every propertyValue specified in propertyNames is an array.\n    * The value arrays are extended and repeated to match in length.\n    * @param propertyNames {Array} Array containing the propertyNames.\n    * @return {Array} Array containing the extended value arrays.\n    */\n    _getExtendedPropertyValueArrays: function(propertyNames) {\n      // transform non-array values to an array containing that value\n      var propertyValues = propertyNames.map(function(propName) {\n        var value = this.get(propName);\n        if(!qx.lang.Type.isArray(value)) {\n          value = [value];\n        }\n        return value;\n      }, this);\n\n      // Because it's possible to set multiple values for a property there's \n      // a chance that not all properties have the same number of values set.\n      // Extend the value arrays by repeating existing values until all\n      // arrays match in length.\n      var items = Math.max.apply(Math, propertyValues.map(function(prop) { return prop.length; }));\n      for(var i = 0; i < propertyValues.length; i++) {\n        this.__extendArray(propertyValues[i], items);\n      }\n\n      return propertyValues;\n    },\n\n    /**\n    * Extends an array up to the given length by repeating the elements already present.\n    * @param array {Array} Incoming array. Has to contain at least one element.\n    * @param to {Integer} Desired length. Must be greater than or equal to the the length of arr.\n    */\n    __extendArray: function(array, to) {\n      var initial = array.length;\n      while(array.length < to) {\n        array.push(array[array.length%initial]);\n      }\n    }\n  }\n});\n"
  ]
}