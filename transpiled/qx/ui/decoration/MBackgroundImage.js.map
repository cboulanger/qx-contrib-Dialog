{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/decoration/MBackgroundImage.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "backgroundImage",
    "nullable",
    "apply",
    "backgroundRepeat",
    "init",
    "backgroundPositionX",
    "backgroundPositionY",
    "backgroundOrigin",
    "backgroundPosition",
    "group",
    "orderGradientsFront",
    "check",
    "members",
    "_styleBackgroundImage",
    "styles",
    "getBackgroundImage",
    "lang",
    "Type",
    "isArray",
    "backgroundImageProperties",
    "images",
    "repeats",
    "tops",
    "lefts",
    "origins",
    "i",
    "length",
    "image",
    "repeat",
    "top",
    "left",
    "origin",
    "isNaN",
    "id",
    "util",
    "AliasManager",
    "getInstance",
    "resolve",
    "source",
    "ResourceManager",
    "toUri",
    "attrs",
    "position",
    "size",
    "imageMarkup",
    "getOrderGradientsFront",
    "join",
    "endsWith",
    "core",
    "Environment",
    "get",
    "warn",
    "_getExtendedPropertyValueArrays",
    "_applyBackgroundImage",
    "_isInitialized",
    "Error",
    "_applyBackgroundPosition",
    "ui",
    "decoration",
    "MBackgroundImage"
  ],
  "mappings": "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",
  "file": "MBackgroundImage.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n/**\n * Mixin for supporting the background images on decorators.\n * This mixin is usually used by {@link qx.ui.decoration.Decorator}.\n *\n * It is possible to define multiple background images by setting an\n * array containing the needed values as the property value.\n * In case multiple values are specified, the values of the properties\n * are repeated until all match in length.\n *\n * An example:\n * <pre class=\"javascript\">\n *   'my-decorator': {\n *     style: {\n *       backgroundImage: ['foo1.png', 'foo2.png', 'bar1.png', 'bar2.png'],\n *       backgroundRepeat: 'no-repeat',\n *       backgroundPositionX: ['left', 'right', 'center'],\n *       backgroundPositionY: ['center', 'top']\n *     }\n *   }\n * </pre>\n * which is the same as:\n * <pre class=\"javascript\">\n *   'my-decorator': {\n *     style: {\n *       backgroundImage: ['foo1.png', 'foo2.png', 'bar1.png', 'bar2.png'],\n *       backgroundRepeat: ['no-repeat', 'no-repeat', 'no-repeat', 'no-repeat'],\n *       backgroundPositionX: ['left', 'right', 'center', 'left'],\n *       backgroundPositionY: ['center', 'top', 'center', 'top']\n *     }\n *   }\n * </pre>\n */\nqx.Mixin.define(\"qx.ui.decoration.MBackgroundImage\",\n{\n  properties :\n  {\n    /** The URL of the background image */\n    backgroundImage :\n    {\n      nullable : true,\n      apply : \"_applyBackgroundImage\"\n    },\n\n\n    /** How the background image should be repeated */\n    backgroundRepeat :\n    {\n      init : \"repeat\",\n      apply : \"_applyBackgroundImage\"\n    },\n\n\n    /**\n     * Either a string or a number, which defines the horizontal position\n     * of the background image.\n     *\n     * If the value is an integer it is interpreted as a pixel value, otherwise\n     * the value is taken to be a CSS value. For CSS, the values are \"center\",\n     * \"left\" and \"right\".\n     */\n    backgroundPositionX :\n    {\n      nullable : true,\n      apply : \"_applyBackgroundPosition\"\n    },\n\n\n    /**\n     * Either a string or a number, which defines the vertical position\n     * of the background image.\n     *\n     * If the value is an integer it is interpreted as a pixel value, otherwise\n     * the value is taken to be a CSS value. For CSS, the values are \"top\",\n     * \"center\" and \"bottom\".\n     */\n    backgroundPositionY :\n    {\n      nullable : true,\n      apply : \"_applyBackgroundPosition\"\n    },\n\n\n    /**\n     * Specifies where the background image is positioned.\n     */\n    backgroundOrigin :\n    {\n      nullable: true,\n      apply: \"_applyBackgroundImage\"\n    },\n\n\n    /**\n     * Property group to define the background position\n     */\n    backgroundPosition :\n    {\n      group : [\"backgroundPositionY\", \"backgroundPositionX\"]\n    },\n\n\n    /**\n     * Whether to order gradients before Image-URL-based background declarations\n     * if both qx.ui.decoration.MBackgroundImage and\n     * qx.ui.decoration.MLinearBackgroundGradient decorations are used.\n     */\n    orderGradientsFront :\n    {\n      check: 'Boolean',\n      init: false\n    }\n  },\n\n\n  members :\n  {\n    /**\n     * Adds the background-image styles to the given map\n     * @param styles {Map} CSS style map\n     */\n    _styleBackgroundImage : function(styles)\n    {\n      if(! this.getBackgroundImage()) {\n        return;\n      }\n\n      if(\"background\" in styles) {\n        if(!qx.lang.Type.isArray(styles['background'])) {\n          styles['background'] = [styles['background']];\n        }\n      } else {\n        styles['background'] = [];\n      }\n\n      var backgroundImageProperties = ['backgroundImage', 'backgroundRepeat', 'backgroundPositionY',\n        'backgroundPositionX', 'backgroundOrigin'];\n\n      (function (images, repeats, tops, lefts, origins) {\n        for(var i=0;i<images.length;i++) {\n          var image = images[i];\n          var repeat = repeats[i];\n          var top = tops[i] || 0;\n          var left = lefts[i] || 0;\n          var origin = origins[i] || '';\n\n          if (top == null) {\n            top = 0;\n          }\n          if (left == null) {\n            left = 0;\n          }\n          if (!isNaN(top)) {\n            top += \"px\";\n          }\n          if (!isNaN(left)) {\n            left += \"px\";\n          }\n\n          var id = qx.util.AliasManager.getInstance().resolve(image);\n          var source = qx.util.ResourceManager.getInstance().toUri(id);\n\n          var attrs = {\n            image: 'url(' + source + ')',\n            position: left + \" \" + top,\n            repeat: 'repeat',\n            origin: origin\n          };\n          if (repeat === \"scale\") {\n            attrs.size = \"100% 100%\";\n          } else {\n            attrs.repeat = repeat;\n          }\n          var imageMarkup = [attrs.image, attrs.position + ('size' in attrs ? ' / ' + attrs.size : ''), attrs.repeat, attrs.origin];\n\n          styles[\"background\"][this.getOrderGradientsFront() ? 'push' : 'unshift'](imageMarkup.join(' '));\n\n          if (qx.core.Environment.get(\"qx.debug\") &&\n            source &&  source.endsWith(\".png\") &&\n            (repeat == \"scale\" || repeat == \"no-repeat\") &&\n            qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n            qx.core.Environment.get(\"browser.documentmode\") < 9)\n          {\n            this.warn(\"Background PNGs with repeat == 'scale' or repeat == 'no-repeat'\" +\n              \" are not supported in this client! The image's resource id is '\" + id + \"'\");\n          }\n        }\n      }).apply(this, this._getExtendedPropertyValueArrays(backgroundImageProperties));\n    },\n\n\n    // property apply\n    _applyBackgroundImage : function()\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (this._isInitialized()) {\n          throw new Error(\"This decorator is already in-use. Modification is not possible anymore!\");\n        }\n      }\n    },\n\n\n    // property apply\n    _applyBackgroundPosition : function()\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (this._isInitialized()) {\n          throw new Error(\"This decorator is already in-use. Modification is not possible anymore!\");\n        }\n        if (qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n          qx.core.Environment.get(\"browser.documentmode\") < 9)\n        {\n          this.warn(\"The backgroundPosition property is not supported by this client!\");\n        }\n      }\n    }\n  }\n});\n"
  ]
}