{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/toolbar/RadioButton.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "toolbar",
    "CheckBox",
    "include",
    "form",
    "MModelProperty",
    "implement",
    "IModel",
    "IRadioItem",
    "members",
    "_applyValue",
    "value",
    "old",
    "grp",
    "getGroup",
    "setSelection",
    "_onExecute",
    "e",
    "getAllowEmptySelection",
    "toggleValue",
    "setValue",
    "RadioButton"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAyBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,2BAAhB,EACA;AACEC,YAASN,GAAGO,EAAH,CAAMC,OAAN,CAAcC,QADzB;AAEEC,aAAU,CAACV,GAAGO,EAAH,CAAMI,IAAN,CAAWC,cAAZ,CAFZ;AAGEC,eAAY,CAACb,GAAGO,EAAH,CAAMI,IAAN,CAAWG,MAAZ,EAAoBd,GAAGO,EAAH,CAAMI,IAAN,CAAWI,UAA/B,CAHd;;AAQE;;;;;;AAMAC,aACA;AACE;;;;;;AAMA;AACAC,mBAAc,qBAASC,KAAT,EAAgBC,GAAhB,EACd;AACE,wEAAqBD,KAArB,EAA4BC,GAA5B;;AAEA,YAAID,KAAJ,EACA;AACE,cAAIE,MAAM,KAAKC,QAAL,EAAV;AACA,cAAID,GAAJ,EAAS;AACPA,gBAAIE,YAAJ,CAAiB,CAAC,IAAD,CAAjB;AACD;AACF;AACF,OAnBH;;AAsBE;AACAC,kBAAa,oBAASC,CAAT,EAAY;AACvB,YAAIJ,MAAM,KAAKC,QAAL,EAAV;AACA,YAAID,OAAOA,IAAIK,sBAAJ,EAAX,EAAyC;AACvC,eAAKC,WAAL;AACD,SAFD,MAEO;AACL,eAAKC,QAAL,CAAc,IAAd;AACD;AACF;AA9BH;AAfF,GADA,C;AAzBA3B,KAAGO,EAAH,CAAMC,OAAN,CAAcoB,WAAd,CAA0BzB,aAA1B,GAA0CA,aAA1C",
  "file": "RadioButton.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Radio buttons are used to manage a single selection. Radio buttons only\n * make sense used in a group of two or more of them. They are managed (connected)\n * to a {@link qx.ui.form.RadioGroup} to handle the selection.\n */\nqx.Class.define(\"qx.ui.toolbar.RadioButton\",\n{\n  extend : qx.ui.toolbar.CheckBox,\n  include : [qx.ui.form.MModelProperty],\n  implement : [qx.ui.form.IModel, qx.ui.form.IRadioItem],\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _applyValue : function(value, old)\n    {\n      this.base(arguments, value, old);\n\n      if (value)\n      {\n        var grp = this.getGroup();\n        if (grp) {\n          grp.setSelection([this]);\n        }\n      }\n    },\n\n\n    // overridden\n    _onExecute : function(e) {\n      var grp = this.getGroup();\n      if (grp && grp.getAllowEmptySelection()) {\n        this.toggleValue();\n      } else {\n        this.setValue(true);\n      }\n    }\n  }\n});"
  ]
}