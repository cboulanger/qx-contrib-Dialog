{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/core/FocusHandler.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "__roots",
    "members",
    "__activeChild",
    "__focusedChild",
    "__currentRoot",
    "connectTo",
    "root",
    "addListener",
    "__onKeyPress",
    "_onFocusIn",
    "_onFocusOut",
    "_onActivate",
    "_onDeactivate",
    "addRoot",
    "widget",
    "$$hash",
    "removeRoot",
    "getActiveWidget",
    "isActive",
    "getFocusedWidget",
    "isFocused",
    "isFocusRoot",
    "e",
    "target",
    "getTarget",
    "__findFocusRoot",
    "visualizeFocus",
    "visualizeBlur",
    "getKeyIdentifier",
    "stopPropagation",
    "preventDefault",
    "current",
    "isShiftPressed",
    "next",
    "__getWidgetAfter",
    "__getFirstWidget",
    "__getWidgetBefore",
    "__getLastWidget",
    "tabFocus",
    "roots",
    "getLayoutParent",
    "__compareTabOrder",
    "widget1",
    "widget2",
    "tab1",
    "getTabIndex",
    "tab2",
    "el1",
    "getContentElement",
    "getDomElement",
    "el2",
    "Location",
    "bom",
    "element",
    "loc1",
    "get",
    "loc2",
    "top",
    "left",
    "z1",
    "getZIndex",
    "z2",
    "__getFirst",
    "__getLast",
    "getAnonymous",
    "result",
    "__collectAllAfter",
    "sort",
    "len",
    "length",
    "__collectAllBefore",
    "parent",
    "children",
    "getLayoutChildren",
    "child",
    "i",
    "l",
    "ui",
    "Widget",
    "isEnabled",
    "isVisible",
    "isTabable",
    "push",
    "firstWidget",
    "lastWidget",
    "destruct",
    "_disposeMap",
    "FocusHandler"
  ],
  "mappings": "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",
  "file": "FocusHandler.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * Each focus root delegates the focus handling to instances of the FocusHandler.\n */\nqx.Class.define(\"qx.ui.core.FocusHandler\",\n{\n  extend : qx.core.Object,\n  type : \"singleton\",\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    // Create data structure\n    this.__roots = {};\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __roots : null,\n    __activeChild : null,\n    __focusedChild : null,\n    __currentRoot : null,\n\n\n    /**\n     * Connects to a top-level root element (which initially receives\n     * all events of the root). This are normally all page and application\n     * roots, but no inline roots (they are typically sitting inside\n     * another root).\n     *\n     * @param root {qx.ui.root.Abstract} Any root\n     */\n    connectTo : function(root)\n    {\n      // this.debug(\"Connect to: \" + root);\n      root.addListener(\"keypress\", this.__onKeyPress, this);\n      root.addListener(\"focusin\", this._onFocusIn, this, true);\n      root.addListener(\"focusout\", this._onFocusOut, this, true);\n      root.addListener(\"activate\", this._onActivate, this, true);\n      root.addListener(\"deactivate\", this._onDeactivate, this, true);\n    },\n\n    /**\n     * Registers a widget as a focus root. A focus root comes\n     * with an separate tab sequence handling.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to register\n     */\n    addRoot : function(widget)\n    {\n      // this.debug(\"Add focusRoot: \" + widget);\n      this.__roots[widget.$$hash] = widget;\n    },\n\n\n    /**\n     * Deregisters a previous added widget.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to deregister\n     */\n    removeRoot : function(widget)\n    {\n      // this.debug(\"Remove focusRoot: \" + widget);\n      delete this.__roots[widget.$$hash];\n    },\n\n\n    /**\n     * Get the active widget\n     *\n     * @return {qx.ui.core.Widget|null} The active widget or <code>null</code>\n     *    if no widget is active\n     */\n    getActiveWidget : function() {\n      return this.__activeChild;\n    },\n\n\n    /**\n     * Whether the given widget is the active one\n     *\n     * @param widget {qx.ui.core.Widget} The widget to check\n     * @return {Boolean} <code>true</code> if the given widget is active\n     */\n    isActive : function(widget) {\n      return this.__activeChild == widget;\n    },\n\n\n    /**\n     * Get the focused widget\n     *\n     * @return {qx.ui.core.Widget|null} The focused widget or <code>null</code>\n     *    if no widget has the focus\n     */\n    getFocusedWidget : function() {\n      return this.__focusedChild;\n    },\n\n\n    /**\n     * Whether the given widget is the focused one.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to check\n     * @return {Boolean} <code>true</code> if the given widget is focused\n     */\n    isFocused : function(widget) {\n      return this.__focusedChild == widget;\n    },\n\n\n    /**\n     * Whether the given widgets acts as a focus root.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to check\n     * @return {Boolean} <code>true</code> if the given widget is a focus root\n     */\n    isFocusRoot : function(widget) {\n      return !!this.__roots[widget.$$hash];\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Internal event handler for activate event.\n     *\n     * @param e {qx.event.type.Focus} Focus event\n     */\n    _onActivate : function(e)\n    {\n      var target = e.getTarget();\n      this.__activeChild = target;\n      //this.debug(\"active: \" + target);\n\n      var root = this.__findFocusRoot(target);\n      if (root != this.__currentRoot) {\n        this.__currentRoot = root;\n      }\n    },\n\n\n    /**\n     * Internal event handler for deactivate event.\n     *\n     * @param e {qx.event.type.Focus} Focus event\n     */\n    _onDeactivate : function(e)\n    {\n      var target = e.getTarget();\n      if (this.__activeChild == target) {\n        this.__activeChild = null;\n      }\n    },\n\n\n    /**\n     * Internal event handler for focusin event.\n     *\n     * @param e {qx.event.type.Focus} Focus event\n     */\n    _onFocusIn : function(e)\n    {\n      var target = e.getTarget();\n      if (target != this.__focusedChild)\n      {\n        this.__focusedChild = target;\n        target.visualizeFocus();\n      }\n    },\n\n\n    /**\n     * Internal event handler for focusout event.\n     *\n     * @param e {qx.event.type.Focus} Focus event\n     */\n    _onFocusOut : function(e)\n    {\n      var target = e.getTarget();\n      if (target == this.__focusedChild)\n      {\n        this.__focusedChild = null;\n        target.visualizeBlur();\n      }\n    },\n\n\n    /**\n     * Internal event handler for TAB key.\n     *\n     * @param e {qx.event.type.KeySequence} Key event\n     */\n    __onKeyPress : function(e)\n    {\n      if (e.getKeyIdentifier() != \"Tab\") {\n        return;\n      }\n\n      if (!this.__currentRoot) {\n        return;\n      }\n\n      // Stop all key-events with a TAB keycode\n      e.stopPropagation();\n      e.preventDefault();\n\n      // Support shift key to reverse widget detection order\n      var current = this.__focusedChild;\n      if (!e.isShiftPressed()) {\n        var next = current ? this.__getWidgetAfter(current) : this.__getFirstWidget();\n      } else {\n        var next = current ? this.__getWidgetBefore(current) : this.__getLastWidget();\n      }\n\n      // If there was a widget found, focus it\n      if (next) {\n        next.tabFocus();\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      UTILS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Finds the next focus root, starting with the given widget.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to find a focus root for.\n     * @return {qx.ui.core.Widget|null} The focus root for the given widget or\n     * <code>true</code> if no focus root could be found\n     */\n    __findFocusRoot : function(widget)\n    {\n      var roots = this.__roots;\n      while (widget)\n      {\n        if (roots[widget.$$hash]) {\n          return widget;\n        }\n\n        widget = widget.getLayoutParent();\n      }\n\n      return null;\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      TAB SUPPORT IMPLEMENTATION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Compares the order of two widgets\n     *\n     * @param widget1 {qx.ui.core.Widget} Widget A\n     * @param widget2 {qx.ui.core.Widget} Widget B\n     * @return {Integer} A sort() compatible integer with values\n     *   small than 0, exactly 0 or bigger than 0.\n     */\n    __compareTabOrder : function(widget1, widget2)\n    {\n      if (widget1 === widget2) {\n        return 0;\n      }\n\n      // Sort-Check #1: Tab-Index\n      var tab1 = widget1.getTabIndex() || 0;\n      var tab2 = widget2.getTabIndex() || 0;\n\n      if (tab1 != tab2) {\n        return tab1 - tab2;\n      }\n\n      // Computing location\n      var el1 = widget1.getContentElement().getDomElement();\n      var el2 = widget2.getContentElement().getDomElement();\n\n      var Location = qx.bom.element.Location;\n\n      var loc1 = Location.get(el1);\n      var loc2 = Location.get(el2);\n\n      // Sort-Check #2: Top-Position\n      if (loc1.top != loc2.top) {\n        return loc1.top - loc2.top;\n      }\n\n      // Sort-Check #3: Left-Position\n      if (loc1.left != loc2.left) {\n        return loc1.left - loc2.left;\n      }\n\n      // Sort-Check #4: zIndex\n      var z1 = widget1.getZIndex();\n      var z2 = widget2.getZIndex();\n\n      if (z1 != z2) {\n        return z1 - z2;\n      }\n\n      return 0;\n    },\n\n\n    /**\n     * Returns the first widget.\n     *\n     * @return {qx.ui.core.Widget} Returns the first (positioned) widget from\n     *    the current root.\n     */\n    __getFirstWidget : function() {\n      return this.__getFirst(this.__currentRoot, null);\n    },\n\n\n    /**\n     * Returns the last widget.\n     *\n     * @return {qx.ui.core.Widget} Returns the last (positioned) widget from\n     *    the current root.\n     */\n    __getLastWidget : function() {\n      return this.__getLast(this.__currentRoot, null);\n    },\n\n\n    /**\n     * Returns the widget after the given one.\n     *\n     * @param widget {qx.ui.core.Widget} Widget to start with\n     * @return {qx.ui.core.Widget} The found widget.\n     */\n    __getWidgetAfter : function(widget)\n    {\n      var root = this.__currentRoot;\n      if (root == widget) {\n        return this.__getFirstWidget();\n      }\n\n      while (widget && widget.getAnonymous()) {\n        widget = widget.getLayoutParent();\n      }\n\n      if (widget == null) {\n        return [];\n      }\n\n      var result = [];\n      this.__collectAllAfter(root, widget, result);\n      result.sort(this.__compareTabOrder);\n\n      var len = result.length;\n      return len > 0 ? result[0] : this.__getFirstWidget();\n    },\n\n\n    /**\n     * Returns the widget before the given one.\n     *\n     * @param widget {qx.ui.core.Widget} Widget to start with\n     * @return {qx.ui.core.Widget} The found widget.\n     */\n    __getWidgetBefore : function(widget)\n    {\n      var root = this.__currentRoot;\n      if (root == widget) {\n        return this.__getLastWidget();\n      }\n\n      while (widget && widget.getAnonymous()) {\n        widget = widget.getLayoutParent();\n      }\n\n      if (widget == null) {\n        return [];\n      }\n\n      var result = [];\n      this.__collectAllBefore(root, widget, result);\n      result.sort(this.__compareTabOrder);\n\n      var len = result.length;\n      return len > 0 ? result[len - 1] : this.__getLastWidget();\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API USED BY METHODS ABOVE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Collects all widgets which are after the given widget in\n     * the given parent widget. Append all found children to the\n     * <code>list</code>.\n     *\n     * @param parent {qx.ui.core.Widget} Parent widget\n     * @param widget {qx.ui.core.Widget} Child widget to start with\n     * @param result {Array} Result list\n     */\n    __collectAllAfter : function(parent, widget, result)\n    {\n      var children = parent.getLayoutChildren();\n      var child;\n\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n\n        // Filter spacers etc.\n        if (!(child instanceof qx.ui.core.Widget)) {\n          continue;\n        }\n\n        if (!this.isFocusRoot(child) && child.isEnabled() && child.isVisible())\n        {\n          if (child.isTabable() && this.__compareTabOrder(widget, child) < 0) {\n            result.push(child);\n          }\n\n          this.__collectAllAfter(child, widget, result);\n        }\n      }\n    },\n\n\n    /**\n     * Collects all widgets which are before the given widget in\n     * the given parent widget. Append all found children to the\n     * <code>list</code>.\n     *\n     * @param parent {qx.ui.core.Widget} Parent widget\n     * @param widget {qx.ui.core.Widget} Child widget to start with\n     * @param result {Array} Result list\n     */\n    __collectAllBefore : function(parent, widget, result)\n    {\n      var children = parent.getLayoutChildren();\n      var child;\n\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n\n        // Filter spacers etc.\n        if (!(child instanceof qx.ui.core.Widget)) {\n          continue;\n        }\n\n        if (!this.isFocusRoot(child) && child.isEnabled() && child.isVisible())\n        {\n          if (child.isTabable() && this.__compareTabOrder(widget, child) > 0) {\n            result.push(child);\n          }\n\n          this.__collectAllBefore(child, widget, result);\n        }\n      }\n    },\n\n\n    /**\n     * Find first (positioned) widget. (Sorted by coordinates, zIndex, etc.)\n     *\n     * @param parent {qx.ui.core.Widget} Parent widget\n     * @param firstWidget {qx.ui.core.Widget?null} Current first widget\n     * @return {qx.ui.core.Widget} The first (positioned) widget\n     */\n    __getFirst : function(parent, firstWidget)\n    {\n      var children = parent.getLayoutChildren();\n      var child;\n\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n\n        // Filter spacers etc.\n        if (!(child instanceof qx.ui.core.Widget)) {\n          continue;\n        }\n\n        // Ignore focus roots completely\n        if (!this.isFocusRoot(child) && child.isEnabled() && child.isVisible())\n        {\n          if (child.isTabable())\n          {\n            if (firstWidget == null || this.__compareTabOrder(child, firstWidget) < 0) {\n              firstWidget = child;\n            }\n          }\n\n          // Deep iteration into children hierarchy\n          firstWidget = this.__getFirst(child, firstWidget);\n        }\n      }\n\n      return firstWidget;\n    },\n\n\n    /**\n     * Find last (positioned) widget. (Sorted by coordinates, zIndex, etc.)\n     *\n     * @param parent {qx.ui.core.Widget} Parent widget\n     * @param lastWidget {qx.ui.core.Widget?null} Current last widget\n     * @return {qx.ui.core.Widget} The last (positioned) widget\n     */\n    __getLast : function(parent, lastWidget)\n    {\n      var children = parent.getLayoutChildren();\n      var child;\n\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n\n        // Filter spacers etc.\n        if (!(child instanceof qx.ui.core.Widget)) {\n          continue;\n        }\n\n        // Ignore focus roots completely\n        if (!this.isFocusRoot(child) && child.isEnabled() && child.isVisible())\n        {\n          if (child.isTabable())\n          {\n            if (lastWidget == null || this.__compareTabOrder(child, lastWidget) > 0) {\n              lastWidget = child;\n            }\n          }\n\n          // Deep iteration into children hierarchy\n          lastWidget = this.__getLast(child, lastWidget);\n        }\n      }\n\n      return lastWidget;\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    this._disposeMap(\"__roots\");\n    this.__focusedChild = this.__activeChild = this.__currentRoot = null;\n  }\n});\n"
  ]
}