{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/core/scroll/NativeScrollBar.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "scroll",
    "IScrollBar",
    "construct",
    "orientation",
    "addState",
    "getContentElement",
    "addListener",
    "_onScroll",
    "_stopPropagation",
    "_onAppear",
    "add",
    "_getScrollPaneElement",
    "setStyle",
    "setOrientation",
    "initOrientation",
    "e",
    "stopPropagation",
    "events",
    "scrollAnimationEnd",
    "properties",
    "appearance",
    "refine",
    "init",
    "check",
    "apply",
    "maximum",
    "position",
    "event",
    "singleStep",
    "knobFactor",
    "nullable",
    "members",
    "__isHorizontal",
    "__scrollPaneElement",
    "__requestId",
    "__scrollAnimationframe",
    "html",
    "Element",
    "renderLayout",
    "left",
    "top",
    "width",
    "height",
    "changes",
    "_updateScrollBar",
    "_getContentHint",
    "scrollbarWidth",
    "bom",
    "element",
    "Scroll",
    "getScrollbarWidth",
    "maxWidth",
    "minWidth",
    "maxHeight",
    "minHeight",
    "_applyEnabled",
    "value",
    "old",
    "_applyMaximum",
    "_applyPosition",
    "content",
    "scrollToX",
    "scrollToY",
    "_applyOrientation",
    "isHorizontal",
    "set",
    "allowGrowX",
    "allowShrinkX",
    "allowGrowY",
    "allowShrinkY",
    "replaceState",
    "setStyles",
    "overflowX",
    "overflowY",
    "queue",
    "Layout",
    "bounds",
    "getBounds",
    "isEnabled",
    "containerSize",
    "innerSize",
    "getMaximum",
    "Environment",
    "get",
    "updatePosition",
    "getPosition",
    "scrollTo",
    "duration",
    "stopScrollAnimation",
    "from",
    "AnimationFrame",
    "on",
    "timePassed",
    "newPos",
    "parseInt",
    "setPosition",
    "Math",
    "max",
    "min",
    "fireEvent",
    "startSequence",
    "scrollBy",
    "offset",
    "scrollBySteps",
    "steps",
    "size",
    "getSingleStep",
    "cancelSequence",
    "container",
    "getScrollX",
    "getScrollY",
    "destruct",
    "_disposeObjects",
    "NativeScrollBar"
  ],
  "mappings": "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",
  "file": "NativeScrollBar.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The scroll bar widget wraps the native browser scroll bars as a qooxdoo widget.\n * It can be uses instead of the styled qooxdoo scroll bars.\n *\n * Scroll bars are used by the {@link qx.ui.container.Scroll} container. Usually\n * a scroll bar is not used directly.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   var scrollBar = new qx.ui.core.scroll.NativeScrollBar(\"horizontal\");\n *   scrollBar.set({\n *     maximum: 500\n *   })\n *   this.getRoot().add(scrollBar);\n * </pre>\n *\n * This example creates a horizontal scroll bar with a maximum value of 500.\n *\n * *External Documentation*\n *\n * <a href='http://manual.qooxdoo.org/${qxversion}/pages/widget/scrollbar.html' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.core.scroll.NativeScrollBar\",\n{\n  extend : qx.ui.core.Widget,\n  implement : qx.ui.core.scroll.IScrollBar,\n\n\n  /**\n   * @param orientation {String?\"horizontal\"} The initial scroll bar orientation\n   */\n  construct : function(orientation)\n  {\n    this.base(arguments);\n\n    this.addState(\"native\");\n\n    this.getContentElement().addListener(\"scroll\", this._onScroll, this);\n    this.addListener(\"pointerdown\", this._stopPropagation, this);\n    this.addListener(\"pointerup\", this._stopPropagation, this);\n    this.addListener(\"pointermove\", this._stopPropagation, this);\n    this.addListener(\"appear\", this._onAppear, this);\n\n    this.getContentElement().add(this._getScrollPaneElement());\n    this.getContentElement().setStyle(\"box-sizing\", \"content-box\");\n\n    // Configure orientation\n    if (orientation != null) {\n      this.setOrientation(orientation);\n    } else {\n      this.initOrientation();\n    }\n\n    // prevent drag & drop on scrolling\n    this.addListener(\"track\", function(e) {\n      e.stopPropagation();\n    }, this);\n  },\n\n\n  events : {\n    /**\n     * Fired as soon as the scroll animation ended.\n     */\n    scrollAnimationEnd: 'qx.event.type.Event'\n  },\n\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"scrollbar\"\n    },\n\n\n    // interface implementation\n    orientation :\n    {\n      check : [ \"horizontal\", \"vertical\" ],\n      init : \"horizontal\",\n      apply : \"_applyOrientation\"\n    },\n\n\n    // interface implementation\n    maximum :\n    {\n      check : \"PositiveInteger\",\n      apply : \"_applyMaximum\",\n      init : 100\n    },\n\n\n    // interface implementation\n    position :\n    {\n      check : \"Number\",\n      init : 0,\n      apply : \"_applyPosition\",\n      event : \"scroll\"\n    },\n\n\n    /**\n     * Step size for each tap on the up/down or left/right buttons.\n     */\n    singleStep :\n    {\n      check : \"Integer\",\n      init : 20\n    },\n\n\n    // interface implementation\n    knobFactor :\n    {\n      check : \"PositiveNumber\",\n      nullable : true\n    }\n  },\n\n\n  members :\n  {\n    __isHorizontal : null,\n    __scrollPaneElement : null,\n    __requestId : null,\n\n    __scrollAnimationframe : null,\n\n\n    /**\n     * Get the scroll pane html element.\n     *\n     * @return {qx.html.Element} The element\n     */\n    _getScrollPaneElement : function()\n    {\n      if (!this.__scrollPaneElement) {\n        this.__scrollPaneElement = new qx.html.Element();\n      }\n      return this.__scrollPaneElement;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    renderLayout : function(left, top, width, height)\n    {\n      var changes = this.base(arguments, left, top, width, height);\n\n      this._updateScrollBar();\n      return changes;\n    },\n\n\n    // overridden\n    _getContentHint : function()\n    {\n      var scrollbarWidth = qx.bom.element.Scroll.getScrollbarWidth();\n      return {\n        width: this.__isHorizontal ? 100 : scrollbarWidth,\n        maxWidth: this.__isHorizontal ? null : scrollbarWidth,\n        minWidth: this.__isHorizontal ? null : scrollbarWidth,\n        height: this.__isHorizontal ? scrollbarWidth : 100,\n        maxHeight: this.__isHorizontal ? scrollbarWidth : null,\n        minHeight: this.__isHorizontal ? scrollbarWidth : null\n      };\n    },\n\n\n    // overridden\n    _applyEnabled : function(value, old)\n    {\n      this.base(arguments, value, old);\n      this._updateScrollBar();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyMaximum : function(value) {\n      this._updateScrollBar();\n    },\n\n\n    // property apply\n    _applyPosition : function(value)\n    {\n      var content = this.getContentElement();\n\n      if (this.__isHorizontal) {\n        content.scrollToX(value);\n      } else {\n        content.scrollToY(value);\n      }\n    },\n\n\n    // property apply\n    _applyOrientation : function(value, old)\n    {\n      var isHorizontal = this.__isHorizontal = value === \"horizontal\";\n\n      this.set({\n        allowGrowX : isHorizontal,\n        allowShrinkX : isHorizontal,\n        allowGrowY : !isHorizontal,\n        allowShrinkY : !isHorizontal\n      });\n\n      if (isHorizontal) {\n        this.replaceState(\"vertical\", \"horizontal\");\n      } else {\n        this.replaceState(\"horizontal\", \"vertical\");\n      }\n\n      this.getContentElement().setStyles({\n        overflowX: isHorizontal ? \"scroll\" : \"hidden\",\n        overflowY: isHorizontal ? \"hidden\" : \"scroll\"\n      });\n\n      // Update layout\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n\n    /**\n     * Update the scroll bar according to its current size, max value and\n     * enabled state.\n     */\n    _updateScrollBar : function()\n    {\n      var isHorizontal = this.__isHorizontal;\n\n      var bounds = this.getBounds();\n      if (!bounds) {\n        return;\n      }\n\n      if (this.isEnabled())\n      {\n        var containerSize = isHorizontal ? bounds.width : bounds.height;\n        var innerSize = this.getMaximum() + containerSize;\n      } else {\n        innerSize = 0;\n      }\n\n      // Scrollbars don't work properly in IE/Edge if the element with overflow has\n      // exactly the size of the scrollbar. Thus we move the element one pixel\n      // out of the view and increase the size by one.\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\" ||\n        qx.core.Environment.get(\"browser.name\") == \"edge\")\n      {\n        var bounds = this.getBounds();\n        this.getContentElement().setStyles({\n          left: (isHorizontal ? bounds.left : (bounds.left -1)) + \"px\",\n          top: (isHorizontal ? (bounds.top - 1) : bounds.top) + \"px\",\n          width: (isHorizontal ? bounds.width : bounds.width + 1) + \"px\",\n          height: (isHorizontal ? bounds.height + 1 : bounds.height) + \"px\"\n        });\n      }\n\n      this._getScrollPaneElement().setStyles({\n        left: 0,\n        top: 0,\n        width: (isHorizontal ? innerSize : 1) + \"px\",\n        height: (isHorizontal ? 1 : innerSize) + \"px\"\n      });\n\n      this.updatePosition(this.getPosition());\n    },\n\n\n    // interface implementation\n    scrollTo : function(position, duration) {\n      // if a user sets a new position, stop any animation\n      this.stopScrollAnimation();\n\n      if (duration) {\n        var from = this.getPosition();\n\n        this.__scrollAnimationframe = new qx.bom.AnimationFrame();\n\n        this.__scrollAnimationframe.on(\"frame\", function(timePassed) {\n          var newPos = parseInt(timePassed/duration * (position - from) + from);\n          this.updatePosition(newPos);\n        }, this);\n\n        this.__scrollAnimationframe.on(\"end\", function() {\n          this.setPosition(Math.max(0, Math.min(this.getMaximum(), position)));\n          this.__scrollAnimationframe = null;\n          this.fireEvent(\"scrollAnimationEnd\");\n        }, this);\n\n        this.__scrollAnimationframe.startSequence(duration);\n      } else {\n        this.updatePosition(position);\n      }\n    },\n\n\n    /**\n     * Helper to set the new position taking care of min and max values.\n     * @param position {Number} The new position.\n     */\n    updatePosition : function(position) {\n      this.setPosition(Math.max(0, Math.min(this.getMaximum(), position)));\n    },\n\n\n    // interface implementation\n    scrollBy : function(offset, duration) {\n      this.scrollTo(this.getPosition() + offset, duration);\n    },\n\n\n    // interface implementation\n    scrollBySteps : function(steps, duration)\n    {\n      var size = this.getSingleStep();\n      this.scrollBy(steps * size, duration);\n    },\n\n\n    /**\n     * If a scroll animation is running, it will be stopped.\n     */\n    stopScrollAnimation : function() {\n      if (this.__scrollAnimationframe) {\n        this.__scrollAnimationframe.cancelSequence();\n        this.__scrollAnimationframe = null;\n      }\n    },\n\n\n    /**\n     * Scroll event handler\n     *\n     * @param e {qx.event.type.Event} the scroll event\n     */\n    _onScroll : function(e)\n    {\n      var container = this.getContentElement();\n      var position = this.__isHorizontal ? container.getScrollX() : container.getScrollY();\n      this.setPosition(position);\n    },\n\n\n    /**\n     * Listener for appear which ensured the scroll bar is positioned right\n     * on appear.\n     *\n     * @param e {qx.event.type.Data} Incoming event object\n     */\n    _onAppear : function(e) {\n      this._applyPosition(this.getPosition());\n    },\n\n\n    /**\n     * Stops propagation on the given even\n     *\n     * @param e {qx.event.type.Event} the event\n     */\n    _stopPropagation : function(e) {\n      e.stopPropagation();\n    }\n  },\n\n\n  destruct : function() {\n    this._disposeObjects(\"__scrollPaneElement\");\n  }\n});\n"
  ]
}