{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/ui/core/MMovable.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "movable",
    "check",
    "init",
    "useMoveFrame",
    "members",
    "__moveHandle",
    "__moveFrame",
    "__dragRange",
    "__dragLeft",
    "__dragTop",
    "__parentLeft",
    "__parentTop",
    "__blockerAdded",
    "__oldBlockerColor",
    "__oldBlockerOpacity",
    "_activateMoveHandle",
    "widget",
    "Error",
    "addListener",
    "_onMovePointerDown",
    "_onMovePointerUp",
    "_onMovePointerMove",
    "__onMoveLoseCapture",
    "__getMoveFrame",
    "frame",
    "ui",
    "core",
    "Widget",
    "setAppearance",
    "exclude",
    "Init",
    "getApplication",
    "getRoot",
    "add",
    "__showMoveFrame",
    "location",
    "getContentLocation",
    "bounds",
    "getBounds",
    "setUserBounds",
    "left",
    "top",
    "width",
    "height",
    "show",
    "setZIndex",
    "getZIndex",
    "__computeMoveCoordinates",
    "e",
    "range",
    "pointerLeft",
    "Math",
    "max",
    "min",
    "right",
    "getDocumentLeft",
    "pointerTop",
    "bottom",
    "getDocumentTop",
    "viewportLeft",
    "viewportTop",
    "parseInt",
    "parentLeft",
    "parentTop",
    "_onMoveRoll",
    "stop",
    "getMovable",
    "hasState",
    "parent",
    "getLayoutParent",
    "parentLocation",
    "parentBounds",
    "Class",
    "implementsInterface",
    "window",
    "IDesktop",
    "isBlocked",
    "getBlockerColor",
    "getBlockerOpacity",
    "setBlockerColor",
    "setBlockerOpacity",
    "blockContent",
    "widgetLocation",
    "addState",
    "capture",
    "getUseMoveFrame",
    "coords",
    "setDomPosition",
    "insets",
    "getInsets",
    "stopPropagation",
    "hasListener",
    "removeListener",
    "removeState",
    "unblock",
    "releaseCapture",
    "setLayoutProperties",
    "destruct",
    "_disposeObjects",
    "MMovable"
  ],
  "mappings": "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",
  "file": "MMovable.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Provides move behavior to any widget.\n *\n * The widget using the mixin must register a widget as move handle so that\n * the pointer events needed for moving it are attached to this widget).\n * <pre class='javascript'>this._activateMoveHandle(widget);</pre>\n */\nqx.Mixin.define(\"qx.ui.core.MMovable\",\n{\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** Whether the widget is movable */\n    movable :\n    {\n      check : \"Boolean\",\n      init : true\n    },\n\n    /** Whether to use a frame instead of the original widget during move sequences */\n    useMoveFrame :\n    {\n      check : \"Boolean\",\n      init : false\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __moveHandle : null,\n    __moveFrame : null,\n    __dragRange : null,\n    __dragLeft : null,\n    __dragTop : null,\n    __parentLeft : null,\n    __parentTop : null,\n\n    __blockerAdded : false,\n    __oldBlockerColor : null,\n    __oldBlockerOpacity : 0,\n\n    /*\n    ---------------------------------------------------------------------------\n      CORE FEATURES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Configures the given widget as a move handle\n     *\n     * @param widget {qx.ui.core.Widget} Widget to activate as move handle\n     */\n    _activateMoveHandle : function(widget)\n    {\n      if (this.__moveHandle) {\n        throw new Error(\"The move handle could not be redefined!\");\n      }\n\n      this.__moveHandle = widget;\n      widget.addListener(\"pointerdown\", this._onMovePointerDown, this);\n      widget.addListener(\"pointerup\", this._onMovePointerUp, this);\n      widget.addListener(\"pointermove\", this._onMovePointerMove, this);\n      widget.addListener(\"losecapture\", this.__onMoveLoseCapture, this);\n    },\n\n\n    /**\n     * Get the widget, which draws the resize/move frame.\n     *\n     * @return {qx.ui.core.Widget} The resize frame\n     */\n    __getMoveFrame : function()\n    {\n      var frame = this.__moveFrame;\n      if (!frame)\n      {\n        frame = this.__moveFrame = new qx.ui.core.Widget();\n        frame.setAppearance(\"move-frame\");\n        frame.exclude();\n\n        qx.core.Init.getApplication().getRoot().add(frame);\n      }\n\n      return frame;\n    },\n\n\n    /**\n     * Creates, shows and syncs the frame with the widget.\n     */\n    __showMoveFrame : function()\n    {\n      var location = this.getContentLocation();\n      var bounds = this.getBounds();\n      var frame = this.__getMoveFrame();\n      frame.setUserBounds(location.left, location.top, bounds.width, bounds.height);\n      frame.show();\n      frame.setZIndex(this.getZIndex()+1);\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      MOVE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Computes the new drag coordinates\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     * @return {Map} A map with the computed drag coordinates\n     */\n    __computeMoveCoordinates : function(e)\n    {\n      var range = this.__dragRange;\n      var pointerLeft = Math.max(range.left, Math.min(range.right, e.getDocumentLeft()));\n      var pointerTop = Math.max(range.top, Math.min(range.bottom, e.getDocumentTop()));\n\n      var viewportLeft = this.__dragLeft + pointerLeft;\n      var viewportTop = this.__dragTop + pointerTop;\n\n      return {\n        viewportLeft : parseInt(viewportLeft, 10),\n        viewportTop : parseInt(viewportTop, 10),\n\n        parentLeft : parseInt(viewportLeft - this.__parentLeft, 10),\n        parentTop : parseInt(viewportTop - this.__parentTop, 10)\n      };\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      MOVE EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Roll handler which prevents the scrolling via tap & move on parent widgets\n     * during the move of the widget.\n     * @param e {qx.event.type.Roll} The roll event\n     */\n    _onMoveRoll : function(e) {\n      e.stop();\n    },\n\n\n    /**\n     * Enables the capturing of the caption bar and prepares the drag session and the\n     * appearance (translucent, frame or opaque) for the moving of the window.\n     *\n     * @param e {qx.event.type.Pointer} pointer down event\n     */\n    _onMovePointerDown : function(e)\n    {\n      if (!this.getMovable() || this.hasState(\"maximized\")) {\n        return;\n      }\n\n      this.addListener(\"roll\", this._onMoveRoll, this);\n\n      // Compute drag range\n      var parent = this.getLayoutParent();\n      var parentLocation = parent.getContentLocation();\n      var parentBounds = parent.getBounds();\n\n      // Added a blocker, this solves the issue described in [BUG #1462]\n      if (qx.Class.implementsInterface(parent, qx.ui.window.IDesktop)) {\n        if (!parent.isBlocked()) {\n          this.__oldBlockerColor = parent.getBlockerColor();\n          this.__oldBlockerOpacity = parent.getBlockerOpacity();\n          parent.setBlockerColor(null);\n          parent.setBlockerOpacity(1);\n\n          parent.blockContent(this.getZIndex() - 1);\n\n          this.__blockerAdded = true;\n        }\n      }\n\n      this.__dragRange =\n      {\n        left : parentLocation.left,\n        top : parentLocation.top,\n        right : parentLocation.left + parentBounds.width,\n        bottom : parentLocation.top + parentBounds.height\n      };\n\n      // Compute drag positions\n      var widgetLocation = this.getContentLocation();\n      this.__parentLeft = parentLocation.left;\n      this.__parentTop = parentLocation.top;\n\n      this.__dragLeft = widgetLocation.left - e.getDocumentLeft();\n      this.__dragTop = widgetLocation.top - e.getDocumentTop();\n\n      // Add state\n      this.addState(\"move\");\n\n      // Enable capturing\n      this.__moveHandle.capture();\n\n      // Enable drag frame\n      if (this.getUseMoveFrame()) {\n        this.__showMoveFrame();\n      }\n\n      // Stop event\n      e.stop();\n    },\n\n\n    /**\n     * Does the moving of the window by rendering the position\n     * of the window (or frame) at runtime using direct dom methods.\n     *\n     * @param e {qx.event.type.Pointer} pointer move event\n     */\n    _onMovePointerMove : function(e)\n    {\n      // Only react when dragging is active\n      if (!this.hasState(\"move\")) {\n        return;\n      }\n\n      // Apply new coordinates using DOM\n      var coords = this.__computeMoveCoordinates(e);\n      if (this.getUseMoveFrame()) {\n        this.__getMoveFrame().setDomPosition(coords.viewportLeft, coords.viewportTop);\n      } else {\n        var insets = this.getLayoutParent().getInsets();\n        this.setDomPosition(coords.parentLeft - (insets.left || 0),\n          coords.parentTop - (insets.top || 0));\n      }\n\n      e.stopPropagation();\n    },\n\n\n    /**\n     * Disables the capturing of the caption bar and moves the window\n     * to the last position of the drag session. Also restores the appearance\n     * of the window.\n     *\n     * @param e {qx.event.type.Pointer} pointer up event\n     */\n    _onMovePointerUp : function(e)\n    {\n      if (this.hasListener(\"roll\")) {\n        this.removeListener(\"roll\", this._onMoveRoll, this);\n      }\n\n      // Only react when dragging is active\n      if (!this.hasState(\"move\")) {\n        return;\n      }\n\n      // Remove drag state\n      this.removeState(\"move\");\n\n      // Removed blocker, this solves the issue described in [BUG #1462]\n      var parent = this.getLayoutParent();\n      if (qx.Class.implementsInterface(parent, qx.ui.window.IDesktop)) {\n        if (this.__blockerAdded) {\n          parent.unblock();\n\n          parent.setBlockerColor(this.__oldBlockerColor);\n          parent.setBlockerOpacity(this.__oldBlockerOpacity);\n          this.__oldBlockerColor = null;\n          this.__oldBlockerOpacity = 0;\n\n          this.__blockerAdded = false;\n        }\n      }\n\n      // Disable capturing\n      this.__moveHandle.releaseCapture();\n\n      // Apply them to the layout\n      var coords = this.__computeMoveCoordinates(e);\n      var insets = this.getLayoutParent().getInsets();\n      this.setLayoutProperties({\n        left: coords.parentLeft - (insets.left || 0),\n        top: coords.parentTop - (insets.top || 0)\n      });\n\n      // Hide frame afterwards\n      if (this.getUseMoveFrame()) {\n        this.__getMoveFrame().exclude();\n      }\n\n      e.stopPropagation();\n    },\n\n\n    /**\n     * Event listener for <code>losecapture</code> event.\n     *\n     * @param e {qx.event.type.Event} Lose capture event\n     */\n    __onMoveLoseCapture : function(e)\n    {\n      // Check for active move\n      if (!this.hasState(\"move\")) {\n        return;\n      }\n\n      // Remove drag state\n      this.removeState(\"move\");\n\n      // Hide frame afterwards\n      if (this.getUseMoveFrame()) {\n        this.__getMoveFrame().exclude();\n      }\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    this._disposeObjects(\"__moveFrame\", \"__moveHandle\");\n    this.__dragRange = null;\n  }\n});\n"
  ]
}