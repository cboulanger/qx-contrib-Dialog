{
  "className": "qx.ui.window.MDesktop",
  "packageName": "qx.ui.window",
  "name": "MDesktop",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 25,
        "column": 0
      },
      "end": {
        "line": 263,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nFabian Jakobs (fjakobs)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "This mixin implements the key methods of the {@link qx.ui.window.IDesktop}."
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "qx.ui.window.Window"
        },
        {
          "name": "@ignore",
          "body": "qx.ui.window.Window.*"
        }
      ]
    }
  },
  "type": "mixin",
  "properties": {
    "activeWindow": {
      "type": "property",
      "name": "activeWindow",
      "abstract": false,
      "mixin": true,
      "access": "public"
    }
  },
  "events": {
    "windowAdded": {
      "location": {
        "start": {
          "line": 54,
          "column": 4
        },
        "end": {
          "line": 54,
          "column": 37
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Fired when a window was added."
          }
        ]
      },
      "name": "windowAdded",
      "type": "qx.event.type.Data"
    },
    "windowRemoved": {
      "location": {
        "start": {
          "line": 59,
          "column": 4
        },
        "end": {
          "line": 59,
          "column": 39
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Fired when a window was removed."
          }
        ]
      },
      "name": "windowRemoved",
      "type": "qx.event.type.Data"
    }
  },
  "members": {
    "__windows": {
      "location": {
        "start": {
          "line": 72,
          "column": 4
        },
        "end": {
          "line": 72,
          "column": 20
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__manager": {
      "location": {
        "start": {
          "line": 73,
          "column": 4
        },
        "end": {
          "line": 73,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getWindowManager": {
      "location": {
        "start": {
          "line": 83,
          "column": 4
        },
        "end": {
          "line": 89,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the desktop's window manager. Each desktop must have a window manager.\nIf none is configured the default window manager {@link qx.ui.window.Window#DEFAULT_MANAGER_CLASS}\nis used."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.window.IWindowManager} The desktop's window manager",
            "type": "qx.ui.window.IWindowManager",
            "description": " The desktop's window manager"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "supportsMaximize": {
      "location": {
        "start": {
          "line": 98,
          "column": 4
        },
        "end": {
          "line": 100,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Whether the configured layout supports a maximized window\ne.g. is a Canvas."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the layout supports maximized windows",
            "type": "Boolean",
            "description": " Whether the layout supports maximized windows"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setWindowManager": {
      "location": {
        "start": {
          "line": 107,
          "column": 4
        },
        "end": {
          "line": 115,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the desktop's window manager"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "manager {qx.ui.window.IWindowManager} The window manager",
            "paramName": "manager",
            "description": " The window manager",
            "type": "qx.ui.window.IWindowManager"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_onChangeActive": {
      "location": {
        "start": {
          "line": 124,
          "column": 4
        },
        "end": {
          "line": 131,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Event handler. Called if one of the managed windows changes its active\nstate."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} the event object.",
            "paramName": "e",
            "description": " the event object.",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyActiveWindow": {
      "location": {
        "start": {
          "line": 135,
          "column": 4
        },
        "end": {
          "line": 138,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "activeWindow"
      ]
    },
    "_onChangeModal": {
      "location": {
        "start": {
          "line": 146,
          "column": 4
        },
        "end": {
          "line": 148,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Event handler. Called if one of the managed windows changes its modality"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} the event object.",
            "paramName": "e",
            "description": " the event object.",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onChangeVisibility": {
      "location": {
        "start": {
          "line": 155,
          "column": 4
        },
        "end": {
          "line": 157,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Event handler. Called if one of the managed windows changes its visibility\nstate."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_afterAddChild": {
      "location": {
        "start": {
          "line": 165,
          "column": 4
        },
        "end": {
          "line": 170,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Overrides the method {@link qx.ui.core.Widget#_afterAddChild}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "win {qx.ui.core.Widget} added widget",
            "paramName": "win",
            "description": " added widget",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_addWindow": {
      "location": {
        "start": {
          "line": 178,
          "column": 4
        },
        "end": {
          "line": 196,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Handles the case, when a window is added to the desktop."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "win {qx.ui.window.Window} Window, which has been added",
            "paramName": "win",
            "description": " Window, which has been added",
            "type": "qx.ui.window.Window"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_afterRemoveChild": {
      "location": {
        "start": {
          "line": 204,
          "column": 4
        },
        "end": {
          "line": 209,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Overrides the method {@link qx.ui.core.Widget#_afterRemoveChild}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "win {qx.ui.core.Widget} removed widget",
            "paramName": "win",
            "description": " removed widget",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_removeWindow": {
      "location": {
        "start": {
          "line": 217,
          "column": 4
        },
        "end": {
          "line": 231,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Handles the case, when a window is removed from the desktop."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "win {qx.ui.window.Window} Window, which has been removed",
            "paramName": "win",
            "description": " Window, which has been removed",
            "type": "qx.ui.window.Window"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getWindows": {
      "location": {
        "start": {
          "line": 239,
          "column": 4
        },
        "end": {
          "line": 245,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get a list of all windows added to the desktop (including hidden windows)"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.window.Window[]} Array of managed windows",
            "type": "qx.ui.window.Window[]",
            "description": " Array of managed windows"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getActiveWindow": {
      "type": "function",
      "name": "getActiveWindow",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>activeWindow</code>.\n\nFor further details take a look at the property definition: {@link #activeWindow}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.ui.window.Window",
            "desc": "Returns the value for activeWindow"
          }
        ]
      }
    },
    "setActiveWindow": {
      "type": "function",
      "name": "setActiveWindow",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>activeWindow</code>.\n\nFor further details take a look at the property definition: {@link #activeWindow}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.ui.window.Window",
            "paramName": "value",
            "desc": "Value for activeWindow"
          }
        ]
      }
    },
    "resetActiveWindow": {
      "type": "function",
      "name": "resetActiveWindow",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>activeWindow</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #activeWindow}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 258,
        "column": 2
      },
      "end": {
        "line": 262,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nDESTRUCTOR\n****************************************************************************"
        }
      ]
    }
  },
  "descendants": []
}