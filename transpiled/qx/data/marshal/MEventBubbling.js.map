{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/data/marshal/MEventBubbling.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "events",
    "members",
    "_applyEventPropagation",
    "value",
    "old",
    "name",
    "fireDataEvent",
    "item",
    "_registerEventChaining",
    "getUserData",
    "$$hash",
    "listeners",
    "i",
    "length",
    "removeListenerById",
    "setUserData",
    "core",
    "Object",
    "Class",
    "hasMixin",
    "constructor",
    "data",
    "marshal",
    "MEventBubbling",
    "listener",
    "lang",
    "Function",
    "bind",
    "__changePropertyListener",
    "id",
    "addListener",
    "push",
    "e",
    "getData",
    "hasInterface",
    "getTarget",
    "IListData",
    "indexOf",
    "dotIndex",
    "bracketIndex",
    "newName",
    "index",
    "substring",
    "rest",
    "parseInt"
  ],
  "mappings": "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",
  "file": "MEventBubbling.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Mixin used for the bubbling events. If you want to use this in your own model\n * classes, be sure that every property will call the\n * {@link #_applyEventPropagation} function on every change.\n */\nqx.Mixin.define(\"qx.data.marshal.MEventBubbling\",\n{\n\n  events :\n  {\n    /**\n     * The change event which will be fired on every change in the model no\n     * matter what property changes. This event bubbles so the root model will\n     * fire a change event on every change of its children properties too.\n     *\n     * Note that properties are required to call\n     * {@link #_applyEventPropagation} on apply for changes to be tracked as\n     * desired. It is already taken care of that properties created with the\n     * {@link qx.data.marshal.Json} marshaler call this method.\n     *\n     * The data will contain a map with the following four keys\n     *   <li>value: The new value of the property</li>\n     *   <li>old: The old value of the property.</li>\n     *   <li>name: The name of the property changed including its parent\n     *     properties separated by dots.</li>\n     *   <li>item: The item which has the changed property.</li>\n     * Due to that, the <code>getOldData</code> method will always return null\n     * because the old data is contained in the map.\n     */\n    \"changeBubble\": \"qx.event.type.Data\"\n  },\n\n\n  members :\n  {\n    /**\n     * Apply function for every property created with the\n     * {@link qx.data.marshal.Json} marshaler. It fires and\n     * {@link #changeBubble} event on every change. It also adds the chaining\n     * listener if possible which is necessary for the bubbling of the events.\n     *\n     * @param value {var} The new value of the property.\n     * @param old {var} The old value of the property.\n     * @param name {String} The name of the changed property.\n     */\n    _applyEventPropagation : function(value, old, name)\n    {\n      this.fireDataEvent(\"changeBubble\", {\n        value: value, name: name, old: old, item: this\n      });\n\n      this._registerEventChaining(value, old, name);\n    },\n\n\n    /**\n     * Registers for the given parameters the changeBubble listener, if\n     * possible. It also removes the old listener, if an old item with\n     * a changeBubble event is given.\n     *\n     * @param value {var} The new value of the property.\n     * @param old {var} The old value of the property.\n     * @param name {String} The name of the changed property.\n     */\n    _registerEventChaining : function(value, old, name)\n    {\n      // if an old value is given, remove the old listener if possible\n      if (old != null && old.getUserData && old.getUserData(\"idBubble-\" + this.$$hash) != null) {\n        var listeners = old.getUserData(\"idBubble-\" + this.$$hash);\n        for (var i = 0; i < listeners.length; i++) {\n          old.removeListenerById(listeners[i]);\n        }\n        old.setUserData(\"idBubble-\" + this.$$hash, null);\n      }\n\n      // if the child supports chaining\n      if ((value instanceof qx.core.Object)\n        && qx.Class.hasMixin(value.constructor, qx.data.marshal.MEventBubbling)\n      ) {\n        // create the listener\n        var listener = qx.lang.Function.bind(\n          this.__changePropertyListener, this, name\n        );\n        // add the listener\n        var id = value.addListener(\"changeBubble\", listener, this);\n        var listeners = value.getUserData(\"idBubble-\" + this.$$hash);\n        if (listeners == null)\n        {\n          listeners = [];\n          value.setUserData(\"idBubble-\" + this.$$hash, listeners);\n        }\n        listeners.push(id);\n      }\n    },\n\n\n    /**\n     * Listener responsible for formating the name and firing the change event\n     * for the changed property.\n     *\n     * @param name {String} The name of the former properties.\n     * @param e {qx.event.type.Data} The date event fired by the property\n     *   change.\n     */\n    __changePropertyListener : function(name, e)\n    {\n      var data = e.getData();\n      var value = data.value;\n      var old = data.old;\n\n      // if the target is an array\n      if (qx.Class.hasInterface(e.getTarget().constructor, qx.data.IListData)) {\n\n        if (data.name.indexOf) {\n          var dotIndex = data.name.indexOf(\".\") != -1 ? data.name.indexOf(\".\") : data.name.length;\n          var bracketIndex = data.name.indexOf(\"[\") != -1 ? data.name.indexOf(\"[\") : data.name.length;\n\n          // brackets in the first spot is ok [BUG #5985]\n          if (bracketIndex == 0) {\n            var newName = name + data.name;\n          } else if (dotIndex < bracketIndex) {\n            var index = data.name.substring(0, dotIndex);\n            var rest = data.name.substring(dotIndex + 1, data.name.length);\n            if (rest[0] != \"[\") {\n              rest = \".\" + rest;\n            }\n            var newName =  name + \"[\" + index + \"]\" + rest;\n          } else if (bracketIndex < dotIndex) {\n            var index = data.name.substring(0, bracketIndex);\n            var rest = data.name.substring(bracketIndex, data.name.length);\n            var newName =  name + \"[\" + index + \"]\" + rest;\n          } else {\n            var newName =  name + \"[\" + data.name + \"]\";\n          }\n        } else {\n          var newName =  name + \"[\" + data.name + \"]\";\n        }\n\n      // if the target is not an array\n      } else {\n        // special case for array as first element of the chain [BUG #5985]\n        if (parseInt(name) == name && name !== \"\") {\n          name = \"[\" + name + \"]\";\n        }\n        var newName =  name + \".\" + data.name;\n      }\n\n      this.fireDataEvent(\n        \"changeBubble\",\n        {\n          value: value,\n          name: newName,\n          old: old,\n          item: data.item || e.getTarget()\n        }\n      );\n    }\n  }\n});\n"
  ]
}