{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/data/store/Yql.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "data",
    "store",
    "Jsonp",
    "construct",
    "query",
    "delegate",
    "https",
    "prefix",
    "url",
    "encodeURIComponent",
    "Yql"
  ],
  "mappings": ";;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAyBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,mBAAhB,EACA;AACEC,YAASN,GAAGO,IAAH,CAAQC,KAAR,CAAcC,KADzB;;AAGE;;;;;;AAMAC,eAAY,mBAASC,KAAT,EAAgBC,QAAhB,EAA0BC,KAA1B,EACZ;AACE,UAAIC,SAASD,QAAQ,OAAR,GAAkB,MAA/B;AACA,UAAIE,MAAMD,SAAS,yCAAT,GACVE,mBAAmBL,KAAnB,CADU,GAEV,iCAFU,GAGV,sDAHA;AAIA,iDAAqBI,GAArB,EAA0BH,QAA1B,EAAoC,UAApC;AACD;AAjBH,GADA,C;AAzBAZ,KAAGO,IAAH,CAAQC,KAAR,CAAcS,GAAd,CAAkBd,aAAlB,GAAkCA,aAAlC",
  "file": "Yql.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * This store uses the {@link qx.data.store.Jsonp} store to query Yahoo's\n * YQL service. (http://developer.yahoo.com/yql/)\n *\n * If you want to test your queries, take a look at the YQL console:\n * http://developer.yahoo.com/yql/console/\n */\nqx.Class.define(\"qx.data.store.Yql\",\n{\n  extend : qx.data.store.Jsonp,\n\n  /**\n   * @param query {String} The query for YQL.\n   * @param delegate {Object?null} The delegate containing one of the methods\n   *   specified in {@link qx.data.store.IStoreDelegate}.\n   * @param https {Boolean?null} If https should be used.\n   */\n  construct : function(query, delegate, https)\n  {\n    var prefix = https ? \"https\" : \"http\";\n    var url = prefix + \"://query.yahooapis.com/v1/public/yql?q=\" +\n    encodeURIComponent(query) +\n    \"&format=json&diagnostics=false&\" +\n    \"env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys\";\n    this.base(arguments, url, delegate, \"callback\");\n  }\n});\n"
  ]
}