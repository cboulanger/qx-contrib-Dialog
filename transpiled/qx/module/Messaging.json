{
  "className": "qx.module.Messaging",
  "packageName": "qx.module",
  "name": "Messaging",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 31,
        "column": 0
      },
      "end": {
        "line": 91,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nMartin Wittemann (wittemann)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Define messages to react on certain channels.\n\nThe channel names will be used in the q.messaging.on method to define handlers which will\nbe called on certain channels and routes. The q.messaging.emit method can be used\nto execute a given route on a channel. q.messaging.onAny defines a handler on any channel."
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.event.Messaging#on"
        },
        {
          "name": "@require",
          "body": "qx.event.Messaging#onAny"
        },
        {
          "name": "@require",
          "body": "qx.event.Messaging#remove"
        },
        {
          "name": "@require",
          "body": "qx.event.Messaging#emit"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "on": {
      "location": {
        "start": {
          "line": 45,
          "column": 4
        },
        "end": {
          "line": 45,
          "column": 13
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Adds a route handler for the given channel. The route is called\nif the {@link #emit} method finds a match."
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, messaging.on}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "channel {String} The channel of the message.",
            "paramName": "channel",
            "description": " The channel of the message.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "type {String|RegExp} The type, used for checking if the executed path matches.",
            "paramName": "type",
            "description": " The type, used for checking if the executed path matches.",
            "type": [
              "String",
              "RegExp"
            ]
          },
          {
            "name": "@param",
            "body": "handler {Function} The handler to call if the route matches the executed path.",
            "paramName": "handler",
            "description": " The handler to call if the route matches the executed path.",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "scope {var ? null} The scope of the handler.",
            "paramName": "scope",
            "description": " The scope of the handler.",
            "optional": true,
            "defaultValue": "null",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The id of the route used to remove the route.",
            "type": "String",
            "description": " The id of the route used to remove the route."
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(channel, type, handler, scope)"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "onAny": {
      "location": {
        "start": {
          "line": 59,
          "column": 4
        },
        "end": {
          "line": 59,
          "column": 16
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Adds a handler for the \"any\" channel. The \"any\" channel is called\nbefore all other channels."
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, messaging.onAny}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "type {String|RegExp} The route, used for checking if the executed path matches",
            "paramName": "type",
            "description": " The route, used for checking if the executed path matches",
            "type": [
              "String",
              "RegExp"
            ]
          },
          {
            "name": "@param",
            "body": "handler {Function} The handler to call if the route matches the executed path",
            "paramName": "handler",
            "description": " The handler to call if the route matches the executed path",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "scope {var ? null} The scope of the handler.",
            "paramName": "scope",
            "description": " The scope of the handler.",
            "optional": true,
            "defaultValue": "null",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The id of the route used to remove the route.",
            "type": "String",
            "description": " The id of the route used to remove the route."
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(type, handler, scope)"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "remove": {
      "location": {
        "start": {
          "line": 69,
          "column": 4
        },
        "end": {
          "line": 69,
          "column": 17
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Removes a registered listener by the given id."
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, messaging.remove}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} The id of the registered listener.",
            "paramName": "id",
            "description": " The id of the registered listener.",
            "type": "String"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(id)"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "emit": {
      "location": {
        "start": {
          "line": 82,
          "column": 4
        },
        "end": {
          "line": 82,
          "column": 15
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sends a message on the given channel and informs all matching route handlers."
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb, messaging.emit}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "channel {String} The channel of the message.",
            "paramName": "channel",
            "description": " The channel of the message.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "path {String} The path to execute",
            "paramName": "path",
            "description": " The path to execute",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "params {Map} The given parameters that should be propagated",
            "paramName": "params",
            "description": " The given parameters that should be propagated",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "customData {var} The given custom data that should be propagated",
            "paramName": "customData",
            "description": " The given custom data that should be propagated",
            "type": "var"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(channel, path, params, customData)"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 86,
        "column": 2
      },
      "end": {
        "line": 90,
        "column": 3
      }
    }
  },
  "descendants": []
}