{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/module/event/Swipe.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "TYPES",
    "BIND_METHODS",
    "getStartTime",
    "_original",
    "swipe",
    "startTime",
    "getDuration",
    "duration",
    "getAxis",
    "axis",
    "getDirection",
    "direction",
    "getVelocity",
    "velocity",
    "getDistance",
    "distance",
    "normalize",
    "event",
    "element",
    "bindMethods",
    "module",
    "Swipe",
    "i",
    "l",
    "length",
    "bind",
    "defer",
    "qxWeb",
    "$registerEventNormalization"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EA2BAH,GAAGC,SAAH,CAAaG,MAAb,CAAoB,uBAApB,EAA6C;AAC3CC,aACA;AACE;;;AAGAC,aAAQ,CAAC,OAAD,CAJV;;AAOEC,oBAAe,CACb,cADa,EAEb,aAFa,EAGb,SAHa,EAIb,cAJa,EAKb,aALa,EAMb,aANa,CAPjB;;AAiBE;;;;;AAKAC,oBAAe,wBAAW;AACxB,eAAO,KAAKC,SAAL,CAAeC,KAAf,CAAqBC,SAA5B;AACD,OAxBH;;AA2BE;;;;;AAKAC,mBAAc,uBAAW;AACvB,eAAO,KAAKH,SAAL,CAAeC,KAAf,CAAqBG,QAA5B;AACD,OAlCH;;AAqCE;;;;;AAKAC,eAAU,mBAAW;AACnB,eAAO,KAAKL,SAAL,CAAeC,KAAf,CAAqBK,IAA5B;AACD,OA5CH;;AA+CE;;;;;;;AAOAC,oBAAe,wBAAW;AACxB,eAAO,KAAKP,SAAL,CAAeC,KAAf,CAAqBO,SAA5B;AACD,OAxDH;;AA2DE;;;;;AAKAC,mBAAc,uBAAW;AACvB,eAAO,KAAKT,SAAL,CAAeC,KAAf,CAAqBS,QAA5B;AACD,OAlEH;;AAqEE;;;;;AAKAC,mBAAc,uBAAW;AACvB,eAAO,KAAKX,SAAL,CAAeC,KAAf,CAAqBW,QAA5B;AACD,OA5EH;;AA+EE;;;;;;;;;AASAC,iBAAY,mBAASC,KAAT,EAAgBC,OAAhB,EACZ;AACE,YAAI,CAACD,KAAL,EAAY;AACV,iBAAOA,KAAP;AACD;AACD;AACA,YAAIE,cAAczB,GAAG0B,MAAH,CAAUH,KAAV,CAAgBI,KAAhB,CAAsBpB,YAAxC;AACA,aAAK,IAAIqB,IAAE,CAAN,EAASC,IAAEJ,YAAYK,MAA5B,EAAoCF,IAAEC,CAAtC,EAAyCD,GAAzC,EAA8C;AAC5C,cAAI,OAAOL,MAAME,YAAYG,CAAZ,CAAN,CAAP,IAAgC,UAApC,EAAgD;AAC9CL,kBAAME,YAAYG,CAAZ,CAAN,IAAwB5B,GAAG0B,MAAH,CAAUH,KAAV,CAAgBI,KAAhB,CAAsBF,YAAYG,CAAZ,CAAtB,EAAsCG,IAAtC,CAA2CR,KAA3C,CAAxB;AACD;AACF;;AAED,eAAOA,KAAP;AACD;AAtGH,KAF2C;;AA2G3CS,WAAQ,eAAS3B,OAAT,EAAkB;AACxB4B,YAAMC,2BAAN,CAAkClC,GAAG0B,MAAH,CAAUH,KAAV,CAAgBI,KAAhB,CAAsBrB,KAAxD,EAA+DD,QAAQiB,SAAvE;AACD;AA7G0C,GAA7C,C;AA3BAtB,KAAG0B,MAAH,CAAUH,KAAV,CAAgBI,KAAhB,CAAsBxB,aAAtB,GAAsCA,aAAtC",
  "file": "Swipe.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Normalization for the swipe gesture. This gesture is based on <a href=\"#Pointer\">Pointer events</a>\n * meaning that it's available on all devices, no matter which input device type is used (e.g. mouse or\n * touchscreen).\n *\n * @require(qx.module.Event)\n *\n * @group (Event_Normalization)\n */\nqx.Bootstrap.define(\"qx.module.event.Swipe\", {\n  statics :\n  {\n    /**\n     * List of event types to be normalized\n     */\n    TYPES : [\"swipe\"],\n\n\n    BIND_METHODS : [\n      \"getStartTime\",\n      \"getDuration\",\n      \"getAxis\",\n      \"getDirection\",\n      \"getVelocity\",\n      \"getDistance\"\n    ],\n\n\n    /**\n     * Returns the start time of the performed swipe.\n     *\n     * @return {Integer} the start time\n     */\n    getStartTime : function() {\n      return this._original.swipe.startTime;\n    },\n\n\n    /**\n     * Returns the duration the performed swipe took.\n     *\n     * @return {Integer} the duration\n     */\n    getDuration : function() {\n      return this._original.swipe.duration;\n    },\n\n\n    /**\n     * Returns whether the performed swipe was on the x or y axis.\n     *\n     * @return {String} \"x\"/\"y\" axis\n     */\n    getAxis : function() {\n      return this._original.swipe.axis;\n    },\n\n\n    /**\n     * Returns the direction of the performed swipe in reference to the axis.\n     * y = up / down\n     * x = left / right\n     *\n     * @return {String} the direction\n     */\n    getDirection : function() {\n      return this._original.swipe.direction;\n    },\n\n\n    /**\n     * Returns the velocity of the performed swipe.\n     *\n     * @return {Number} the velocity\n     */\n    getVelocity : function() {\n      return this._original.swipe.velocity;\n    },\n\n\n    /**\n     * Returns the distance of the performed swipe.\n     *\n     * @return {Integer} the distance\n     */\n    getDistance : function() {\n      return this._original.swipe.distance;\n    },\n\n\n    /**\n     * Manipulates the native event object, adding methods if they're not\n     * already present\n     *\n     * @param event {Event} Native event object\n     * @param element {Element} DOM element the listener was attached to\n     * @return {Event} Normalized event object\n     * @internal\n     */\n    normalize : function(event, element)\n    {\n      if (!event) {\n        return event;\n      }\n      // apply mouse event normalizations\n      var bindMethods = qx.module.event.Swipe.BIND_METHODS;\n      for (var i=0, l=bindMethods.length; i<l; i++) {\n        if (typeof event[bindMethods[i]] != \"function\") {\n          event[bindMethods[i]] = qx.module.event.Swipe[bindMethods[i]].bind(event);\n        }\n      }\n\n      return event;\n    }\n  },\n\n  defer : function(statics) {\n    qxWeb.$registerEventNormalization(qx.module.event.Swipe.TYPES, statics.normalize);\n  }\n});\n"
  ]
}