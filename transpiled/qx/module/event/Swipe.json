{
  "className": "qx.module.event.Swipe",
  "packageName": "qx.module.event",
  "name": "Swipe",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 28,
        "column": 0
      },
      "end": {
        "line": 138,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2014 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nDaniel Wagner (danielwagner)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Normalization for the swipe gesture. This gesture is based on <a href=\"#Pointer\">Pointer events</a>\nmeaning that it's available on all devices, no matter which input device type is used (e.g. mouse or\ntouchscreen)."
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.module.Event"
        }
      ],
      "@group": [
        {
          "name": "@group",
          "body": "Event_Normalization"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "TYPES": {
      "location": {
        "start": {
          "line": 34,
          "column": 4
        },
        "end": {
          "line": 34,
          "column": 21
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "List of event types to be normalized"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "BIND_METHODS": {
      "location": {
        "start": {
          "line": 37,
          "column": 4
        },
        "end": {
          "line": 44,
          "column": 5
        }
      },
      "type": "variable",
      "access": "public"
    },
    "getStartTime": {
      "location": {
        "start": {
          "line": 52,
          "column": 4
        },
        "end": {
          "line": 54,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the start time of the performed swipe."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the start time",
            "type": "Integer",
            "description": " the start time"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDuration": {
      "location": {
        "start": {
          "line": 62,
          "column": 4
        },
        "end": {
          "line": 64,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the duration the performed swipe took."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the duration",
            "type": "Integer",
            "description": " the duration"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAxis": {
      "location": {
        "start": {
          "line": 72,
          "column": 4
        },
        "end": {
          "line": 74,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns whether the performed swipe was on the x or y axis."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} \"x\"/\"y\" axis",
            "type": "String",
            "description": " \"x\"/\"y\" axis"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDirection": {
      "location": {
        "start": {
          "line": 84,
          "column": 4
        },
        "end": {
          "line": 86,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the direction of the performed swipe in reference to the axis.\ny = up / down\nx = left / right"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the direction",
            "type": "String",
            "description": " the direction"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getVelocity": {
      "location": {
        "start": {
          "line": 94,
          "column": 4
        },
        "end": {
          "line": 96,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the velocity of the performed swipe."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} the velocity",
            "type": "Number",
            "description": " the velocity"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDistance": {
      "location": {
        "start": {
          "line": 104,
          "column": 4
        },
        "end": {
          "line": 106,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the distance of the performed swipe."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the distance",
            "type": "Integer",
            "description": " the distance"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "normalize": {
      "location": {
        "start": {
          "line": 118,
          "column": 4
        },
        "end": {
          "line": 132,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Manipulates the native event object, adding methods if they're not\nalready present"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {Event} Native event object",
            "paramName": "event",
            "description": " Native event object",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "element {Element} DOM element the listener was attached to",
            "paramName": "element",
            "description": " DOM element the listener was attached to",
            "type": "Element"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Event} Normalized event object",
            "type": "Event",
            "description": " Normalized event object"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 135,
        "column": 2
      },
      "end": {
        "line": 137,
        "column": 3
      }
    }
  },
  "descendants": []
}