{
  "className": "qx.module.Manipulating",
  "packageName": "qx.module",
  "name": "Manipulating",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0
      },
      "end": {
        "line": 587,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2011-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nMartin Wittemann (wittemann)\nDaniel Wagner (danielwagner)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "DOM manipulation module"
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "qx.bom.element, qx.bom.element.AnimationJs"
        }
      ],
      "@group": [
        {
          "name": "@group",
          "body": "Core"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "_animationDescription": {
      "location": {
        "start": {
          "line": 30,
          "column": 4
        },
        "end": {
          "line": 40,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Default animation descriptions for animated scrolling *"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "__animateScroll": {
      "location": {
        "start": {
          "line": 52,
          "column": 4
        },
        "end": {
          "line": 57,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Performs animated scrolling"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "property {String} Element property to animate: <code>scrollLeft</code>\nor <code>scrollTop</code>",
            "paramName": "property",
            "description": " Element property to animate: <code>scrollLeft</code>\nor <code>scrollTop</code>",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "value {Number} Final scroll position",
            "paramName": "value",
            "description": " Final scroll position",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "duration {Number} The animation's duration in ms",
            "paramName": "duration",
            "description": " The animation's duration in ms",
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{q} The collection for chaining.",
            "type": "q",
            "description": " The collection for chaining."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getCollectionFromArgument": {
      "location": {
        "start": {
          "line": 67,
          "column": 4
        },
        "end": {
          "line": 86,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Creates a new collection from the given argument"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "arg {var} Selector expression, HTML string, DOM element or list of\nDOM elements",
            "paramName": "arg",
            "description": " Selector expression, HTML string, DOM element or list of\nDOM elements",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} Collection",
            "type": "qxWeb",
            "description": " Collection"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getInnermostElement": {
      "location": {
        "start": {
          "line": 97,
          "column": 4
        },
        "end": {
          "line": 108,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the innermost element of a DOM tree as determined by a simple\ndepth-first search."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} Root element",
            "paramName": "element",
            "description": " Root element",
            "type": "Element"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element} innermost element",
            "type": "Element",
            "description": " innermost element"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getElementArray": {
      "location": {
        "start": {
          "line": 119,
          "column": 4
        },
        "end": {
          "line": 129,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns an array from a selector expression or a single element"
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "arg {String|Element} Selector expression or DOM element",
            "paramName": "arg",
            "description": " Selector expression or DOM element",
            "type": [
              "String",
              "Element"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element[]} Array of elements",
            "type": "Element[]",
            "description": " Array of elements"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "create": {
      "location": {
        "start": {
          "line": 149,
          "column": 4
        },
        "end": {
          "line": 151,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Creates a new collection from the given argument. This can either be an\nHTML string, a single DOM element or an array of elements\n\nWhen no <code>context</code> is given the global document is used to\ncreate new DOM elements.\n\n<strong>Note:</strong> When a complex HTML string is provided the <code>innerHTML</code>\nmechanism of the browser is used. Some browsers do filter out elements like <code>&lt;html&gt;</code>,\n<code>&lt;head&gt;</code> or <code>&lt;body&gt;</code>. The better approach is to create\na single element and the appending the child nodes."
          }
        ],
        "@attachStatic": [
          {
            "name": "@attachStatic",
            "body": "{qxWeb}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "html {String|Element[]} HTML string or DOM element(s)",
            "paramName": "html",
            "description": " HTML string or DOM element(s)",
            "type": [
              "String",
              {
                "type": "Element",
                "dimensions": 2
              }
            ]
          },
          {
            "name": "@param",
            "body": "context {Document?document} Context in which the elements should be created",
            "paramName": "context",
            "description": " Context in which the elements should be created",
            "optional": true,
            "defaultValue": "document",
            "type": "Document"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} Collection of elements",
            "type": "qxWeb",
            "description": " Collection of elements"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "members": {
    "clone": {
      "location": {
        "start": {
          "line": 165,
          "column": 4
        },
        "end": {
          "line": 178,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Clones the items in the current collection and returns them in a new set.\nEvent listeners can also be cloned."
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "events {Boolean} clone event listeners. Default: <code>false</code>",
            "paramName": "events",
            "description": " clone event listeners. Default: <code>false</code>",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} New collection with clones",
            "type": "qxWeb",
            "description": " New collection with clones"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "append": {
      "location": {
        "start": {
          "line": 190,
          "column": 4
        },
        "end": {
          "line": 207,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Appends content to each element in the current set. Accepts an HTML string,\na single DOM element or an array of elements"
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "html {String|Element[]|qxWeb} HTML string or DOM element(s) to append",
            "paramName": "html",
            "description": " HTML string or DOM element(s) to append",
            "type": [
              "String",
              {
                "type": "Element",
                "dimensions": 2
              },
              "qxWeb"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining",
            "type": "qxWeb",
            "description": " The collection for chaining"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "appendTo": {
      "location": {
        "start": {
          "line": 220,
          "column": 4
        },
        "end": {
          "line": 236,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Appends all items in the collection to the specified parents. If multiple\nparents are given, the items will be moved to the first parent, while\nclones of the items will be appended to subsequent parents."
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "parent {String|Element[]|qxWeb} Parent selector expression or list of\nparent elements",
            "paramName": "parent",
            "description": " Parent selector expression or list of\nparent elements",
            "type": [
              "String",
              {
                "type": "Element",
                "dimensions": 2
              },
              "qxWeb"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining",
            "type": "qxWeb",
            "description": " The collection for chaining"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "insertBefore": {
      "location": {
        "start": {
          "line": 249,
          "column": 4
        },
        "end": {
          "line": 266,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Inserts the current collection before each target item. The collection\nitems are moved before the first target. For subsequent targets,\nclones of the collection items are created and inserted."
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "target {String|Element|Element[]|qxWeb} Selector expression, DOM element,\nArray of DOM elements or collection",
            "paramName": "target",
            "description": " Selector expression, DOM element,\nArray of DOM elements or collection",
            "type": [
              "String",
              "Element",
              {
                "type": "Element",
                "dimensions": 2
              },
              "qxWeb"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining",
            "type": "qxWeb",
            "description": " The collection for chaining"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "insertAfter": {
      "location": {
        "start": {
          "line": 280,
          "column": 4
        },
        "end": {
          "line": 300,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Inserts the current collection after each target item. The collection\nitems are moved after the first target. For subsequent targets,\nclones of the collection items are created and inserted."
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "target {String|Element|Element[]|qxWeb} Selector expression, DOM element,\nArray of DOM elements or collection",
            "paramName": "target",
            "description": " Selector expression, DOM element,\nArray of DOM elements or collection",
            "type": [
              "String",
              "Element",
              {
                "type": "Element",
                "dimensions": 2
              },
              "qxWeb"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining",
            "type": "qxWeb",
            "description": " The collection for chaining"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "wrap": {
      "location": {
        "start": {
          "line": 313,
          "column": 4
        },
        "end": {
          "line": 328,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Wraps each element in the collection in a copy of an HTML structure.\nElements will be appended to the deepest nested element in the structure\nas determined by a depth-first search."
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "wrapper {String|Element|Element[]|qxWeb} Selector expression, HTML string, DOM element or\nlist of DOM elements",
            "paramName": "wrapper",
            "description": " Selector expression, HTML string, DOM element or\nlist of DOM elements",
            "type": [
              "String",
              "Element",
              {
                "type": "Element",
                "dimensions": 2
              },
              "qxWeb"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining",
            "type": "qxWeb",
            "description": " The collection for chaining"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "remove": {
      "location": {
        "start": {
          "line": 337,
          "column": 4
        },
        "end": {
          "line": 342,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Removes each element in the current collection from the DOM"
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining",
            "type": "qxWeb",
            "description": " The collection for chaining"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "empty": {
      "location": {
        "start": {
          "line": 351,
          "column": 4
        },
        "end": {
          "line": 360,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Removes all content from the elements in the collection"
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining",
            "type": "qxWeb",
            "description": " The collection for chaining"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "before": {
      "location": {
        "start": {
          "line": 373,
          "column": 4
        },
        "end": {
          "line": 394,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Inserts content before each element in the collection. This can either\nbe an HTML string, an array of HTML strings, a single DOM element or an\narray of elements."
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "content {String|String[]|Element|Element[]|qxWeb} HTML string(s),\nDOM element(s) or collection to insert",
            "paramName": "content",
            "description": " HTML string(s),\nDOM element(s) or collection to insert",
            "type": [
              "String",
              {
                "type": "String",
                "dimensions": 2
              },
              "Element",
              {
                "type": "Element",
                "dimensions": 2
              },
              "qxWeb"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining",
            "type": "qxWeb",
            "description": " The collection for chaining"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "after": {
      "location": {
        "start": {
          "line": 407,
          "column": 4
        },
        "end": {
          "line": 428,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Inserts content after each element in the collection. This can either\nbe an HTML string, an array of HTML strings, a single DOM element or an\narray of elements."
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "content {String|String[]|Element|Element[]|qxWeb} HTML string(s),\nDOM element(s) or collection to insert",
            "paramName": "content",
            "description": " HTML string(s),\nDOM element(s) or collection to insert",
            "type": [
              "String",
              {
                "type": "String",
                "dimensions": 2
              },
              "Element",
              {
                "type": "Element",
                "dimensions": 2
              },
              "qxWeb"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining",
            "type": "qxWeb",
            "description": " The collection for chaining"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getScrollLeft": {
      "location": {
        "start": {
          "line": 437,
          "column": 4
        },
        "end": {
          "line": 450,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the left scroll position of the first element in the collection."
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} Current left scroll position",
            "type": "Number",
            "description": " Current left scroll position"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getScrollTop": {
      "location": {
        "start": {
          "line": 459,
          "column": 4
        },
        "end": {
          "line": 472,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the top scroll position of the first element in the collection."
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} Current top scroll position",
            "type": "Number",
            "description": " Current top scroll position"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setScrollLeft": {
      "location": {
        "start": {
          "line": 483,
          "column": 4
        },
        "end": {
          "line": 508,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Scrolls the elements of the collection to the given coordinate."
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Number} Left scroll position",
            "paramName": "value",
            "description": " Left scroll position",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "duration {Number?} Optional: Duration in ms for animated scrolling",
            "paramName": "duration",
            "description": " Optional: Duration in ms for animated scrolling",
            "optional": true,
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining",
            "type": "qxWeb",
            "description": " The collection for chaining"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setScrollTop": {
      "location": {
        "start": {
          "line": 519,
          "column": 4
        },
        "end": {
          "line": 544,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Scrolls the elements of the collection to the given coordinate."
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Number} Top scroll position",
            "paramName": "value",
            "description": " Top scroll position",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "duration {Number?} Optional: Duration in ms for animated scrolling",
            "paramName": "duration",
            "description": " Optional: Duration in ms for animated scrolling",
            "optional": true,
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining",
            "type": "qxWeb",
            "description": " The collection for chaining"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "focus": {
      "location": {
        "start": {
          "line": 553,
          "column": 4
        },
        "end": {
          "line": 561,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Focuses the first element in the collection"
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining",
            "type": "qxWeb",
            "description": " The collection for chaining"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "blur": {
      "location": {
        "start": {
          "line": 570,
          "column": 4
        },
        "end": {
          "line": 580,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Blurs each element in the collection"
          }
        ],
        "@attach": [
          {
            "name": "@attach",
            "body": "{qxWeb}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxWeb} The collection for chaining",
            "type": "qxWeb",
            "description": " The collection for chaining"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 584,
        "column": 2
      },
      "end": {
        "line": 586,
        "column": 3
      }
    }
  },
  "descendants": []
}