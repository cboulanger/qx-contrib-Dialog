{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/module/Placeholder.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "PLACEHOLDER_NAME",
    "update",
    "qxWeb",
    "env",
    "get",
    "updatePlaceholder",
    "__syncStyles",
    "item",
    "placeholder",
    "getAttribute",
    "placeholderEl",
    "getProperty",
    "module",
    "Placeholder",
    "zIndex",
    "getStyle",
    "paddingHor",
    "parseInt",
    "paddingVer",
    "setHtml",
    "setStyles",
    "display",
    "getValue",
    "textAlign",
    "width",
    "getWidth",
    "height",
    "getHeight",
    "left",
    "getPosition",
    "top",
    "fontFamily",
    "fontStyle",
    "fontVariant",
    "fontWeight",
    "fontSize",
    "paddingTop",
    "paddingRight",
    "paddingBottom",
    "paddingLeft",
    "__createPlaceholderElement",
    "create",
    "position",
    "color",
    "overflow",
    "pointerEvents",
    "setProperty",
    "on",
    "el",
    "setStyle",
    "bind",
    "focus",
    "members",
    "i",
    "length",
    "tagName",
    "itemInBody",
    "isRendered",
    "placeholderElInBody",
    "before",
    "remove",
    "defer",
    "$attachAll"
  ],
  "mappings": "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",
  "file": "Placeholder.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * The module supplies a fallback implementation for placeholders, which is\n * used on input and textarea elements. If the browser supports native placeholders\n * the API silently ignores all calls. If not, an element will be created for every\n * given input element and acts as placeholder. Most modern browsers support\n * placeholders which makes the fallback only relevant for IE < 10 and FF < 4.\n *\n *  * <a href=\"http://dev.w3.org/html5/spec/single-page.html#the-placeholder-attribute\">HTML Spec</a>\n *\n *  * <a href=\"http://caniuse.com/#feat=input-placeholder\">Browser Support</a>\n *\n * @require(qx.module.Manipulating)\n * @require(qx.module.Css)\n * @require(qx.module.Attribute)\n * @require(qx.module.Event)\n * @require(qx.module.Environment)\n * @require(qx.module.Polyfill)\n * @require(qx.module.Traversing)\n */\nqx.Bootstrap.define(\"qx.module.Placeholder\", {\n  statics :\n  {\n    /**\n     * String holding the property name which holds the placeholder\n     * element for each input.\n     */\n    PLACEHOLDER_NAME : \"$qx_placeholder\",\n\n\n    /**\n     * Queries for all input and textarea elements on the page and updates\n     * their placeholder.\n     * @attachStatic{qxWeb, placeholder.update}\n     */\n    update : function() {\n      // ignore if native placeholder are supported\n      if (!qxWeb.env.get(\"css.placeholder\")) {\n        qxWeb(\"input[placeholder], textarea[placeholder]\").updatePlaceholder();\n      }\n    },\n\n\n    /**\n     * Internal helper method to update the styles for a given input element.\n     * @param item {qxWeb} The input element to update.\n     */\n    __syncStyles : function(item) {\n      var placeholder = item.getAttribute(\"placeholder\");\n      var placeholderEl = item.getProperty(qx.module.Placeholder.PLACEHOLDER_NAME);\n\n      var zIndex= item.getStyle(\"z-index\");\n\n      var paddingHor = parseInt(item.getStyle(\"padding-left\")) + 2 * parseInt(item.getStyle(\"padding-right\"));\n      var paddingVer = parseInt(item.getStyle(\"padding-top\")) + 2 * parseInt(item.getStyle(\"padding-bottom\"));\n\n      placeholderEl.setHtml(placeholder).setStyles({\n        display : item.getValue() == \"\" ? \"inline\" : \"none\",\n        zIndex : zIndex == \"auto\" ? 1 : zIndex + 1,\n        textAlign: item.getStyle(\"text-align\"),\n        width: (item.getWidth() - paddingHor - 4) + \"px\",\n        height: (item.getHeight() - paddingVer - 4) + \"px\",\n        left: item.getPosition().left + \"px\",\n        top: item.getPosition().top + \"px\",\n        fontFamily : item.getStyle(\"font-family\"),\n        fontStyle : item.getStyle(\"font-style\"),\n        fontVariant : item.getStyle(\"font-variant\"),\n        fontWeight : item.getStyle(\"font-weight\"),\n        fontSize : item.getStyle(\"font-size\"),\n        paddingTop : (parseInt(item.getStyle(\"padding-top\")) + 2) + \"px\",\n        paddingRight : (parseInt(item.getStyle(\"padding-right\")) + 2) + \"px\",\n        paddingBottom : (parseInt(item.getStyle(\"padding-bottom\")) + 2) + \"px\",\n        paddingLeft : (parseInt(item.getStyle(\"padding-left\")) + 2) + \"px\"\n      });\n    },\n\n\n    /**\n     * Creates a placeholder element based on the given input element.\n     * @param item {qxWeb} The input element.\n     * @return {qxWeb} The placeholder element.\n     */\n    __createPlaceholderElement : function(item) {\n      // create the label with initial styles\n      var placeholderEl = qxWeb.create(\"<label>\").setStyles({\n        position: \"absolute\",\n        color: \"#989898\",\n        overflow: \"hidden\",\n        pointerEvents : \"none\"\n      });\n      // store the label at the input field\n      item.setProperty(qx.module.Placeholder.PLACEHOLDER_NAME, placeholderEl);\n\n      // update the placeholders visibility on keyUp\n      item.on(\"keyup\", function(item) {\n        var el = item.getProperty(qx.module.Placeholder.PLACEHOLDER_NAME);\n        el.setStyle(\"display\", item.getValue() == \"\" ? \"inline\" : \"none\");\n      }.bind(this, item));\n\n      // for browsers not supporting pointer events\n      if (!qxWeb.env.get(\"css.pointerevents\")) {\n        placeholderEl.setStyle(\"cursor\", \"text\").on(\"tap\", function(item) {\n          item.focus();\n        }.bind(this, item));\n      }\n      return placeholderEl;\n    }\n  },\n\n  members :\n  {\n\n    /**\n     * Updates the placeholders for input's and textarea's in the collection.\n     * This includes positioning, styles and DOM positioning.\n     * In case the browser supports native placeholders, this methods simply\n     * does nothing.\n     *\n     * @attach {qxWeb}\n     * @return {qxWeb} The collection for chaining\n     */\n    updatePlaceholder : function() {\n      // ignore everything if native placeholder are supported\n      if (!qxWeb.env.get(\"css.placeholder\")) {\n        for (var i=0; i < this.length; i++) {\n          var item = qxWeb(this[i]);\n\n          // ignore all not fitting items in the collection\n          var placeholder = item.getAttribute(\"placeholder\");\n          var tagName = item.getProperty(\"tagName\");\n          if (!placeholder || (tagName != \"TEXTAREA\"&& tagName != \"INPUT\")) {\n            continue;\n          }\n\n          // create the element if necessary\n          var placeholderEl = item.getProperty(qx.module.Placeholder.PLACEHOLDER_NAME);\n          if (!placeholderEl) {\n            placeholderEl = qx.module.Placeholder.__createPlaceholderElement(item);\n          }\n\n          // remove and add handling\n          var itemInBody = item.isRendered();\n          var placeholderElInBody = placeholderEl.isRendered();\n          if (itemInBody && !placeholderElInBody) {\n            item.before(placeholderEl);\n          } else if (!itemInBody && placeholderElInBody) {\n            placeholderEl.remove();\n            return this;\n          }\n\n          qx.module.Placeholder.__syncStyles(item);\n        };\n      }\n      return this;\n    }\n  },\n\n\n  defer : function(statics) {\n    qxWeb.$attachAll(this, \"placeholder\");\n  }\n});\n"
  ]
}