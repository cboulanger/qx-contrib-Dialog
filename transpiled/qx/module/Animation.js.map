{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/module/Animation.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "events",
    "undefined",
    "statics",
    "_fadeOut",
    "duration",
    "timing",
    "keep",
    "keyFrames",
    "opacity",
    "display",
    "_fadeIn",
    "_animate",
    "desc",
    "reverse",
    "_forEachElement",
    "el",
    "i",
    "$$animation",
    "stop",
    "handle",
    "bom",
    "element",
    "Animation",
    "animateReverse",
    "animate",
    "self",
    "on",
    "emit",
    "length",
    "members",
    "getAnimationHandles",
    "animationHandles",
    "module",
    "bind",
    "play",
    "pause",
    "isPlaying",
    "isEnded",
    "fadeIn",
    "setStyle",
    "fadeOut",
    "defer",
    "qxWeb",
    "$attachAll",
    "env",
    "get"
  ],
  "mappings": "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",
  "file": "Animation.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * Cross browser animation layer. It uses feature detection to check if CSS\n * animations are available and ready to use. If not, a JavaScript-based\n * fallback will be used.\n *\n * @require(qx.module.Css)\n * @require(qx.module.Event)\n * @require(qx.module.Environment)\n */\nqx.Bootstrap.define(\"qx.module.Animation\", {\n  events : {\n    /** Fired when an animation starts. */\n    \"animationStart\" : undefined,\n\n    /** Fired when an animation has ended one iteration. */\n    \"animationIteration\" : undefined,\n\n    /** Fired when an animation has ended. */\n    \"animationEnd\" : undefined\n  },\n\n  statics :\n  {\n    /**\n     * Animation description used in {@link #fadeOut}.\n     */\n    _fadeOut : {duration: 700, timing: \"ease-out\", keep: 100, keyFrames : {\n      0: {opacity: 1},\n      100: {opacity: 0, display: \"none\"}\n    }},\n\n\n    /**\n     * Animation description used in {@link #fadeIn}.\n     */\n    _fadeIn : {duration: 700, timing: \"ease-in\", keep: 100, keyFrames : {\n      0: {opacity: 0},\n      100: {opacity: 1}\n    }},\n\n\n    /**\n     * Animation execute either regular or reversed direction.\n     * @param desc {Map} The animation\"s description.\n     * @param duration {Number?} The duration in milliseconds of the animation,\n     *   which will override the duration given in the description.\n     * @param reverse {Boolean} <code>true</code>, if the animation should be reversed\n     */\n    _animate : function(desc, duration, reverse) {\n      this._forEachElement(function(el, i) {\n        // stop all running animations\n        if (el.$$animation) {\n          el.$$animation.stop();\n        }\n\n        var handle;\n        if (reverse) {\n          handle = qx.bom.element.Animation.animateReverse(el, desc, duration);\n        } else {\n          handle = qx.bom.element.Animation.animate(el, desc, duration);\n        }\n\n        var self = this;\n        // only register for the first element\n        if (i == 0) {\n          handle.on(\"start\", function() {\n            self.emit(\"animationStart\");\n          }, handle);\n\n          handle.on(\"iteration\", function() {\n            self.emit(\"animationIteration\");\n          }, handle);\n        }\n\n        handle.on(\"end\", function() {\n          for (var i=0; i < self.length; i++) {\n            if (self[i].$$animation) {\n              return;\n            }\n          }\n          self.emit(\"animationEnd\");\n        }, el);\n      });\n    }\n  },\n\n  members :\n  {\n    /**\n     * Returns the stored animation handles. The handles are only\n     * available while an animation is running.\n     *\n     * @internal\n     * @return {Array} An array of animation handles.\n     */\n    getAnimationHandles : function() {\n      var animationHandles = [];\n      for (var i=0; i < this.length; i++) {\n        animationHandles[i] = this[i].$$animation;\n      }\n      return animationHandles;\n    },\n\n\n    /**\n     * Starts the animation with the given description.\n     *\n     * *duration* is the time in milliseconds one animation cycle should take.\n     *\n     * *keep* is the key frame to apply at the end of the animation. (optional)\n     *\n     * *keyFrames* is a map of separate frames. Each frame is defined by a\n     *   number which is the percentage value of time in the animation. The value\n     *   is a map itself which holds css properties or transforms\n     *   (Transforms only for CSS Animations).\n     *\n     * *origin* maps to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin\">transform origin</a>\n     * (Only for CSS animations).\n     *\n     * *repeat* is the amount of time the animation should be run in\n     *   sequence. You can also use \"infinite\".\n     *\n     * *timing* takes one of these predefined values:\n     *   <code>ease</code> | <code>linear</code> | <code>ease-in</code>\n     *   | <code>ease-out</code> | <code>ease-in-out</code> |\n     *   <code>cubic-bezier(&lt;number&gt;, &lt;number&gt;, &lt;number&gt;, &lt;number&gt;)</code>\n     *   (cubic-bezier only available for CSS animations)\n     *\n     * *alternate* defines if every other animation should be run in reverse order.\n     *\n     * *delay* is the time in milliseconds the animation should wait before start.\n     *\n     * @attach {qxWeb}\n     * @param desc {Map} The animation\"s description.\n     * @param duration {Number?} The duration in milliseconds of the animation,\n     *   which will override the duration given in the description.\n     * @return {qxWeb} The collection for chaining.\n     */\n    animate : function(desc, duration) {\n      qx.module.Animation._animate.bind(this)(desc, duration, false);\n      return this;\n    },\n\n\n    /**\n     * Starts an animation in reversed order. For further details, take a look at\n     * the {@link #animate} method.\n     * @attach {qxWeb}\n     * @param desc {Map} The animation\"s description.\n     * @param duration {Number?} The duration in milliseconds of the animation,\n     *   which will override the duration given in the description.\n     * @return {qxWeb} The collection for chaining.\n     */\n    animateReverse : function(desc, duration) {\n      qx.module.Animation._animate.bind(this)(desc, duration, true);\n      return this;\n    },\n\n\n    /**\n     * Manipulates the play state of the animation.\n     * This can be used to continue an animation when paused.\n     * @attach {qxWeb}\n     * @return {qxWeb} The collection for chaining.\n     */\n    play : function() {\n      for (var i=0; i < this.length; i++) {\n        var handle = this[i].$$animation;\n        if (handle) {\n          handle.play();\n        }\n      }\n      return this;\n    },\n\n\n    /**\n     * Manipulates the play state of the animation.\n     * This can be used to pause an animation when running.\n     * @attach {qxWeb}\n     * @return {qxWeb} The collection for chaining.\n     */\n    pause : function() {\n      for (var i=0; i < this.length; i++) {\n        var handle = this[i].$$animation;\n        if (handle) {\n          handle.pause();\n        }\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Stops a running animation.\n     * @attach {qxWeb}\n     * @return {qxWeb} The collection for chaining.\n     */\n    stop : function() {\n      for (var i=0; i < this.length; i++) {\n        var handle = this[i].$$animation;\n        if (handle) {\n          handle.stop();\n        }\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Returns whether an animation is running or not.\n     * @attach {qxWeb}\n     * @return {Boolean} <code>true</code>, if an animation is running.\n     */\n    isPlaying : function() {\n      for (var i=0; i < this.length; i++) {\n        var handle = this[i].$$animation;\n        if (handle && handle.isPlaying()) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Returns whether an animation has ended or not.\n     * @attach {qxWeb}\n     * @return {Boolean} <code>true</code>, if an animation has ended.\n     */\n    isEnded : function() {\n      for (var i=0; i < this.length; i++) {\n        var handle = this[i].$$animation;\n        if (handle && !handle.isEnded()) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n\n    /**\n     * Fades in all elements in the collection.\n     * @attach {qxWeb}\n     * @param duration {Number?} The duration in milliseconds.\n     * @return {qxWeb} The collection for chaining.\n     */\n    fadeIn : function(duration) {\n      // remove \"display: none\" style\n      this.setStyle(\"display\", \"\");\n      return this.animate(qx.module.Animation._fadeIn, duration);\n    },\n\n\n    /**\n     * Fades out all elements in the collection.\n     * @attach {qxWeb}\n     * @param duration {Number?} The duration in milliseconds.\n     * @return {qxWeb} The collection for chaining.\n     */\n    fadeOut : function(duration) {\n      return this.animate(qx.module.Animation._fadeOut, duration);\n    }\n  },\n\n\n  defer : function(statics) {\n    qxWeb.$attachAll(this);\n\n\n    /**\n     * End value for opacity style. This value is modified for all browsers which are\n     * 'optimizing' this style value by not setting it (like IE9). This leads to a wrong\n     * end state for the 'fadeIn' animation if a opacity value is set by CSS.\n     */\n    if (qxWeb.env.get(\"browser.name\") === \"ie\" && qxWeb.env.get(\"browser.version\") <= 9) {\n      // has to be fixed using direct access since we cannot store the value as static member.\n      // The 'fadeIn' description is evaluated during class definition\n      statics._fadeIn.keyFrames[100].opacity = 0.99;\n    }\n  }\n});\n"
  ]
}