{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/type/BaseError.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "Error",
    "construct",
    "comment",
    "failMessage",
    "inst",
    "call",
    "stack",
    "stacktrace",
    "__comment",
    "message",
    "type",
    "BaseError",
    "DEFAULTMESSAGE",
    "statics",
    "members",
    "__sTrace",
    "getComment",
    "toString"
  ],
  "mappings": ";;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAyBAH,GAAGC,SAAH,CAAaG,MAAb,CAAoB,mBAApB,EACA;AACEC,YAASC,KADX;;AAIE;;;;;;AAMA;;;;AAIAC,eAAY,mBAASC,OAAT,EAAkBC,WAAlB,EACZ;AACE,UAAIC,OAAOJ,MAAMK,IAAN,CAAW,IAAX,EAAiBF,WAAjB,CAAX;AACA;AACA,UAAIC,KAAKE,KAAT,EAAgB;AACd,aAAKA,KAAL,GAAaF,KAAKE,KAAlB;AACD;AACD,UAAIF,KAAKG,UAAT,EAAqB;AACnB,aAAKA,UAAL,GAAkBH,KAAKG,UAAvB;AACD;;AAED,WAAKC,SAAL,GAAiBN,WAAW,EAA5B;AACA;AACA,WAAKO,OAAL,GAAeN,eAAeT,GAAGgB,IAAH,CAAQC,SAAR,CAAkBC,cAAhD;AACD,KA5BH;;AAgCE;;;;;AAKAC,aACA;AACED,sBAAiB;AADnB,KAtCF;;AA4CE;;;;;;AAMAE,aACA;AACEC,gBAAW,IADb;AAEEP,iBAAY,IAFd;;AAIE;AACAC,eAAU,IALZ;;AAQE;;;;;AAKAO,kBAAa,sBAAW;AACtB,eAAO,KAAKR,SAAZ;AACD,OAfH;;AAkBE;;;;;AAKAS,gBAAW,oBAAW;AACpB,eAAO,KAAKT,SAAL,IAAkB,KAAKC,OAAL,GAAe,OAAO,KAAKA,OAA3B,GAAqC,EAAvD,CAAP;AACD;AAzBH;AAnDF,GADA,C;AAzBAf,KAAGgB,IAAH,CAAQC,SAAR,CAAkBd,aAAlB,GAAkCA,aAAlC",
  "file": "BaseError.js",
  "sourcesContent": [
    " /* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * This class is the common super class for all error classes in qooxdoo.\n *\n * It has a comment and a fail message as members. The toString method returns\n * the comment and the fail message separated by a colon.\n */\nqx.Bootstrap.define(\"qx.type.BaseError\",\n{\n  extend : Error,\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param comment {String} Comment passed to the assertion call\n   * @param failMessage {String} Fail message provided by the assertion\n   */\n  construct : function(comment, failMessage)\n  {\n    var inst = Error.call(this, failMessage);\n    // map stack trace properties since they're not added by Error's constructor\n    if (inst.stack) {\n      this.stack = inst.stack;\n    }\n    if (inst.stacktrace) {\n      this.stacktrace = inst.stacktrace;\n    }\n\n    this.__comment = comment || \"\";\n    // opera 10 crashes if the message is an empty string!!!?!?!\n    this.message = failMessage || qx.type.BaseError.DEFAULTMESSAGE;\n  },\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n  statics :\n  {\n    DEFAULTMESSAGE : \"error\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __sTrace : null,\n    __comment : null,\n\n    /** @type {String} Fail message provided by the assertion */\n    message : null,\n\n\n    /**\n     * Comment passed to the assertion call\n     *\n     * @return {String} The comment passed to the assertion call\n     */\n    getComment : function() {\n      return this.__comment;\n    },\n\n\n    /**\n     * Get the error message\n     *\n     * @return {String} The error message\n     */\n    toString : function() {\n      return this.__comment + (this.message ? \": \" + this.message : \"\");\n    }\n  }\n});\n"
  ]
}