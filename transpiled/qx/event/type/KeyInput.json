{
  "className": "qx.event.type.KeyInput",
  "packageName": "qx.event.type",
  "name": "KeyInput",
  "superClass": "qx.event.type.Dom",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0
      },
      "end": {
        "line": 90,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nSebastian Werner (wpbasti)\nAndreas Ecker (ecker)\nFabian Jakobs (fjakobs)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Keyboard input event object.\n\nthe interface of this class is based on the DOM Level 3 keyboard event\ninterface: http://www.w3.org/TR/DOM-Level-3-Events/#events-keyboardevents"
        }
      ]
    }
  },
  "type": "class",
  "members": {
    "init": {
      "location": {
        "start": {
          "line": 50,
          "column": 4
        },
        "end": {
          "line": 57,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Initialize the fields of the event."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "domEvent {Event} DOM event",
            "paramName": "domEvent",
            "description": " DOM event",
            "type": "qx.event.type.Event"
          },
          {
            "name": "@param",
            "body": "target {Object} The event target",
            "paramName": "target",
            "description": " The event target",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "charCode {Integer} the character code",
            "paramName": "charCode",
            "description": " the character code",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.event.type.KeyInput} The initialized key event instance",
            "type": "qx.event.type.KeyInput",
            "description": " The initialized key event instance"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.type.Native",
      "appearsIn": [
        "qx.event.type.Native",
        "qx.event.type.Event"
      ]
    },
    "clone": {
      "location": {
        "start": {
          "line": 61,
          "column": 4
        },
        "end": {
          "line": 68,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "embryo {qx.event.type.Event?null} Optional event class, which will\nbe configured using the data of this event instance. The event must be\nan instance of this event class. If the value is <code>null</code>,\na new pooled instance is created.",
            "paramName": "embryo",
            "description": " Optional event class, which will\nbe configured using the data of this event instance. The event must be\nan instance of this event class. If the value is <code>null</code>,\na new pooled instance is created.",
            "optional": true,
            "defaultValue": "null",
            "type": "qx.event.type.Event"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.event.type.Event} a clone of this class.",
            "type": "qx.event.type.Event",
            "description": " a clone of this class."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.type.Native",
      "appearsIn": [
        "qx.event.type.Native",
        "qx.event.type.Event",
        "qx.core.Object"
      ]
    },
    "getCharCode": {
      "location": {
        "start": {
          "line": 76,
          "column": 4
        },
        "end": {
          "line": 78,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Unicode number of the pressed character."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} Unicode number of the pressed character",
            "type": "Integer",
            "description": " Unicode number of the pressed character"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getChar": {
      "location": {
        "start": {
          "line": 86,
          "column": 4
        },
        "end": {
          "line": 88,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the pressed character"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The character",
            "type": "String",
            "description": " The character"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "reset"
    }
  },
  "descendants": []
}