{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/event/type/Roll.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "event",
    "type",
    "Pointer",
    "members",
    "stop",
    "stopPropagation",
    "preventDefault",
    "_cloneNativeEvent",
    "nativeEvent",
    "clone",
    "delta",
    "momentum",
    "timeoutId",
    "getMomentum",
    "_native",
    "stopMomentum",
    "Registration",
    "getManager",
    "_originalTarget",
    "getHandler",
    "handler",
    "Gesture",
    "getDelta",
    "Roll"
  ],
  "mappings": ";;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAsBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,oBAAhB,EACA;AACIC,YAASN,GAAGO,KAAH,CAASC,IAAT,CAAcC,OAD3B;;AAIIC,aAAU;AACR;AACAC,YAAO,gBACP;AACE,aAAKC,eAAL;AACA,aAAKC,cAAL;AACD,OANO;;AASR;AACAC,yBAAoB,2BAASC,WAAT,EAAsBC,KAAtB,EACpB;AACE,YAAIA,uEAA6BD,WAA7B,EAA0CC,KAA1C,CAAJ;;AAEAA,cAAMC,KAAN,GAAcF,YAAYE,KAA1B;AACAD,cAAME,QAAN,GAAiBH,YAAYG,QAA7B;AACAF,cAAMG,SAAN,GAAkBJ,YAAYI,SAA9B;;AAEA,eAAOH,KAAP;AACD,OAnBO;;AAsBR;;;;AAIAI,mBAAc,uBAAW;AACvB,eAAO,KAAKC,OAAL,CAAaH,QAApB;AACD,OA5BO;;AA+BR;;;AAGAI,oBAAe,wBAAW;AACxB,YAAI,KAAKD,OAAL,CAAaF,SAAjB,EAA4B;AAC1BnB,aAAGO,KAAH,CAASgB,YAAT,CAAsBC,UAAtB,CAAiC,KAAKC,eAAtC,EACGC,UADH,CACc1B,GAAGO,KAAH,CAASoB,OAAT,CAAiBC,OAD/B,EAEGN,YAFH,CAEgB,KAAKD,OAAL,CAAaF,SAF7B;AAGD;AACF,OAxCO;;AA2CR;;;;;;;AAOAU,gBAAW,oBAAW;AACpB,eAAO,KAAKR,OAAL,CAAaJ,KAApB;AACD;AApDO;AAJd,GADA,C;AAtBAjB,KAAGO,KAAH,CAASC,IAAT,CAAcsB,IAAd,CAAmB3B,aAAnB,GAAmCA,aAAnC",
  "file": "Roll.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n\n/**\n * Roll event object.\n */\nqx.Class.define(\"qx.event.type.Roll\",\n{\n    extend : qx.event.type.Pointer,\n\n\n    members : {\n      // overridden\n      stop : function()\n      {\n        this.stopPropagation();\n        this.preventDefault();\n      },\n\n\n      // overridden\n      _cloneNativeEvent : function(nativeEvent, clone)\n      {\n        var clone = this.base(arguments, nativeEvent, clone);\n\n        clone.delta = nativeEvent.delta;\n        clone.momentum = nativeEvent.momentum;\n        clone.timeoutId = nativeEvent.timeoutId;\n\n        return clone;\n      },\n\n\n      /**\n       * Boolean flag to indicate if this event was triggered by a momentum.\n       * @return {Boolean} <code>true</code>, if the event is momentum based\n       */\n      getMomentum : function() {\n        return this._native.momentum;\n      },\n\n\n      /**\n       * Stops the momentum events.\n       */\n      stopMomentum : function() {\n        if (this._native.timeoutId) {\n          qx.event.Registration.getManager(this._originalTarget)\n            .getHandler(qx.event.handler.Gesture)\n            .stopMomentum(this._native.timeoutId);\n        }\n      },\n\n\n      /**\n       * Returns a map with the calculated delta coordinates and axis,\n       * relative to the last <code>roll</code> event.\n       *\n       * @return {Map} a map with contains the delta as <code>x</code> and\n       * <code>y</code>\n       */\n      getDelta : function() {\n        return this._native.delta;\n      }\n    }\n});\n"
  ]
}