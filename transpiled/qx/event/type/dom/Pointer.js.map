{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/event/type/dom/Pointer.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "event",
    "type",
    "dom",
    "Custom",
    "statics",
    "MOUSE_PROPERTIES",
    "POINTER_PROPERTIES",
    "pointerId",
    "width",
    "height",
    "pressure",
    "tiltX",
    "tiltY",
    "pointerType",
    "isPrimary",
    "READONLY_PROPERTIES",
    "BIND_METHODS",
    "getPointerType",
    "MSPOINTER_TYPE_MOUSE",
    "MSPOINTER_TYPE_PEN",
    "MSPOINTER_TYPE_TOUCH",
    "getViewportLeft",
    "clientX",
    "getViewportTop",
    "clientY",
    "getDocumentLeft",
    "pageX",
    "undefined",
    "win",
    "Node",
    "getWindow",
    "srcElement",
    "bom",
    "Viewport",
    "getScrollLeft",
    "getDocumentTop",
    "pageY",
    "getScrollTop",
    "getScreenLeft",
    "screenX",
    "getScreenTop",
    "screenY",
    "normalize",
    "bindMethods",
    "Pointer",
    "i",
    "l",
    "length",
    "bind",
    "construct",
    "domEvent",
    "customProps",
    "members",
    "_createEvent",
    "evt",
    "core",
    "Environment",
    "get",
    "window",
    "MouseEvent",
    "_type",
    "document",
    "createEvent",
    "createEventObject",
    "_initEvent",
    "_event",
    "properties",
    "Object",
    "keys",
    "concat",
    "forEach",
    "propName",
    "buttons",
    "which",
    "initMouseEvent",
    "bubbles",
    "cancelable",
    "view",
    "detail",
    "ctrlKey",
    "altKey",
    "shiftKey",
    "metaKey",
    "button",
    "relatedTarget",
    "initUIEvent",
    "prop",
    "indexOf",
    "ex",
    "defer",
    "push",
    "parseFloat"
  ],
  "mappings": "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",
  "file": "Pointer.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christopher Zuendorf (czuendorf)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Synthetic pointer event\n */\nqx.Bootstrap.define(\"qx.event.type.dom.Pointer\", {\n  extend: qx.event.type.dom.Custom,\n\n  statics : {\n\n    MOUSE_PROPERTIES : [\n      \"bubbles\",\n      \"cancelable\",\n      \"view\",\n      \"detail\",\n      \"screenX\",\n      \"screenY\",\n      \"clientX\",\n      \"clientY\",\n      \"pageX\",\n      \"pageY\",\n      \"ctrlKey\",\n      \"altKey\",\n      \"shiftKey\",\n      \"metaKey\",\n      \"button\",\n      \"which\",\n      \"relatedTarget\",\n      // IE8 properties:\n      \"fromElement\",\n      \"toElement\"\n    ],\n\n    POINTER_PROPERTIES : {\n      pointerId: 1,\n      width: 0,\n      height: 0,\n      pressure: 0.5,\n      tiltX: 0,\n      tiltY: 0,\n      pointerType: \"\",\n      isPrimary: false\n    },\n\n    READONLY_PROPERTIES : [],\n\n    BIND_METHODS : [\"getPointerType\", \"getViewportLeft\", \"getViewportTop\",\n      \"getDocumentLeft\", \"getDocumentTop\", \"getScreenLeft\", \"getScreenTop\"],\n\n    /**\n     * Returns the device type which the event triggered. This can be one\n     * of the following strings: <code>mouse</code>, <code>pen</code>\n     * or <code>touch</code>.\n     *\n     * @return {String} The type of the pointer.\n     */\n    getPointerType : function() {\n      if (typeof this.pointerType == \"string\") {\n        return this.pointerType;\n      }\n\n      if (typeof this.pointerType == \"number\") {\n        if (this.pointerType == this.MSPOINTER_TYPE_MOUSE) {\n          return \"mouse\";\n        }\n        if (this.pointerType == this.MSPOINTER_TYPE_PEN) {\n          return \"pen\";\n        }\n        if (this.pointerType == this.MSPOINTER_TYPE_TOUCH) {\n          return \"touch\";\n        }\n      }\n\n      return \"\";\n    },\n\n\n    /**\n     * Get the horizontal coordinate at which the event occurred relative\n     * to the viewport.\n     *\n     * @return {Number} The horizontal mouse position\n     */\n    getViewportLeft : function() {\n      return this.clientX;\n    },\n\n\n    /**\n     * Get the vertical coordinate at which the event occurred relative\n     * to the viewport.\n     *\n     * @return {Number} The vertical mouse position\n     * @signature function()\n     */\n    getViewportTop : function() {\n      return this.clientY;\n    },\n\n\n    /**\n     * Get the horizontal position at which the event occurred relative to the\n     * left of the document. This property takes into account any scrolling of\n     * the page.\n     *\n     * @return {Number} The horizontal mouse position in the document.\n     */\n    getDocumentLeft : function()\n    {\n      if (this.pageX !== undefined) {\n        return this.pageX;\n      } else {\n        var win = qx.dom.Node.getWindow(this.srcElement);\n        return this.clientX + qx.bom.Viewport.getScrollLeft(win);\n      }\n    },\n\n\n    /**\n     * Get the vertical position at which the event occurred relative to the\n     * top of the document. This property takes into account any scrolling of\n     * the page.\n     *\n     * @return {Number} The vertical mouse position in the document.\n     */\n    getDocumentTop : function()\n    {\n      if (this.pageY !== undefined) {\n        return this.pageY;\n      } else {\n        var win = qx.dom.Node.getWindow(this.srcElement);\n        return this.clientY + qx.bom.Viewport.getScrollTop(win);\n      }\n    },\n\n\n    /**\n     * Get the horizontal coordinate at which the event occurred relative to\n     * the origin of the screen coordinate system.\n     *\n     * Note: This value is usually not very useful unless you want to\n     * position a native popup window at this coordinate.\n     *\n     * @return {Number} The horizontal mouse position on the screen.\n     */\n    getScreenLeft : function() {\n      return this.screenX;\n    },\n\n\n    /**\n     * Get the vertical coordinate at which the event occurred relative to\n     * the origin of the screen coordinate system.\n     *\n     * Note: This value is usually not very useful unless you want to\n     * position a native popup window at this coordinate.\n     *\n     * @return {Number} The vertical mouse position on the screen.\n     */\n    getScreenTop : function() {\n      return this.screenY;\n    },\n\n\n    /**\n     * Manipulates the event object, adding methods if they're not\n     * already present\n     *\n     * @param event {Event} Native event object\n     */\n    normalize : function(event) {\n      var bindMethods = qx.event.type.dom.Pointer.BIND_METHODS;\n      for (var i=0, l=bindMethods.length; i<l; i++) {\n        if (typeof event[bindMethods[i]] != \"function\") {\n          event[bindMethods[i]] = qx.event.type.dom.Pointer[bindMethods[i]].bind(event);\n        }\n      }\n    }\n\n  },\n\n  construct : function(type, domEvent, customProps) {\n    return this.base(arguments, type, domEvent, customProps);\n  },\n\n  members : {\n\n    _createEvent : function() {\n      var evt;\n      if (qx.core.Environment.get(\"event.mouseevent\")) {\n        evt = new window.MouseEvent(this._type);\n      } else if (typeof document.createEvent == \"function\") {\n        /* In IE9, the pageX property of synthetic MouseEvents is always 0\n        and cannot be overridden, so we create a plain UIEvent and add\n        the mouse event properties ourselves. */\n        evt = document.createEvent(qx.core.Environment.get(\"event.mousecreateevent\"));\n      } else if (typeof document.createEventObject == \"object\") {\n        // IE8 doesn't support custom event types\n        evt = {};\n        evt.type = this._type;\n      }\n      return evt;\n    },\n\n\n    _initEvent : function(domEvent, customProps) {\n      customProps = customProps || {};\n      var evt = this._event;\n      var properties = {};\n\n      qx.event.type.dom.Pointer.normalize(domEvent);\n\n      Object.keys(qx.event.type.dom.Pointer.POINTER_PROPERTIES).concat(qx.event.type.dom.Pointer.MOUSE_PROPERTIES)\n      .forEach(function(propName) {\n        if (typeof customProps[propName] !== \"undefined\") {\n          properties[propName] = customProps[propName];\n        } else if (typeof domEvent[propName] !== \"undefined\") {\n          properties[propName] = domEvent[propName];\n        } else if (typeof qx.event.type.dom.Pointer.POINTER_PROPERTIES[propName] !== \"undefined\") {\n          properties[propName] = qx.event.type.dom.Pointer.POINTER_PROPERTIES[propName];\n        }\n      });\n\n      var buttons;\n      switch (domEvent.which) {\n        case 1:\n          buttons = 1;\n          break;\n        case 2:\n          buttons = 4;\n          break;\n        case 3:\n          buttons = 2;\n          break;\n        default:\n          buttons = 0;\n      }\n\n      if (buttons !== undefined) {\n        properties.buttons = buttons;\n        properties.pressure = buttons ? 0.5 : 0;\n      }\n\n      if (evt.initMouseEvent) {\n        evt.initMouseEvent(this._type, properties.bubbles, properties.cancelable, properties.view, properties.detail,\n          properties.screenX, properties.screenY, properties.clientX, properties.clientY, properties.ctrlKey,\n          properties.altKey, properties.shiftKey, properties.metaKey, properties.button, properties.relatedTarget);\n      }\n      else if (evt.initUIEvent) {\n        evt.initUIEvent(this._type,\n          properties.bubbles, properties.cancelable, properties.view, properties.detail);\n      }\n\n      for (var prop in properties) {\n        if (evt[prop] !== properties[prop] && qx.event.type.dom.Pointer.READONLY_PROPERTIES.indexOf(prop) === -1) {\n          try {\n            evt[prop] = properties[prop];\n          }catch(ex) {\n            // Nothing - cannot override properties in strict mode\n          }\n        }\n      }\n\n      // normalize Windows 8 pointer types\n      switch(evt.pointerType) {\n        case domEvent.MSPOINTER_TYPE_MOUSE:\n          evt.pointerType = \"mouse\";\n          break;\n        case domEvent.MSPOINTER_TYPE_PEN:\n          evt.pointerType = \"pen\";\n          break;\n        case domEvent.MSPOINTER_TYPE_TOUCH:\n          evt.pointerType = \"touch\";\n          break;\n      }\n\n      if (evt.pointerType == \"mouse\") {\n        evt.isPrimary = true;\n      }\n    }\n  },\n\n\n  defer: function(statics) {\n    if (qx.core.Environment.get(\"engine.name\") == \"gecko\") {\n      statics.READONLY_PROPERTIES.push(\"buttons\");\n    }\n    else if (qx.core.Environment.get(\"os.name\") == \"ios\" && parseFloat(qx.core.Environment.get(\"os.version\")) >= 8) {\n      statics.READONLY_PROPERTIES = statics.READONLY_PROPERTIES.concat(statics.MOUSE_PROPERTIES);\n    }\n  }\n});\n"
  ]
}