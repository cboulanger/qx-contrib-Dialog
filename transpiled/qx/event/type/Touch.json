{
  "className": "qx.event.type.Touch",
  "packageName": "qx.event.type",
  "name": "Touch",
  "superClass": "qx.event.type.Dom",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0
      },
      "end": {
        "line": 313,
        "column": 5
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nMartin Wittemann (martinwittemann)\nTino Butz (tbtz)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Touch event object.\n\nFor more information see:\nhttps://developer.apple.com/library/safari/#documentation/UserExperience/Reference/TouchEventClassReference/TouchEvent/TouchEvent.html"
        }
      ]
    }
  },
  "type": "class",
  "members": {
    "_cloneNativeEvent": {
      "location": {
        "start": {
          "line": 41,
          "column": 6
        },
        "end": {
          "line": 76,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "nativeEvent {Event} The native browser event",
            "paramName": "nativeEvent",
            "description": " The native browser event",
            "type": "qx.event.type.Event"
          },
          {
            "name": "@param",
            "body": "clone {Object} The initialized clone.",
            "paramName": "clone",
            "description": " The initialized clone.",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} The cloned event",
            "type": "Object",
            "description": " The cloned event"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.event.type.Dom",
      "appearsIn": [
        "qx.event.type.Dom",
        "qx.event.type.Native"
      ]
    },
    "stop": {
      "location": {
        "start": {
          "line": 80,
          "column": 6
        },
        "end": {
          "line": 82,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.event.type.Event",
      "appearsIn": [
        "qx.event.type.Event"
      ]
    },
    "getAllTouches": {
      "location": {
        "start": {
          "line": 93,
          "column": 6
        },
        "end": {
          "line": 95,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns an array of native Touch objects representing all current\ntouches on the document.\nReturns an empty array for the \"touchend\" event."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object[]} Array of touch objects. For more information see:\nhttps://developer.apple.com/library/safari/#documentation/UserExperience/Reference/TouchClassReference/Touch/Touch.html",
            "type": "Object[]",
            "description": " Array of touch objects. For more information see:\nhttps://developer.apple.com/library/safari/#documentation/UserExperience/Reference/TouchClassReference/Touch/Touch.html"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getTargetTouches": {
      "location": {
        "start": {
          "line": 106,
          "column": 6
        },
        "end": {
          "line": 108,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns an array of native Touch objects representing all touches\nassociated with the event target element.\nReturns an empty array for the \"touchend\" event."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object[]} Array of touch objects. For more information see:\nhttps://developer.apple.com/library/safari/#documentation/UserExperience/Reference/TouchClassReference/Touch/Touch.html",
            "type": "Object[]",
            "description": " Array of touch objects. For more information see:\nhttps://developer.apple.com/library/safari/#documentation/UserExperience/Reference/TouchClassReference/Touch/Touch.html"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getChangedTargetTouches": {
      "location": {
        "start": {
          "line": 125,
          "column": 6
        },
        "end": {
          "line": 127,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns an array of native Touch objects representing all touches of\nthe target element that changed in this event.\n\nOn the \"touchstart\" event the array contains all touches that were\nadded to the target element.\nOn the \"touchmove\" event the array contains all touches that were\nmoved on the target element.\nOn the \"touchend\" event the array contains all touches that used\nto be on the target element."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object[]} Array of touch objects. For more information see:\nhttps://developer.apple.com/library/safari/#documentation/UserExperience/Reference/TouchClassReference/Touch/Touch.html",
            "type": "Object[]",
            "description": " Array of touch objects. For more information see:\nhttps://developer.apple.com/library/safari/#documentation/UserExperience/Reference/TouchClassReference/Touch/Touch.html"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isMultiTouch": {
      "location": {
        "start": {
          "line": 136,
          "column": 6
        },
        "end": {
          "line": 138,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks whether more than one touch is associated with the event target\nelement."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Is multi-touch",
            "type": "Boolean",
            "description": " Is multi-touch"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getScale": {
      "location": {
        "start": {
          "line": 151,
          "column": 6
        },
        "end": {
          "line": 153,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the distance between two fingers since the start of the event.\nThe distance is a multiplier of the initial distance.\nInitial value: 1.0.\nGestures:\n< 1.0, pinch close / zoom out.\n> 1.0, pinch open / to zoom in."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Float} The scale distance between two fingers",
            "type": "Float",
            "description": " The scale distance between two fingers"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getRotation": {
      "location": {
        "start": {
          "line": 164,
          "column": 6
        },
        "end": {
          "line": 170,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the delta of the rotation since the start of the event, in degrees.\nInitial value is 0.0\nClockwise > 0\nCounter-clockwise < 0."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Float} The rotation delta",
            "type": "Float",
            "description": " The rotation delta"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDelta": {
      "location": {
        "start": {
          "line": 180,
          "column": 6
        },
        "end": {
          "line": 182,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns an array with the calculated delta coordinates of all active touches,\nrelative to the position on <code>touchstart</code> event."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} an array with objects for each active touch which contains the delta as <code>x</code> and\n<code>y</code>, the touch identifier as <code>identifier</code> and the movement axis as <code>axis</code>.",
            "type": "Array",
            "description": " an array with objects for each active touch which contains the delta as <code>x</code> and\n<code>y</code>, the touch identifier as <code>identifier</code> and the movement axis as <code>axis</code>."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDocumentLeft": {
      "location": {
        "start": {
          "line": 193,
          "column": 6
        },
        "end": {
          "line": 195,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the horizontal position at which the event occurred relative to the\nleft of the document. This property takes into account any scrolling of\nthe page."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touchIndex {Integer ? 0} The index of the Touch object",
            "paramName": "touchIndex",
            "description": " The index of the Touch object",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The horizontal position of the touch in the document.",
            "type": "Integer",
            "description": " The horizontal position of the touch in the document."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDocumentTop": {
      "location": {
        "start": {
          "line": 206,
          "column": 6
        },
        "end": {
          "line": 208,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the vertical position at which the event occurred relative to the\ntop of the document. This property takes into account any scrolling of\nthe page."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touchIndex {Integer ? 0} The index of the Touch object",
            "paramName": "touchIndex",
            "description": " The index of the Touch object",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The vertical position of the touch in the document.",
            "type": "Integer",
            "description": " The vertical position of the touch in the document."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getScreenLeft": {
      "location": {
        "start": {
          "line": 218,
          "column": 6
        },
        "end": {
          "line": 220,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the horizontal coordinate at which the event occurred relative to\nthe origin of the screen coordinate system."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touchIndex {Integer ? 0} The index of the Touch object",
            "paramName": "touchIndex",
            "description": " The index of the Touch object",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The horizontal position of the touch",
            "type": "Integer",
            "description": " The horizontal position of the touch"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getScreenTop": {
      "location": {
        "start": {
          "line": 230,
          "column": 6
        },
        "end": {
          "line": 232,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the vertical coordinate at which the event occurred relative to\nthe origin of the screen coordinate system."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touchIndex {Integer ? 0} The index of the Touch object",
            "paramName": "touchIndex",
            "description": " The index of the Touch object",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The vertical position of the touch",
            "type": "Integer",
            "description": " The vertical position of the touch"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getViewportLeft": {
      "location": {
        "start": {
          "line": 242,
          "column": 6
        },
        "end": {
          "line": 244,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the the horizontal coordinate at which the event occurred relative\nto the viewport."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touchIndex {Integer ? 0} The index of the Touch object",
            "paramName": "touchIndex",
            "description": " The index of the Touch object",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The horizontal position of the touch",
            "type": "Integer",
            "description": " The horizontal position of the touch"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getViewportTop": {
      "location": {
        "start": {
          "line": 254,
          "column": 6
        },
        "end": {
          "line": 256,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the vertical coordinate at which the event occurred relative\nto the viewport."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touchIndex {Integer ? 0} The index of the Touch object",
            "paramName": "touchIndex",
            "description": " The index of the Touch object",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The vertical position of the touch",
            "type": "Integer",
            "description": " The vertical position of the touch"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getIdentifier": {
      "location": {
        "start": {
          "line": 265,
          "column": 6
        },
        "end": {
          "line": 267,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the unique identifier for a certain touch object."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touchIndex {Integer ? 0} The index of the Touch object",
            "paramName": "touchIndex",
            "description": " The index of the Touch object",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} Unique identifier of the touch object",
            "type": "Integer",
            "description": " Unique identifier of the touch object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__getEventSpecificTouch": {
      "location": {
        "start": {
          "line": 279,
          "column": 6
        },
        "end": {
          "line": 283,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns an event specific touch on the target element. This function is\nused as the \"touchend\" event only offers Touch objects in the\nchangedTouches array."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "touchIndex {Integer ? 0} The index of the Touch object to\nretrieve",
            "paramName": "touchIndex",
            "description": " The index of the Touch object to\nretrieve",
            "optional": true,
            "defaultValue": "0",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} A native Touch object",
            "type": "Object",
            "description": " A native Touch object"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getEventSpecificTouches": {
      "location": {
        "start": {
          "line": 293,
          "column": 6
        },
        "end": {
          "line": 297,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the event specific touches on the target element. This function\nis used as the \"touchend\" event only offers Touch objects in the\nchangedTouches array."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object[]} Array of native Touch objects",
            "type": "Object[]",
            "description": " Array of native Touch objects"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_isTouchEnd": {
      "location": {
        "start": {
          "line": 308,
          "column": 6
        },
        "end": {
          "line": 311,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Indicates if the event occurs during the \"touchend\" phase. Needed to\ndetermine the event specific touches. Override this method if you derive\nfrom this class and want to indicate that the specific event occurred\nduring the \"touchend\" phase."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the event occurred during the \"touchend\" phase",
            "type": "Boolean",
            "description": " Whether the event occurred during the \"touchend\" phase"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.event.type.Dom",
      "property": "reset"
    }
  },
  "descendants": []
}