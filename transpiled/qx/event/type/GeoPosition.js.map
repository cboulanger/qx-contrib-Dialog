{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/event/type/GeoPosition.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "event",
    "type",
    "Event",
    "construct",
    "properties",
    "timestamp",
    "check",
    "latitude",
    "longitude",
    "altitude",
    "nullable",
    "accuracy",
    "altitudeAccuracy",
    "heading",
    "speed",
    "data",
    "lang",
    "Type",
    "isNumber",
    "members",
    "init",
    "position",
    "setTimestamp",
    "setLatitude",
    "coords",
    "setLongitude",
    "setAltitude",
    "setAccuracy",
    "setAltitudeAccuracy",
    "setHeading",
    "setSpeed",
    "GeoPosition"
  ],
  "mappings": ";;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EA4BAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,2BAAhB,EACA;AACEC,YAASN,GAAGO,KAAH,CAASC,IAAT,CAAcC,KADzB;;AAGE;;;AAGAC,eAAY,qBACZ;AACE;AACD,KATH;;AAYEC,gBACA;AACE;;;AAGAC,iBACA;AACEC,eAAQ;AADV,OALF;;AASE;;;;AAIAC,gBAAW;AACTD,eAAQ;AADC,OAbb;;AAkBE;;;;AAIAE,iBAAY;AACVF,eAAQ;AADE,OAtBd;;AA2BE;;;;AAIAG,gBAAW;AACTH,eAAQ,QADC;AAETI,kBAAW;AAFF,OA/Bb;;AAqCE;;;;AAIAC,gBAAW;AACTL,eAAQ;AADC,OAzCb;;AA6CE;;;AAGAM,wBAAmB;AACjBN,eAAQ,QADS;AAEjBI,kBAAW;AAFM,OAhDrB;;AAsDE;;;;;;;;;AASAG,eAAU;AACRH,kBAAW;AADH,OA/DZ;;AAoEE;;;;;;;AAOAI,aAAQ;AACNR,eAAQ,eAASS,IAAT,EAAe;AAAC,iBAAOtB,GAAGuB,IAAH,CAAQC,IAAR,CAAaC,QAAb,CAAsBH,IAAtB,CAAP;AAAoC,SADtD;AAENL,kBAAW;AAFL;AA3EV,KAbF;;AA8FES,aAAS;AACP;;;;;AAKAC,YAAM,cAASC,QAAT,EAAmB;AACvB,aAAKC,YAAL,CAAkBD,SAAShB,SAA3B;AACA,aAAKkB,WAAL,CAAiBF,SAASG,MAAT,CAAgBjB,QAAjC;AACA,aAAKkB,YAAL,CAAkBJ,SAASG,MAAT,CAAgBhB,SAAlC;AACA,aAAKkB,WAAL,CAAiBL,SAASG,MAAT,CAAgBf,QAAjC;AACA,aAAKkB,WAAL,CAAiBN,SAASG,MAAT,CAAgBb,QAAjC;AACA,aAAKiB,mBAAL,CAAyBP,SAASG,MAAT,CAAgBZ,gBAAzC;AACA,aAAKiB,UAAL,CAAgBR,SAASG,MAAT,CAAgBX,OAAhC;AACA,aAAKiB,QAAL,CAAcT,SAASG,MAAT,CAAgBV,KAA9B;AACD;AAfM;AA9FX,GADA,C;AA5BArB,KAAGO,KAAH,CAASC,IAAT,CAAc8B,WAAd,CAA0BnC,aAA1B,GAA0CA,aAA1C",
  "file": "GeoPosition.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n     * Adrian Olaru (adrianolaru)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n\n/**\n * EXPERIMENTAL - NOT READY FOR PRODUCTION\n *\n * GeoPosition event used by GeoLocation class.\n *\n *\n */\nqx.Class.define(\"qx.event.type.GeoPosition\",\n{\n  extend : qx.event.type.Event,\n\n  /**\n   * Create a new instance.\n   */\n  construct : function()\n  {\n    this.base(arguments);\n  },\n\n\n  properties :\n  {\n    /**\n     *  The time when the position was acquired.\n     */\n    timestamp :\n    {\n      check : \"Number\"\n    },\n\n    /**\n     * The angular distance north or south of the earth's equator, measured in\n     * decimal degrees along a meridian\n     */\n    latitude : {\n      check : \"Number\"\n    },\n\n\n    /**\n     * The angular distance on the earth's surface, measured east or west from\n     * the prime meridian at Greenwich, England, in decimal degrees\n     */\n    longitude : {\n      check : \"Number\"\n    },\n\n\n    /**\n     * The height of the position, specified in meters above the earth's\n     * surface.\n     */\n    altitude : {\n      check : \"Number\",\n      nullable : true\n    },\n\n\n    /**\n     * The accuracy level of the latitude and longitude coordinates specified\n     * in meters.\n     */\n    accuracy : {\n      check : \"Number\"\n    },\n\n    /**\n     * The accuracy level of the altitude specified in meters.\n     */\n    altitudeAccuracy : {\n      check : \"Number\",\n      nullable : true\n    },\n\n\n    /**\n     * The direction of travel of the hosting device specified in degrees in a\n     * range from 0 to 360, counting clockwise relative to the true north.\n     *\n     * If the implementation cannot provide heading information, the value of\n     * this attribute must be null. If the hosting device is stationary (i.e.\n     * the value of the speed attribute is 0), then the value of the heading\n     * property must be NaN.\n     */\n    heading : {\n      nullable : true\n    },\n\n\n    /**\n     * The current ground speed of the hosting device specified in meters per\n     * second.\n     *\n     * If the implementation cannot provide speed information, the value of\n     * this property must be null.\n     */\n    speed : {\n      check : function(data) {return qx.lang.Type.isNumber(data);},\n      nullable : true\n    }\n  },\n\n  members: {\n    /**\n    * Initialize the fields of the event.\n    *\n    * @param position {Map} a position map.\n    */\n    init: function(position) {\n      this.setTimestamp(position.timestamp);\n      this.setLatitude(position.coords.latitude);\n      this.setLongitude(position.coords.longitude);\n      this.setAltitude(position.coords.altitude);\n      this.setAccuracy(position.coords.accuracy);\n      this.setAltitudeAccuracy(position.coords.altitudeAccuracy);\n      this.setHeading(position.coords.heading);\n      this.setSpeed(position.coords.speed);\n    }\n  }\n});"
  ]
}