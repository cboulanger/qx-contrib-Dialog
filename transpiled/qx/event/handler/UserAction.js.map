{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/event/handler/UserAction.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "construct",
    "manager",
    "__manager",
    "__window",
    "getWindow",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "useraction",
    "TARGET_CHECK",
    "TARGET_WINDOW",
    "IGNORE_CAN_HANDLE",
    "members",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "destruct",
    "defer",
    "addHandler",
    "handler",
    "UserAction"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAuBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,6BAAhB,EACA;AACEC,YAASN,GAAGO,IAAH,CAAQC,MADnB;AAEEC,eAAYT,GAAGU,KAAH,CAASC,aAFvB;;AAOE;;;;;;AAMA;;;;;AAKAC,eAAY,mBAASC,OAAT,EACZ;AACE;;AAEA;AACA,WAAKC,SAAL,GAAiBD,OAAjB;AACA,WAAKE,QAAL,GAAgBF,QAAQG,SAAR,EAAhB;AACD,KAzBH;;AA+BE;;;;;;AAMAC,aACA;AACE;AACAC,gBAAWlB,GAAGU,KAAH,CAASS,YAAT,CAAsBC,eAFnC;;AAIE;AACAC,uBAAkB;AAChBC,oBAAa;AADG,OALpB;;AASE;AACAC,oBAAevB,GAAGU,KAAH,CAASC,aAAT,CAAuBa,aAVxC;;AAYE;AACAC,yBAAoB;AAbtB,KAtCF;;AA0DE;;;;;;AAMAC,aACA;AACEZ,iBAAY,IADd;AAEEC,gBAAU,IAFZ;;AAIE;;;;;;AAMA;AACAY,sBAAiB,wBAASC,MAAT,EAAiBC,IAAjB,EAAuB,CAAE,CAX5C;;AAcE;AACAC,qBAAgB,uBAASF,MAAT,EAAiBC,IAAjB,EAAuBE,OAAvB,EAAgC;AAC9C;AACD,OAjBH;;AAoBE;AACAC,uBAAkB,yBAASJ,MAAT,EAAiBC,IAAjB,EAAuBE,OAAvB,EAAgC;AAChD;AACD;AAvBH,KAjEF;;AA8FE;;;;;;AAMAE,cAAW,oBAAW;AACpB,WAAKnB,SAAL,GAAiB,KAAKC,QAAL,GAAgB,IAAjC;AACD,KAtGH;;AA4GE;;;;;;AAMAmB,WAAQ,eAASjB,OAAT,EAAkB;AACxBjB,SAAGU,KAAH,CAASS,YAAT,CAAsBgB,UAAtB,CAAiClB,OAAjC;AACD;AApHH,GADA,C;AAvBAjB,KAAGU,KAAH,CAAS0B,OAAT,CAAiBC,UAAjB,CAA4BlC,aAA5B,GAA4CA,aAA5C",
  "file": "UserAction.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This handler accepts the useraction event fired by the keyboard, mouse and\n * pointer handlers after an user triggered action has occurred.\n */\nqx.Class.define(\"qx.event.handler.UserAction\",\n{\n  extend : qx.core.Object,\n  implement : qx.event.IEventHandler,\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Create a new instance\n   *\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct : function(manager)\n  {\n    this.base(arguments);\n\n    // Define shorthands\n    this.__manager = manager;\n    this.__window = manager.getWindow();\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY : qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES : {\n      useraction : 1\n    },\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK : qx.event.IEventHandler.TARGET_WINDOW,\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE : true\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __manager : null,\n    __window: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent : function(target, type) {},\n\n\n    // interface implementation\n    registerEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n\n    // interface implementation\n    unregisterEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    this.__manager = this.__window = null;\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ]
}