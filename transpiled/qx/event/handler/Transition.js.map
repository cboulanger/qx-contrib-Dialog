{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/event/handler/Transition.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "IDisposable",
    "construct",
    "manager",
    "__registeredEvents",
    "__onEventWrapper",
    "lang",
    "Function",
    "listener",
    "_onNative",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "transitionEnd",
    "animationEnd",
    "animationStart",
    "animationIteration",
    "TARGET_CHECK",
    "TARGET_DOMNODE",
    "IGNORE_CAN_HANDLE",
    "TYPE_TO_NATIVE",
    "NATIVE_TO_TYPE",
    "members",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "Environment",
    "select",
    "capture",
    "hash",
    "ObjectRegistry",
    "toHashCode",
    "nativeType",
    "handler",
    "Transition",
    "bom",
    "Event",
    "addNativeListener",
    "unregisterEvent",
    "events",
    "removeNativeListener",
    "GlobalError",
    "observeMethod",
    "nativeEvent",
    "fireEvent",
    "destruct",
    "id",
    "defer",
    "aniEnv",
    "get",
    "transEnv",
    "n2t",
    "t2n",
    "nate",
    "addHandler"
  ],
  "mappings": "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",
  "file": "Transition.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n   ======================================================================\n\n   This class contains code based on the following work:\n\n   * Unify Project\n\n     Homepage:\n       http://unify-project.org\n\n     Copyright:\n       2009-2010 Deutsche Telekom AG, Germany, http://telekom.com\n\n     License:\n       MIT: http://www.opensource.org/licenses/mit-license.php\n\n************************************************************************ */\n\n/**\n * EXPERIMENTAL - NOT READY FOR PRODUCTION\n *\n * This class provides support for HTML5 transition and animation events.\n * Currently only WebKit and Firefox are supported.\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.event.handler.Transition\",\n{\n  extend : qx.core.Object,\n  implement : [ qx.event.IEventHandler, qx.core.IDisposable ],\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Create a new instance\n   *\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct : function(manager)\n  {\n    this.base(arguments);\n\n    this.__registeredEvents = {};\n    this.__onEventWrapper = qx.lang.Function.listener(this._onNative, this);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY : qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES :\n    {\n      transitionEnd : 1,\n      animationEnd : 1,\n      animationStart : 1,\n      animationIteration : 1\n    },\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK : qx.event.IEventHandler.TARGET_DOMNODE,\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE : true,\n\n    /** Mapping of supported event types to native event types */\n    TYPE_TO_NATIVE : null,\n\n    /** Mapping of native event types to supported event types */\n    NATIVE_TO_TYPE : null\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members:\n  {\n    __onEventWrapper : null,\n    __registeredEvents : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent: function(target, type) {\n      // Nothing needs to be done here\n    },\n\n\n    // interface implementation\n    /**\n     * This method is called each time an event listener, for one of the\n     * supported events, is added using {@link qx.event.Manager#addListener}.\n     *\n     * @param target {var} The target to, which the event handler should\n     *     be attached\n     * @param type {String} event type\n     * @param capture {Boolean} Whether to attach the event to the\n     *         capturing phase or the bubbling phase of the event.\n     * @signature function(target, type, capture)\n     */\n    registerEvent: qx.core.Environment.select(\"engine.name\",\n    {\n      \"webkit\" : function(target, type, capture)\n      {\n        var hash = qx.core.ObjectRegistry.toHashCode(target) + type;\n\n        var nativeType = qx.event.handler.Transition.TYPE_TO_NATIVE[type];\n\n        this.__registeredEvents[hash] =\n        {\n          target:target,\n          type : nativeType\n        };\n\n        qx.bom.Event.addNativeListener(target, nativeType, this.__onEventWrapper);\n      },\n\n      \"gecko\" : function(target, type, capture)\n      {\n        var hash = qx.core.ObjectRegistry.toHashCode(target) + type;\n\n        var nativeType = qx.event.handler.Transition.TYPE_TO_NATIVE[type];\n\n        this.__registeredEvents[hash] =\n        {\n          target:target,\n          type : nativeType\n        };\n\n        qx.bom.Event.addNativeListener(target, nativeType, this.__onEventWrapper);\n      },\n\n      \"mshtml\" : function(target, type, capture)\n      {\n        var hash = qx.core.ObjectRegistry.toHashCode(target) + type;\n\n        var nativeType = qx.event.handler.Transition.TYPE_TO_NATIVE[type];\n\n        this.__registeredEvents[hash] =\n        {\n          target:target,\n          type : nativeType\n        };\n\n        qx.bom.Event.addNativeListener(target, nativeType, this.__onEventWrapper);\n      },\n\n      \"default\" : function() {}\n    }),\n\n\n    // interface implementation\n    /**\n     * This method is called each time an event listener, for one of the\n     * supported events, is removed by using {@link qx.event.Manager#removeListener}\n     * and no other event listener is listening on this type.\n     *\n     * @param target {var} The target from, which the event handler should\n     *     be removed\n     * @param type {String} event type\n     * @param capture {Boolean} Whether to attach the event to the\n     *         capturing phase or the bubbling phase of the event.\n     * @signature function(target, type, capture)\n     */\n    unregisterEvent: qx.core.Environment.select(\"engine.name\",\n    {\n      \"webkit\" : function(target, type, capture)\n      {\n        var events = this.__registeredEvents;\n\n        if (!events) {\n          return;\n        }\n\n        var hash = qx.core.ObjectRegistry.toHashCode(target) + type;\n\n        if (events[hash]) {\n          delete events[hash];\n        }\n\n        qx.bom.Event.removeNativeListener(target, qx.event.handler.Transition.TYPE_TO_NATIVE[type], this.__onEventWrapper);\n      },\n\n      \"gecko\" : function(target, type, capture)\n      {\n        var events = this.__registeredEvents;\n\n        if (!events) {\n          return;\n        }\n\n        var hash = qx.core.ObjectRegistry.toHashCode(target) + type;\n\n        if (events[hash]) {\n          delete events[hash];\n        }\n\n        qx.bom.Event.removeNativeListener(target, qx.event.handler.Transition.TYPE_TO_NATIVE[type], this.__onEventWrapper);\n      },\n\n      \"mshtml\" : function(target, type, capture)\n      {\n        var events = this.__registeredEvents;\n\n        if (!events) {\n          return;\n        }\n\n        var hash = qx.core.ObjectRegistry.toHashCode(target) + type;\n\n        if (events[hash]) {\n          delete events[hash];\n        }\n\n        qx.bom.Event.removeNativeListener(target, qx.event.handler.Transition.TYPE_TO_NATIVE[type], this.__onEventWrapper);\n      },\n\n      \"default\" : function() {}\n    }),\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT-HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Global handler for the transition event.\n     *\n     * @signature function(domEvent)\n     * @param domEvent {Event} DOM event\n     */\n    _onNative : qx.event.GlobalError.observeMethod(function(nativeEvent) {\n      qx.event.Registration.fireEvent(nativeEvent.target, qx.event.handler.Transition.NATIVE_TO_TYPE[nativeEvent.type], qx.event.type.Event);\n    })\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    var event;\n    var events = this.__registeredEvents;\n\n    for (var id in events)\n    {\n      event = events[id];\n      if (event.target) {\n        qx.bom.Event.removeNativeListener(event.target, event.type, this.__onEventWrapper);\n      }\n    }\n\n    this.__registeredEvents = this.__onEventWrapper = null;\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics) {\n    var aniEnv = qx.core.Environment.get(\"css.animation\") || {};\n    var transEnv = qx.core.Environment.get(\"css.transition\") || {};\n\n    var n2t = qx.event.handler.Transition.NATIVE_TO_TYPE = {};\n    var t2n = qx.event.handler.Transition.TYPE_TO_NATIVE = {\n      transitionEnd : transEnv[\"end-event\"] || null,\n      animationStart : aniEnv[\"start-event\"] || null,\n      animationEnd : aniEnv[\"end-event\"] || null,\n      animationIteration : aniEnv[\"iteration-event\"] || null\n    };\n\n    for (var type in t2n) {\n      var nate = t2n[type];\n      n2t[nate] = type;\n    }\n\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ]
}