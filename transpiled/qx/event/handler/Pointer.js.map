{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/event/handler/Pointer.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "event",
    "handler",
    "PointerCore",
    "implement",
    "IEventHandler",
    "core",
    "IDisposable",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "pointermove",
    "pointerover",
    "pointerout",
    "pointerdown",
    "pointerup",
    "pointercancel",
    "gesturebegin",
    "gesturemove",
    "gesturefinish",
    "gesturecancel",
    "TARGET_CHECK",
    "TARGET_DOMNODE",
    "TARGET_DOCUMENT",
    "IGNORE_CAN_HANDLE",
    "construct",
    "manager",
    "__manager",
    "__window",
    "getWindow",
    "__root",
    "document",
    "apply",
    "members",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "_initPointerObserver",
    "useEmitter",
    "Environment",
    "get",
    "_initObserver",
    "_onPointerEvent",
    "_fireEvent",
    "domEvent",
    "bom",
    "Event",
    "getTarget",
    "getAttribute",
    "parentNode",
    "MSPOINTER_TO_POINTER_MAPPING",
    "nodeType",
    "dom",
    "Pointer",
    "normalize",
    "srcElement",
    "ex",
    "tracker",
    "self",
    "Utils",
    "track",
    "fireEvent",
    "then",
    "getPointerType",
    "button",
    "LEFT_BUTTON",
    "POINTER_TO_GESTURE_MAPPING",
    "Data",
    "promise",
    "_original",
    "_processedFlag",
    "dispose",
    "__callBase",
    "method",
    "args",
    "prototype",
    "defer",
    "addHandler",
    "getManager",
    "getHandler"
  ],
  "mappings": "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",
  "file": "Pointer.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christopher Zuendorf (czuendorf)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Unified pointer event handler.\n * @require(qx.event.dispatch.DomBubbling)\n * @require(qx.event.type.Pointer) // load-time dependency for early native events\n * @require(qx.event.type.dom.Pointer)\n */\nqx.Class.define(\"qx.event.handler.Pointer\",\n{\n  extend : qx.event.handler.PointerCore,\n  implement : [ qx.event.IEventHandler, qx.core.IDisposable ],\n\n  statics : {\n\n    /** @type {Integer} Priority of this handler */\n    PRIORITY : qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES : {\n      pointermove : 1,\n      pointerover : 1,\n      pointerout : 1,\n      pointerdown : 1,\n      pointerup : 1,\n      pointercancel : 1,\n\n      gesturebegin : 1,\n      gesturemove : 1,\n      gesturefinish : 1,\n      gesturecancel : 1\n    },\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK : qx.event.IEventHandler.TARGET_DOMNODE + qx.event.IEventHandler.TARGET_DOCUMENT,\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE : true\n  },\n\n  /**\n   * Create a new instance\n   *\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct : function(manager)\n  {\n    // Define shorthands\n    this.__manager = manager;\n    this.__window = manager.getWindow();\n    this.__root = this.__window.document;\n\n    qx.event.handler.PointerCore.apply(this, [this.__root]);\n  },\n\n  members : {\n    __manager : null,\n    __window : null,\n    __root : null,\n\n\n    // interface implementation\n    canHandleEvent : function(target, type) {},\n\n    // interface implementation\n    registerEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n\n    // interface implementation\n    unregisterEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n\n    // overridden\n    _initPointerObserver : function() {\n      var useEmitter = false;\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 9) {\n        // Workaround for bug #8293: Use an emitter to listen to the\n        // pointer events fired by a pointer handler attached by qxWeb.\n        useEmitter = true;\n      }\n      this._initObserver(this._onPointerEvent, useEmitter);\n    },\n\n\n    /**\n     * Fire a pointer event with the given parameters\n     *\n     * @param domEvent {Event} DOM event\n     * @param type {String ? null} type of the event\n     * @param target {Element ? null} event target\n     */\n    _fireEvent : function(domEvent, type, target)\n    {\n      if (!target) {\n        target = qx.bom.Event.getTarget(domEvent);\n      }\n\n      // respect anonymous elements\n      while (target && target.getAttribute && target.getAttribute(\"qxanonymous\")) {\n        target = target.parentNode;\n      }\n\n      if (!type) {\n        type = domEvent.type;\n      }\n\n      type = qx.event.handler.PointerCore.MSPOINTER_TO_POINTER_MAPPING[type] || type;\n\n      if (target && target.nodeType)\n      {\n        qx.event.type.dom.Pointer.normalize(domEvent);\n        // ensure compatibility with native events for IE8\n        try {\n          domEvent.srcElement = target;\n        }catch(ex) {\n          // Nothing - cannot change properties in strict mode\n        }\n\n        var tracker = {};\n        var self = this;\n        qx.event.Utils.track(tracker, function() {\n          return qx.event.Registration.fireEvent(\n              target,\n              type,\n              qx.event.type.Pointer,\n              [domEvent, target, null, true, true]\n            );\n        });\n\n        qx.event.Utils.then(tracker, function() {\n          if ((domEvent.getPointerType() !== \"mouse\" ||\n              domEvent.button <= qx.event.handler.PointerCore.LEFT_BUTTON) &&\n              (type == \"pointerdown\" || type == \"pointerup\" || type == \"pointermove\" || type == \"pointercancel\"))\n          {\n             return qx.event.Registration.fireEvent(\n               self.__root,\n               qx.event.handler.PointerCore.POINTER_TO_GESTURE_MAPPING[type],\n               qx.event.type.Pointer,\n               [domEvent, target, null, false, false]\n             );\n           }\n        });\n        qx.event.Utils.then(tracker, function() {\n          // Fire user action event\n          return qx.event.Registration.fireEvent(self.__window, \"useraction\", qx.event.type.Data, [type]);\n        });\n        return tracker.promise;\n      }\n    },\n\n    // overridden\n    _onPointerEvent : function(domEvent) {\n      if (domEvent._original && domEvent._original[this._processedFlag]) {\n        return;\n      }\n\n      var type = qx.event.handler.PointerCore.MSPOINTER_TO_POINTER_MAPPING[domEvent.type] || domEvent.type;\n      return this._fireEvent(domEvent, type, qx.bom.Event.getTarget(domEvent));\n    },\n\n\n    /**\n     * Dispose this object\n     */\n    dispose : function()\n    {\n      this.__callBase(\"dispose\");\n      this.__manager = this.__window = this.__root = null;\n    },\n\n\n    /**\n     * Call overridden method.\n     *\n     * @param method {String} Name of the overridden method.\n     * @param args {Array} Arguments.\n     */\n    __callBase: function(method, args) {\n      qx.event.handler.PointerCore.prototype[method].apply(this, args || []);\n    }\n  },\n\n  defer : function(statics) {\n    qx.event.Registration.addHandler(statics);\n    qx.event.Registration.getManager(document).getHandler(statics);\n  }\n});\n"
  ]
}