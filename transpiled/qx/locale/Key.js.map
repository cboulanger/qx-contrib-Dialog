{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/locale/Key.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "getKeyName",
    "size",
    "keyIdentifier",
    "locale",
    "core",
    "Assert",
    "assertInArray",
    "key",
    "Environment",
    "get",
    "localizedKey",
    "Manager",
    "getInstance",
    "translate",
    "Key",
    "_keyNames",
    "defer",
    "keyNames",
    "marktr"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAwBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,eAAhB,EACA;AACE;;;;;;AAMAC,aACA;AACE;;;;;;;;;;AAUAC,kBAAa,oBAASC,IAAT,EAAeC,aAAf,EAA8BC,MAA9B,EACb;AAC2C;AACvCV,aAAGW,IAAH,CAAQC,MAAR,CAAeC,aAAf,CAA6BL,IAA7B,EAAmC,CAAC,OAAD,EAAU,MAAV,CAAnC;AACD;;AAED,YAAIM,MAAM,SAASN,IAAT,GAAgB,GAAhB,GAAsBC,aAAhC;AACA;AACA,YAAIT,GAAGW,IAAH,CAAQI,WAAR,CAAoBC,GAApB,CAAwB,SAAxB,KAAsC,KAAtC,IAA+CP,iBAAiB,SAApE,EAA+E;AAC7EK,iBAAO,MAAP;AACD;AACD,YAAIG,eAAejB,GAAGU,MAAH,CAAUQ,OAAV,CAAkBC,WAAlB,GAAgCC,SAAhC,CAA0CN,GAA1C,EAA+C,EAA/C,EAAmDJ,MAAnD,CAAnB;;AAEA,YAAIO,gBAAgBH,GAApB,EAAyB;AACvB,iBAAOd,GAAGU,MAAH,CAAUW,GAAV,CAAcC,SAAd,CAAwBR,GAAxB,KAAgCL,aAAvC;AACD,SAFD,MAEO;AACL,iBAAOQ,YAAP;AACD;AACF;AA7BH,KARF;;AAyCE;;;;;;AAMAM,WAAQ,eAASjB,OAAT,EACR;AACE,UAAIkB,WAAW,EAAf;AACA,UAAIN,UAAUlB,GAAGU,MAAH,CAAUQ,OAAxB;;AAEA;AACAM,eAASN,QAAQO,MAAR,CAAe,qBAAf,CAAT,IAAkD,WAAlD;AACAD,eAASN,QAAQO,MAAR,CAAe,eAAf,CAAT,IAA4C,KAA5C;AACAD,eAASN,QAAQO,MAAR,CAAe,iBAAf,CAAT,IAA8C,OAA9C;AACAD,eAASN,QAAQO,MAAR,CAAe,iBAAf,CAAT,IAA8C,OAA9C;AACAD,eAASN,QAAQO,MAAR,CAAe,iBAAf,CAAT,IAA8C,OAA9C;AACAD,eAASN,QAAQO,MAAR,CAAe,mBAAf,CAAT,IAAgD,MAAhD;AACAD,eAASN,QAAQO,MAAR,CAAe,uBAAf,CAAT,IAAoD,MAApD;AACAD,eAASN,QAAQO,MAAR,CAAe,eAAf,CAAT,IAA4C,KAA5C;AACAD,eAASN,QAAQO,MAAR,CAAe,oBAAf,CAAT,IAAiD,MAAjD;AACAD,eAASN,QAAQO,MAAR,CAAe,gBAAf,CAAT,IAA6C,MAA7C;AACAD,eAASN,QAAQO,MAAR,CAAe,kBAAf,CAAT,IAA+C,KAA/C;AACAD,eAASN,QAAQO,MAAR,CAAe,gBAAf,CAAT,IAA6C,MAA7C;AACAD,eAASN,QAAQO,MAAR,CAAe,cAAf,CAAT,IAA2C,IAA3C;AACAD,eAASN,QAAQO,MAAR,CAAe,iBAAf,CAAT,IAA8C,OAA9C;AACAD,eAASN,QAAQO,MAAR,CAAe,gBAAf,CAAT,IAA6C,MAA7C;AACAD,eAASN,QAAQO,MAAR,CAAe,kBAAf,CAAT,IAA+C,MAA/C;AACAD,eAASN,QAAQO,MAAR,CAAe,oBAAf,CAAT,IAAiD,MAAjD;AACAD,eAASN,QAAQO,MAAR,CAAe,eAAf,CAAT,IAA4C,KAA5C;AACAD,eAASN,QAAQO,MAAR,CAAe,gBAAf,CAAT,IAA6C,MAA7C;AACAD,eAASN,QAAQO,MAAR,CAAe,kBAAf,CAAT,IAA+C,KAA/C;AACAD,eAASN,QAAQO,MAAR,CAAe,kBAAf,CAAT,IAA+C,KAA/C;AACAD,eAASN,QAAQO,MAAR,CAAe,mBAAf,CAAT,IAAgD,KAAhD;AACAD,eAASN,QAAQO,MAAR,CAAe,uBAAf,CAAT,IAAoD,OAApD;AACAD,eAASN,QAAQO,MAAR,CAAe,kBAAf,CAAT,IAA+C,QAA/C;AACAD,eAASN,QAAQO,MAAR,CAAe,iBAAf,CAAT,IAA8C,OAA9C;AACAD,eAASN,QAAQO,MAAR,CAAe,eAAf,CAAT,IAA4C,KAA5C;AACAD,eAASN,QAAQO,MAAR,CAAe,gBAAf,CAAT,IAA6C,MAA7C;;AAEA;AACAD,eAASN,QAAQO,MAAR,CAAe,oBAAf,CAAT,IAAiD,WAAjD;AACAD,eAASN,QAAQO,MAAR,CAAe,cAAf,CAAT,IAA2C,WAA3C;AACAD,eAASN,QAAQO,MAAR,CAAe,gBAAf,CAAT,IAA6C,OAA7C;AACAD,eAASN,QAAQO,MAAR,CAAe,gBAAf,CAAT,IAA6C,OAA7C;AACAD,eAASN,QAAQO,MAAR,CAAe,gBAAf,CAAT,IAA6C,OAA7C;AACAD,eAASN,QAAQO,MAAR,CAAe,kBAAf,CAAT,IAA+C,SAA/C;AACAD,eAASN,QAAQO,MAAR,CAAe,sBAAf,CAAT,IAAmD,SAAnD;AACAD,eAASN,QAAQO,MAAR,CAAe,cAAf,CAAT,IAA2C,KAA3C;AACAD,eAASN,QAAQO,MAAR,CAAe,mBAAf,CAAT,IAAgD,UAAhD;AACAD,eAASN,QAAQO,MAAR,CAAe,eAAf,CAAT,IAA4C,MAA5C;AACAD,eAASN,QAAQO,MAAR,CAAe,iBAAf,CAAT,IAA8C,QAA9C;AACAD,eAASN,QAAQO,MAAR,CAAe,eAAf,CAAT,IAA4C,MAA5C;AACAD,eAASN,QAAQO,MAAR,CAAe,aAAf,CAAT,IAA0C,IAA1C;AACAD,eAASN,QAAQO,MAAR,CAAe,gBAAf,CAAT,IAA6C,OAA7C;AACAD,eAASN,QAAQO,MAAR,CAAe,eAAf,CAAT,IAA4C,MAA5C;AACAD,eAASN,QAAQO,MAAR,CAAe,iBAAf,CAAT,IAA8C,QAA9C;AACAD,eAASN,QAAQO,MAAR,CAAe,mBAAf,CAAT,IAAgD,UAAhD;AACAD,eAASN,QAAQO,MAAR,CAAe,cAAf,CAAT,IAA2C,KAA3C;AACAD,eAASN,QAAQO,MAAR,CAAe,eAAf,CAAT,IAA4C,MAA5C;AACAD,eAASN,QAAQO,MAAR,CAAe,iBAAf,CAAT,IAA8C,QAA9C;AACAD,eAASN,QAAQO,MAAR,CAAe,iBAAf,CAAT,IAA8C,QAA9C;AACAD,eAASN,QAAQO,MAAR,CAAe,kBAAf,CAAT,IAA+C,SAA/C;AACAD,eAASN,QAAQO,MAAR,CAAe,sBAAf,CAAT,IAAmD,aAAnD;AACAD,eAASN,QAAQO,MAAR,CAAe,iBAAf,CAAT,IAA8C,QAA9C;AACAD,eAASN,QAAQO,MAAR,CAAe,gBAAf,CAAT,IAA6C,OAA7C;AACAD,eAASN,QAAQO,MAAR,CAAe,cAAf,CAAT,IAA2C,KAA3C;AACAD,eAASN,QAAQO,MAAR,CAAe,eAAf,CAAT,IAA4C,MAA5C;;AAEA;AACAnB,cAAQgB,SAAR,GAAoBE,QAApB;AACD;AAhHH,GADA,C;AAxBAxB,KAAGU,MAAH,CAAUW,GAAV,CAAclB,aAAd,GAA8BA,aAA9B",
  "file": "Key.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Static class, which contains functionality to localize the names of keyboard keys.\n */\n\nqx.Class.define(\"qx.locale.Key\",\n{\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /**\n     * Return localized name of a key identifier\n     * {@link qx.event.type.KeySequence}\n     *\n     * @param size {String} format of the key identifier.\n     *       Possible values: \"short\", \"full\"\n     * @param keyIdentifier {String} key identifier to translate {@link qx.event.type.KeySequence}\n     * @param locale {String} optional locale to be used\n     * @return {String} localized key name\n     */\n    getKeyName : function(size, keyIdentifier, locale)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertInArray(size, [\"short\", \"full\"]);\n      }\n\n      var key = \"key_\" + size + \"_\" + keyIdentifier;\n      // Control is always named control on a mac and not Strg in German e.g.\n      if (qx.core.Environment.get(\"os.name\") == \"osx\" && keyIdentifier == \"Control\") {\n        key += \"_Mac\";\n      }\n      var localizedKey = qx.locale.Manager.getInstance().translate(key, [], locale);\n\n      if (localizedKey == key) {\n        return qx.locale.Key._keyNames[key] || keyIdentifier;\n      } else {\n        return localizedKey;\n      }\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics)\n  {\n    var keyNames = {};\n    var Manager = qx.locale.Manager;\n\n    // TRANSLATION: short representation of key names\n    keyNames[Manager.marktr(\"key_short_Backspace\")] = \"Backspace\";\n    keyNames[Manager.marktr(\"key_short_Tab\")] = \"Tab\";\n    keyNames[Manager.marktr(\"key_short_Space\")] = \"Space\";\n    keyNames[Manager.marktr(\"key_short_Enter\")] = \"Enter\";\n    keyNames[Manager.marktr(\"key_short_Shift\")] = \"Shift\";\n    keyNames[Manager.marktr(\"key_short_Control\")] = \"Ctrl\";\n    keyNames[Manager.marktr(\"key_short_Control_Mac\")] = \"Ctrl\";\n    keyNames[Manager.marktr(\"key_short_Alt\")] = \"Alt\";\n    keyNames[Manager.marktr(\"key_short_CapsLock\")] = \"Caps\";\n    keyNames[Manager.marktr(\"key_short_Meta\")] = \"Meta\";\n    keyNames[Manager.marktr(\"key_short_Escape\")] = \"Esc\";\n    keyNames[Manager.marktr(\"key_short_Left\")] = \"Left\";\n    keyNames[Manager.marktr(\"key_short_Up\")] = \"Up\";\n    keyNames[Manager.marktr(\"key_short_Right\")] = \"Right\";\n    keyNames[Manager.marktr(\"key_short_Down\")] = \"Down\";\n    keyNames[Manager.marktr(\"key_short_PageUp\")] = \"PgUp\";\n    keyNames[Manager.marktr(\"key_short_PageDown\")] = \"PgDn\";\n    keyNames[Manager.marktr(\"key_short_End\")] = \"End\";\n    keyNames[Manager.marktr(\"key_short_Home\")] = \"Home\";\n    keyNames[Manager.marktr(\"key_short_Insert\")] = \"Ins\";\n    keyNames[Manager.marktr(\"key_short_Delete\")] = \"Del\";\n    keyNames[Manager.marktr(\"key_short_NumLock\")] = \"Num\";\n    keyNames[Manager.marktr(\"key_short_PrintScreen\")] = \"Print\";\n    keyNames[Manager.marktr(\"key_short_Scroll\")] = \"Scroll\";\n    keyNames[Manager.marktr(\"key_short_Pause\")] = \"Pause\";\n    keyNames[Manager.marktr(\"key_short_Win\")] = \"Win\";\n    keyNames[Manager.marktr(\"key_short_Apps\")] = \"Apps\";\n\n    // TRANSLATION: full/long representation of key names\n    keyNames[Manager.marktr(\"key_full_Backspace\")] = \"Backspace\";\n    keyNames[Manager.marktr(\"key_full_Tab\")] = \"Tabulator\";\n    keyNames[Manager.marktr(\"key_full_Space\")] = \"Space\";\n    keyNames[Manager.marktr(\"key_full_Enter\")] = \"Enter\";\n    keyNames[Manager.marktr(\"key_full_Shift\")] = \"Shift\";\n    keyNames[Manager.marktr(\"key_full_Control\")] = \"Control\";\n    keyNames[Manager.marktr(\"key_full_Control_Mac\")] = \"Control\";\n    keyNames[Manager.marktr(\"key_full_Alt\")] = \"Alt\";\n    keyNames[Manager.marktr(\"key_full_CapsLock\")] = \"CapsLock\";\n    keyNames[Manager.marktr(\"key_full_Meta\")] = \"Meta\";\n    keyNames[Manager.marktr(\"key_full_Escape\")] = \"Escape\";\n    keyNames[Manager.marktr(\"key_full_Left\")] = \"Left\";\n    keyNames[Manager.marktr(\"key_full_Up\")] = \"Up\";\n    keyNames[Manager.marktr(\"key_full_Right\")] = \"Right\";\n    keyNames[Manager.marktr(\"key_full_Down\")] = \"Down\";\n    keyNames[Manager.marktr(\"key_full_PageUp\")] = \"PageUp\";\n    keyNames[Manager.marktr(\"key_full_PageDown\")] = \"PageDown\";\n    keyNames[Manager.marktr(\"key_full_End\")] = \"End\";\n    keyNames[Manager.marktr(\"key_full_Home\")] = \"Home\";\n    keyNames[Manager.marktr(\"key_full_Insert\")] = \"Insert\";\n    keyNames[Manager.marktr(\"key_full_Delete\")] = \"Delete\";\n    keyNames[Manager.marktr(\"key_full_NumLock\")] = \"NumLock\";\n    keyNames[Manager.marktr(\"key_full_PrintScreen\")] = \"PrintScreen\";\n    keyNames[Manager.marktr(\"key_full_Scroll\")] = \"Scroll\";\n    keyNames[Manager.marktr(\"key_full_Pause\")] = \"Pause\";\n    keyNames[Manager.marktr(\"key_full_Win\")] = \"Win\";\n    keyNames[Manager.marktr(\"key_full_Apps\")] = \"Apps\";\n\n    // Save\n    statics._keyNames = keyNames;\n  }\n});\n"
  ]
}