{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/Bootstrap.js"
  ],
  "names": [
    "window",
    "qx",
    "Bootstrap",
    "genericToString",
    "classname",
    "createNamespace",
    "name",
    "object",
    "splits",
    "split",
    "part",
    "parent",
    "$$namespaceRoot",
    "i",
    "len",
    "length",
    "setDisplayName",
    "fcn",
    "displayName",
    "setDisplayNames",
    "functionMap",
    "value",
    "Function",
    "base",
    "args",
    "varargs",
    "DEBUG",
    "isFunction",
    "callee",
    "Error",
    "arguments",
    "call",
    "apply",
    "Array",
    "prototype",
    "slice",
    "define",
    "config",
    "isStrictMode",
    "statics",
    "clazz",
    "proto",
    "members",
    "extend",
    "construct",
    "extendClass",
    "basename",
    "keys",
    "l",
    "key",
    "member",
    "$$registry",
    "formerClass",
    "defer",
    "curProp",
    "$$type",
    "hasOwnProperty",
    "toString",
    "ex",
    "$$events",
    "events",
    "addPendingDefer",
    "LOADSTART",
    "$$start",
    "Date",
    "debug",
    "$$environment",
    "getEnvironmentSetting",
    "setEnvironmentSetting",
    "undefined",
    "setRoot",
    "root",
    "superClass",
    "superproto",
    "helper",
    "superclass",
    "self",
    "constructor",
    "__pendingDefers",
    "cb",
    "$$loader",
    "delayDefer",
    "push",
    "$$pendingDefer",
    "executePendingDefers",
    "dbClassInfo",
    "executeForDbClassInfo",
    "environment",
    "required",
    "info",
    "load",
    "className",
    "executeForClassName",
    "dependsOn",
    "depInfo",
    "require",
    "usage",
    "getByName",
    "$$deferComplete",
    "$$dbClassInfo",
    "execute",
    "tmp",
    "pendingDefers",
    "forEach",
    "objectGetLength",
    "map",
    "objectMergeWith",
    "target",
    "source",
    "overwrite",
    "__shadowedKeys",
    "Object",
    "TypeError",
    "arr",
    "shadowedKeys",
    "a",
    "__classToTypeMap",
    "bind",
    "func",
    "fixedArgs",
    "concat",
    "firstUp",
    "str",
    "charAt",
    "toUpperCase",
    "substr",
    "firstLow",
    "toLowerCase",
    "getClass",
    "classString",
    "isString",
    "String",
    "$$isString",
    "isArray",
    "data",
    "IListData",
    "util",
    "OOUtil",
    "hasInterface",
    "$$isArray",
    "isObject",
    "isFunctionOrAsyncFunction",
    "$$logs",
    "message",
    "warn",
    "error",
    "trace"
  ],
  "mappings": "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",
  "file": "Bootstrap.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Create namespace\n *\n * @ignore(qx.data)\n * @ignore(qx.data.IListData)\n * @ignore(qx.util.OOUtil)\n */\nif (!window.qx) {\n  window.qx = {};\n}\n\n/**\n * Bootstrap qx.Bootstrap to create myself later\n * This is needed for the API browser etc. to let them detect me\n */\nqx.Bootstrap = {\n\n  genericToString : function() {\n    return \"[Class \" + this.classname + \"]\";\n  },\n\n  createNamespace : function(name, object)\n  {\n    var splits = name.split(\".\");\n    var part = splits[0];\n    var parent = qx.$$namespaceRoot && qx.$$namespaceRoot[part] ? qx.$$namespaceRoot : window;\n\n    for (var i=0, len=splits.length-1; i<len; i++, part=splits[i])\n    {\n      if (!parent[part]) {\n        parent = parent[part] = {};\n      } else {\n        parent = parent[part];\n      }\n    }\n\n    // store object\n    parent[part] = object;\n\n    // return last part name (e.g. classname)\n    return part;\n  },\n\n\n  setDisplayName : function(fcn, classname, name)\n  {\n    fcn.displayName = classname + \".\" + name + \"()\";\n  },\n\n\n  setDisplayNames : function(functionMap, classname)\n  {\n    for (var name in functionMap)\n    {\n      var value = functionMap[name];\n      if (value instanceof Function) {\n        value.displayName = classname + \".\" + name + \"()\";\n      }\n    }\n  },\n\n\n  base : function(args, varargs)\n  {\n    if (qx.Bootstrap.DEBUG) {\n      if (!qx.Bootstrap.isFunction(args.callee.base)) {\n        throw new Error(\n          \"Cannot call super class. Method is not derived: \" +\n          args.callee.displayName\n        );\n      }\n    }\n\n    if (arguments.length === 1) {\n      return args.callee.base.call(this);\n    } else {\n      return args.callee.base.apply(this, Array.prototype.slice.call(arguments, 1));\n    }\n  },\n\n\n  define : function(name, config)\n  {\n    var isStrictMode = function () {\n      return (typeof this == 'undefined');\n    };\n\n    if (!config) {\n      config = { statics : {} };\n    }\n\n    var clazz;\n    var proto = null;\n\n    qx.Bootstrap.setDisplayNames(config.statics, name);\n\n    if (config.members || config.extend)\n    {\n      qx.Bootstrap.setDisplayNames(config.members, name + \".prototype\");\n\n      clazz = config.construct || new Function;\n\n      if (config.extend) {\n        this.extendClass(clazz, clazz, config.extend, name, basename);\n      }\n\n      var statics = config.statics || {};\n      // use keys to include the shadowed in IE\n      for (var i=0, keys=qx.Bootstrap.keys(statics), l=keys.length; i<l; i++) {\n        var key = keys[i];\n        clazz[key] = statics[key];\n      }\n\n      proto = clazz.prototype;\n      // Enable basecalls within constructor\n      proto.base = qx.Bootstrap.base;\n      proto.name = proto.classname = name;\n\n      var members = config.members || {};\n      var key, member;\n\n      // use keys to include the shadowed in IE\n      for (var i=0, keys=qx.Bootstrap.keys(members), l=keys.length; i<l; i++) {\n        key = keys[i];\n        member = members[key];\n\n        // Enable basecalls for methods\n        // Hint: proto[key] is not yet overwritten here\n        if (member instanceof Function && proto[key]) {\n          member.base = proto[key];\n        }\n\n        proto[key] = member;\n      }\n    }\n    else\n    {\n      clazz = config.statics || {};\n\n      // Merge class into former class (needed for 'optimize: [\"statics\"]')\n      if (qx.Bootstrap.$$registry && qx.Bootstrap.$$registry[name]) {\n        var formerClass = qx.Bootstrap.$$registry[name];\n\n        // Add/overwrite properties and return early if necessary\n        if (this.keys(clazz).length !== 0) {\n          // Execute defer to prevent too early overrides\n          if (config.defer) {\n            config.defer(clazz, proto);\n          }\n\n          for (var curProp in clazz) {\n            formerClass[curProp] = clazz[curProp];\n          }\n          return formerClass;\n        }\n      }\n    }\n\n    // Store type info\n    clazz.$$type = \"Class\";\n\n    // Attach toString\n    if (!clazz.hasOwnProperty(\"toString\")) {\n      clazz.toString = this.genericToString;\n    }\n\n    // Create namespace\n    var basename = name ? this.createNamespace(name, clazz) : \"\";\n\n    // Store names in constructor/object\n    clazz.classname = name;\n    if (!isStrictMode()) {\n      try {\n        clazz.name = name;\n      } catch(ex) {\n        // Nothing\n      }\n    }\n    clazz.basename = basename;\n    clazz.$$events = config.events;\n\n    // Execute defer section\n    if (config.defer) {\n      this.addPendingDefer(clazz, function() {\n        config.defer(clazz, proto);\n      });\n    }\n\n    // Store class reference in global class registry\n    if (name != null) {\n      qx.Bootstrap.$$registry[name] = clazz;\n    }\n\n    return clazz;\n  }\n};\n\n\n/**\n * Internal class that is responsible for bootstrapping the qooxdoo\n * framework at load time.\n */\nqx.Bootstrap.define(\"qx.Bootstrap\",\n{\n  statics :\n  {\n    /** Timestamp of qooxdoo based application startup */\n    LOADSTART : qx.$$start || new Date(),\n\n    /**\n     * Mapping for early use of the qx.debug environment setting.\n     */\n     DEBUG : (function() {\n       // make sure to reflect all changes here to the environment class!\n       var debug = true;\n       if (qx.$$environment && qx.$$environment[\"qx.debug\"] === false) {\n         debug = false;\n       }\n       return debug;\n     })(),\n\n\n     /**\n      * Minimal accessor API for the environment settings given from the\n      * generator.\n      *\n      * WARNING: This method only should be used if the\n      * {@link qx.core.Environment} class is not loaded!\n      *\n      * @param key {String} The key to get the value from.\n      * @return {var} The value of the setting or <code>undefined</code>.\n      */\n     getEnvironmentSetting : function(key) {\n       if (qx.$$environment) {\n         return qx.$$environment[key];\n       }\n     },\n\n\n     /**\n      * Minimal mutator for the environment settings given from the generator.\n      * It checks for the existence of the environment settings and sets the\n      * key if its not given from the generator. If a setting is available from\n      * the generator, the setting will be ignored.\n      *\n      * WARNING: This method only should be used if the\n      * {@link qx.core.Environment} class is not loaded!\n      *\n      * @param key {String} The key of the setting.\n      * @param value {var} The value for the setting.\n      */\n     setEnvironmentSetting : function(key, value) {\n       if (!qx.$$environment) {\n         qx.$$environment = {};\n       }\n       if (qx.$$environment[key] === undefined) {\n         qx.$$environment[key] = value;\n       }\n     },\n\n\n    /**\n     * Creates a namespace and assigns the given object to it.\n     *\n     * @internal\n     * @signature function(name, object)\n     * @param name {String} The complete namespace to create. Typically, the last part is the class name itself\n     * @param object {Object} The object to attach to the namespace\n     * @return {String} last part of the namespace (which object is assigned to)\n     * @throws {Error} when the given object already exists.\n     */\n    createNamespace : qx.Bootstrap.createNamespace,\n\n\n    /**\n     * Offers the ability to change the root for creating namespaces from window to\n     * whatever object is given.\n     *\n     * @param root {Object} The root to use.\n     * @internal\n     */\n    setRoot : function(root) {\n      qx.$$namespaceRoot = root;\n    },\n\n    /**\n     * Call the same method of the super class.\n     *\n     * @signature function(args, varargs)\n     * @param args {arguments} the arguments variable of the calling method\n     * @param varargs {var} variable number of arguments passed to the overwritten function\n     * @return {var} the return value of the method of the base class.\n     */\n    base : qx.Bootstrap.base,\n\n    /**\n     * Define a new class using the qooxdoo class system.\n     * Lightweight version of {@link qx.Class#define} with less features.\n     *\n     * @signature function(name, config)\n     * @param name {String?} Name of the class. If null, the class will not be\n     *   attached to a namespace.\n     * @param config {Map ? null} Class definition structure. The configuration map has the following keys:\n     *     <table>\n     *       <tr><th>Name</th><th>Type</th><th>Description</th></tr>\n     *       <tr><th>extend</th><td>Class</td><td>The super class the current class inherits from.</td></tr>\n     *       <tr><th>construct</th><td>Function</td><td>The constructor of the class.</td></tr>\n     *       <tr><th>statics</th><td>Map</td><td>Map of static values / functions of the class.</td></tr>\n     *       <tr><th>members</th><td>Map</td><td>Map of instance members of the class.</td></tr>\n     *       <tr><th>defer</th><td>Function</td><td>Function that is called at the end of\n     *          processing the class declaration.</td></tr>\n     *     </table>\n     * @return {Class} The defined class.\n     */\n    define : qx.Bootstrap.define,\n\n\n    /**\n     * Sets the display name of the given function\n     *\n     * @signature function(fcn, classname, name)\n     * @param fcn {Function} the function to set the display name for\n     * @param classname {String} the name of the class the function is defined in\n     * @param name {String} the function name\n     */\n    setDisplayName : qx.Bootstrap.setDisplayName,\n\n\n    /**\n     * Set the names of all functions defined in the given map\n     *\n     * @signature function(functionMap, classname)\n     * @param functionMap {Object} a map with functions as values\n     * @param classname {String} the name of the class, the functions are\n     *   defined in\n     */\n    setDisplayNames : qx.Bootstrap.setDisplayNames,\n\n    /**\n     * This method will be attached to all classes to return\n     * a nice identifier for them.\n     *\n     * @internal\n     * @signature function()\n     * @return {String} The class identifier\n     */\n    genericToString : qx.Bootstrap.genericToString,\n\n\n    /**\n     * Inherit a clazz from a super class.\n     *\n     * This function differentiates between class and constructor because the\n     * constructor written by the user might be wrapped and the <code>base</code>\n     * property has to be attached to the constructor, while the <code>superclass</code>\n     * property has to be attached to the wrapped constructor.\n     *\n     * @param clazz {Function} The class's wrapped constructor\n     * @param construct {Function} The unwrapped constructor\n     * @param superClass {Function} The super class\n     * @param name {Function} fully qualified class name\n     * @param basename {Function} the base name\n     */\n    extendClass : function(clazz, construct, superClass, name, basename)\n    {\n      var superproto = superClass.prototype;\n\n      // Use helper function/class to save the unnecessary constructor call while\n      // setting up inheritance.\n      var helper = new Function();\n      helper.prototype = superproto;\n      var proto = new helper();\n\n      // Apply prototype to new helper instance\n      clazz.prototype = proto;\n\n      // Store names in prototype\n      proto.name = proto.classname = name;\n      proto.basename = basename;\n\n      /*\n        - Store base constructor to constructor-\n        - Store reference to extend class\n      */\n      construct.base = superClass;\n      clazz.superclass = superClass;\n\n      /*\n        - Store statics/constructor onto constructor/prototype\n        - Store correct constructor\n        - Store statics onto prototype\n      */\n      construct.self = clazz.constructor = proto.constructor = clazz;\n    },\n\n    /** Private list of classes which have a defer method that needs to be executed */\n    __pendingDefers: [],\n\n    /**\n     * Adds a callback for a class so that it's defer method can be called, either after all classes\n     * are loaded or when absolutely necessary because of load-time requirements of other classes.\n     *\n     * @param clazz {Class} Class to add a callback to\n     * @param cb {Function} Callback function\n     */\n    addPendingDefer: function(clazz, cb) {\n      if (qx.$$loader && qx.$$loader.delayDefer) {\n        this.__pendingDefers.push(clazz);\n        clazz.$$pendingDefer = cb;\n      } else {\n        cb.call(clazz);\n      }\n    },\n\n    /**\n     * Executes the defer methods for classes which are required by the dependency information in\n     * dbClassInfo (which is a map in the format generated by qxcompiler).  Defer methods are of course\n     * only executed once but they are always put off until absolutely necessary to avoid potential\n     * side effects and recursive and/or difficult to resolve dependencies.\n     *\n     * @param dbClassInfo {Object} qxcompiler map\n     */\n    executePendingDefers: function(dbClassInfo) {\n      var executeForDbClassInfo = function (dbClassInfo) {\n        if (dbClassInfo.environment) {\n          var required = dbClassInfo.environment.required;\n          if (required) {\n            for (var key in required) {\n              var info = required[key];\n              if (info.load && info.className) {\n                executeForClassName(info.className);\n              }\n            }\n          }\n        }\n        for (var key in dbClassInfo.dependsOn) {\n          var depInfo = dbClassInfo.dependsOn[key];\n          if (depInfo.require || depInfo.usage === \"dynamic\") {\n            executeForClassName(key);\n          }\n        }\n      }\n\n      var executeForClassName = function (className) {\n        var clazz = getByName(className);\n        if (clazz.$$deferComplete) {\n          return;\n        }\n        var dbClassInfo = clazz.$$dbClassInfo;\n        if (dbClassInfo) {\n          executeForDbClassInfo(dbClassInfo);\n        }\n        execute(clazz);\n      }\n\n      var execute = function (clazz) {\n        var cb = clazz.$$pendingDefer;\n        if (cb) {\n          delete clazz.$$pendingDefer;\n          clazz.$$deferComplete = true;\n          cb.call(clazz);\n        }\n      }\n\n      var getByName = function (name) {\n        var clazz = qx.Bootstrap.getByName(name);\n        if (!clazz) {\n          var splits = name.split(\".\");\n          var part = splits[0];\n          var root = qx.$$namespaceRoot && qx.$$namespaceRoot[part] ? qx.$$namespaceRoot : window;\n          var tmp = root;\n\n          for (var i = 0, len = splits.length - 1; tmp && i < len; i++, part = splits[i]) {\n            tmp = tmp[part];\n          }\n          if (tmp != root) {\n            clazz = tmp;\n          }\n        }\n        return clazz;\n      }\n\n      if (!dbClassInfo) {\n        var pendingDefers = this.__pendingDefers;\n        this.__pendingDefers = [];\n        pendingDefers.forEach(execute);\n        return;\n      }\n\n      executeForDbClassInfo(dbClassInfo);\n    },\n\n\n    /**\n     * Find a class by its name\n     *\n     * @param name {String} class name to resolve\n     * @return {Class} the class\n     */\n    getByName : function(name) {\n      return qx.Bootstrap.$$registry[name];\n    },\n\n\n    /** @type {Map} Stores all defined classes */\n    $$registry : {},\n\n\n    /*\n    ---------------------------------------------------------------------------\n      OBJECT UTILITY FUNCTIONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Get the number of own properties in the object.\n     *\n     * @param map {Object} the map\n     * @return {Integer} number of objects in the map\n     * @lint ignoreUnused(key)\n     */\n    objectGetLength : function(map) {\n      return qx.Bootstrap.keys(map).length;\n    },\n\n\n    /**\n     * Inserts all keys of the source object into the\n     * target objects. Attention: The target map gets modified.\n     *\n     * @param target {Object} target object\n     * @param source {Object} object to be merged\n     * @param overwrite {Boolean ? true} If enabled existing keys will be overwritten\n     * @return {Object} Target with merged values from the source object\n     */\n    objectMergeWith : function(target, source, overwrite)\n    {\n      if (overwrite === undefined) {\n        overwrite = true;\n      }\n\n      for (var key in source)\n      {\n        if (overwrite || target[key] === undefined) {\n          target[key] = source[key];\n        }\n      }\n\n      return target;\n    },\n\n\n    /**\n     * IE does not return \"shadowed\" keys even if they are defined directly\n     * in the object.\n     *\n     * @internal\n     * @type {String[]}\n     */\n    __shadowedKeys :\n    [\n      \"isPrototypeOf\",\n      \"hasOwnProperty\",\n      \"toLocaleString\",\n      \"toString\",\n      \"valueOf\",\n      \"propertyIsEnumerable\",\n      \"constructor\"\n    ],\n\n\n    /**\n     * Get the keys of a map as array as returned by a \"for ... in\" statement.\n     *\n     * @signature function(map)\n     * @internal\n     * @param map {Object} the map\n     * @return {Array} array of the keys of the map\n     */\n    keys :\n    ({\n      \"ES5\" : Object.keys,\n\n      \"BROKEN_IE\" : function(map)\n      {\n        if (map === null || (typeof map !== \"object\" && typeof map !== \"function\")) {\n            throw new TypeError(\"Object.keys requires an object as argument.\");\n        }\n\n        var arr = [];\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        for (var key in map) {\n          if (hasOwnProperty.call(map, key)) {\n            arr.push(key);\n          }\n        }\n\n        // IE does not return \"shadowed\" keys even if they are defined directly\n        // in the object. This is incompatible with the ECMA standard!!\n        // This is why this checks are needed.\n        var shadowedKeys = qx.Bootstrap.__shadowedKeys;\n        for (var i=0, a=shadowedKeys, l=a.length; i<l; i++)\n        {\n          if (hasOwnProperty.call(map, a[i])) {\n            arr.push(a[i]);\n          }\n        }\n\n        return arr;\n      },\n\n      \"default\" : function(map)\n      {\n        if (map === null || (typeof map !== \"object\" && typeof map !== \"function\")) {\n            throw new TypeError(\"Object.keys requires an object as argument.\");\n        }\n\n        var arr = [];\n\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        for (var key in map) {\n          if (hasOwnProperty.call(map, key)) {\n            arr.push(key);\n          }\n        }\n\n        return arr;\n      }\n    })[\n      typeof(Object.keys) === \"function\" ? \"ES5\" :\n        (function() {for (var key in {toString : 1}) { return key; }})() !== \"toString\" ? \"BROKEN_IE\" : \"default\"\n    ],\n\n\n    /**\n     * Mapping from JavaScript string representation of objects to names\n     * @internal\n     * @type {Map}\n     */\n    __classToTypeMap :\n    {\n      \"[object String]\": \"String\",\n      \"[object Array]\": \"Array\",\n      \"[object Object]\": \"Object\",\n      \"[object RegExp]\": \"RegExp\",\n      \"[object Number]\": \"Number\",\n      \"[object Boolean]\": \"Boolean\",\n      \"[object Date]\": \"Date\",\n      \"[object Function]\": \"Function\",\n      \"[object Error]\": \"Error\",\n      \"[object Blob]\": \"Blob\",\n      \"[object ArrayBuffer]\": \"ArrayBuffer\",\n      \"[object FormData]\": \"FormData\"\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      FUNCTION UTILITY FUNCTIONS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Returns a function whose \"this\" is altered.\n     *\n     * *Syntax*\n     *\n     * <pre class='javascript'>qx.Bootstrap.bind(myFunction, [self, [varargs...]]);</pre>\n     *\n     * *Example*\n     *\n     * <pre class='javascript'>\n     * function myFunction()\n     * {\n     *   this.setStyle('color', 'red');\n     *   // note that 'this' here refers to myFunction, not an element\n     *   // we'll need to bind this function to the element we want to alter\n     * };\n     *\n     * var myBoundFunction = qx.Bootstrap.bind(myFunction, myElement);\n     * myBoundFunction(); // this will make the element myElement red.\n     * </pre>\n     *\n     * @param func {Function} Original function to wrap\n     * @param self {Object ? null} The object that the \"this\" of the function will refer to.\n     * @param varargs {arguments ? null} The arguments to pass to the function.\n     * @return {Function} The bound function.\n     */\n    bind : function(func, self, varargs)\n    {\n      var fixedArgs = Array.prototype.slice.call(arguments, 2, arguments.length);\n      return function() {\n        var args = Array.prototype.slice.call(arguments, 0, arguments.length);\n        return func.apply(self, fixedArgs.concat(args));\n      };\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      STRING UTILITY FUNCTIONS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Convert the first character of the string to upper case.\n     *\n     * @param str {String} the string\n     * @return {String} the string with an upper case first character\n     */\n    firstUp : function(str) {\n      return str.charAt(0).toUpperCase() + str.substr(1);\n    },\n\n\n    /**\n     * Convert the first character of the string to lower case.\n     *\n     * @param str {String} the string\n     * @return {String} the string with a lower case first character\n     */\n    firstLow : function(str) {\n      return str.charAt(0).toLowerCase() + str.substr(1);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      TYPE UTILITY FUNCTIONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Get the internal class of the value. See\n     * http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/\n     * for details.\n     *\n     * @param value {var} value to get the class for\n     * @return {String} the internal class of the value\n     */\n    getClass : function(value)\n    {\n      // The typeof null and undefined is \"object\" under IE8\n      if(value === undefined) {\n        return \"Undefined\";\n      }else if(value === null) {\n        return \"Null\";\n      }\n      var classString = Object.prototype.toString.call(value);\n      return (\n        qx.Bootstrap.__classToTypeMap[classString] ||\n        classString.slice(8, -1)\n      );\n    },\n\n\n    /**\n     * Whether the value is a string.\n     *\n     * @param value {var} Value to check.\n     * @return {Boolean} Whether the value is a string.\n     */\n    isString : function(value)\n    {\n      // Added \"value !== null\" because IE throws an exception \"Object expected\"\n      // by executing \"value instanceof String\" if value is a DOM element that\n      // doesn't exist. It seems that there is an internal difference between a\n      // JavaScript null and a null returned from calling DOM.\n      // e.q. by document.getElementById(\"ReturnedNull\").\n      return (\n        value !== null && (\n        typeof value === \"string\" ||\n        qx.Bootstrap.getClass(value) === \"String\" ||\n        value instanceof String ||\n        (!!value && !!value.$$isString))\n      );\n    },\n\n\n    /**\n     * Whether the value is an array.\n     *\n     * @param value {var} Value to check.\n     * @return {Boolean} Whether the value is an array.\n     */\n    isArray : function(value)\n    {\n      // Added \"value !== null\" because IE throws an exception \"Object expected\"\n      // by executing \"value instanceof Array\" if value is a DOM element that\n      // doesn't exist. It seems that there is an internal difference between a\n      // JavaScript null and a null returned from calling DOM.\n      // e.q. by document.getElementById(\"ReturnedNull\").\n      return (\n        value !== null && (\n        value instanceof Array ||\n        (value && qx.data && qx.data.IListData && qx.util.OOUtil.hasInterface(value.constructor, qx.data.IListData) ) ||\n        qx.Bootstrap.getClass(value) === \"Array\" ||\n        (!!value && !!value.$$isArray))\n      );\n    },\n\n\n    /**\n     * Whether the value is an object. Note that built-in types like Window are\n     * not reported to be objects.\n     *\n     * @param value {var} Value to check.\n     * @return {Boolean} Whether the value is an object.\n     */\n    isObject : function(value) {\n      return (\n        value !== undefined &&\n        value !== null &&\n        qx.Bootstrap.getClass(value) === \"Object\"\n      );\n    },\n\n\n    /**\n     * Whether the value is a function.\n     *\n     * @param value {var} Value to check.\n     * @return {Boolean} Whether the value is a function.\n     */\n    isFunction : function(value) {\n      return qx.Bootstrap.getClass(value) === \"Function\";\n    },\n\n\n    /**\n     * Whether the value is a function or an async function.\n     *\n     * @param value {var} Value to check.\n     * @return {Boolean} Whether the value is a function.\n     */\n    isFunctionOrAsyncFunction : function(value) {\n      var name = qx.Bootstrap.getClass(value)\n      return ((name === \"Function\")||(name === \"AsyncFunction\"));\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LOGGING UTILITY FUNCTIONS\n    ---------------------------------------------------------------------------\n    */\n\n    $$logs : [],\n\n\n    /**\n     * Sending a message at level \"debug\" to the logger.\n     *\n     * @param object {Object} Contextual object (either instance or static class)\n     * @param message {var} Any number of arguments supported. An argument may\n     *   have any JavaScript data type. All data is serialized immediately and\n     *   does not keep references to other objects.\n     */\n    debug : function(object, message) {\n      qx.Bootstrap.$$logs.push([\"debug\", arguments]);\n    },\n\n\n    /**\n     * Sending a message at level \"info\" to the logger.\n     *\n     * @param object {Object} Contextual object (either instance or static class)\n     * @param message {var} Any number of arguments supported. An argument may\n     *   have any JavaScript data type. All data is serialized immediately and\n     *   does not keep references to other objects.\n     */\n    info : function(object, message) {\n      qx.Bootstrap.$$logs.push([\"info\", arguments]);\n    },\n\n\n    /**\n     * Sending a message at level \"warn\" to the logger.\n     *\n     * @param object {Object} Contextual object (either instance or static class)\n     * @param message {var} Any number of arguments supported. An argument may\n     *   have any JavaScript data type. All data is serialized immediately and\n     *   does not keep references to other objects.\n     */\n    warn : function(object, message) {\n      qx.Bootstrap.$$logs.push([\"warn\", arguments]);\n    },\n\n\n    /**\n     * Sending a message at level \"error\" to the logger.\n     *\n     * @param object {Object} Contextual object (either instance or static class)\n     * @param message {var} Any number of arguments supported. An argument may\n     *   have any JavaScript data type. All data is serialized immediately and\n     *   does not keep references to other objects.\n     */\n    error : function(object, message) {\n      qx.Bootstrap.$$logs.push([\"error\", arguments]);\n    },\n\n\n    /**\n     * Prints the current stack trace at level \"info\"\n     *\n     * @param object {Object} Contextual object (either instance or static class)\n     */\n    trace : function(object) {}\n  }\n});\n"
  ]
}