{
  "className": "qx.dev.Profile",
  "packageName": "qx.dev",
  "name": "Profile",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 30,
        "column": 0
      },
      "end": {
        "line": 346,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nFabian Jakobs (fjakobs)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "qooxdoo profiler.\n\nAll functions of qooxdoo classes (constructors, members, statics) can be profiled\nusing this class.\n\nTo enable profiling this class must be loaded <b>before</b> <code>qx.Class</code> is\nloaded. This can be achieved by making <code>qx.core.Aspect</code> and\n<code>qx.dev.Profile</code> a load time dependency of <code>qx.Class</code>.\nFurther more the variant <code>qx.aspects</code> must be set to <code>on</code>."
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "__profileData": {
      "location": {
        "start": {
          "line": 39,
          "column": 4
        },
        "end": {
          "line": 39,
          "column": 22
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Storage for profiling data"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__callStack": {
      "location": {
        "start": {
          "line": 46,
          "column": 4
        },
        "end": {
          "line": 46,
          "column": 20
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Array for call stack-like data types."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__doProfile": {
      "location": {
        "start": {
          "line": 53,
          "column": 4
        },
        "end": {
          "line": 53,
          "column": 22
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Flag marking profiler run."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__callOverhead": {
      "location": {
        "start": {
          "line": 60,
          "column": 4
        },
        "end": {
          "line": 60,
          "column": 30
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Profiler execution time. Subtracted for more accurate calculations."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__calibrateCount": {
      "location": {
        "start": {
          "line": 67,
          "column": 4
        },
        "end": {
          "line": 67,
          "column": 27
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Amount of times to run calculation of profiler overhead."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "start": {
      "location": {
        "start": {
          "line": 73,
          "column": 4
        },
        "end": {
          "line": 78,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Clear profiling data and start profiling."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "stop": {
      "location": {
        "start": {
          "line": 84,
          "column": 4
        },
        "end": {
          "line": 86,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Stop profiling."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getProfileData": {
      "location": {
        "start": {
          "line": 124,
          "column": 4
        },
        "end": {
          "line": 126,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Return the profiling data as JSON data structure.\n\nExample:\n<pre class=\"javascript\">\n{\n\"qx.core.ObjectRegistry.toHashCode (static)\":{\n*     \"totalTime\":3,\n\"ownTime\":3,\n\"callCount\":218,\n\"subRoutineCalls\":0,\n\"name\":\"qx.core.ObjectRegistry.toHashCode\",\n\"type\":\"static\"\n},\n\"qx.core.Object.addListener (member)\":{\n\"totalTime\":19,\n\"ownTime\":12,\n\"callCount\":59,\n\"subRoutineCalls\":251,\n\"name\":\"qx.core.Object.addListener\",\n\"type\":\"member\"\n},\n\"qx.ui.table.cellrenderer.Default (constructor)\":{\n\"totalTime\":2,\n\"ownTime\":1,\n\"callCount\":1,\n\"subRoutineCalls\":4,\n\"name\":\"qx.ui.table.cellrenderer.Default\",\n\"type\":\"constructor\"\n}\n}\n</pre>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} The current profiling data.",
            "type": "Map",
            "description": " The current profiling data."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "showResults": {
      "location": {
        "start": {
          "line": 135,
          "column": 4
        },
        "end": {
          "line": 177,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Show profiling results in a popup window. The results are sorted by the\nfunction's own time."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "maxLength {Integer?100} maximum number of entries to display.",
            "paramName": "maxLength",
            "description": " maximum number of entries to display.",
            "optional": true,
            "defaultValue": "100",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__calibrate": {
      "location": {
        "start": {
          "line": 189,
          "column": 4
        },
        "end": {
          "line": 224,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Measure the overhead of calling a wrapped function vs. calling an\nunwrapped function."
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreDeprecated(eval)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "count {Integer} Number of iterations to measure.",
            "paramName": "count",
            "description": " Number of iterations to measure.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} Overhead of a wrapped function call in milliseconds.",
            "type": "Number",
            "description": " Overhead of a wrapped function call in milliseconds."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__calibrateHelper": {
      "location": {
        "start": {
          "line": 230,
          "column": 4
        },
        "end": {
          "line": 230,
          "column": 37
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Helper to measure overhead."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "normalizeProfileData": {
      "location": {
        "start": {
          "line": 237,
          "column": 4
        },
        "end": {
          "line": 250,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Normalize profiling data by subtracting the overhead of wrapping from the\nfunction's own time."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "profileBefore": {
      "location": {
        "start": {
          "line": 262,
          "column": 4
        },
        "end": {
          "line": 277,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "This function will be called before each function call. (Start timing)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "fullName {String} Full name of the function including the class name.",
            "paramName": "fullName",
            "description": " Full name of the function including the class name.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "fcn {Function} Function to time.",
            "paramName": "fcn",
            "description": " Function to time.",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "type {String} Function type as in parameter with same name to\n{@link qx.core.Aspect#addAdvice}",
            "paramName": "type",
            "description": " Function type as in parameter with same name to\n{@link qx.core.Aspect#addAdvice}",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "args {arguments} The arguments passed to the wrapped function",
            "paramName": "args",
            "description": " The arguments passed to the wrapped function",
            "type": "arguments"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "profileAfter": {
      "location": {
        "start": {
          "line": 290,
          "column": 4
        },
        "end": {
          "line": 328,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "This function will be called after each function call. (Stop timing)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "fullName {String} Full name of the function including the class name.",
            "paramName": "fullName",
            "description": " Full name of the function including the class name.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "fcn {Function} Function to time.",
            "paramName": "fcn",
            "description": " Function to time.",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "type {String} Function type as in parameter with same name to\n{@link qx.core.Aspect#addAdvice}",
            "paramName": "type",
            "description": " Function type as in parameter with same name to\n{@link qx.core.Aspect#addAdvice}",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "args {arguments} The arguments passed to the wrapped function",
            "paramName": "args",
            "description": " The arguments passed to the wrapped function",
            "type": "arguments"
          },
          {
            "name": "@param",
            "body": "returnValue {var} return value of the wrapped function.",
            "paramName": "returnValue",
            "description": " return value of the wrapped function.",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 332,
        "column": 2
      },
      "end": {
        "line": 345,
        "column": 3
      }
    }
  },
  "descendants": []
}