{
  "className": "qx.dev.Debug",
  "packageName": "qx.dev",
  "name": "Debug",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 29,
        "column": 0
      },
      "end": {
        "line": 484,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2006, 2007 Derrell Lipman\n2011 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nDerrell Lipman (derrell)\nDaniel Wagner (d_wagner)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Useful debug capabilities"
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "qx.ui.decoration.IDecorator"
        },
        {
          "name": "@ignore",
          "body": "qx.theme.manager.Decoration"
        },
        {
          "name": "@ignore",
          "body": "qx.ui.core.queue.Dispose"
        },
        {
          "name": "@ignore",
          "body": "qx.bom.Font"
        },
        {
          "name": "@ignore",
          "body": "qx.theme.manager.Font"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "disposeProfilingActive": {
      "location": {
        "start": {
          "line": 37,
          "column": 4
        },
        "end": {
          "line": 37,
          "column": 34
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Flag that shows whether dispose profiling is currently active"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "debugObject": {
      "location": {
        "start": {
          "line": 54,
          "column": 4
        },
        "end": {
          "line": 62,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Recursively display an object (as a debug message)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {Object}\nThe object to be recursively displayed",
            "paramName": "obj",
            "description": "\nThe object to be recursively displayed",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "initialMessage {String|null}\nThe initial message to be displayed.",
            "paramName": "initialMessage",
            "description": "\nThe initial message to be displayed.",
            "type": [
              "String",
              "null"
            ]
          },
          {
            "name": "@param",
            "body": "maxLevel {Integer ? 10}\nThe maximum level of recursion.  Objects beyond this level will not\nbe displayed.",
            "paramName": "maxLevel",
            "description": "\nThe maximum level of recursion.  Objects beyond this level will not\nbe displayed.",
            "optional": true,
            "defaultValue": "10",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "debugObjectToString": {
      "location": {
        "start": {
          "line": 87,
          "column": 4
        },
        "end": {
          "line": 231,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Recursively display an object (into a string)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {Object}\nThe object to be recursively displayed",
            "paramName": "obj",
            "description": "\nThe object to be recursively displayed",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "initialMessage {String|null}\nThe initial message to be displayed.",
            "paramName": "initialMessage",
            "description": "\nThe initial message to be displayed.",
            "type": [
              "String",
              "null"
            ]
          },
          {
            "name": "@param",
            "body": "maxLevel {Integer ? 10}\nThe maximum level of recursion.  Objects beyond this level will not\nbe displayed.",
            "paramName": "maxLevel",
            "description": "\nThe maximum level of recursion.  Objects beyond this level will not\nbe displayed.",
            "optional": true,
            "defaultValue": "10",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "bHtml {Boolean ? false}\nIf true, then render the debug message in HTML;\nOtherwise, use spaces for indentation and \"\\n\" for end of line.",
            "paramName": "bHtml",
            "description": "\nIf true, then render the debug message in HTML;\nOtherwise, use spaces for indentation and \"\\n\" for end of line.",
            "optional": true,
            "defaultValue": "false",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}\nThe string containing the recursive display of the object",
            "type": "String",
            "description": "\nThe string containing the recursive display of the object"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreUnused(prop)"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getFunctionName": {
      "location": {
        "start": {
          "line": 245,
          "column": 4
        },
        "end": {
          "line": 280,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the name of a member/static function or constructor defined using the new style class definition.\nIf the function could not be found <code>null</code> is returned.\n\nThis function uses a linear search, so don't use it in performance critical\ncode."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "func {Function} member function to get the name of.",
            "paramName": "func",
            "description": " member function to get the name of.",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "functionType {String?\"all\"} Where to look for the function. Possible values are \"members\", \"statics\", \"constructor\", \"all\"",
            "paramName": "functionType",
            "description": " Where to look for the function. Possible values are \"members\", \"statics\", \"constructor\", \"all\"",
            "optional": true,
            "defaultValue": "\"all\"",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|null} Name of the function (null if not found).",
            "type": "String|null",
            "description": " Name of the function (null if not found)."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "debugProperties": {
      "location": {
        "start": {
          "line": 296,
          "column": 4
        },
        "end": {
          "line": 349,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns a string representing the given model. The string will include\nall model objects to a given recursive depth."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "model {qx.core.Object} The model object.",
            "paramName": "model",
            "description": " The model object.",
            "type": "qx.core.Object"
          },
          {
            "name": "@param",
            "body": "maxLevel {Number ? 10} The amount of max recursive depth.",
            "paramName": "maxLevel",
            "description": " The amount of max recursive depth.",
            "optional": true,
            "defaultValue": "10",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "html {Boolean ? false} If the returned string should have \\n\\r as\nnewline of <br>.",
            "paramName": "html",
            "description": " If the returned string should have \\n\\r as\nnewline of <br>.",
            "optional": true,
            "defaultValue": "false",
            "type": "Boolean"
          },
          {
            "name": "@param",
            "body": "indent {Number ? 1} The indentation level.\n(Needed for the recursion)",
            "paramName": "indent",
            "description": " The indentation level.\n(Needed for the recursion)",
            "optional": true,
            "defaultValue": "1",
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} A string representation of the given model.",
            "type": "String",
            "description": " A string representation of the given model."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "startDisposeProfiling": {
      "location": {
        "start": {
          "line": 360,
          "column": 4
        },
        "end": {
          "line": 368,
          "column": 6
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Starts a dispose profiling session. Use {@link #stopDisposeProfiling} to\nget the results"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number|undefined}\nReturns a handle which may be passed to {@link #stopDisposeProfiling}\nindicating the start point for searching for undisposed objects.",
            "type": "Number|undefined",
            "description": "\nReturns a handle which may be passed to {@link #stopDisposeProfiling}\nindicating the start point for searching for undisposed objects."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "stopDisposeProfiling": {
      "location": {
        "start": {
          "line": 386,
          "column": 4
        },
        "end": {
          "line": 403,
          "column": 6
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns a list of any (qx) objects that were created but not disposed\nsince {@link #startDisposeProfiling} was called. Also returns a stack\ntrace recorded at the time the object was created. The starting point\nof dispose tracking is reset, so to do further dispose profiling, a new\ncall to {@link #startDisposeProfile} must be issued."
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(checkFunction)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "checkFunction {Function} Custom check function. It is called once\nfor each object that was created after dispose profiling was started,\nwith the object as the only parameter. If it returns false, the object\nwill not be included in the returned list",
            "paramName": "checkFunction",
            "description": " Custom check function. It is called once\nfor each object that was created after dispose profiling was started,\nwith the object as the only parameter. If it returns false, the object\nwill not be included in the returned list",
            "type": "Function"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map[]} List of maps. Each map contains two keys:\n<code>object</code> and <code>stackTrace</code>",
            "type": "Map[]",
            "description": " List of maps. Each map contains two keys:\n<code>object</code> and <code>stackTrace</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "showDisposeProfiling": {
      "location": {
        "start": {
          "line": 421,
          "column": 4
        },
        "end": {
          "line": 482,
          "column": 6
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns a list of any (qx) objects that were created but not disposed\nsince {@link #startDisposeProfiling} was called. Also returns a stack\ntrace recorded at the time the object was created. Does not restart the\ntracking point, so subsequent calls to this method will continue to\nshow undisposed objects since {@link #startDisposeProfiling} was\ncalled."
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(checkFunction)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "checkFunction {Function} Custom check function. It is called once\nfor each object that was created after dispose profiling was started,\nwith the object as the only parameter. If it returns false, the object\nwill not be included in the returned list",
            "paramName": "checkFunction",
            "description": " Custom check function. It is called once\nfor each object that was created after dispose profiling was started,\nwith the object as the only parameter. If it returns false, the object\nwill not be included in the returned list",
            "type": "Function"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map[]} List of maps. Each map contains two keys:\n<code>object</code> and <code>stackTrace</code>",
            "type": "Map[]",
            "description": " List of maps. Each map contains two keys:\n<code>object</code> and <code>stackTrace</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}