{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/dev/unit/AbstractTestSuite.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "_tests",
    "members",
    "addTestFunction",
    "name",
    "fcn",
    "push",
    "dev",
    "unit",
    "TestFunction",
    "addTestMethod",
    "testCase",
    "functionName",
    "addFail",
    "message",
    "fail",
    "run",
    "testResult",
    "i",
    "length",
    "getTestMethods",
    "methods",
    "test",
    "destruct",
    "_disposeArray",
    "AbstractTestSuite"
  ],
  "mappings": ";;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAsBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,+BAAhB,EACA;AACEC,YAASN,GAAGO,IAAH,CAAQC,MADnB;AAEEC,UAAO,UAFT;;AAKEC,eAAY,qBACZ;AACE;AACA,WAAKC,MAAL,GAAc,EAAd;AACD,KATH;;AAYEC,aACA;AACED,cAAS,IADX;;AAIE;;;;;;AAMAE,uBAAkB,yBAASC,IAAT,EAAeC,GAAf,EAAoB;AACpC,aAAKJ,MAAL,CAAYK,IAAZ,CAAiB,IAAIhB,GAAGiB,GAAH,CAAOC,IAAP,CAAYC,YAAhB,CAA6B,IAA7B,EAAmCL,IAAnC,EAAyCC,GAAzC,CAAjB;AACD,OAZH;;AAeE;;;;;;AAMAK,qBAAgB,uBAASC,QAAT,EAAmBC,YAAnB,EAAiC;AAC/C,aAAKX,MAAL,CAAYK,IAAZ,CAAiB,IAAIhB,GAAGiB,GAAH,CAAOC,IAAP,CAAYC,YAAhB,CAA6BE,QAA7B,EAAuCC,YAAvC,CAAjB;AACD,OAvBH;;AA0BE;;;;;;AAMAC,eAAU,iBAASD,YAAT,EAAuBE,OAAvB,EACV;AACE,aAAKX,eAAL,CAAqBS,YAArB,EAAmC,YAAW;AAC5C,eAAKG,IAAL,CAAUD,OAAV;AACD,SAFD;AAGD,OArCH;;AAwCE;;;;;AAKAE,WAAM,aAASC,UAAT,EACN;AACE,aAAK,IAAIC,IAAE,CAAX,EAAcA,IAAE,KAAKjB,MAAL,CAAYkB,MAA5B,EAAoCD,GAApC,EAAyC;AACtC,eAAKjB,MAAL,CAAYiB,CAAZ,CAAD,CAAiBF,GAAjB,CAAqBC,UAArB;AACD;AACF,OAlDH;;AAqDE;;;;;AAKAG,sBAAiB,0BACjB;AACE,YAAIC,UAAU,EAAd;;AAEA,aAAK,IAAIH,IAAE,CAAX,EAAcA,IAAE,KAAKjB,MAAL,CAAYkB,MAA5B,EAAoCD,GAApC,EACA;AACE,cAAII,OAAO,KAAKrB,MAAL,CAAYiB,CAAZ,CAAX;;AAEA,cAAII,gBAAgBhC,GAAGiB,GAAH,CAAOC,IAAP,CAAYC,YAAhC,EAA8C;AAC5CY,oBAAQf,IAAR,CAAagB,IAAb;AACD;AACF;;AAED,eAAOD,OAAP;AACD;AAxEH,KAbF;;AAwFEE,cAAW,oBAAW;AACpB,WAAKC,aAAL,CAAmB,QAAnB;AACD;AA1FH,GADA,C;AAtBAlC,KAAGiB,GAAH,CAAOC,IAAP,CAAYiB,iBAAZ,CAA8BhC,aAA9B,GAA8CA,aAA9C",
  "file": "AbstractTestSuite.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A TestSuite is a collection of test functions, classes and other test suites,\n * which should be run together.\n */\nqx.Class.define(\"qx.dev.unit.AbstractTestSuite\",\n{\n  extend : qx.core.Object,\n  type : \"abstract\",\n\n\n  construct : function()\n  {\n    this.base(arguments);\n    this._tests = [];\n  },\n\n\n  members :\n  {\n    _tests : null,\n\n\n    /**\n     * Add a single function to test\n     *\n     * @param name {String} Name of the function\n     * @param fcn {Function} The test function\n     */\n    addTestFunction : function(name, fcn) {\n      this._tests.push(new qx.dev.unit.TestFunction(null, name, fcn));\n    },\n\n\n    /**\n     * Add a method from a class as test to the suite\n     *\n     * @param testCase {qx.dev.unit.TestCase} The class containing the test method\n     * @param functionName {String} The name of the test method\n     */\n    addTestMethod : function(testCase, functionName) {\n      this._tests.push(new qx.dev.unit.TestFunction(testCase, functionName));\n    },\n\n\n    /**\n     * Add a test function to the suite, which fails.\n     *\n     * @param functionName {String} Name of the function\n     * @param message {String} The fail message\n     */\n    addFail : function(functionName, message)\n    {\n      this.addTestFunction(functionName, function() {\n        this.fail(message);\n      });\n    },\n\n\n    /**\n     * Run all tests using the given test result\n     *\n     * @param testResult {qx.dev.unit.TestResult} Test result class, which runs the tests.\n     */\n    run : function(testResult)\n    {\n      for (var i=0; i<this._tests.length; i++) {\n        (this._tests[i]).run(testResult);\n      }\n    },\n\n\n    /**\n     * Get a list of all test methods in the suite\n     *\n     * @return {Function[]} A list of all test methods in the suite\n     */\n    getTestMethods : function()\n    {\n      var methods = [];\n\n      for (var i=0; i<this._tests.length; i++)\n      {\n        var test = this._tests[i];\n\n        if (test instanceof qx.dev.unit.TestFunction) {\n          methods.push(test);\n        }\n      }\n\n      return methods;\n    }\n  },\n\n  destruct : function() {\n    this._disposeArray(\"_tests\");\n  }\n});\n"
  ]
}