{
  "className": "qx.dev.unit.AbstractTestSuite",
  "packageName": "qx.dev.unit",
  "name": "AbstractTestSuite",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0
      },
      "end": {
        "line": 115,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nFabian Jakobs (fjakobs)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "A TestSuite is a collection of test functions, classes and other test suites,\nwhich should be run together."
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": false,
  "construct": {
    "location": {
      "start": {
        "line": 29,
        "column": 2
      },
      "end": {
        "line": 33,
        "column": 3
      }
    }
  },
  "members": {
    "_tests": {
      "location": {
        "start": {
          "line": 38,
          "column": 4
        },
        "end": {
          "line": 38,
          "column": 17
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "addTestFunction": {
      "location": {
        "start": {
          "line": 47,
          "column": 4
        },
        "end": {
          "line": 49,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Add a single function to test"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String} Name of the function",
            "paramName": "name",
            "description": " Name of the function",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "fcn {Function} The test function",
            "paramName": "fcn",
            "description": " The test function",
            "type": "Function"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addTestMethod": {
      "location": {
        "start": {
          "line": 58,
          "column": 4
        },
        "end": {
          "line": 60,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Add a method from a class as test to the suite"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "testCase {qx.dev.unit.TestCase} The class containing the test method",
            "paramName": "testCase",
            "description": " The class containing the test method",
            "type": "qx.dev.unit.TestCase"
          },
          {
            "name": "@param",
            "body": "functionName {String} The name of the test method",
            "paramName": "functionName",
            "description": " The name of the test method",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addFail": {
      "location": {
        "start": {
          "line": 69,
          "column": 4
        },
        "end": {
          "line": 74,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Add a test function to the suite, which fails."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "functionName {String} Name of the function",
            "paramName": "functionName",
            "description": " Name of the function",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "message {String} The fail message",
            "paramName": "message",
            "description": " The fail message",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "run": {
      "location": {
        "start": {
          "line": 82,
          "column": 4
        },
        "end": {
          "line": 87,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Run all tests using the given test result"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "testResult {qx.dev.unit.TestResult} Test result class, which runs the tests.",
            "paramName": "testResult",
            "description": " Test result class, which runs the tests.",
            "type": "qx.dev.unit.TestResult"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getTestMethods": {
      "location": {
        "start": {
          "line": 95,
          "column": 4
        },
        "end": {
          "line": 109,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get a list of all test methods in the suite"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Function[]} A list of all test methods in the suite",
            "type": "Function[]",
            "description": " A list of all test methods in the suite"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 112,
        "column": 2
      },
      "end": {
        "line": 114,
        "column": 3
      }
    }
  },
  "descendants": [
    "qx.dev.unit.TestClass",
    "qx.dev.unit.TestSuite"
  ]
}