{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/log/appender/RhinoConsole.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__OUT",
    "__ERR",
    "log",
    "logMessage",
    "level",
    "println",
    "debug",
    "info",
    "warn",
    "error",
    "process",
    "entry",
    "prop",
    "items",
    "p",
    "l",
    "length",
    "item",
    "text",
    "defer",
    "java",
    "lang",
    "appender",
    "RhinoConsole",
    "System",
    "out",
    "err"
  ],
  "mappings": ";;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAwBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,8BAAhB,EAAgD;;AAE9CC,aACA;AACE;;;AAGAC,aAAQ,IAJV;AAKE;;;AAGAC,aAAQ,IARV;;AAUE;;;;;;;AAOAC,WAAM,aAASC,UAAT,EAAqBC,KAArB,EACN;AACE,YAAIA,SAAS,OAAb,EAAsB;AACpB,eAAKH,KAAL,CAAWI,OAAX,CAAmBF,UAAnB;AACD,SAFD,MAEO;AACL,eAAKH,KAAL,CAAWK,OAAX,CAAmBF,UAAnB;AACD;AACF,OAxBH;;AA0BE;;;;;AAKAG,aAAQ,eAASH,UAAT,EACR;AACE,aAAKD,GAAL,CAASC,UAAT,EAAqB,OAArB;AACD,OAlCH;;AAoCE;;;;;AAKAI,YAAO,cAASJ,UAAT,EACP;AACE,aAAKD,GAAL,CAASC,UAAT,EAAqB,MAArB;AACD,OA5CH;;AA8CE;;;;;AAKAK,YAAO,cAASL,UAAT,EACP;AACE,aAAKD,GAAL,CAASC,UAAT,EAAqB,MAArB;AACD,OAtDH;;AAwDE;;;;;AAKAM,aAAQ,eAASN,UAAT,EACR;AACE,aAAKD,GAAL,CAASC,UAAT,EAAqB,OAArB;AACD,OAhEH;;AAkEE;;;;;AAKAO,eAAU,iBAASC,KAAT,EACV;AACE,YAAIP,QAAQO,MAAMP,KAAN,IAAe,MAA3B;AACA,aAAK,IAAIQ,IAAT,IAAiBD,KAAjB,EAAwB;AACtB,cAAIC,QAAQ,OAAZ,EAAqB;AACnB,gBAAIC,QAAQF,MAAMC,IAAN,CAAZ;AACA,iBAAK,IAAIE,IAAE,CAAN,EAASC,IAAEF,MAAMG,MAAtB,EAA8BF,IAAEC,CAAhC,EAAmCD,GAAnC,EAAwC;AACtC,kBAAIG,OAAOJ,MAAMC,CAAN,CAAX;AACA,mBAAKV,KAAL,EAAYa,KAAKC,IAAjB;AACD;AACF;AACF;AACF;;AAnFH,KAH8C;;AA0F9CC,WAAQ,iBACR;AACE,UAAI,OAAOC,IAAP,KAAiB,WAAjB,IAAgC,OAAOA,KAAKC,IAAZ,KAAsB,WAA1D,EAAuE;AACrE5B,WAAGS,GAAH,CAAOoB,QAAP,CAAgBC,YAAhB,CAA6BvB,KAA7B,GAAqCoB,KAAKC,IAAL,CAAUG,MAAV,CAAiBC,GAAtD;AACAhC,WAAGS,GAAH,CAAOoB,QAAP,CAAgBC,YAAhB,CAA6BtB,KAA7B,GAAqCmB,KAAKC,IAAL,CAAUG,MAAV,CAAiBE,GAAtD;AACD;AACF;;AAhG6C,GAAhD,C;AAxBAjC,KAAGS,GAAH,CAAOoB,QAAP,CAAgBC,YAAhB,CAA6B3B,aAA7B,GAA6CA,aAA7C",
  "file": "RhinoConsole.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006-2010 1&1 Internet AG, Germany, http://www.1and1.org\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (d_wagner)\n\n************************************************************************ */\n\n/**\n * Log appender for qooxdoo applications running in Mozilla Rhino. Writes log\n * messages to STDOUT/STDERR.\n *\n * @ignore(java.*)\n */\nqx.Class.define(\"qx.log.appender.RhinoConsole\", {\n\n  statics:\n  {\n    /**\n     * java.lang.System.out\n     */\n    __OUT : null,\n    /**\n     * java.lang.System.err\n     */\n    __ERR : null,\n\n    /**\n     * Writes a message to the shell. Errors will be sent to STDERR, everything\n     * else goes to STDOUT\n     *\n     * @param logMessage {String} Message to be logged\n     * @param level {String} Log level. One of \"debug\", \"info\", \"warn\", \"error\"\n     */\n    log : function(logMessage, level)\n    {\n      if (level == \"error\") {\n        this.__ERR.println(logMessage);\n      } else {\n        this.__OUT.println(logMessage);\n      }\n    },\n\n    /**\n     * Logs a debug message\n     *\n     * @param logMessage {String} Message to be logged\n     */\n    debug : function(logMessage)\n    {\n      this.log(logMessage, \"debug\");\n    },\n\n    /**\n     * Logs an info message\n     *\n     * @param logMessage {String} Message to be logged\n     */\n    info : function(logMessage)\n    {\n      this.log(logMessage, \"info\");\n    },\n\n    /**\n     * Logs a warning message\n     *\n     * @param logMessage {String} Message to be logged\n     */\n    warn : function(logMessage)\n    {\n      this.log(logMessage, \"warn\");\n    },\n\n    /**\n     * Logs an error message\n     *\n     * @param logMessage {String} Message to be logged\n     */\n    error : function(logMessage)\n    {\n      this.log(logMessage, \"error\");\n    },\n\n    /**\n     * Process a log entry object from qooxdoo's logging system.\n     *\n     * @param entry {Map} Log entry object\n     */\n    process : function(entry)\n    {\n      var level = entry.level || \"info\";\n      for (var prop in entry) {\n        if (prop == \"items\") {\n          var items = entry[prop];\n          for (var p=0, l=items.length; p<l; p++) {\n            var item = items[p];\n            this[level](item.text);\n          }\n        }\n      }\n    }\n\n  },\n\n  defer : function()\n  {\n    if (typeof(java) !== \"undefined\" && typeof(java.lang) !== \"undefined\") {\n      qx.log.appender.RhinoConsole.__OUT = java.lang.System.out;\n      qx.log.appender.RhinoConsole.__ERR = java.lang.System.err;\n    }\n  }\n\n});\n"
  ]
}