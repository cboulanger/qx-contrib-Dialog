{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/core/BaseInit.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__application",
    "getApplication",
    "ready",
    "core",
    "Environment",
    "get",
    "log",
    "Logger",
    "warn",
    "debug",
    "Date",
    "LOADSTART",
    "app",
    "clazz",
    "getByName",
    "start",
    "main",
    "finalize",
    "__close",
    "e",
    "close",
    "__shutdown",
    "terminate",
    "BaseInit"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAuBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,kBAAhB,EACA;AACE;;;;;;AAMAC,aACA;AACEC,qBAAgB,IADlB;;AAIE;;;;;AAKAC,sBAAiB,0BAAW;AAC1B,eAAO,KAAKD,aAAL,IAAsB,IAA7B;AACD,OAXH;;AAcE;;;;;AAKAE,aAAQ,iBACR;AACE,YAAI,KAAKF,aAAT,EAAwB;AACtB;AACD;;AAED,YAAIP,GAAGU,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,KAA0C,EAA9C,EAAkD;AAChDZ,aAAGa,GAAH,CAAOC,MAAP,CAAcC,IAAd,CAAmB,0BAAnB;AACD;AACD,YAAIf,GAAGU,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,gBAAxB,KAA6C,EAAjD,EAAqD;AACnDZ,aAAGa,GAAH,CAAOC,MAAP,CAAcC,IAAd,CAAmB,6CAAnB;AACD;AACD,YAAIf,GAAGU,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,SAAxB,KAAsC,EAA1C,EAA8C;AAC5CZ,aAAGa,GAAH,CAAOC,MAAP,CAAcC,IAAd,CAAmB,oCAAnB;AACD;;AAEDf,WAAGa,GAAH,CAAOC,MAAP,CAAcE,KAAd,CAAoB,IAApB,EAA0B,oBAAoB,IAAIC,IAAJ,KAAWjB,GAAGC,SAAH,CAAaiB,SAA5C,IAAyD,IAAnF;;AAEA,YAAIC,MAAMnB,GAAGU,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,gBAAxB,CAAV;AACA,YAAIQ,QAAQpB,GAAGI,KAAH,CAASiB,SAAT,CAAmBF,GAAnB,CAAZ;;AAEA,YAAIC,KAAJ,EACA;AACE,eAAKb,aAAL,GAAqB,IAAIa,KAAJ,EAArB;;AAEA,cAAIE,QAAQ,IAAIL,IAAJ,EAAZ;AACA,eAAKV,aAAL,CAAmBgB,IAAnB;AACAvB,aAAGa,GAAH,CAAOC,MAAP,CAAcE,KAAd,CAAoB,IAApB,EAA0B,oBAAoB,IAAIC,IAAJ,KAAWK,KAA/B,IAAwC,IAAlE;;AAEA,cAAIA,QAAQ,IAAIL,IAAJ,EAAZ;AACA,eAAKV,aAAL,CAAmBiB,QAAnB;AACAxB,aAAGa,GAAH,CAAOC,MAAP,CAAcE,KAAd,CAAoB,IAApB,EAA0B,wBAAwB,IAAIC,IAAJ,KAAWK,KAAnC,IAA4C,IAAtE;AACD,SAXD,MAaA;AACEtB,aAAGa,GAAH,CAAOC,MAAP,CAAcC,IAAd,CAAmB,gCAAgCI,GAAnD;AACD;AACF,OAxDH;;AA2DE;;;;;;AAMAM,eAAU,iBAASC,CAAT,EACV;AACE,YAAIP,MAAM,KAAKZ,aAAf;AACA,YAAIY,GAAJ,EAAS;AACPA,cAAIQ,KAAJ;AACD;AACF,OAvEH;;AA0EE;;;;;AAKAC,kBAAa,sBACb;AACE,YAAIT,MAAM,KAAKZ,aAAf;;AAEA,YAAIY,GAAJ,EAAS;AACPA,cAAIU,SAAJ;AACD;AACF;AAtFH;AARF,GADA,C;AAvBA7B,KAAGU,IAAH,CAAQoB,QAAR,CAAiB3B,aAAjB,GAAiCA,aAAjC",
  "file": "BaseInit.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Daniel Wagner (d_wagner)\n     * John Spackman\n\n************************************************************************ */\n\n/**\n * This is the base class for non-browser qooxdoo applications.\n */\nqx.Class.define(\"qx.core.BaseInit\",\n{\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    __application : null,\n\n\n    /**\n     * Returns the instantiated qooxdoo application.\n     *\n     * @return {qx.core.Object} The application instance.\n     */\n    getApplication : function() {\n      return this.__application || null;\n    },\n\n\n    /**\n     * Runs when the application is loaded. Automatically creates an instance\n     * of the class defined by the setting <code>qx.application</code>.\n     *\n     */\n    ready : function()\n    {\n      if (this.__application) {\n        return;\n      }\n\n      if (qx.core.Environment.get(\"engine.name\") == \"\") {\n        qx.log.Logger.warn(\"Could not detect engine!\");\n      }\n      if (qx.core.Environment.get(\"engine.version\") == \"\") {\n        qx.log.Logger.warn(\"Could not detect the version of the engine!\");\n      }\n      if (qx.core.Environment.get(\"os.name\") == \"\") {\n        qx.log.Logger.warn(\"Could not detect operating system!\");\n      }\n\n      qx.log.Logger.debug(this, \"Load runtime: \" + (new Date - qx.Bootstrap.LOADSTART) + \"ms\");\n\n      var app = qx.core.Environment.get(\"qx.application\");\n      var clazz = qx.Class.getByName(app);\n\n      if (clazz)\n      {\n        this.__application = new clazz;\n\n        var start = new Date;\n        this.__application.main();\n        qx.log.Logger.debug(this, \"Main runtime: \" + (new Date - start) + \"ms\");\n\n        var start = new Date;\n        this.__application.finalize();\n        qx.log.Logger.debug(this, \"Finalize runtime: \" + (new Date - start) + \"ms\");\n      }\n      else\n      {\n        qx.log.Logger.warn(\"Missing application class: \" + app);\n      }\n    },\n\n\n    /**\n     * Runs before the document is unloaded. Calls the application's close\n     * method to check if the unload process should be stopped.\n     *\n     * @param e {qx.event.type.Native} Incoming beforeunload event.\n     */\n    __close : function(e)\n    {\n      var app = this.__application;\n      if (app) {\n        app.close();\n      }\n    },\n\n\n    /**\n     * Runs when the document is unloaded. Automatically terminates a previously\n     * created application instance.\n     *\n     */\n    __shutdown : function()\n    {\n      var app = this.__application;\n\n      if (app) {\n        app.terminate();\n      }\n    }\n  }\n});\n"
  ]
}