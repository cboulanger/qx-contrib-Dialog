{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/bom/Template.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "version",
    "render",
    "renderToNode",
    "template",
    "view",
    "partials",
    "renderedTmpl",
    "_createNodeFromTemplate",
    "get",
    "id",
    "document",
    "getElementById",
    "innerHTML",
    "search",
    "createTextNode",
    "helper",
    "dom",
    "Element",
    "create",
    "children",
    "bom",
    "Template",
    "exports",
    "defineMustache",
    "global",
    "factory",
    "nodeName",
    "amd",
    "Mustache",
    "mustacheFactory",
    "mustache",
    "objectToString",
    "Object",
    "prototype",
    "toString",
    "isArray",
    "Array",
    "isArrayPolyfill",
    "object",
    "call",
    "isFunction",
    "typeStr",
    "obj",
    "escapeRegExp",
    "string",
    "replace",
    "hasProperty",
    "propName",
    "regExpTest",
    "RegExp",
    "test",
    "testRegExp",
    "re",
    "nonSpaceRe",
    "isWhitespace",
    "entityMap",
    "escapeHtml",
    "String",
    "fromEntityMap",
    "s",
    "whiteRe",
    "spaceRe",
    "equalsRe",
    "curlyRe",
    "tagRe",
    "parseTemplate",
    "tags",
    "sections",
    "tokens",
    "spaces",
    "hasTag",
    "nonSpace",
    "stripSpace",
    "length",
    "pop",
    "openingTagRe",
    "closingTagRe",
    "closingCurlyRe",
    "compileTags",
    "tagsToCompile",
    "split",
    "Error",
    "scanner",
    "Scanner",
    "start",
    "type",
    "value",
    "chr",
    "token",
    "openSection",
    "eos",
    "pos",
    "scanUntil",
    "i",
    "valueLength",
    "charAt",
    "push",
    "scan",
    "nestTokens",
    "squashTokens",
    "squashedTokens",
    "lastToken",
    "numTokens",
    "nestedTokens",
    "collector",
    "section",
    "tail",
    "match",
    "index",
    "substring",
    "Context",
    "parentContext",
    "cache",
    "parent",
    "lookup",
    "name",
    "hasOwnProperty",
    "context",
    "names",
    "lookupHit",
    "indexOf",
    "Writer",
    "clearCache",
    "parse",
    "renderTokens",
    "originalTemplate",
    "buffer",
    "symbol",
    "undefined",
    "renderSection",
    "renderInverted",
    "renderPartial",
    "unescapedValue",
    "escapedValue",
    "rawValue",
    "self",
    "subRender",
    "j",
    "slice",
    "escape",
    "defaultWriter",
    "TypeError",
    "to_html",
    "send",
    "result"
  ],
  "mappings": "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",
  "file": "Template.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n   ======================================================================\n\n   This class contains code based on the following work:\n\n   * Mustache.js version 2.2.1\n\n     Code:\n       https://github.com/janl/mustache.js\n\n     Copyright:\n       (c) 2009 Chris Wanstrath (Ruby)\n       (c) 2010 Jan Lehnardt (JavaScript)\n\n     License:\n       MIT: http://www.opensource.org/licenses/mit-license.php\n\n   ----------------------------------------------------------------------\n\n    The MIT License\n\n    Copyright (c) 2009 Chris Wanstrath (Ruby)\n    Copyright (c) 2010 Jan Lehnardt (JavaScript)\n\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation files\n    (the \"Software\"), to deal in the Software without restriction,\n    including without limitation the rights to use, copy, modify, merge,\n    publish, distribute, sublicense, and/or sell copies of the Software,\n    and to permit persons to whom the Software is furnished to do so,\n    subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n    BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n\n************************************************************************ */\n\n/**\n * The is a template class which can be used for HTML templating. In fact,\n * this is a wrapper for mustache.js which is a \"framework-agnostic way to\n * render logic-free views\".\n *\n * Here is a basic example how to use it:\n * Template:\n * <pre class=\"javascript\">\n * var template = \"Hi, my name is {{name}}!\";\n * var view = {name: \"qooxdoo\"};\n * qx.bom.Template.render(template, view);\n * // return \"Hi, my name is qooxdoo!\"\n * </pre>\n *\n * For further details, please visit the mustache.js documentation here:\n *   https://github.com/janl/mustache.js/blob/master/README.md\n *\n * @ignore(module)\n */\nqx.Bootstrap.define(\"qx.bom.Template\", {\n  statics : {\n    /** Contains the mustache.js version. */\n    version: null,\n\n    /**\n     * Original and only template method of mustache.js. For further\n     * documentation, please visit https://github.com/janl/mustache.js\n     *\n     * @signature function(template, view, partials)\n     * @param template {String} The String containing the template.\n     * @param view {Object} The object holding the data to render.\n     * @param partials {Object} Object holding parts of a template.\n     * @return {String} The parsed template.\n     */\n    render: null,\n\n    /**\n     * Combines {@link #render} and {@link #get}. Input is equal to {@link #render}\n     * and output is equal to {@link #get}. The advantage over {@link #get}\n     * is that you don't need a HTML template but can use a template\n     * string and still get a DOM element. Keep in mind that templates\n     * can only have one root element.\n     *\n     * @param template {String} The String containing the template.\n     * @param view {Object} The object holding the data to render.\n     * @param partials {Object} Object holding parts of a template.\n     * @return {Element} A DOM element holding the parsed template data.\n     */\n    renderToNode : function(template, view, partials) {\n       var renderedTmpl = this.render(template, view, partials);\n       return this._createNodeFromTemplate(renderedTmpl);\n    },\n\n    /**\n     * Helper method which provides you with a direct access to templates\n     * stored as HTML in the DOM. The DOM node with the given ID will be used\n     * as a template, parsed and a new DOM node will be returned containing the\n     * parsed data. Keep in mind to have only one root DOM element in the the\n     * template.\n     * Additionally, you should not put the template into a regular, hidden\n     * DOM element because the template may not be valid HTML due to the containing\n     * mustache tags. We suggest to put it into a script tag with the type\n     * <code>text/template</code>.\n     *\n     * @param id {String} The id of the HTML template in the DOM.\n     * @param view {Object} The object holding the data to render.\n     * @param partials {Object} Object holding parts of a template.\n     * @return {Element} A DOM element holding the parsed template data.\n     */\n    get : function(id, view, partials) {\n      // get the content stored in the DOM\n      var template = document.getElementById(id);\n      return this.renderToNode(template.innerHTML, view, partials);\n    },\n\n    /**\n     * Accepts a parsed template and returns a (potentially nested) node.\n     *\n     * @param template {String} The String containing the template.\n     * @return {Element} A DOM element holding the parsed template data.\n     */\n    _createNodeFromTemplate : function(template) {\n      // template is text only (no html elems) so use text node\n      if (template.search(/<|>/) === -1) {\n        return document.createTextNode(template);\n      }\n\n      // template has html elems so convert string into DOM nodes\n      var helper = qx.dom.Element.create(\"div\");\n      helper.innerHTML = template;\n\n      return helper.children[0];\n    }\n  }\n});\n\n(function() {\n// prevent using CommonJS exports object,\n// by shadowing global exports object\nvar exports;\n\n// prevent using AMD compatible loader,\n// by shadowing global define function\nvar define;\n\n/**\n * Below is the original mustache.js code. Snapshot date is mentioned in\n * the head of this file.\n * @ignore(exports)\n * @ignore(define.*)\n * @ignore(module.*)\n * @lint ignoreNoLoopBlock()\n */\n /*!\n  * mustache.js - Logic-less {{mustache}} templates with JavaScript\n  * http://github.com/janl/mustache.js\n  */\n\n /*global define: false Mustache: true*/\n\n (function defineMustache (global, factory) {\n   if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n     factory(exports); // CommonJS\n   } else if (typeof define === 'function' && define.amd) {\n     define(['exports'], factory); // AMD\n   } else {\n     global.Mustache = {};\n     factory(global.Mustache); // script, wsh, asp\n   }\n }(this, function mustacheFactory (mustache) {\n\n   var objectToString = Object.prototype.toString;\n   var isArray = Array.isArray || function isArrayPolyfill (object) {\n     return objectToString.call(object) === '[object Array]';\n   };\n\n   function isFunction (object) {\n     return typeof object === 'function';\n   }\n\n   /**\n    * More correct typeof string handling array\n    * which normally returns typeof 'object'\n    */\n   function typeStr (obj) {\n     return isArray(obj) ? 'array' : typeof obj;\n   }\n\n   function escapeRegExp (string) {\n     return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n   }\n\n   /**\n    * Null safe way of checking whether or not an object,\n    * including its prototype, has a given property\n    */\n   function hasProperty (obj, propName) {\n     return obj != null && typeof obj === 'object' && (propName in obj);\n   }\n\n   // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n   // See https://github.com/janl/mustache.js/issues/189\n   var regExpTest = RegExp.prototype.test;\n   function testRegExp (re, string) {\n     return regExpTest.call(re, string);\n   }\n\n   var nonSpaceRe = /\\S/;\n   function isWhitespace (string) {\n     return !testRegExp(nonSpaceRe, string);\n   }\n\n   var entityMap = {\n     '&': '&amp;',\n     '<': '&lt;',\n     '>': '&gt;',\n     '\"': '&quot;',\n     \"'\": '&#39;',\n     '/': '&#x2F;',\n     '`': '&#x60;',\n     '=': '&#x3D;'\n   };\n\n   function escapeHtml (string) {\n     return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n       return entityMap[s];\n     });\n   }\n\n   var whiteRe = /\\s*/;\n   var spaceRe = /\\s+/;\n   var equalsRe = /\\s*=/;\n   var curlyRe = /\\s*\\}/;\n   var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n   /**\n    * Breaks up the given `template` string into a tree of tokens. If the `tags`\n    * argument is given here it must be an array with two string values: the\n    * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n    * course, the default is to use mustaches (i.e. mustache.tags).\n    *\n    * A token is an array with at least 4 elements. The first element is the\n    * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n    * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n    * all text that appears outside a symbol this element is \"text\".\n    *\n    * The second element of a token is its \"value\". For mustache tags this is\n    * whatever else was inside the tag besides the opening symbol. For text tokens\n    * this is the text itself.\n    *\n    * The third and fourth elements of the token are the start and end indices,\n    * respectively, of the token in the original template.\n    *\n    * Tokens that are the root node of a subtree contain two more elements: 1) an\n    * array of tokens in the subtree and 2) the index in the original template at\n    * which the closing tag for that section begins.\n    */\n   function parseTemplate (template, tags) {\n     if (!template)\n       return [];\n\n     var sections = [];     // Stack to hold section tokens\n     var tokens = [];       // Buffer to hold the tokens\n     var spaces = [];       // Indices of whitespace tokens on the current line\n     var hasTag = false;    // Is there a {{tag}} on the current line?\n     var nonSpace = false;  // Is there a non-space char on the current line?\n\n     // Strips all whitespace tokens array for the current line\n     // if there was a {{#tag}} on it and otherwise only space.\n     function stripSpace () {\n       if (hasTag && !nonSpace) {\n         while (spaces.length)\n           delete tokens[spaces.pop()];\n       } else {\n         spaces = [];\n       }\n\n       hasTag = false;\n       nonSpace = false;\n     }\n\n     var openingTagRe, closingTagRe, closingCurlyRe;\n     function compileTags (tagsToCompile) {\n       if (typeof tagsToCompile === 'string')\n         tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n       if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n         throw new Error('Invalid tags: ' + tagsToCompile);\n\n       openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n       closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n       closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n     }\n\n     compileTags(tags || mustache.tags);\n\n     var scanner = new Scanner(template);\n\n     var start, type, value, chr, token, openSection;\n     while (!scanner.eos()) {\n       start = scanner.pos;\n\n       // Match any text between tags.\n       value = scanner.scanUntil(openingTagRe);\n\n       if (value) {\n         for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n           chr = value.charAt(i);\n\n           if (isWhitespace(chr)) {\n             spaces.push(tokens.length);\n           } else {\n             nonSpace = true;\n           }\n\n           tokens.push([ 'text', chr, start, start + 1 ]);\n           start += 1;\n\n           // Check for whitespace on the current line.\n           if (chr === '\\n')\n             stripSpace();\n         }\n       }\n\n       // Match the opening tag.\n       if (!scanner.scan(openingTagRe))\n         break;\n\n       hasTag = true;\n\n       // Get the tag type.\n       type = scanner.scan(tagRe) || 'name';\n       scanner.scan(whiteRe);\n\n       // Get the tag value.\n       if (type === '=') {\n         value = scanner.scanUntil(equalsRe);\n         scanner.scan(equalsRe);\n         scanner.scanUntil(closingTagRe);\n       } else if (type === '{') {\n         value = scanner.scanUntil(closingCurlyRe);\n         scanner.scan(curlyRe);\n         scanner.scanUntil(closingTagRe);\n         type = '&';\n       } else {\n         value = scanner.scanUntil(closingTagRe);\n       }\n\n       // Match the closing tag.\n       if (!scanner.scan(closingTagRe))\n         throw new Error('Unclosed tag at ' + scanner.pos);\n\n       token = [ type, value, start, scanner.pos ];\n       tokens.push(token);\n\n       if (type === '#' || type === '^') {\n         sections.push(token);\n       } else if (type === '/') {\n         // Check section nesting.\n         openSection = sections.pop();\n\n         if (!openSection)\n           throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n         if (openSection[1] !== value)\n           throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n       } else if (type === 'name' || type === '{' || type === '&') {\n         nonSpace = true;\n       } else if (type === '=') {\n         // Set the tags for the next time around.\n         compileTags(value);\n       }\n     }\n\n     // Make sure there are no open sections when we're done.\n     openSection = sections.pop();\n\n     if (openSection)\n       throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n     return nestTokens(squashTokens(tokens));\n   }\n\n   /**\n    * Combines the values of consecutive text tokens in the given `tokens` array\n    * to a single token.\n    */\n   function squashTokens (tokens) {\n     var squashedTokens = [];\n\n     var token, lastToken;\n     for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n       token = tokens[i];\n\n       if (token) {\n         if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n           lastToken[1] += token[1];\n           lastToken[3] = token[3];\n         } else {\n           squashedTokens.push(token);\n           lastToken = token;\n         }\n       }\n     }\n\n     return squashedTokens;\n   }\n\n   /**\n    * Forms the given array of `tokens` into a nested tree structure where\n    * tokens that represent a section have two additional items: 1) an array of\n    * all tokens that appear in that section and 2) the index in the original\n    * template that represents the end of that section.\n    */\n   function nestTokens (tokens) {\n     var nestedTokens = [];\n     var collector = nestedTokens;\n     var sections = [];\n\n     var token, section;\n     for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n       token = tokens[i];\n\n       switch (token[0]) {\n         case '#':\n         case '^':\n           collector.push(token);\n           sections.push(token);\n           collector = token[4] = [];\n           break;\n         case '/':\n           section = sections.pop();\n           section[5] = token[2];\n           collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n           break;\n         default:\n           collector.push(token);\n       }\n     }\n\n     return nestedTokens;\n   }\n\n   /**\n    * A simple string scanner that is used by the template parser to find\n    * tokens in template strings.\n    */\n   function Scanner (string) {\n     this.string = string;\n     this.tail = string;\n     this.pos = 0;\n   }\n\n   /**\n    * Returns `true` if the tail is empty (end of string).\n    */\n   Scanner.prototype.eos = function eos () {\n     return this.tail === '';\n   };\n\n   /**\n    * Tries to match the given regular expression at the current position.\n    * Returns the matched text if it can match, the empty string otherwise.\n    */\n   Scanner.prototype.scan = function scan (re) {\n     var match = this.tail.match(re);\n\n     if (!match || match.index !== 0)\n       return '';\n\n     var string = match[0];\n\n     this.tail = this.tail.substring(string.length);\n     this.pos += string.length;\n\n     return string;\n   };\n\n   /**\n    * Skips all text until the given regular expression can be matched. Returns\n    * the skipped string, which is the entire tail if no match can be made.\n    */\n   Scanner.prototype.scanUntil = function scanUntil (re) {\n     var index = this.tail.search(re), match;\n\n     switch (index) {\n       case -1:\n         match = this.tail;\n         this.tail = '';\n         break;\n       case 0:\n         match = '';\n         break;\n       default:\n         match = this.tail.substring(0, index);\n         this.tail = this.tail.substring(index);\n     }\n\n     this.pos += match.length;\n\n     return match;\n   };\n\n   /**\n    * Represents a rendering context by wrapping a view object and\n    * maintaining a reference to the parent context.\n    */\n   function Context (view, parentContext) {\n     this.view = view;\n     this.cache = { '.': this.view };\n     this.parent = parentContext;\n   }\n\n   /**\n    * Creates a new context using the given view with this context\n    * as the parent.\n    */\n   Context.prototype.push = function push (view) {\n     return new Context(view, this);\n   };\n\n   /**\n    * Returns the value of the given name in this context, traversing\n    * up the context hierarchy if the value is absent in this context's view.\n    */\n   Context.prototype.lookup = function lookup (name) {\n     var cache = this.cache;\n\n     var value;\n     if (cache.hasOwnProperty(name)) {\n       value = cache[name];\n     } else {\n       var context = this, names, index, lookupHit = false;\n\n       while (context) {\n         if (name.indexOf('.') > 0) {\n           value = context.view;\n           names = name.split('.');\n           index = 0;\n\n           /**\n            * Using the dot notion path in `name`, we descend through the\n            * nested objects.\n            *\n            * To be certain that the lookup has been successful, we have to\n            * check if the last object in the path actually has the property\n            * we are looking for. We store the result in `lookupHit`.\n            *\n            * This is specially necessary for when the value has been set to\n            * `undefined` and we want to avoid looking up parent contexts.\n            **/\n           while (value != null && index < names.length) {\n             if (index === names.length - 1)\n               lookupHit = hasProperty(value, names[index]);\n\n             value = value[names[index++]];\n           }\n         } else {\n           value = context.view[name];\n           lookupHit = hasProperty(context.view, name);\n         }\n\n         if (lookupHit)\n           break;\n\n         context = context.parent;\n       }\n\n       cache[name] = value;\n     }\n\n     if (isFunction(value))\n       value = value.call(this.view);\n\n     return value;\n   };\n\n   /**\n    * A Writer knows how to take a stream of tokens and render them to a\n    * string, given a context. It also maintains a cache of templates to\n    * avoid the need to parse the same template twice.\n    */\n   function Writer () {\n     this.cache = {};\n   }\n\n   /**\n    * Clears all cached templates in this writer.\n    */\n   Writer.prototype.clearCache = function clearCache () {\n     this.cache = {};\n   };\n\n   /**\n    * Parses and caches the given `template` and returns the array of tokens\n    * that is generated from the parse.\n    */\n   Writer.prototype.parse = function parse (template, tags) {\n     var cache = this.cache;\n     var tokens = cache[template];\n\n     if (tokens == null)\n       tokens = cache[template] = parseTemplate(template, tags);\n\n     return tokens;\n   };\n\n   /**\n    * High-level method that is used to render the given `template` with\n    * the given `view`.\n    *\n    * The optional `partials` argument may be an object that contains the\n    * names and templates of partials that are used in the template. It may\n    * also be a function that is used to load partial templates on the fly\n    * that takes a single argument: the name of the partial.\n    */\n   Writer.prototype.render = function render (template, view, partials) {\n     var tokens = this.parse(template);\n     var context = (view instanceof Context) ? view : new Context(view);\n     return this.renderTokens(tokens, context, partials, template);\n   };\n\n   /**\n    * Low-level method that renders the given array of `tokens` using\n    * the given `context` and `partials`.\n    *\n    * Note: The `originalTemplate` is only ever used to extract the portion\n    * of the original template that was contained in a higher-order section.\n    * If the template doesn't use higher-order sections, this argument may\n    * be omitted.\n    */\n   Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n     var buffer = '';\n\n     var token, symbol, value;\n     for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n       value = undefined;\n       token = tokens[i];\n       symbol = token[0];\n\n       if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n       else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n       else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n       else if (symbol === '&') value = this.unescapedValue(token, context);\n       else if (symbol === 'name') value = this.escapedValue(token, context);\n       else if (symbol === 'text') value = this.rawValue(token);\n\n       if (value !== undefined)\n         buffer += value;\n     }\n\n     return buffer;\n   };\n\n   Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n     var self = this;\n     var buffer = '';\n     var value = context.lookup(token[1]);\n\n     // This function is used to render an arbitrary template\n     // in the current context by higher-order sections.\n     function subRender (template) {\n       return self.render(template, context, partials);\n     }\n\n     if (!value) return;\n\n     if (isArray(value)) {\n       for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n         buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n       }\n     } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n       buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n     } else if (isFunction(value)) {\n       if (typeof originalTemplate !== 'string')\n         throw new Error('Cannot use higher-order sections without the original template');\n\n       // Extract the portion of the original template that the section contains.\n       value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n       if (value != null)\n         buffer += value;\n     } else {\n       buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n     }\n     return buffer;\n   };\n\n   Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n     var value = context.lookup(token[1]);\n\n     // Use JavaScript's definition of falsy. Include empty arrays.\n     // See https://github.com/janl/mustache.js/issues/186\n     if (!value || (isArray(value) && value.length === 0))\n       return this.renderTokens(token[4], context, partials, originalTemplate);\n   };\n\n   Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n     if (!partials) return;\n\n     var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n     if (value != null)\n       return this.renderTokens(this.parse(value), context, partials, value);\n   };\n\n   Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n     var value = context.lookup(token[1]);\n     if (value != null)\n       return value;\n   };\n\n   Writer.prototype.escapedValue = function escapedValue (token, context) {\n     var value = context.lookup(token[1]);\n     if (value != null)\n       return mustache.escape(value);\n   };\n\n   Writer.prototype.rawValue = function rawValue (token) {\n     return token[1];\n   };\n\n   mustache.name = 'mustache.js';\n   mustache.version = '2.2.1';\n   mustache.tags = [ '{{', '}}' ];\n\n   // All high-level mustache.* functions use this writer.\n   var defaultWriter = new Writer();\n\n   /**\n    * Clears all cached templates in the default writer.\n    */\n   mustache.clearCache = function clearCache () {\n     return defaultWriter.clearCache();\n   };\n\n   /**\n    * Parses and caches the given template in the default writer and returns the\n    * array of tokens it contains. Doing this ahead of time avoids the need to\n    * parse templates on the fly as they are rendered.\n    */\n   mustache.parse = function parse (template, tags) {\n     return defaultWriter.parse(template, tags);\n   };\n\n   /**\n    * Renders the `template` with the given `view` and `partials` using the\n    * default writer.\n    */\n   mustache.render = function render (template, view, partials) {\n     if (typeof template !== 'string') {\n       throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                           'but \"' + typeStr(template) + '\" was given as the first ' +\n                           'argument for mustache#render(template, view, partials)');\n     }\n\n     return defaultWriter.render(template, view, partials);\n   };\n\n   // This is here for backwards compatibility with 0.4.x.,\n   /*eslint-disable */ // eslint wants camel cased function name\n   mustache.to_html = function to_html (template, view, partials, send) {\n     /*eslint-enable*/\n\n     var result = mustache.render(template, view, partials);\n\n     if (isFunction(send)) {\n       send(result);\n     } else {\n       return result;\n     }\n   };\n\n   // Export the escaping function so that the user may override it.\n   // See https://github.com/janl/mustache.js/issues/244\n   mustache.escape = escapeHtml;\n\n   // Export these mainly for testing, but also for advanced usage.\n   mustache.Scanner = Scanner;\n   mustache.Context = Context;\n   mustache.Writer = Writer;\n\n }));\n /**\n * Above is the original mustache code.\n */\n\n// EXPOSE qooxdoo variant\nqx.bom.Template.version = this.Mustache.version;\nqx.bom.Template.render = this.Mustache.render;\n\n}).call({});\n"
  ]
}