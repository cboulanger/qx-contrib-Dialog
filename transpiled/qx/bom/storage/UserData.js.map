{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/bom/storage/UserData.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__local",
    "__session",
    "__id",
    "getLocal",
    "bom",
    "storage",
    "UserData",
    "getSession",
    "construct",
    "storeName",
    "__el",
    "document",
    "createElement",
    "style",
    "getElementsByTagName",
    "appendChild",
    "addBehavior",
    "__storeName",
    "load",
    "__storage",
    "__reference",
    "value",
    "getAttribute",
    "undefined",
    "lang",
    "Json",
    "parse",
    "key",
    "members",
    "getStorage",
    "getLength",
    "Object",
    "keys",
    "length",
    "setItem",
    "storageKey",
    "storageValue",
    "stringify",
    "setAttribute",
    "save",
    "getItem",
    "removeItem",
    "storageName",
    "removeAttribute",
    "lastStoreName",
    "lastItem",
    "lastKey",
    "clear",
    "getKey",
    "index",
    "forEach",
    "callback",
    "scope",
    "i",
    "call"
  ],
  "mappings": "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",
  "file": "UserData.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * Fallback storage implementation usable in IE browsers. It is recommended to use\n * these implementation only in IE < 8 because IE >= 8 supports\n * {@link qx.bom.storage.Web}.\n *\n * @require(qx.bom.storage.UserData#getLength)\n * @require(qx.bom.storage.UserData#setItem)\n * @require(qx.bom.storage.UserData#getItem)\n * @require(qx.bom.storage.UserData#removeItem)\n * @require(qx.bom.storage.UserData#clear)\n * @require(qx.bom.storage.UserData#getKey)\n * @require(qx.bom.storage.UserData#forEach)\n */\nqx.Bootstrap.define(\"qx.bom.storage.UserData\", {\n  statics : {\n    __local : null,\n    __session : null,\n\n    // global id used as key for the storage\n    __id : 0,\n\n    /**\n     * Returns an instance of {@link qx.bom.storage.UserData} used to store\n     * data persistent.\n     * @return {qx.bom.storage.UserData} A storage instance.\n     */\n    getLocal : function() {\n      if (this.__local) {\n        return this.__local;\n      }\n      return this.__local = new qx.bom.storage.UserData(\"local\");\n    },\n\n\n    /**\n     * Returns an instance of {@link qx.bom.storage.UserData} used to store\n     * data persistent.\n     * @return {qx.bom.storage.UserData} A storage instance.\n     */\n    getSession : function() {\n      if (this.__session) {\n        return this.__session;\n      }\n      return this.__session = new qx.bom.storage.UserData(\"session\");\n    }\n  },\n\n\n  /**\n   * Create a new instance. Usually, you should take the static\n   * accessors to get your instance.\n   *\n   * @param storeName {String} type of storage.\n   */\n  construct : function(storeName) {\n    // create a dummy DOM element used for storage\n    this.__el = document.createElement(\"div\");\n    this.__el.style[\"display\"] = \"none\";\n    document.getElementsByTagName(\"head\")[0].appendChild(this.__el);\n    this.__el.addBehavior(\"#default#userdata\");\n    this.__storeName = storeName;\n    // load the inital data which might be stored\n    this.__el.load(this.__storeName);\n\n    // set up the internal reference maps\n    this.__storage = {};\n    this.__reference = {};\n\n    // initialize\n    var value = this.__el.getAttribute(\"qx\" + qx.bom.storage.UserData.__id);\n    while (value != undefined) {\n      value = qx.lang.Json.parse(value);\n      // save the data in the internal storage\n      this.__storage[value.key] = value.value;\n      // save the reference\n      this.__reference[value.key] = \"qx\" + qx.bom.storage.UserData.__id;\n      qx.bom.storage.UserData.__id++;\n      value = this.__el.getAttribute(\"qx\" + qx.bom.storage.UserData.__id);\n    }\n  },\n\n\n  members : {\n    __el : null,\n    __storeName : \"qxtest\",\n\n    // storage which holds the key and the value\n    __storage : null,\n\n    // reference store which holds the key and the key used to store\n    __reference : null,\n\n    /**\n     * Returns the map used to keep a in memory copy of the stored data.\n     * @return {Map} The stored data.\n     * @internal\n     */\n    getStorage : function() {\n      return this.__storage;\n    },\n\n\n    /**\n     * Returns the amount of key-value pairs stored.\n     * @return {Integer} The length of the storage.\n     */\n    getLength : function() {\n      return Object.keys(this.__storage).length;\n    },\n\n\n    /**\n     * Store an item in the storage.\n     *\n     * @param key {String} The identifier key.\n     * @param value {var} The data, which will be stored as JSON.\n     */\n    setItem : function(key, value) {\n      // override case\n      if (this.__reference[key]) {\n        var storageKey = this.__reference[key];\n      // new case\n      } else {\n        var storageKey = \"qx\" + qx.bom.storage.UserData.__id;\n        qx.bom.storage.UserData.__id++;\n      }\n\n      // build and save the data used to store both, key and value\n      var storageValue = qx.lang.Json.stringify({key: key, value: value});\n      this.__el.setAttribute(storageKey, storageValue);\n      this.__el.save(this.__storeName);\n\n      // also update the internal mappings\n      this.__storage[key] = value;\n      this.__reference[key] = storageKey;\n    },\n\n\n    /**\n     * Returns the stored item.\n     *\n     * @param key {String} The identifier to get the data.\n     * @return {var} The stored data.\n     */\n    getItem : function(key) {\n      return this.__storage[key] || null;\n    },\n\n\n    /**\n     * Removes an item form the storage.\n     * @param key {String} The identifier.\n     */\n    removeItem : function(key) {\n      // check if the item is available\n      var storageName = this.__reference[key];\n      if (storageName == undefined) {\n        return;\n      }\n\n      // remove the item\n      this.__el.removeAttribute(storageName);\n      // decrease the id because we removed one item\n      qx.bom.storage.UserData.__id--;\n\n      // update the internal maps\n      delete this.__storage[key];\n      delete this.__reference[key];\n\n      // check if we have deleted the last item\n      var lastStoreName = \"qx\" + qx.bom.storage.UserData.__id;\n      if (this.__el.getAttribute(lastStoreName)) {\n        // if not, move the last item to the deleted spot\n        var lastItem = this.__el.getAttribute(\"qx\" + qx.bom.storage.UserData.__id);\n        this.__el.removeAttribute(lastStoreName);\n        this.__el.setAttribute(storageName, lastItem);\n\n        // update the reference map\n        var lastKey = qx.lang.Json.parse(lastItem).key;\n        this.__reference[lastKey] = storageName;\n      }\n      this.__el.save(this.__storeName);\n    },\n\n\n    /**\n     * Deletes every stored item in the storage.\n     */\n    clear : function() {\n      // delete all entries from the storage\n      for (var key in this.__reference) {\n        this.__el.removeAttribute(this.__reference[key]);\n      }\n      this.__el.save(this.__storeName);\n      // reset the internal maps\n      this.__storage = {};\n      this.__reference = {};\n    },\n\n\n    /**\n     * Returns the named key at the given index.\n     * @param index {Integer} The index in the storage.\n     * @return {String} The key stored at the given index.\n     */\n    getKey : function(index) {\n      return Object.keys(this.__storage)[index];\n    },\n\n\n    /**\n     * Helper to access every stored item.\n     *\n     * @param callback {Function} A function which will be called for every item.\n     *   The function will have two arguments, first the key and second the value\n     *    of the stored data.\n     * @param scope {var} The scope of the function.\n     */\n    forEach : function(callback, scope) {\n      var length = this.getLength();\n      for (var i = 0; i < length; i++) {\n        var key = this.getKey(i);\n        callback.call(scope, key, this.getItem(key));\n      }\n    }\n  }\n});\n"
  ]
}