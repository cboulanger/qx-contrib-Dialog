{
  "className": "qx.bom.client.Browser",
  "packageName": "qx.bom.client",
  "name": "Browser",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 47,
        "column": 0
      },
      "end": {
        "line": 226,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nChristian Hagendorn (chris_schmidt)\nMartin Wittemann (martinwittemann)\n\n======================================================================\n\nThis class contains code from:\n\nUnify Project\n\nHomepage:\nhttp://unify-project.org\n\nCopyright:\n2009-2010 Deutsche Telekom AG, Germany, http://telekom.com\n\nLicense:\nMIT: http://www.opensource.org/licenses/mit-license.php\n\nAuthors:\nSebastian Werner (wpbasti)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Basic browser detection for qooxdoo.\n\nThis class is used by {@link qx.core.Environment} and should not be used\ndirectly. Please check its class comment for details how to use it."
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.bom.client.OperatingSystem#getVersion"
        }
      ],
      "@internal": [
        {
          "name": "@internal",
          "body": ""
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "getName": {
      "location": {
        "start": {
          "line": 56,
          "column": 4
        },
        "end": {
          "line": 114,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks for the name of the browser and returns it."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The name of the current browser.",
            "type": "String",
            "description": " The name of the current browser."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getVersion": {
      "location": {
        "start": {
          "line": 122,
          "column": 4
        },
        "end": {
          "line": 162,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Determines the version of the current browser."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The name of the current browser.",
            "type": "String",
            "description": " The name of the current browser."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDocumentMode": {
      "location": {
        "start": {
          "line": 171,
          "column": 4
        },
        "end": {
          "line": 176,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns in which document mode the current document is (only for IE)."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The mode in which the browser is.",
            "type": "Number",
            "description": " The mode in which the browser is."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQuirksMode": {
      "location": {
        "start": {
          "line": 185,
          "column": 4
        },
        "end": {
          "line": 193,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Check if in quirks mode."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code>, if the environment is in quirks mode",
            "type": "Boolean",
            "description": " <code>true</code>, if the environment is in quirks mode"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__agents": {
      "location": {
        "start": {
          "line": 199,
          "column": 4
        },
        "end": {
          "line": 217,
          "column": 37
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Internal helper map for picking the right browser names to check."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 220,
        "column": 2
      },
      "end": {
        "line": 225,
        "column": 3
      }
    }
  },
  "descendants": []
}