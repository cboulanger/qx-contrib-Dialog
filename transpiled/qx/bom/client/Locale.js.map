{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/bom/client/Locale.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "getLocale",
    "locale",
    "bom",
    "client",
    "Locale",
    "__getNavigatorLocale",
    "index",
    "indexOf",
    "substr",
    "getVariant",
    "variant",
    "navigator",
    "userLanguage",
    "language",
    "OperatingSystem",
    "getName",
    "version",
    "exec",
    "getVersion",
    "lang",
    "Type",
    "isArray",
    "length",
    "parseInt",
    "match",
    "userAgent",
    "toLowerCase",
    "defer",
    "core",
    "Environment",
    "add"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EA4BAH,GAAGC,SAAH,CAAaG,MAAb,CAAoB,sBAApB,EACA;AACE;;;;;;AAMAC,aACA;AACE;;;;;AAKAC,iBAAY,qBAAW;AACrB,YAAIC,SAASP,GAAGQ,GAAH,CAAOC,MAAP,CAAcC,MAAd,CAAqBC,oBAArB,EAAb;;AAEA,YAAIC,QAAQL,OAAOM,OAAP,CAAe,GAAf,CAAZ;AACA,YAAID,SAAS,CAAC,CAAd,EAAiB;AACfL,mBAASA,OAAOO,MAAP,CAAc,CAAd,EAAiBF,KAAjB,CAAT;AACD;;AAED,eAAOL,MAAP;AACD,OAfH;;AAkBE;;;;;;;AAOAQ,kBAAa,sBAAW;AACtB,YAAIR,SAASP,GAAGQ,GAAH,CAAOC,MAAP,CAAcC,MAAd,CAAqBC,oBAArB,EAAb;AACA,YAAIK,UAAU,EAAd;;AAEA,YAAIJ,QAAQL,OAAOM,OAAP,CAAe,GAAf,CAAZ;;AAEA,YAAID,SAAS,CAAC,CAAd,EAAiB;AACfI,oBAAUT,OAAOO,MAAP,CAAcF,QAAQ,CAAtB,CAAV;AACD;;AAED,eAAOI,OAAP;AACD,OApCH;;AAuCE;;;;;AAKAL,4BAAuB,gCACvB;AACE,YAAIJ,SAAUU,UAAUC,YAAV,IAA0BD,UAAUE,QAApC,IAAgD,EAA9D;;AAEA;AACA;AACA;AACA;AACA,YAAInB,GAAGQ,GAAH,CAAOC,MAAP,CAAcW,eAAd,CAA8BC,OAA9B,MAA2C,SAA/C,EAA0D;AACxD,cAAIC,UAAU,wBAAwBC,IAAxB,CAA6BvB,GAAGQ,GAAH,CAAOC,MAAP,CAAcW,eAAd,CAA8BI,UAA9B,EAA7B,CAAd;AACA,cAAIxB,GAAGyB,IAAH,CAAQC,IAAR,CAAaC,OAAb,CAAqBL,OAArB,KAAiCA,QAAQM,MAAR,IAAkB,CAAvD,EAA0D;AACxD,gBAAIC,SAASP,QAAQ,CAAR,CAAT,IAAuB,CAAvB,IAA6BO,SAASP,QAAQ,CAAR,CAAT,MAAyB,CAAzB,IAA8BO,SAASP,QAAQ,CAAR,CAAT,IAAuB,CAAtF,EAA0F;AACxF,kBAAIQ,QAAQ,mBAAmBP,IAAnB,CAAwBN,UAAUc,SAAlC,CAAZ;AACA,kBAAID,KAAJ,EAAW;AACTvB,yBAASuB,MAAM,CAAN,CAAT;AACD;AACF;AACF;AACF;;AAED,eAAOvB,OAAOyB,WAAP,EAAP;AACD;;AAjEH,KARF;;AA6EEC,WAAQ,eAAS5B,OAAT,EAAkB;AACxBL,SAAGkC,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,QAAxB,EAAkC/B,QAAQC,SAA1C;AACAN,SAAGkC,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,gBAAxB,EAA0C/B,QAAQU,UAAlD;AACAf,SAAGkC,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,gBAAxB,EAA0C,GAA1C;AACD;AAjFH,GADA,C;AA5BApC,KAAGQ,GAAH,CAAOC,MAAP,CAAcC,MAAd,CAAqBP,aAArB,GAAqCA,aAArC",
  "file": "Locale.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * This class comes with all relevant information regarding\n * the client's selected locale.\n *\n * This class is used by {@link qx.core.Environment} and should not be used\n * directly. Please check its class comment for details how to use it.\n *\n * @internal\n */\nqx.Bootstrap.define(\"qx.bom.client.Locale\",\n{\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /**\n     * The name of the system locale e.g. \"de\" when the full locale is \"de_AT\"\n     * @return {String} The current locale\n     * @internal\n     */\n    getLocale : function() {\n      var locale = qx.bom.client.Locale.__getNavigatorLocale();\n\n      var index = locale.indexOf(\"-\");\n      if (index != -1) {\n        locale = locale.substr(0, index);\n      }\n\n      return locale;\n    },\n\n\n    /**\n     * The name of the variant for the system locale e.g. \"at\" when the\n     * full locale is \"de_AT\"\n     *\n     * @return {String} The locales variant.\n     * @internal\n     */\n    getVariant : function() {\n      var locale = qx.bom.client.Locale.__getNavigatorLocale();\n      var variant = \"\";\n\n      var index = locale.indexOf(\"-\");\n\n      if (index != -1) {\n        variant = locale.substr(index + 1);\n      }\n\n      return variant;\n    },\n\n\n    /**\n     * Internal helper for accessing the navigators language.\n     *\n     * @return {String} The language set by the navigator.\n     */\n    __getNavigatorLocale : function()\n    {\n      var locale = (navigator.userLanguage || navigator.language || \"\");\n\n      // Android Bug: Android does not return the system language from the\n      // navigator language before version 4.4.x. Try to parse the language\n      // from the userAgent.\n      // See http://code.google.com/p/android/issues/detail?id=4641\n      if (qx.bom.client.OperatingSystem.getName() == \"android\") {\n        var version = /^(\\d+)\\.(\\d+)(\\..+)?/i.exec(qx.bom.client.OperatingSystem.getVersion());\n        if (qx.lang.Type.isArray(version) && version.length >= 3) {\n          if (parseInt(version[1]) < 4 || (parseInt(version[1]) === 4 && parseInt(version[2]) < 4)) {\n            var match = /(\\w{2})-(\\w{2})/i.exec(navigator.userAgent);\n            if (match) {\n              locale = match[0];\n            }\n          }\n        }\n      }\n\n      return locale.toLowerCase();\n    }\n\n  },\n\n  defer : function(statics) {\n    qx.core.Environment.add(\"locale\", statics.getLocale);\n    qx.core.Environment.add(\"locale.variant\", statics.getVariant);\n    qx.core.Environment.add(\"locale.default\", \"C\");\n  }\n});\n"
  ]
}