{
  "className": "qx.bom.client.Xml",
  "packageName": "qx.bom.client",
  "name": "Xml",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0
      },
      "end": {
        "line": 172,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nDaniel Wagner (d_wagner)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Internal class which contains the checks used by {@link qx.core.Environment}.\nAll checks in here are marked as internal which means you should never use\nthem directly.\n\nThis class should contain all XML-related checks"
        }
      ],
      "@internal": [
        {
          "name": "@internal",
          "body": ""
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "getImplementation": {
      "location": {
        "start": {
          "line": 37,
          "column": 4
        },
        "end": {
          "line": 40,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks if XML is supported"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if XML is supported",
            "type": "Boolean",
            "description": " <code>true</code> if XML is supported"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDomParser": {
      "location": {
        "start": {
          "line": 49,
          "column": 4
        },
        "end": {
          "line": 51,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks if an XML DOMParser is available"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if DOMParser is supported",
            "type": "Boolean",
            "description": " <code>true</code> if DOMParser is supported"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSelectSingleNode": {
      "location": {
        "start": {
          "line": 61,
          "column": 4
        },
        "end": {
          "line": 64,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks if the proprietary selectSingleNode method is available on XML DOM\nnodes."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if selectSingleNode is available",
            "type": "Boolean",
            "description": " <code>true</code> if selectSingleNode is available"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSelectNodes": {
      "location": {
        "start": {
          "line": 74,
          "column": 4
        },
        "end": {
          "line": 77,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks if the proprietary selectNodes method is available on XML DOM\nnodes."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if selectSingleNode is available",
            "type": "Boolean",
            "description": " <code>true</code> if selectSingleNode is available"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getElementsByTagNameNS": {
      "location": {
        "start": {
          "line": 86,
          "column": 4
        },
        "end": {
          "line": 89,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks availability of the getElementsByTagNameNS XML DOM method."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if getElementsByTagNameNS is available",
            "type": "Boolean",
            "description": " <code>true</code> if getElementsByTagNameNS is available"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDomProperties": {
      "location": {
        "start": {
          "line": 98,
          "column": 4
        },
        "end": {
          "line": 102,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks if MSXML-style DOM Level 2 properties are supported."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if DOM Level 2 properties are supported",
            "type": "Boolean",
            "description": " <code>true</code> if DOM Level 2 properties are supported"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAttributeNS": {
      "location": {
        "start": {
          "line": 112,
          "column": 4
        },
        "end": {
          "line": 117,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks if the getAttributeNS and setAttributeNS methods are supported on\nXML DOM elements"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if get/setAttributeNS is supported",
            "type": "Boolean",
            "description": " <code>true</code> if get/setAttributeNS is supported"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getCreateElementNS": {
      "location": {
        "start": {
          "line": 126,
          "column": 4
        },
        "end": {
          "line": 129,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks if the createElementNS method is supported on XML DOM documents"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if createElementNS is supported",
            "type": "Boolean",
            "description": " <code>true</code> if createElementNS is supported"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getCreateNode": {
      "location": {
        "start": {
          "line": 139,
          "column": 4
        },
        "end": {
          "line": 142,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks if the proprietary createNode method is supported on XML DOM\ndocuments"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if DOM Level 2 properties are supported",
            "type": "Boolean",
            "description": " <code>true</code> if DOM Level 2 properties are supported"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQualifiedItem": {
      "location": {
        "start": {
          "line": 152,
          "column": 4
        },
        "end": {
          "line": 156,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks if the proprietary getQualifiedItem method is supported for XML\nelement attributes"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if DOM Level 2 properties are supported",
            "type": "Boolean",
            "description": " <code>true</code> if DOM Level 2 properties are supported"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 159,
        "column": 2
      },
      "end": {
        "line": 171,
        "column": 3
      }
    }
  },
  "descendants": []
}