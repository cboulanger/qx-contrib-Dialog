{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/bom/Selection.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "getSelectionObject",
    "core",
    "Environment",
    "select",
    "documentNode",
    "selection",
    "dom",
    "Node",
    "getWindow",
    "getSelection",
    "get",
    "node",
    "rng",
    "bom",
    "Range",
    "getDocument",
    "text",
    "__isInputOrTextarea",
    "value",
    "substring",
    "selectionStart",
    "selectionEnd",
    "toString",
    "getLength",
    "selectedValue",
    "split",
    "util",
    "StringSplit",
    "length",
    "selectedLength",
    "start",
    "end",
    "Selection",
    "getStart",
    "documentRange",
    "contains",
    "parentElement",
    "range",
    "len",
    "moveToBookmark",
    "getBookmark",
    "moveEnd",
    "elementRange",
    "moveToElementText",
    "ex",
    "bodyRange",
    "getBodyElement",
    "setEndPoint",
    "compareEndPoints",
    "moved",
    "steps",
    "moveStart",
    "documentElement",
    "documentSelection",
    "anchorOffset",
    "focusOffset",
    "getEnd",
    "isElement",
    "nodeName",
    "toLowerCase",
    "set",
    "isDocument",
    "body",
    "isText",
    "undefined",
    "collapse",
    "nodeValue",
    "parentNode",
    "childNodes",
    "newRng",
    "focus",
    "setSelectionRange",
    "validBoundaries",
    "sel",
    "isCollapsed",
    "collapseToStart",
    "setStart",
    "setEnd",
    "setEndAfter",
    "rangeCount",
    "removeAllRanges",
    "addRange",
    "setAll",
    "clear",
    "parent",
    "empty",
    "Element",
    "blur",
    "collapsed",
    "compareNode",
    "commonAncestor",
    "commonAncestorContainer"
  ],
  "mappings": "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",
  "file": "Selection.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Alexander Steitz (aback)\n\n************************************************************************ */\n\n\n\n/**\n * Low-level selection API to select elements like input and textarea elements\n * as well as text nodes or elements which their child nodes.\n *\n * @ignore(qx.bom.Element, qx.bom.Element.blur)\n */\nqx.Bootstrap.define(\"qx.bom.Selection\",\n{\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /**\n     * Returns the native selection object.\n     *\n     * @signature function(documentNode)\n     * @param documentNode {document} Document node to retrieve the connected selection from\n     * @return {Selection} native selection object\n     */\n    getSelectionObject : qx.core.Environment.select(\"html.selection\",\n    {\n      \"selection\" : function(documentNode) {\n        return documentNode.selection;\n      },\n\n      // suitable for gecko, opera, webkit and mshtml >= 9\n      \"default\" : function(documentNode) {\n        return qx.dom.Node.getWindow(documentNode).getSelection();\n      }\n    }),\n\n\n    /**\n     * Returns the current selected text.\n     *\n     * @signature function(node)\n     * @param node {Node} node to retrieve the selection for\n     * @return {String|null} selected text as string\n     */\n    get : qx.core.Environment.select(\"html.selection\",\n    {\n      \"selection\" : function(node)\n      {\n        // to get the selected text in legacy IE you have to work with the TextRange\n        // of the selection object. So always pass the document node to the\n        // Range class to get this TextRange object.\n        var rng = qx.bom.Range.get(qx.dom.Node.getDocument(node));\n        return rng.text;\n      },\n\n      // suitable for gecko, opera and webkit\n      \"default\" : function(node)\n      {\n        if (this.__isInputOrTextarea(node)) {\n          return node.value.substring(node.selectionStart, node.selectionEnd);\n        } else {\n          return this.getSelectionObject(qx.dom.Node.getDocument(node)).toString();\n        }\n      }\n    }),\n\n\n    /**\n     * Returns the length of the selection\n     *\n     * @signature function(node)\n     * @param node {Node} Form node or document/window to check.\n     * @return {Integer|null} length of the selection or null\n     */\n    getLength : qx.core.Environment.select(\"html.selection\",\n    {\n      \"selection\" : function(node)\n      {\n        var selectedValue = this.get(node);\n        // get the selected part and split it by linebreaks\n        var split = qx.util.StringSplit.split(selectedValue, /\\r\\n/);\n\n        // return the length substracted by the count of linebreaks\n        // legacy IE counts linebreaks as two chars\n        // -> harmonize this to one char per linebreak\n        return selectedValue.length - (split.length - 1);\n      },\n\n      \"default\" : function(node)\n      {\n        if (qx.core.Environment.get(\"engine.name\") == \"opera\") {\n          var selectedValue, selectedLength, split;\n\n          if (this.__isInputOrTextarea(node))\n          {\n            var start = node.selectionStart;\n            var end = node.selectionEnd;\n\n            selectedValue = node.value.substring(start, end);\n            selectedLength = end - start;\n          }\n          else\n          {\n            selectedValue = qx.bom.Selection.get(node);\n            selectedLength = selectedValue.length;\n          }\n\n          // get the selected part and split it by linebreaks\n          split = qx.util.StringSplit.split(selectedValue, /\\r\\n/);\n\n          // substract the count of linebreaks\n          // Opera counts each linebreak as two chars\n          // -> harmonize this to one char per linebreak\n          return selectedLength - (split.length - 1);\n        }\n\n        // suitable for gecko and webkit\n        if (this.__isInputOrTextarea(node)) {\n          return node.selectionEnd - node.selectionStart;\n        } else {\n          return this.get(node).length;\n        }\n      }\n    }),\n\n\n    /**\n     * Returns the start of the selection\n     *\n     * @signature function(node)\n     * @param node {Node} node to check for\n     * @return {Integer} start of current selection or \"-1\" if the current\n     *                   selection is not within the given node\n     */\n    getStart : qx.core.Environment.select(\"html.selection\",\n    {\n      \"selection\" : function(node)\n      {\n        if (this.__isInputOrTextarea(node))\n        {\n          var documentRange = qx.bom.Range.get();\n\n          // Check if the document.selection is the text range inside the input element\n          if (!node.contains(documentRange.parentElement())) {\n            return -1;\n          }\n\n          var range = qx.bom.Range.get(node);\n          var len = node.value.length;\n\n          // Synchronize range start and end points\n          range.moveToBookmark(documentRange.getBookmark());\n          range.moveEnd('character', len);\n\n          return len - range.text.length;\n        }\n        else\n        {\n          var range = qx.bom.Range.get(node);\n          var parentElement = range.parentElement();\n\n          // get a range which holds the text of the parent element\n          var elementRange = qx.bom.Range.get();\n          try {\n            // IE throws an invalid argument error when the document has no selection\n            elementRange.moveToElementText(parentElement);\n          } catch(ex) {\n            return 0;\n          }\n\n          // Move end points of full range so it starts at the user selection\n          // and ends at the end of the element text.\n          var bodyRange = qx.bom.Range.get(qx.dom.Node.getBodyElement(node));\n          bodyRange.setEndPoint(\"StartToStart\", range);\n          bodyRange.setEndPoint(\"EndToEnd\", elementRange);\n\n          // selection is at beginning\n          if (elementRange.compareEndPoints(\"StartToStart\", bodyRange) == 0) {\n            return 0;\n          }\n\n          var moved;\n          var steps = 0;\n          while (true)\n          {\n            moved = bodyRange.moveStart(\"character\", -1);\n\n            // Starting points of both ranges are equal\n            if (elementRange.compareEndPoints(\"StartToStart\", bodyRange) == 0) {\n              break;\n            }\n\n            // Moving had no effect -> range is at begin of body\n            if (moved == 0) {\n              break;\n            } else {\n              steps++;\n            }\n          }\n\n          return ++steps;\n        }\n      },\n\n      \"default\" : function(node)\n      {\n        if (qx.core.Environment.get(\"engine.name\") === \"gecko\" ||\n            qx.core.Environment.get(\"engine.name\") === \"webkit\")\n        {\n          if (this.__isInputOrTextarea(node)) {\n            return node.selectionStart;\n          }\n          else\n          {\n            var documentElement = qx.dom.Node.getDocument(node);\n            var documentSelection = this.getSelectionObject(documentElement);\n\n            // gecko and webkit do differ how the user selected the text\n            // \"left-to-right\" or \"right-to-left\"\n            if (documentSelection.anchorOffset < documentSelection.focusOffset) {\n              return documentSelection.anchorOffset;\n            } else {\n              return documentSelection.focusOffset;\n            }\n          }\n        }\n\n        if (this.__isInputOrTextarea(node)) {\n          return node.selectionStart;\n        } else {\n          return qx.bom.Selection.getSelectionObject(qx.dom.Node.getDocument(node)).anchorOffset;\n        }\n      }\n    }),\n\n\n    /**\n     * Returns the end of the selection\n     *\n     * @signature function(node)\n     * @param node {Node} node to check\n     * @return {Integer} end of current selection\n     */\n    getEnd : qx.core.Environment.select(\"html.selection\",\n    {\n      \"selection\" : function(node)\n      {\n        if (this.__isInputOrTextarea(node))\n        {\n          var documentRange = qx.bom.Range.get();\n\n          // Check if the document.selection is the text range inside the input element\n          if (!node.contains(documentRange.parentElement())) {\n            return -1;\n          }\n\n          var range = qx.bom.Range.get(node);\n          var len = node.value.length;\n\n          // Synchronize range start and end points\n          range.moveToBookmark(documentRange.getBookmark());\n          range.moveStart('character', -len);\n\n          return range.text.length;\n        }\n        else\n        {\n          var range = qx.bom.Range.get(node);\n          var parentElement = range.parentElement();\n\n          // get a range which holds the text of the parent element\n          var elementRange = qx.bom.Range.get();\n          try {\n            // IE throws an invalid argument error when the document has no selection\n            elementRange.moveToElementText(parentElement);\n          } catch(ex) {\n            return 0;\n          }\n          var len = elementRange.text.length;\n\n          // Move end points of full range so it ends at the user selection\n          // and starts at the start of the element text.\n          var bodyRange = qx.bom.Range.get(qx.dom.Node.getBodyElement(node));\n          bodyRange.setEndPoint(\"EndToEnd\", range);\n          bodyRange.setEndPoint(\"StartToStart\", elementRange);\n\n          // selection is at beginning\n          if (elementRange.compareEndPoints(\"EndToEnd\", bodyRange) == 0) {\n            return len-1;\n          }\n\n          var moved;\n          var steps = 0;\n          while (true)\n          {\n            moved = bodyRange.moveEnd(\"character\", 1);\n\n            // Ending points of both ranges are equal\n            if (elementRange.compareEndPoints(\"EndToEnd\", bodyRange) == 0) {\n              break;\n            }\n\n            // Moving had no effect -> range is at begin of body\n            if (moved == 0) {\n              break;\n            } else {\n              steps++;\n            }\n          }\n\n          return len - (++steps);\n        }\n      },\n\n      \"default\" : function(node)\n      {\n        if (qx.core.Environment.get(\"engine.name\") === \"gecko\" ||\n            qx.core.Environment.get(\"engine.name\") === \"webkit\")\n        {\n          if (this.__isInputOrTextarea(node)) {\n            return node.selectionEnd;\n          }\n          else\n          {\n            var documentElement = qx.dom.Node.getDocument(node);\n            var documentSelection = this.getSelectionObject(documentElement);\n\n            // gecko and webkit do differ how the user selected the text\n            // \"left-to-right\" or \"right-to-left\"\n            if (documentSelection.focusOffset > documentSelection.anchorOffset) {\n              return documentSelection.focusOffset;\n            } else {\n              return documentSelection.anchorOffset;\n            }\n          }\n        }\n\n        if (this.__isInputOrTextarea(node)) {\n          return node.selectionEnd;\n        } else {\n          return qx.bom.Selection.getSelectionObject(qx.dom.Node.getDocument(node)).focusOffset;\n        }\n      }\n    }),\n\n\n    /**\n     * Utility method to check for an input or textarea element\n     *\n     * @param node {Node} node to check\n     * @return {Boolean} Whether the given node is an input or textarea element\n     */\n    __isInputOrTextarea : function(node) {\n      return qx.dom.Node.isElement(node) &&\n            (node.nodeName.toLowerCase() == \"input\" ||\n             node.nodeName.toLowerCase() == \"textarea\");\n    },\n\n\n    /**\n     * Sets a selection at the given node with the given start and end.\n     * For text nodes, input and textarea elements the start and end parameters\n     * set the boundaries at the text.\n     * For element nodes the start and end parameters are used to select the\n     * childNodes of the given element.\n     *\n     * @signature function(node, start, end)\n     * @param node {Node} node to set the selection at\n     * @param start {Integer} start of the selection\n     * @param end {Integer} end of the selection\n     * @return {Boolean} whether a selection is drawn\n     */\n    set : qx.core.Environment.select(\"html.selection\",\n    {\n      \"selection\" : function(node, start, end)\n      {\n        var rng;\n\n        // if the node is the document itself then work on with the body element\n        if (qx.dom.Node.isDocument(node)) {\n          node = node.body;\n        }\n\n        if (qx.dom.Node.isElement(node) || qx.dom.Node.isText(node))\n        {\n          switch(node.nodeName.toLowerCase())\n          {\n            case \"input\":\n            case \"textarea\":\n            case \"button\":\n              if (end === undefined)\n              {\n                end = node.value.length;\n              }\n\n              if (start >= 0 && start <= node.value.length && end >= 0 && end <= node.value.length)\n              {\n                rng = qx.bom.Range.get(node);\n                rng.collapse(true);\n\n                rng.moveStart(\"character\", start);\n                rng.moveEnd(\"character\", end - start);\n                rng.select();\n\n                return true;\n              }\n              break;\n\n            case \"#text\":\n              if (end === undefined)\n              {\n                end = node.nodeValue.length;\n              }\n\n              if (start >= 0 && start <= node.nodeValue.length && end >= 0 && end <= node.nodeValue.length)\n              {\n                // get a range of the body element\n                rng = qx.bom.Range.get(qx.dom.Node.getBodyElement(node));\n\n                // use the parent node -> \"moveToElementText\" expects an element\n                rng.moveToElementText(node.parentNode);\n                rng.collapse(true);\n\n                rng.moveStart(\"character\", start);\n                rng.moveEnd(\"character\", end - start);\n                rng.select();\n\n                return true;\n              }\n              break;\n\n            default:\n              if (end === undefined)\n              {\n                end = node.childNodes.length - 1;\n              }\n\n             // check start and end -> childNodes\n             if (node.childNodes[start] && node.childNodes[end])\n             {\n               // get the TextRange of the body element\n               // IMPORTANT: only with a range of the body the method \"moveElementToText\" is available\n               rng = qx.bom.Range.get(qx.dom.Node.getBodyElement(node));\n               // position it at the given node\n               rng.moveToElementText(node.childNodes[start]);\n               rng.collapse(true);\n\n               // create helper range\n               var newRng = qx.bom.Range.get(qx.dom.Node.getBodyElement(node));\n               newRng.moveToElementText(node.childNodes[end]);\n\n               // set the end of the range to the end of the helper range\n               rng.setEndPoint(\"EndToEnd\", newRng);\n               rng.select();\n\n               return true;\n             }\n          }\n        }\n\n        return false;\n      },\n\n      // suitable for gecko, opera, webkit and mshtml >=9\n      \"default\" : function(node, start, end)\n      {\n        // special handling for input and textarea elements\n        var nodeName = node.nodeName.toLowerCase();\n        if (qx.dom.Node.isElement(node) && (nodeName == \"input\" || nodeName == \"textarea\"))\n        {\n          // if \"end\" is not given set it to the end\n          if (end === undefined) {\n            end = node.value.length;\n          }\n\n          // check boundaries\n          if (start >= 0 && start <= node.value.length && end >= 0 && end <= node.value.length)\n          {\n            node.focus();\n            node.select();\n            node.setSelectionRange(start, end);\n            return true;\n          }\n        }\n        else\n        {\n          var validBoundaries = false;\n          var sel = qx.dom.Node.getWindow(node).getSelection();\n\n          var rng = qx.bom.Range.get(node);\n\n          // element or text node?\n          // for elements nodes the offsets are applied to childNodes\n          // for text nodes the offsets are applied to the text content\n          if (qx.dom.Node.isText(node))\n          {\n            if (end === undefined) {\n              end = node.length;\n            }\n\n            if (start >= 0 && start < node.length && end >= 0 && end <= node.length) {\n              validBoundaries = true;\n            }\n          }\n          else if (qx.dom.Node.isElement(node))\n          {\n            if (end === undefined) {\n              end = node.childNodes.length - 1;\n            }\n\n            if (start >= 0 && node.childNodes[start] && end >= 0 && node.childNodes[end]) {\n              validBoundaries = true;\n            }\n          }\n          else if (qx.dom.Node.isDocument(node))\n          {\n            // work on with the body element\n            node = node.body;\n\n            if (end === undefined) {\n              end = node.childNodes.length - 1;\n            }\n\n            if (start >= 0 && node.childNodes[start] && end >= 0 && node.childNodes[end]) {\n              validBoundaries = true;\n            }\n          }\n\n          if (validBoundaries)\n          {\n            // collapse the selection if needed\n            if (!sel.isCollapsed) {\n             sel.collapseToStart();\n            }\n\n            // set start and end of the range\n            rng.setStart(node, start);\n\n            // for element nodes set the end after the childNode\n            if (qx.dom.Node.isText(node)) {\n              rng.setEnd(node, end);\n            } else {\n              rng.setEndAfter(node.childNodes[end]);\n            }\n\n            // remove all existing ranges and add the new one\n            if (sel.rangeCount > 0) {\n              sel.removeAllRanges();\n            }\n\n            sel.addRange(rng);\n\n            return true;\n          }\n        }\n\n        return false;\n      }\n    }),\n\n\n    /**\n     * Selects all content/childNodes of the given node\n     *\n     * @param node {Node} text, element or document node\n     * @return {Boolean} whether a selection is drawn\n     */\n    setAll : function(node) {\n      return qx.bom.Selection.set(node, 0);\n    },\n\n\n    /**\n     * Clears the selection on the given node.\n     *\n     * @param node {Node} node to clear the selection for\n     */\n    clear : qx.core.Environment.select(\"html.selection\",\n    {\n      \"selection\" : function(node)\n      {\n        var rng = qx.bom.Range.get(node);\n        var parent = rng.parentElement();\n\n        var documentRange = qx.bom.Range.get(qx.dom.Node.getDocument(node));\n\n        // only collapse if the selection is really on the given node\n        // -> compare the two parent elements of the ranges with each other and\n        // the given node\n        if (qx.dom.Node.isText(node)) {\n          node = node.parentNode;\n        }\n        if (parent == documentRange.parentElement() && parent == node) {\n          var sel = qx.bom.Selection.getSelectionObject(qx.dom.Node.getDocument(node));\n          sel.empty();\n        }\n      },\n\n      \"default\" : function(node)\n      {\n        var sel = qx.bom.Selection.getSelectionObject(qx.dom.Node.getDocument(node));\n        var nodeName = node.nodeName.toLowerCase();\n\n        // if the node is an input or textarea element use the specialized methods\n        if (qx.dom.Node.isElement(node) && (nodeName == \"input\" || nodeName == \"textarea\"))\n        {\n          node.setSelectionRange(0, 0);\n          if (qx.bom.Element && qx.bom.Element.blur) {\n            qx.bom.Element.blur(node);\n          }\n        }\n        // if the given node is the body/document node -> collapse the selection\n        else if (qx.dom.Node.isDocument(node) || nodeName == \"body\")\n        {\n          sel.collapse(node.body ? node.body : node, 0);\n        }\n        // if an element/text node is given the current selection has to\n        // encompass the node. Only then the selection is cleared.\n        else\n        {\n          var rng = qx.bom.Range.get(node);\n          if (!rng.collapsed)\n          {\n            var compareNode;\n            var commonAncestor = rng.commonAncestorContainer;\n\n            // compare the parentNode of the textNode with the given node\n            // (if this node is an element) to decide whether the selection\n            // is cleared or not.\n            if (qx.dom.Node.isElement(node) && qx.dom.Node.isText(commonAncestor)) {\n              compareNode = commonAncestor.parentNode;\n            } else {\n              compareNode = commonAncestor;\n            }\n\n            if (compareNode == node) {\n              sel.collapse(node,0);\n            }\n          }\n        }\n      }\n    })\n  }\n});\n"
  ]
}