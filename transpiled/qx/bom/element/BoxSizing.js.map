{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/bom/element/BoxSizing.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__nativeBorderBox",
    "tags",
    "button",
    "select",
    "types",
    "search",
    "submit",
    "reset",
    "checkbox",
    "radio",
    "__usesNativeBorderBox",
    "element",
    "map",
    "tagName",
    "toLowerCase",
    "type",
    "compile",
    "value",
    "core",
    "Environment",
    "get",
    "prop",
    "bom",
    "Style",
    "getCssName",
    "log",
    "Logger",
    "warn",
    "trace",
    "Document",
    "isStandardMode",
    "dom",
    "Node",
    "getWindow",
    "set",
    "style",
    "ex",
    "BoxSizing"
  ],
  "mappings": "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",
  "file": "BoxSizing.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * Contains methods to control and query the element's box-sizing property.\n *\n * Supported values:\n *\n * * \"content-box\" = W3C model (dimensions are content specific)\n * * \"border-box\" = Microsoft model (dimensions are box specific incl. border and padding)\n */\nqx.Bootstrap.define(\"qx.bom.element.BoxSizing\",\n{\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Map} Internal data structure for __usesNativeBorderBox() */\n    __nativeBorderBox :\n    {\n      tags :\n      {\n        button : true,\n        select : true\n      },\n\n      types :\n      {\n        search : true,\n        button : true,\n        submit : true,\n        reset : true,\n        checkbox : true,\n        radio : true\n      }\n    },\n\n\n    /**\n     * Whether the given elements defaults to the \"border-box\" Microsoft model in all cases.\n     *\n     * @param element {Element} DOM element to query\n     * @return {Boolean} true when the element uses \"border-box\" independently from the doctype\n     */\n    __usesNativeBorderBox : function(element)\n    {\n      var map = this.__nativeBorderBox;\n      return map.tags[element.tagName.toLowerCase()] || map.types[element.type];\n    },\n\n\n    /**\n     * Compiles the given box sizing into a CSS compatible string.\n     *\n     * @param value {String} Valid CSS box-sizing value\n     * @return {String} CSS string\n     */\n    compile : function(value)\n    {\n      if (qx.core.Environment.get(\"css.boxsizing\")) {\n        var prop = qx.bom.Style.getCssName(qx.core.Environment.get(\"css.boxsizing\"));\n        return prop + \":\" + value + \";\";\n      }\n      else {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          qx.log.Logger.warn(this, \"This client does not support dynamic modification of the boxSizing property.\");\n          qx.log.Logger.trace();\n        }\n      }\n    },\n\n\n    /**\n     * Returns the box sizing for the given element.\n     *\n     * @param element {Element} The element to query\n     * @return {String} Box sizing value of the given element.\n     */\n    get : function(element)\n    {\n      if (qx.core.Environment.get(\"css.boxsizing\")) {\n        return qx.bom.element.Style.get(element, \"boxSizing\", null, false) || \"\";\n      }\n\n      if (qx.bom.Document.isStandardMode(qx.dom.Node.getWindow(element)))\n      {\n        if (!this.__usesNativeBorderBox(element)) {\n          return \"content-box\";\n        }\n      }\n\n      return \"border-box\";\n    },\n\n\n    /**\n     * Applies a new box sizing to the given element\n     *\n     * @param element {Element} The element to modify\n     * @param value {String} New box sizing value to set\n     */\n    set : function(element, value)\n    {\n      if (qx.core.Environment.get(\"css.boxsizing\")) {\n        // IE8 bombs when trying to apply an unsupported value\n        try {\n          element.style[qx.core.Environment.get(\"css.boxsizing\")] = value;\n        } catch(ex) {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            qx.log.Logger.warn(this, \"This client does not support the boxSizing value\", value);\n          }\n        }\n      }\n      else {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          qx.log.Logger.warn(this, \"This client does not support dynamic modification of the boxSizing property.\");\n        }\n      }\n    },\n\n\n    /**\n     * Removes the local box sizing applied to the element\n     *\n     * @param element {Element} The element to modify\n     */\n    reset : function(element) {\n      this.set(element, \"\");\n    }\n  }\n});\n"
  ]
}