{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/bom/element/Background.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__tmpl",
    "__emptyStyles",
    "backgroundImage",
    "backgroundPosition",
    "backgroundRepeat",
    "__computePosition",
    "left",
    "top",
    "engine",
    "core",
    "Environment",
    "get",
    "version",
    "leftCss",
    "topCss",
    "__isBase64EncodedImage",
    "url",
    "String",
    "lang",
    "firstPartOfUrl",
    "substr",
    "startsWith",
    "contains",
    "compile",
    "source",
    "repeat",
    "position",
    "backgroundImageUrl",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "tmpl",
    "join",
    "getStyles",
    "backgroundImageCssString",
    "map",
    "set",
    "element",
    "styles",
    "prop",
    "style",
    "bom",
    "Background"
  ],
  "mappings": "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",
  "file": "Background.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * The background class contains methods to compute and set the background image\n * of a DOM element.\n *\n * It fixes a background position issue in Firefox 2.\n */\nqx.Class.define(\"qx.bom.element.Background\",\n{\n  statics :\n  {\n    /** @type {Array} Internal helper to improve compile performance */\n    __tmpl :\n    [\n      \"background-image:url(\", null, \");\",\n      \"background-position:\", null, \";\",\n      \"background-repeat:\", null, \";\"\n    ],\n\n\n    /** @type {Map} Empty styles when no image is given */\n    __emptyStyles :\n    {\n      backgroundImage : null,\n      backgroundPosition : null,\n      backgroundRepeat : null\n    },\n\n\n    /**\n     * Computes the background position CSS value\n     *\n     * @param left {Integer|String} either an integer pixel value or a CSS\n     *    string value\n     * @param top {Integer|String} either an integer pixel value or a CSS\n     *    string value\n     * @return {String} The background position CSS value\n     */\n    __computePosition : function(left, top)\n    {\n      // Correcting buggy Firefox background-position implementation\n      // Have problems with identical values\n      var engine = qx.core.Environment.get(\"engine.name\");\n      var version = qx.core.Environment.get(\"engine.version\");\n      if (engine == \"gecko\" && version < 1.9 && left == top && typeof left == \"number\") {\n        top += 0.01;\n      }\n\n      if (left) {\n        var leftCss = (typeof left == \"number\") ? left + \"px\" : left;\n      } else {\n        leftCss = \"0\";\n      }\n      if (top) {\n        var topCss = (typeof top == \"number\") ? top + \"px\" : top;\n      } else {\n        topCss = \"0\";\n      }\n\n      return leftCss + \" \" + topCss;\n    },\n\n\n    /**\n     * Checks if the given image URL is a base64-encoded one.\n     *\n     * @param url {String} image url to check for\n     * @return {Boolean} whether it is a base64-encoded image url\n     */\n    __isBase64EncodedImage : function(url)\n    {\n      var String = qx.lang.String;\n\n      // only check the first 50 characters for performance, since we do not\n      // know how long a base64 image url can be.\n      var firstPartOfUrl = url.substr(0, 50);\n      return firstPartOfUrl.startsWith(\"data:\") && String.contains(firstPartOfUrl, \"base64\");\n    },\n\n\n    /**\n     * Compiles the background into a CSS compatible string.\n     *\n     * @param source {String?null} The URL of the background image\n     * @param repeat {String?null} The background repeat property. valid values\n     *     are <code>repeat</code>, <code>repeat-x</code>,\n     *     <code>repeat-y</code>, <code>no-repeat</code>\n     * @param left {Integer|String?null} The horizontal offset of the image\n     *      inside of the image element. If the value is an integer it is\n     *      interpreted as pixel value otherwise the value is taken as CSS value.\n     *      CSS the values are \"center\", \"left\" and \"right\"\n     * @param top {Integer|String?null} The vertical offset of the image\n     *      inside of the image element. If the value is an integer it is\n     *      interpreted as pixel value otherwise the value is taken as CSS value.\n     *      CSS the values are \"top\", \"bottom\" and \"center\"\n     * @return {String} CSS string\n     */\n    compile : function(source, repeat, left, top)\n    {\n      var position = this.__computePosition(left, top);\n      var backgroundImageUrl = qx.util.ResourceManager.getInstance().toUri(source);\n\n      if (this.__isBase64EncodedImage(backgroundImageUrl)) {\n        backgroundImageUrl = \"'\" + backgroundImageUrl + \"'\";\n      }\n\n      // Updating template\n      var tmpl = this.__tmpl;\n\n      tmpl[1] = backgroundImageUrl;\n      tmpl[4] = position;\n      tmpl[7] = repeat;\n\n      return tmpl.join(\"\");\n    },\n\n\n    /**\n     * Get standard css background styles\n     *\n     * @param source {String} The URL of the background image\n     * @param repeat {String?null} The background repeat property. valid values\n     *     are <code>repeat</code>, <code>repeat-x</code>,\n     *     <code>repeat-y</code>, <code>no-repeat</code>\n     * @param left {Integer|String?null} The horizontal offset of the image\n     *      inside of the image element. If the value is an integer it is\n     *      interpreted as pixel value otherwise the value is taken as CSS value.\n     *      CSS the values are \"center\", \"left\" and \"right\"\n     * @param top {Integer|String?null} The vertical offset of the image\n     *      inside of the image element. If the value is an integer it is\n     *      interpreted as pixel value otherwise the value is taken as CSS value.\n     *      CSS the values are \"top\", \"bottom\" and \"center\"\n     * @return {Map} A map of CSS styles\n     */\n    getStyles : function(source, repeat, left, top)\n    {\n      if (!source) {\n        return this.__emptyStyles;\n      }\n\n      var position = this.__computePosition(left, top);\n      var backgroundImageUrl = qx.util.ResourceManager.getInstance().toUri(source);\n\n      var backgroundImageCssString;\n      if (this.__isBase64EncodedImage(backgroundImageUrl)) {\n        backgroundImageCssString = \"url('\" + backgroundImageUrl + \"')\";\n      } else {\n        backgroundImageCssString = \"url(\" + backgroundImageUrl + \")\";\n      }\n\n      var map = {\n        backgroundPosition : position,\n        backgroundImage : backgroundImageCssString\n      };\n\n      if (repeat != null) {\n        map.backgroundRepeat = repeat;\n      }\n      return map;\n    },\n\n\n    /**\n     * Set the background on the given DOM element\n     *\n     * @param element {Element} The element to modify\n     * @param source {String?null} The URL of the background image\n     * @param repeat {String?null} The background repeat property. valid values\n     *     are <code>repeat</code>, <code>repeat-x</code>,\n     *     <code>repeat-y</code>, <code>no-repeat</code>\n     * @param left {Integer?null} The horizontal offset of the image inside of\n     *     the image element.\n     * @param top {Integer?null} The vertical offset of the image inside of\n     *     the image element.\n     */\n    set : function(element, source, repeat, left, top)\n    {\n      var styles = this.getStyles(source, repeat, left, top);\n      for (var prop in styles) {\n        element.style[prop] = styles[prop];\n      }\n    }\n  }\n});\n"
  ]
}