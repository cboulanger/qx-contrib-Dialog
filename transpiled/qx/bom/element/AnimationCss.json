{
  "className": "qx.bom.element.AnimationCss",
  "packageName": "qx.bom.element",
  "name": "AnimationCss",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 36,
        "column": 0
      },
      "end": {
        "line": 410,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2011 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nMartin Wittemann (martinwittemann)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "This class is responsible for applying CSS3 animations to plain DOM elements.\n\nThe implementation is mostly a cross-browser wrapper for applying the\nanimations, including transforms. If the browser does not support\nCSS animations, but you have set a keep frame, the keep frame will be applied\nimmediately, thus making the animations optional.\n\nThe API aligns closely to the spec wherever possible.\n\nhttp://www.w3.org/TR/css3-animations/\n\n{@link qx.bom.element.Animation} is the class, which takes care of the\nfeature detection for CSS animations and decides which implementation\n(CSS or JavaScript) should be used. Most likely, this implementation should\nbe the one to use."
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "__sheet": {
      "location": {
        "start": {
          "line": 40,
          "column": 4
        },
        "end": {
          "line": 40,
          "column": 18
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "initialization"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__rulePrefix": {
      "location": {
        "start": {
          "line": 41,
          "column": 4
        },
        "end": {
          "line": 41,
          "column": 25
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__id": {
      "location": {
        "start": {
          "line": 42,
          "column": 4
        },
        "end": {
          "line": 42,
          "column": 12
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__rules": {
      "location": {
        "start": {
          "line": 44,
          "column": 4
        },
        "end": {
          "line": 44,
          "column": 16
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Static map of rules"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__transitionKeys": {
      "location": {
        "start": {
          "line": 47,
          "column": 4
        },
        "end": {
          "line": 52,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The used keys for transforms."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__cssAnimationKeys": {
      "location": {
        "start": {
          "line": 55,
          "column": 4
        },
        "end": {
          "line": 55,
          "column": 65
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Map of cross browser CSS keys."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "animateReverse": {
      "location": {
        "start": {
          "line": 68,
          "column": 4
        },
        "end": {
          "line": 70,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "This is the main function to start the animation in reverse mode.\nFor further details, take a look at the documentation of the wrapper\n{@link qx.bom.element.Animation}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "el {Element} The element to animate.",
            "paramName": "el",
            "description": " The element to animate.",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "desc {Map} Animation description.",
            "paramName": "desc",
            "description": " Animation description.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "duration {Integer?} The duration of the animation which will\noverride the duration given in the description.",
            "paramName": "duration",
            "description": " The duration of the animation which will\noverride the duration given in the description.",
            "optional": true,
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.element.AnimationHandle} The handle.",
            "type": "qx.bom.element.AnimationHandle",
            "description": " The handle."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "animate": {
      "location": {
        "start": {
          "line": 82,
          "column": 4
        },
        "end": {
          "line": 84,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "This is the main function to start the animation. For further details,\ntake a look at the documentation of the wrapper\n{@link qx.bom.element.Animation}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "el {Element} The element to animate.",
            "paramName": "el",
            "description": " The element to animate.",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "desc {Map} Animation description.",
            "paramName": "desc",
            "description": " Animation description.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "duration {Integer?} The duration of the animation which will\noverride the duration given in the description.",
            "paramName": "duration",
            "description": " The duration of the animation which will\noverride the duration given in the description.",
            "optional": true,
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.element.AnimationHandle} The handle.",
            "type": "qx.bom.element.AnimationHandle",
            "description": " The handle."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_animate": {
      "location": {
        "start": {
          "line": 98,
          "column": 4
        },
        "end": {
          "line": 169,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Internal method to start an animation either reverse or not.\n{@link qx.bom.element.Animation}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "el {Element} The element to animate.",
            "paramName": "el",
            "description": " The element to animate.",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "desc {Map} Animation description.",
            "paramName": "desc",
            "description": " Animation description.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "duration {Integer?} The duration of the animation which will\noverride the duration given in the description.",
            "paramName": "duration",
            "description": " The duration of the animation which will\noverride the duration given in the description.",
            "optional": true,
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "reverse {Boolean} <code>true</code>, if the animation should be\nreversed.",
            "paramName": "reverse",
            "description": " <code>true</code>, if the animation should be\nreversed.",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.element.AnimationHandle} The handle.",
            "type": "qx.bom.element.AnimationHandle",
            "description": " The handle."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__onAnimationStart": {
      "location": {
        "start": {
          "line": 176,
          "column": 4
        },
        "end": {
          "line": 180,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Handler for the animation start."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} The native event from the browser.",
            "paramName": "e",
            "description": " The native event from the browser.",
            "type": "Event"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onAnimationIteration": {
      "location": {
        "start": {
          "line": 187,
          "column": 4
        },
        "end": {
          "line": 194,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Handler for the animation iteration."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} The native event from the browser.",
            "paramName": "e",
            "description": " The native event from the browser.",
            "type": "Event"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onAnimationEnd": {
      "location": {
        "start": {
          "line": 201,
          "column": 4
        },
        "end": {
          "line": 237,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Handler for the animation end."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} The native event from the browser.",
            "paramName": "e",
            "description": " The native event from the browser.",
            "type": "Event"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__keepFrame": {
      "location": {
        "start": {
          "line": 248,
          "column": 4
        },
        "end": {
          "line": 266,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Helper method which takes an element and a key frame description and\napplies the properties defined in the given frame to the element. This\nmethod is used to keep the state of the animation."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "el {Element} The element to apply the frame to.",
            "paramName": "el",
            "description": " The element to apply the frame to.",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "endFrame {Map} The description of the end frame, which is basically\na map containing CSS properties and values including transforms.",
            "paramName": "endFrame",
            "description": " The description of the end frame, which is basically\na map containing CSS properties and values including transforms.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__normalizeDesc": {
      "location": {
        "start": {
          "line": 274,
          "column": 4
        },
        "end": {
          "line": 290,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Preprocessing of the description to make sure every necessary key is\nset to its default."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "desc {Map} The description of the animation.",
            "paramName": "desc",
            "description": " The description of the animation.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__validateDesc": {
      "location": {
        "start": {
          "line": 298,
          "column": 4
        },
        "end": {
          "line": 325,
          "column": 6
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Debugging helper to validate the description."
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(desc)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "desc {Map} The description of the animation.",
            "paramName": "desc",
            "description": " The description of the animation.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__addKeyFrames": {
      "location": {
        "start": {
          "line": 336,
          "column": 4
        },
        "end": {
          "line": 380,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Helper to add the given frames to an internal CSS stylesheet. It parses\nthe description and adds the key frames to the sheet."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "frames {Map} A map of key frames that describe the animation.",
            "paramName": "frames",
            "description": " A map of key frames that describe the animation.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "reverse {Boolean} <code>true</code>, if the key frames should\nbe added in reverse order.",
            "paramName": "reverse",
            "description": " <code>true</code>, if the key frames should\nbe added in reverse order.",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The generated name of the keyframes rule.",
            "type": "String",
            "description": " The generated name of the keyframes rule."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__clearCache": {
      "location": {
        "start": {
          "line": 386,
          "column": 4
        },
        "end": {
          "line": 393,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Internal helper to reset the cache."
          }
        ]
      },
      "type": "function",
      "access": "private"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 397,
        "column": 2
      },
      "end": {
        "line": 409,
        "column": 3
      }
    }
  },
  "descendants": []
}