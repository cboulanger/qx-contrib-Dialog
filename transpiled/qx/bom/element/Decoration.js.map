{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/bom/element/Decoration.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "DEBUG",
    "__warnings",
    "__alphaFixRepeats",
    "core",
    "Environment",
    "select",
    "__repeatToTagname",
    "update",
    "element",
    "source",
    "repeat",
    "style",
    "tag",
    "getTagName",
    "tagName",
    "toLowerCase",
    "Error",
    "ret",
    "getAttributes",
    "src",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "backgroundPosition",
    "undefined",
    "clip",
    "bom",
    "Style",
    "setStyles",
    "get",
    "filters",
    "apply",
    "e",
    "create",
    "css",
    "compile",
    "isFontUri",
    "font",
    "theme",
    "manager",
    "Font",
    "resolve",
    "match",
    "styles",
    "lang",
    "Object",
    "clone",
    "getStyles",
    "width",
    "height",
    "parseInt",
    "display",
    "verticalAlign",
    "position",
    "_style",
    "hasOwnProperty",
    "getCssName",
    "resource",
    "getData",
    "charCode",
    "Assert",
    "assertNumber",
    "String",
    "fromCharCode",
    "endsWith",
    "fontSize",
    "lineHeight",
    "WebkitUserDrag",
    "format",
    "getImageFormat",
    "io",
    "ImageLoader",
    "getFormat",
    "log",
    "Logger",
    "warn",
    "result",
    "dimension",
    "__getDimension",
    "__normalizeWidthHeight",
    "processAlphaFix",
    "__processScale",
    "__processScaleXScaleY",
    "__processRepeats",
    "getImageWidth",
    "getWidth",
    "getImageHeight",
    "getHeight",
    "sizingMethod",
    "filter",
    "backgroundImage",
    "backgroundRepeat",
    "uri",
    "sourceid",
    "clipped",
    "getCombinedFormat",
    "data",
    "combinedid",
    "toDataUri",
    "__getStylesForClippedScaleX",
    "__getStylesForClippedScaleY",
    "__checkForPotentialClippedImage",
    "imageHeight",
    "top",
    "bottom",
    "imageWidth",
    "left",
    "right",
    "offx",
    "offy",
    "paddingTop",
    "paddingLeft",
    "paddingRight",
    "paddingBottom",
    "bg",
    "Background",
    "key",
    "__getStylesForSingleRepeat",
    "split",
    "isNaN",
    "has",
    "indexOf",
    "debug",
    "Decoration"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EA0BAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,2BAAhB,EACA;AACE;;;;;;AAMAC,aACA;AACE;AACAC,aAAQ,KAFV;;AAIE;AACAC,kBAAa,EALf;;AAOE;AACAC,yBAAoBT,GAAGU,IAAH,CAAQC,WAAR,CAAoBC,MAApB,CAA2B,aAA3B,EACpB;AACE,kBACA;AACE,qBAAY,IADd;AAEE,qBAAY,IAFd;AAGE,mBAAU,IAHZ;AAIE,uBAAc;AAJhB,SAFF;;AASE,mBAAY;AATd,OADoB,CARtB;;AAsBE;AACAC,yBACA;AACE,mBAAY,KADd;AAEE,mBAAY,KAFd;AAGE,iBAAU,KAHZ;AAIE,kBAAW,KAJb;AAKE,qBAAc,KALhB;AAME,oBAAa,KANf;AAOE,oBAAa;AAPf,OAxBF;;AAmCE;;;;;;;;;;;AAWAC,cAAS,gBAASC,OAAT,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,KAAlC,EACT;AACE,YAAIC,MAAM,KAAKC,UAAL,CAAgBH,MAAhB,EAAwBD,MAAxB,CAAV;AACA,YAAIG,OAAOJ,QAAQM,OAAR,CAAgBC,WAAhB,EAAX,EAA0C;AACxC,gBAAM,IAAIC,KAAJ,CAAU,4FAAV,CAAN;AACD;;AAED,YAAIC,MAAM,KAAKC,aAAL,CAAmBT,MAAnB,EAA2BC,MAA3B,EAAmCC,KAAnC,CAAV;;AAEA,YAAIC,QAAQ,KAAZ,EAAmB;AACjBJ,kBAAQW,GAAR,GAAcF,IAAIE,GAAJ,IAAW1B,GAAG2B,IAAH,CAAQC,eAAR,CAAwBC,WAAxB,GAAsCC,KAAtC,CAA4C,qBAA5C,CAAzB;AACD;;AAED;AACA,YAAIf,QAAQG,KAAR,CAAca,kBAAd,IAAoC,EAApC,IAA0CP,IAAIN,KAAJ,CAAUa,kBAAV,KAAiCC,SAA/E,EAA0F;AACxFR,cAAIN,KAAJ,CAAUa,kBAAV,GAA+B,IAA/B;AACD;;AAED;AACA,YAAIhB,QAAQG,KAAR,CAAce,IAAd,IAAsB,EAAtB,IAA4BT,IAAIN,KAAJ,CAAUe,IAAV,KAAmBD,SAAnD,EAA8D;AAC5DR,cAAIN,KAAJ,CAAUe,IAAV,GAAiB,IAAjB;AACD;;AAED;AACAjC,WAAGkC,GAAH,CAAOnB,OAAP,CAAeoB,KAAf,CAAqBC,SAArB,CAA+BrB,OAA/B,EAAwCS,IAAIN,KAA5C;;AAEA;AACA;AACA,YAAIlB,GAAGU,IAAH,CAAQC,WAAR,CAAoB0B,GAApB,CAAwB,4BAAxB,CAAJ,EACA;AACE,cAAI;AACFtB,oBAAQuB,OAAR,CAAgB,6CAAhB,EAA+DC,KAA/D;AACD,WAFD,CAEE,OAAMC,CAAN,EAAS,CAAE;AACd;AACF,OAhFH;;AAmFE;;;;;;;;;;AAUAC,cAAS,gBAASzB,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,EACT;AACE,YAAIC,MAAM,KAAKC,UAAL,CAAgBH,MAAhB,EAAwBD,MAAxB,CAAV;AACA,YAAIQ,MAAM,KAAKC,aAAL,CAAmBT,MAAnB,EAA2BC,MAA3B,EAAmCC,KAAnC,CAAV;AACA,YAAIwB,MAAM1C,GAAGkC,GAAH,CAAOnB,OAAP,CAAeoB,KAAf,CAAqBQ,OAArB,CAA6BnB,IAAIN,KAAjC,CAAV;AACA,YAAIU,kBAAkB5B,GAAG2B,IAAH,CAAQC,eAAR,CAAwBC,WAAxB,EAAtB;;AAEA,YAAID,gBAAgBgB,SAAhB,CAA0B5B,MAA1B,CAAJ,EAAuC;AACrC,cAAI6B,OAAO7C,GAAG8C,KAAH,CAASC,OAAT,CAAiBC,IAAjB,CAAsBnB,WAAtB,GAAoCoB,OAApC,CAA4CjC,OAAOkC,KAAP,CAAa,UAAb,EAAyB,CAAzB,CAA5C,CAAX;;AAEA,cAAIC,SAASnD,GAAGoD,IAAH,CAAQC,MAAR,CAAeC,KAAf,CAAqBT,KAAKU,SAAL,EAArB,CAAb;AACAJ,iBAAO,OAAP,IAAkBjC,MAAMsC,KAAxB;AACAL,iBAAO,QAAP,IAAmBjC,MAAMuC,MAAzB;AACAN,iBAAO,UAAP,IAAsBO,SAASxC,MAAMsC,KAAf,IAAwBE,SAASxC,MAAMuC,MAAf,CAAxB,GAAiDvC,MAAMuC,MAAvD,GAAgEvC,MAAMsC,KAA5F;AACAL,iBAAO,SAAP,IAAoBjC,MAAMyC,OAA1B;AACAR,iBAAO,eAAP,IAA0BjC,MAAM0C,aAAhC;AACAT,iBAAO,UAAP,IAAqBjC,MAAM2C,QAA3B;;AAEA,cAAInB,MAAM,EAAV;AACA,eAAK,IAAIoB,MAAT,IAAmBX,MAAnB,EAA2B;AACzB,gBAAIA,OAAOY,cAAP,CAAsBD,MAAtB,CAAJ,EAAmC;AACjCpB,qBAAO1C,GAAGkC,GAAH,CAAOC,KAAP,CAAa6B,UAAb,CAAwBF,MAAxB,IAAkC,IAAlC,GAAyCX,OAAOW,MAAP,CAAzC,GAA0D,GAAjE;AACD;AACF;;AAED,cAAIG,WAAWrC,gBAAgBsC,OAAhB,CAAwBlD,MAAxB,CAAf;AACA,cAAImD,QAAJ;AACA,cAAIF,QAAJ,EAAc;AACZE,uBAAWF,SAAS,CAAT,CAAX;AACD,WAFD,MAGK;AACHE,uBAAWT,SAAS1D,GAAG8C,KAAH,CAASC,OAAT,CAAiBC,IAAjB,CAAsBnB,WAAtB,GAAoCoB,OAApC,CAA4CjC,OAAOkC,KAAP,CAAa,iBAAb,EAAgC,CAAhC,CAA5C,CAAT,EAA0F,EAA1F,CAAX;AACAlD,eAAGU,IAAH,CAAQ0D,MAAR,CAAeC,YAAf,CAA4BF,QAA5B,EAAsC,oEAAtC;AACD;;AAED,iBAAO,iBAAiBzB,GAAjB,GAAuB,IAAvB,GAA8B4B,OAAOC,YAAP,CAAoBJ,QAApB,CAA9B,GAA8D,QAArE;AACD,SA7BD,MA8BK;AACH,cAAIhD,QAAQ,KAAZ,EAAmB;AACjB,mBAAO,eAAeK,IAAIE,GAAnB,GAAyB,WAAzB,GAAuCgB,GAAvC,GAA6C,KAApD;AACD,WAFD,MAEO;AACL,mBAAO,iBAAiBA,GAAjB,GAAuB,UAA9B;AACD;AACF;AACF,OAzIH;;AA4IE;;;;;;;;;;;AAWAtB,kBAAa,oBAASH,MAAT,EAAiBD,MAAjB,EACb;AACE,YAAIA,UAAUhB,GAAGU,IAAH,CAAQC,WAAR,CAAoB0B,GAApB,CAAwB,4BAAxB,CAAV,IACA,KAAK5B,iBAAL,CAAuBQ,MAAvB,CADA,IACkCD,OAAOwD,QAAP,CAAgB,MAAhB,CADtC,EAEA;AACE,iBAAO,KAAP;AACD;;AAED,eAAO,KAAK3D,iBAAL,CAAuBI,MAAvB,CAAP;AACD,OAhKH;;AAmKE;;;;;;;;;AASAQ,qBAAgB,uBAAST,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,EAChB;AACE,YAAI,CAACA,KAAL,EAAY;AACVA,kBAAQ,EAAR;AACD;;AAED,YAAI,CAACA,MAAM2C,QAAX,EAAqB;AACnB3C,gBAAM2C,QAAN,GAAiB,UAAjB;AACD;;AAED,YAAK7D,GAAGU,IAAH,CAAQC,WAAR,CAAoB0B,GAApB,CAAwB,aAAxB,KAA0C,QAA/C,EACA;AACE;AACA;AACAnB,gBAAMuD,QAAN,GAAiB,CAAjB;AACAvD,gBAAMwD,UAAN,GAAmB,CAAnB;AACD,SAND,MAOK,IAAK1E,GAAGU,IAAH,CAAQC,WAAR,CAAoB0B,GAApB,CAAwB,aAAxB,KAA0C,QAA/C,EACL;AACE;AACAnB,gBAAMyD,cAAN,GAAuB,MAAvB;AACD;;AAED,YAAIC,SAAS5E,GAAG2B,IAAH,CAAQC,eAAR,CAAwBC,WAAxB,GAAsCgD,cAAtC,CAAqD7D,MAArD,KACAhB,GAAG8E,EAAH,CAAMC,WAAN,CAAkBC,SAAlB,CAA4BhE,MAA5B,CADb;;AAGA;AACE,cAAIA,UAAU,IAAV,IAAkB4D,UAAU,IAAhC,EAAsC;AACpC5E,eAAGiF,GAAH,CAAOC,MAAP,CAAcC,IAAd,CAAmB,2DAA2DnE,MAA3D,GAAoE,IAAvF;AACD;AACF;;AAED,YAAIoE,MAAJ;;AAEA;AACA,YAAIpF,GAAGU,IAAH,CAAQC,WAAR,CAAoB0B,GAApB,CAAwB,4BAAxB,KACA,KAAK5B,iBAAL,CAAuBQ,MAAvB,CADA,IACkC2D,WAAW,KADjD,EAEA;AACE,cAAIS,YAAY,KAAKC,cAAL,CAAoBtE,MAApB,CAAhB;AACA,eAAKuE,sBAAL,CAA4BrE,KAA5B,EAAmCmE,UAAU7B,KAA7C,EAAoD6B,UAAU5B,MAA9D;AACA2B,mBAAS,KAAKI,eAAL,CAAqBtE,KAArB,EAA4BD,MAA5B,EAAoCD,MAApC,CAAT;AACD,SAND,MAQA;AACE,iBAAOE,MAAMe,IAAb;AACA,cAAIhB,WAAW,OAAf,EAAwB;AACtBmE,qBAAS,KAAKK,cAAL,CAAoBvE,KAApB,EAA2BD,MAA3B,EAAmCD,MAAnC,CAAT;AACD,WAFD,MAEQ,IAAIC,WAAW,SAAX,IAAwBA,WAAW,SAAvC,EAAkD;AACxDmE,qBAAS,KAAKM,qBAAL,CAA2BxE,KAA3B,EAAkCD,MAAlC,EAA0CD,MAA1C,CAAT;AACD,WAFO,MAED;AACL;AACAoE,qBAAS,KAAKO,gBAAL,CAAsBzE,KAAtB,EAA6BD,MAA7B,EAAqCD,MAArC,CAAT;AACD;AACF;;AAED,eAAOoE,MAAP;AACD,OApOH;;AAuOE;;;;;;;AAOAG,8BAAyB,gCAASrE,KAAT,EAAgBsC,KAAhB,EAAuBC,MAAvB,EACzB;AACE,YAAIvC,MAAMsC,KAAN,IAAe,IAAf,IAAuBA,SAAS,IAApC,EAA0C;AACxCtC,gBAAMsC,KAAN,GAAcA,QAAQ,IAAtB;AACD;;AAED,YAAItC,MAAMuC,MAAN,IAAgB,IAAhB,IAAwBA,UAAU,IAAtC,EAA4C;AAC1CvC,gBAAMuC,MAAN,GAAeA,SAAS,IAAxB;AACD;AACF,OAvPH;;AA0PE;;;;;;;;AAQA6B,sBAAiB,wBAAStE,MAAT,EACjB;AACE,YAAIwC,QAAQxD,GAAG2B,IAAH,CAAQC,eAAR,CAAwBC,WAAxB,GAAsC+D,aAAtC,CAAoD5E,MAApD,KACAhB,GAAG8E,EAAH,CAAMC,WAAN,CAAkBc,QAAlB,CAA2B7E,MAA3B,CADZ;AAEA,YAAIyC,SAASzD,GAAG2B,IAAH,CAAQC,eAAR,CAAwBC,WAAxB,GAAsCiE,cAAtC,CAAqD9E,MAArD,KACAhB,GAAG8E,EAAH,CAAMC,WAAN,CAAkBgB,SAAlB,CAA4B/E,MAA5B,CADb;;AAGA,eAAO;AACLwC,iBAAOA,KADF;AAELC,kBAAQA;AAFH,SAAP;AAID,OA7QH;;AAgRE;;;;;;;;;;AAUA+B,uBAAkB,yBAAStE,KAAT,EAAgBD,MAAhB,EAAwBD,MAAxB,EAClB;AACE,YAAIC,UAAU,QAAV,IAAsBA,UAAU,UAAhC,IAA8CA,UAAU,UAA5D,EAAwE;AACtE,iBAAOC,KAAP;AACD;AACD,YAAI8E,eAAe/E,UAAU,WAAV,GAAwB,MAAxB,GAAiC,OAApD;AACA,YAAIgF,SAAS,6DACAjG,GAAG2B,IAAH,CAAQC,eAAR,CAAwBC,WAAxB,GAAsCC,KAAtC,CAA4Cd,MAA5C,CADA,GAEA,mBAFA,GAEsBgF,YAFtB,GAEqC,IAFlD;;AAIA9E,cAAM+E,MAAN,GAAeA,MAAf;AACA/E,cAAMgF,eAAN,GAAwBhF,MAAMiF,gBAAN,GAAyB,EAAjD;AACA,eAAOjF,MAAM,kBAAN,CAAP;AACA,eAAOA,MAAM,mBAAN,CAAP;;AAEA,eAAO;AACLA,iBAAQA;AADH,SAAP;AAGD,OA5SH;;AA+SE;;;;;;;;;AASAuE,sBAAiB,wBAASvE,KAAT,EAAgBD,MAAhB,EAAwBD,MAAxB,EACjB;AACE,YAAIoF,MAAMpG,GAAG2B,IAAH,CAAQC,eAAR,CAAwBC,WAAxB,GAAsCC,KAAtC,CAA4Cd,MAA5C,CAAV;AACA,YAAIqE,YAAY,KAAKC,cAAL,CAAoBtE,MAApB,CAAhB;;AAEA,aAAKuE,sBAAL,CAA4BrE,KAA5B,EAAmCmE,UAAU7B,KAA7C,EAAoD6B,UAAU5B,MAA9D;;AAEA,eAAO;AACL/B,eAAM0E,GADD;AAELlF,iBAAQA;AAFH,SAAP;AAID,OAnUH;;AAsUE;;;;;;;;;;AAUAwE,6BAAwB,+BAASxE,KAAT,EAAgBD,MAAhB,EAAwBoF,QAAxB,EACxB;AACE,YAAIzE,kBAAkB5B,GAAG2B,IAAH,CAAQC,eAAR,CAAwBC,WAAxB,EAAtB;AACA,YAAIyE,UAAU1E,gBAAgB2E,iBAAhB,CAAkCF,QAAlC,CAAd;AACA,YAAIhB,YAAY,KAAKC,cAAL,CAAoBe,QAApB,CAAhB;AACA,YAAID,GAAJ;;AAEA,YAAIE,OAAJ,EACA;AACE,cAAIE,OAAO5E,gBAAgBsC,OAAhB,CAAwBmC,QAAxB,CAAX;AACA,cAAII,aAAaD,KAAK,CAAL,CAAjB;AACA,cAAIF,WAAW,KAAf,EAAsB;AACpBF,kBAAMxE,gBAAgB8E,SAAhB,CAA0BL,QAA1B,CAAN;AACD,WAFD,MAGK;AACHD,kBAAMxE,gBAAgBE,KAAhB,CAAsB2E,UAAtB,CAAN;AACD;;AAED,cAAIxF,WAAW,SAAf,EAA0B;AACxBC,oBAAQ,KAAKyF,2BAAL,CAAiCzF,KAAjC,EAAwCsF,IAAxC,EAA8CnB,UAAU5B,MAAxD,CAAR;AACD,WAFD,MAEO;AACLvC,oBAAQ,KAAK0F,2BAAL,CAAiC1F,KAAjC,EAAwCsF,IAAxC,EAA8CnB,UAAU7B,KAAxD,CAAR;AACD;;AAED,iBAAO;AACL9B,iBAAM0E,GADD;AAELlF,mBAAQA;AAFH,WAAP;AAID;;AAED;AAvBA,aAyBA;AAC2C;AACvC,mBAAK2F,+BAAL,CAAqCR,QAArC;AACD;;AAED,gBAAIpF,UAAU,SAAd,EACA;AACEC,oBAAMuC,MAAN,GAAe4B,UAAU5B,MAAV,IAAoB,IAApB,GAA2B,IAA3B,GAAkC4B,UAAU5B,MAAV,GAAmB,IAApE;AACA;AACD,aAJD,MAKK,IAAIxC,UAAU,SAAd,EACL;AACEC,oBAAMsC,KAAN,GAAc6B,UAAU7B,KAAV,IAAmB,IAAnB,GAA0B,IAA1B,GAAiC6B,UAAU7B,KAAV,GAAkB,IAAjE;AACA;AACD;;AAED4C,kBAAMxE,gBAAgBE,KAAhB,CAAsBuE,QAAtB,CAAN;AACA,mBAAO;AACL3E,mBAAM0E,GADD;AAELlF,qBAAQA;AAFH,aAAP;AAID;AACF,OAtYH;;AAyYE;;;;;;;;;AASAyF,mCAA8B,qCAASzF,KAAT,EAAgBsF,IAAhB,EAAsB/C,MAAtB,EAC9B;AACE;AACA,YAAIqD,cAAc9G,GAAG2B,IAAH,CAAQC,eAAR,CAAwBC,WAAxB,GAAsCiE,cAAtC,CAAqDU,KAAK,CAAL,CAArD,CAAlB;;AAEA;AACAtF,cAAMe,IAAN,GAAa,EAAC8E,KAAK,CAACP,KAAK,CAAL,CAAP,EAAgB/C,QAAQA,MAAxB,EAAb;AACAvC,cAAMuC,MAAN,GAAeqD,cAAc,IAA7B;;AAEA;;AAEA;AACA,YAAI5F,MAAM6F,GAAN,IAAa,IAAjB,EAAuB;AACrB7F,gBAAM6F,GAAN,GAAarD,SAASxC,MAAM6F,GAAf,EAAoB,EAApB,IAA0BP,KAAK,CAAL,CAA3B,GAAsC,IAAlD;AACD,SAFD,MAEO,IAAItF,MAAM8F,MAAN,IAAgB,IAApB,EAA0B;AAC/B9F,gBAAM8F,MAAN,GAAgBtD,SAASxC,MAAM8F,MAAf,EAAuB,EAAvB,IAA6BvD,MAA7B,GAAsCqD,WAAtC,GAAoDN,KAAK,CAAL,CAArD,GAAgE,IAA/E;AACD;;AAED,eAAOtF,KAAP;AACD,OAraH;;AAwaE;;;;;;;;;AASA0F,mCAA8B,qCAAS1F,KAAT,EAAgBsF,IAAhB,EAAsBhD,KAAtB,EAC9B;AACE;AACA,YAAIyD,aAAajH,GAAG2B,IAAH,CAAQC,eAAR,CAAwBC,WAAxB,GAAsC+D,aAAtC,CAAoDY,KAAK,CAAL,CAApD,CAAjB;;AAEA;AACAtF,cAAMe,IAAN,GAAa,EAACiF,MAAM,CAACV,KAAK,CAAL,CAAR,EAAiBhD,OAAOA,KAAxB,EAAb;AACAtC,cAAMsC,KAAN,GAAcyD,aAAa,IAA3B;;AAEA;;AAEA;AACA,YAAI/F,MAAMgG,IAAN,IAAc,IAAlB,EAAwB;AACtBhG,gBAAMgG,IAAN,GAAcxD,SAASxC,MAAMgG,IAAf,EAAqB,EAArB,IAA2BV,KAAK,CAAL,CAA5B,GAAuC,IAApD;AACD,SAFD,MAEO,IAAItF,MAAMiG,KAAN,IAAe,IAAnB,EAAyB;AAC9BjG,gBAAMiG,KAAN,GAAezD,SAASxC,MAAMiG,KAAf,EAAsB,EAAtB,IAA4B3D,KAA5B,GAAoCyD,UAApC,GAAiDT,KAAK,CAAL,CAAlD,GAA6D,IAA3E;AACD;;AAED,eAAOtF,KAAP;AACD,OApcH;;AAucE;;;;;;;;;AASAyE,wBAAmB,0BAASzE,KAAT,EAAgBD,MAAhB,EAAwBoF,QAAxB,EACnB;AACE,YAAIzE,kBAAkB5B,GAAG2B,IAAH,CAAQC,eAAR,CAAwBC,WAAxB,EAAtB;AACA,YAAIyE,UAAU1E,gBAAgB2E,iBAAhB,CAAkCF,QAAlC,CAAd;AACA,YAAIhB,YAAY,KAAKC,cAAL,CAAoBe,QAApB,CAAhB;;AAEA;AACA,YAAIC,WAAWrF,WAAW,QAA1B,EACA;AACE;AACA,cAAIuF,OAAO5E,gBAAgBsC,OAAhB,CAAwBmC,QAAxB,CAAX;AACA,cAAII,aAAaD,KAAK,CAAL,CAAjB;AACA,cAAIF,WAAW,KAAf,EACA;AACE,gBAAIF,MAAMxE,gBAAgB8E,SAAhB,CAA0BL,QAA1B,CAAV;AACA,gBAAIe,OAAO,CAAX;AACA,gBAAIC,OAAO,CAAX;AACD,WALD,MAOA;AACE,gBAAIjB,MAAOxE,gBAAgBE,KAAhB,CAAsB2E,UAAtB,CAAX;AACA,gBAAIW,OAAOZ,KAAK,CAAL,CAAX;AACA,gBAAIa,OAAOb,KAAK,CAAL,CAAX;;AAEA;AACA,gBAAItF,MAAMoG,UAAN,IAAoBpG,MAAMqG,WAA1B,IAAyCrG,MAAMsG,YAA/C,IAA+DtG,MAAMuG,aAAzE,EAAwF;AACtF,kBAAIV,MAAM7F,MAAMoG,UAAN,IAAoB,CAA9B;AACA,kBAAIJ,OAAOhG,MAAMqG,WAAN,IAAqB,CAAhC;;AAEAH,sBAAQlG,MAAMqG,WAAN,IAAqB,CAA7B;AACAF,sBAAQnG,MAAMoG,UAAN,IAAoB,CAA5B;;AAEApG,oBAAMe,IAAN,GAAa,EAACiF,MAAMA,IAAP,EAAaH,KAAKA,GAAlB,EAAuBvD,OAAO6B,UAAU7B,KAAxC,EAA+CC,QAAQ4B,UAAU5B,MAAjE,EAAb;AACD;AACF;;AAED,cAAIiE,KAAK1H,GAAGkC,GAAH,CAAOnB,OAAP,CAAe4G,UAAf,CAA0BpE,SAA1B,CAAoC6C,GAApC,EAAyCnF,MAAzC,EAAiDmG,IAAjD,EAAuDC,IAAvD,CAAT;AACA,eAAK,IAAIO,GAAT,IAAgBF,EAAhB,EAAoB;AAClBxG,kBAAM0G,GAAN,IAAaF,GAAGE,GAAH,CAAb;AACD;;AAED,cAAIvC,UAAU7B,KAAV,IAAmB,IAAnB,IAA2BtC,MAAMsC,KAAN,IAAe,IAA1C,KAAmDvC,UAAU,UAAV,IAAwBA,WAAW,WAAtF,CAAJ,EAAwG;AACtGC,kBAAMsC,KAAN,GAAc6B,UAAU7B,KAAV,GAAkB,IAAhC;AACD;;AAED,cAAI6B,UAAU5B,MAAV,IAAoB,IAApB,IAA4BvC,MAAMuC,MAAN,IAAgB,IAA5C,KAAqDxC,UAAU,UAAV,IAAwBA,WAAW,WAAxF,CAAJ,EAA0G;AACxGC,kBAAMuC,MAAN,GAAe4B,UAAU5B,MAAV,GAAmB,IAAlC;AACD;;AAED,iBAAO;AACLvC,mBAAQA;AADH,WAAP;AAGD,SA7CD,MA+CA;AACE;AACA,cAAI6F,MAAM7F,MAAMoG,UAAN,IAAoB,CAA9B;AACA,cAAIJ,OAAOhG,MAAMqG,WAAN,IAAqB,CAAhC;AACArG,gBAAMa,kBAAN,GAA2BmF,OAAO,KAAP,GAAeH,GAAf,GAAqB,IAAhD;;AAGA;AACE,gBAAI9F,WAAW,QAAf,EAAyB;AACvB,mBAAK4F,+BAAL,CAAqCR,QAArC;AACD;AACF;;AAED,eAAKd,sBAAL,CAA4BrE,KAA5B,EAAmCmE,UAAU7B,KAA7C,EAAoD6B,UAAU5B,MAA9D;AACA,eAAKoE,0BAAL,CAAgC3G,KAAhC,EAAuCmF,QAAvC,EAAiDpF,MAAjD;;AAEA,iBAAO;AACLC,mBAAQA;AADH,WAAP;AAGD;AACF,OA1hBH;;AA6hBE;;;;;;;AAOA2G,kCAA6B,oCAAS3G,KAAT,EAAgBF,MAAhB,EAAwBC,MAAxB,EAC7B;AACE;AACA;AACA,YAAI8F,MAAM,IAAV;AACA,YAAIG,OAAO,IAAX;AACA,YAAIhG,MAAMa,kBAAV,EACA;AACE,cAAIA,qBAAqBb,MAAMa,kBAAN,CAAyB+F,KAAzB,CAA+B,GAA/B,CAAzB;;AAEAZ,iBAAOxD,SAAS3B,mBAAmB,CAAnB,CAAT,EAAgC,EAAhC,CAAP;AACA,cAAIgG,MAAMb,IAAN,CAAJ,EAAiB;AACfA,mBAAOnF,mBAAmB,CAAnB,CAAP;AACD;;AAEDgF,gBAAMrD,SAAS3B,mBAAmB,CAAnB,CAAT,EAAgC,EAAhC,CAAN;AACA,cAAIgG,MAAMhB,GAAN,CAAJ,EAAgB;AACdA,kBAAMhF,mBAAmB,CAAnB,CAAN;AACD;AACF;;AAED,YAAI2F,KAAK1H,GAAGkC,GAAH,CAAOnB,OAAP,CAAe4G,UAAf,CAA0BpE,SAA1B,CAAoCvC,MAApC,EAA4CC,MAA5C,EAAoDiG,IAApD,EAA0DH,GAA1D,CAAT;AACA,aAAK,IAAIa,GAAT,IAAgBF,EAAhB,EAAoB;AAClBxG,gBAAM0G,GAAN,IAAaF,GAAGE,GAAH,CAAb;AACD;;AAED;AACA;AACA;AACA;AACA,YAAI1G,MAAM+E,MAAV,EAAkB;AAChB/E,gBAAM+E,MAAN,GAAe,EAAf;AACD;AACF,OArkBH;;AAwkBE;;;;;AAKAY,uCAAkC,yCAAS7F,MAAT,EAClC;AACE,YAAI,KAAKT,KAAL,IAAcP,GAAG2B,IAAH,CAAQC,eAAR,CAAwBC,WAAxB,GAAsCmG,GAAtC,CAA0ChH,MAA1C,CAAd,IAAmEA,OAAOiH,OAAP,CAAe,SAAf,KAA6B,CAAC,CAArG,EACA;AACE,cAAI,CAAC,KAAKzH,UAAL,CAAgBQ,MAAhB,CAAL,EACA;AACEhB,eAAGiF,GAAH,CAAOC,MAAP,CAAcgD,KAAd,CAAoB,wCAAwClH,MAA5D;AACA,iBAAKR,UAAL,CAAgBQ,MAAhB,IAA0B,IAA1B;AACD;AACF;AACF;AAvlBH;AARF,GADA,C;AA1BAhB,KAAGkC,GAAH,CAAOnB,OAAP,CAAeoH,UAAf,CAA0BhI,aAA1B,GAA0CA,aAA1C",
  "file": "Decoration.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Alexander Steitz (aback)\n\n************************************************************************ */\n\n/**\n * Powerful creation and update features for images used for decoration\n * purposes like for rounded borders, icons, etc.\n *\n * Includes support for image clipping, PNG alpha channel support, additional\n * repeat options like <code>scale-x</code> or <code>scale-y</code>.\n */\nqx.Class.define(\"qx.bom.element.Decoration\",\n{\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Boolean} Whether clipping hints should be logged */\n    DEBUG : false,\n\n    /** @type {Map} Collect warnings for potential clipped images */\n    __warnings : {},\n\n    /** @type {Map} List of repeat modes which supports the IE AlphaImageLoader */\n    __alphaFixRepeats : qx.core.Environment.select(\"engine.name\",\n    {\n      \"mshtml\" :\n      {\n        \"scale-x\" : true,\n        \"scale-y\" : true,\n        \"scale\" : true,\n        \"no-repeat\" : true\n      },\n\n      \"default\" : null\n    }),\n\n\n    /** @type {Map} Mapping between background repeat and the tag to create */\n    __repeatToTagname :\n    {\n      \"scale-x\" : \"img\",\n      \"scale-y\" : \"img\",\n      \"scale\" : \"img\",\n      \"repeat\" : \"div\",\n      \"no-repeat\" : \"div\",\n      \"repeat-x\" : \"div\",\n      \"repeat-y\" : \"div\"\n    },\n\n\n    /**\n     * Updates the element to display the given source\n     * with the repeat option.\n     *\n     * @param element {Element} DOM element to update\n     * @param source {String} Any valid URI\n     * @param repeat {String} One of <code>scale-x</code>, <code>scale-y</code>,\n     *   <code>scale</code>, <code>repeat</code>, <code>repeat-x</code>,\n     *   <code>repeat-y</code>, <code>repeat</code>\n     * @param style {Map} Additional styles to apply\n     */\n    update : function(element, source, repeat, style)\n    {\n      var tag = this.getTagName(repeat, source);\n      if (tag != element.tagName.toLowerCase()) {\n        throw new Error(\"Image modification not possible because elements could not be replaced at runtime anymore!\");\n      }\n\n      var ret = this.getAttributes(source, repeat, style);\n\n      if (tag === \"img\") {\n        element.src = ret.src || qx.util.ResourceManager.getInstance().toUri(\"qx/static/blank.gif\");\n      }\n\n      // Fix for old background position\n      if (element.style.backgroundPosition != \"\" && ret.style.backgroundPosition === undefined) {\n        ret.style.backgroundPosition = null;\n      }\n\n      // Fix for old clip\n      if (element.style.clip != \"\" && ret.style.clip === undefined) {\n        ret.style.clip = null;\n      }\n\n      // Apply new styles\n      qx.bom.element.Style.setStyles(element, ret.style);\n\n      // we need to apply the filter to prevent black rendering artifacts\n      // http://blog.hackedbrain.com/archive/2007/05/21/6110.aspx\n      if (qx.core.Environment.get(\"css.alphaimageloaderneeded\"))\n      {\n        try {\n          element.filters[\"DXImageTransform.Microsoft.AlphaImageLoader\"].apply();\n        } catch(e) {}\n      }\n    },\n\n\n    /**\n     * Creates the HTML for a decorator image element with the given options.\n     *\n     * @param source {String} Any valid URI\n     * @param repeat {String} One of <code>scale-x</code>, <code>scale-y</code>,\n     *   <code>scale</code>, <code>repeat</code>, <code>repeat-x</code>,\n     *   <code>repeat-y</code>, <code>repeat</code>\n     * @param style {Map} Additional styles to apply\n     * @return {String} Decorator image HTML\n     */\n    create : function(source, repeat, style)\n    {\n      var tag = this.getTagName(repeat, source);\n      var ret = this.getAttributes(source, repeat, style);\n      var css = qx.bom.element.Style.compile(ret.style);\n      var ResourceManager = qx.util.ResourceManager.getInstance();\n\n      if (ResourceManager.isFontUri(source)) {\n        var font = qx.theme.manager.Font.getInstance().resolve(source.match(/@([^/]+)/)[1]);\n\n        var styles = qx.lang.Object.clone(font.getStyles());\n        styles['width'] = style.width;\n        styles['height'] = style.height;\n        styles['fontSize'] = (parseInt(style.width) > parseInt(style.height) ? style.height : style.width);\n        styles['display'] = style.display;\n        styles['verticalAlign'] = style.verticalAlign;\n        styles['position'] = style.position;\n\n        var css = \"\";\n        for (var _style in styles) {\n          if (styles.hasOwnProperty(_style)) {\n            css += qx.bom.Style.getCssName(_style) + \": \" + styles[_style] + \";\";\n          }\n        }\n\n        var resource = ResourceManager.getData(source);\n        var charCode;\n        if (resource) {\n          charCode = resource[2];\n        }\n        else {\n          charCode = parseInt(qx.theme.manager.Font.getInstance().resolve(source.match(/@([^/]+)\\/(.*)$/)[2]), 16);\n          qx.core.Assert.assertNumber(charCode, \"Font source needs either a glyph name or the unicode number in hex\");\n        }\n        \n        return '<div style=\"' + css + '\">' + String.fromCharCode(charCode) + '</div>';\n      }\n      else {\n        if (tag === \"img\") {\n          return '<img src=\"' + ret.src + '\" style=\"' + css + '\"/>';\n        } else {\n          return '<div style=\"' + css + '\"></div>';\n        }\n      }\n    },\n\n\n    /**\n     * Translates the given repeat option to a tag name. Useful\n     * for systems which depends on early information of the tag\n     * name to prepare element like {@link qx.html.Image}.\n     *\n     * @param repeat {String} One of <code>scale-x</code>, <code>scale-y</code>,\n     *   <code>scale</code>, <code>repeat</code>, <code>repeat-x</code>,\n     *   <code>repeat-y</code>, <code>repeat</code>\n     * @param source {String?null} Source used to identify the image format\n     * @return {String} The tag name: <code>div</code> or <code>img</code>\n     */\n    getTagName : function(repeat, source)\n    {\n      if (source && qx.core.Environment.get(\"css.alphaimageloaderneeded\") &&\n          this.__alphaFixRepeats[repeat] && source.endsWith(\".png\"))\n      {\n        return \"div\";\n      }\n\n      return this.__repeatToTagname[repeat];\n    },\n\n\n    /**\n     * This method is used to collect all needed attributes for\n     * the tag name detected by {@link #getTagName}.\n     *\n     * @param source {String} Image source\n     * @param repeat {String} Repeat mode of the image\n     * @param style {Map} Additional styles to apply\n     * @return {String} Markup for image\n     */\n    getAttributes : function(source, repeat, style)\n    {\n      if (!style) {\n        style = {};\n      }\n\n      if (!style.position) {\n        style.position = \"absolute\";\n      }\n\n      if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\"))\n      {\n        // Add a fix for small blocks where IE has a minHeight\n        // of the fontSize in quirks mode\n        style.fontSize = 0;\n        style.lineHeight = 0;\n      }\n      else if ((qx.core.Environment.get(\"engine.name\") == \"webkit\"))\n      {\n        // This stops images from being draggable in webkit\n        style.WebkitUserDrag = \"none\";\n      }\n\n      var format = qx.util.ResourceManager.getInstance().getImageFormat(source) ||\n                   qx.io.ImageLoader.getFormat(source);\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (source != null && format == null) {\n          qx.log.Logger.warn(\"ImageLoader: Not recognized format of external image '\" + source + \"'!\");\n        }\n      }\n\n      var result;\n\n      // Enable AlphaImageLoader in IE6/IE7/IE8\n      if (qx.core.Environment.get(\"css.alphaimageloaderneeded\") &&\n          this.__alphaFixRepeats[repeat] && format === \"png\")\n      {\n        var dimension = this.__getDimension(source);\n        this.__normalizeWidthHeight(style, dimension.width, dimension.height);\n        result = this.processAlphaFix(style, repeat, source);\n      }\n      else\n      {\n        delete style.clip;\n        if (repeat === \"scale\") {\n          result = this.__processScale(style, repeat, source);\n        } else  if (repeat === \"scale-x\" || repeat === \"scale-y\") {\n          result = this.__processScaleXScaleY(style, repeat, source);\n        } else {\n          // Native repeats or \"no-repeat\"\n          result = this.__processRepeats(style, repeat, source);\n        }\n      }\n\n      return result;\n    },\n\n\n    /**\n     * Normalize the given width and height values\n     *\n     * @param style {Map} style information\n     * @param width {Integer?null} width as number or null\n     * @param height {Integer?null} height as number or null\n     */\n    __normalizeWidthHeight : function(style, width, height)\n    {\n      if (style.width == null && width != null) {\n        style.width = width + \"px\";\n      }\n\n      if (style.height == null && height != null) {\n        style.height = height + \"px\";\n      }\n    },\n\n\n    /**\n     * Returns the dimension of the image by calling\n     * {@link qx.util.ResourceManager} or {@link qx.io.ImageLoader}\n     * depending on if the image is a managed one.\n     *\n     * @param source {String} image source\n     * @return {Map} dimension of image\n     */\n    __getDimension : function(source)\n    {\n      var width = qx.util.ResourceManager.getInstance().getImageWidth(source) ||\n                  qx.io.ImageLoader.getWidth(source);\n      var height = qx.util.ResourceManager.getInstance().getImageHeight(source) ||\n                   qx.io.ImageLoader.getHeight(source);\n\n      return {\n        width: width,\n        height: height\n      };\n    },\n\n\n    /**\n     * Get all styles for IE browser which need to load the image\n     * with the help of the AlphaImageLoader\n     *\n     * @param style {Map} style information\n     * @param repeat {String} repeat mode\n     * @param source {String} image source\n     *\n     * @return {Map} style infos\n     */\n    processAlphaFix : function(style, repeat, source)\n    {\n      if (repeat == \"repeat\" || repeat == \"repeat-x\" || repeat == \"repeat-y\") {\n        return style;\n      }\n      var sizingMethod = repeat == \"no-repeat\" ? \"crop\" : \"scale\";\n      var filter = \"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='\" +\n                   qx.util.ResourceManager.getInstance().toUri(source) +\n                   \"', sizingMethod='\" + sizingMethod + \"')\";\n\n      style.filter = filter;\n      style.backgroundImage = style.backgroundRepeat = \"\";\n      delete style[\"background-image\"];\n      delete style[\"background-repeat\"];\n\n      return {\n        style : style\n      };\n    },\n\n\n    /**\n     * Process scaled images.\n     *\n     * @param style {Map} style information\n     * @param repeat {String} repeat mode\n     * @param source {String} image source\n     *\n     * @return {Map} image URI and style infos\n     */\n    __processScale : function(style, repeat, source)\n    {\n      var uri = qx.util.ResourceManager.getInstance().toUri(source);\n      var dimension = this.__getDimension(source);\n\n      this.__normalizeWidthHeight(style, dimension.width, dimension.height);\n\n      return {\n        src : uri,\n        style : style\n      };\n    },\n\n\n    /**\n     * Process images which are either scaled horizontally or\n     * vertically.\n     *\n     * @param style {Map} style information\n     * @param repeat {String} repeat mode\n     * @param sourceid {String} image resource id\n     *\n     * @return {Map} image URI and style infos\n     */\n    __processScaleXScaleY : function(style, repeat, sourceid)\n    {\n      var ResourceManager = qx.util.ResourceManager.getInstance();\n      var clipped = ResourceManager.getCombinedFormat(sourceid);\n      var dimension = this.__getDimension(sourceid);\n      var uri;\n\n      if (clipped)\n      {\n        var data = ResourceManager.getData(sourceid);\n        var combinedid = data[4];\n        if (clipped == \"b64\") {\n          uri = ResourceManager.toDataUri(sourceid);\n        }\n        else {\n          uri = ResourceManager.toUri(combinedid);\n        }\n\n        if (repeat === \"scale-x\") {\n          style = this.__getStylesForClippedScaleX(style, data, dimension.height);\n        } else {\n          style = this.__getStylesForClippedScaleY(style, data, dimension.width);\n        }\n\n        return {\n          src : uri,\n          style : style\n        };\n      }\n\n      // No clipped image available\n      else\n      {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.__checkForPotentialClippedImage(sourceid);\n        }\n\n        if (repeat == \"scale-x\")\n        {\n          style.height = dimension.height == null ? null : dimension.height + \"px\";\n          // note: width is given by the user\n        }\n        else if (repeat == \"scale-y\")\n        {\n          style.width = dimension.width == null ? null : dimension.width + \"px\";\n          // note: height is given by the user\n        }\n\n        uri = ResourceManager.toUri(sourceid);\n        return {\n          src : uri,\n          style : style\n        };\n      }\n    },\n\n\n    /**\n     * Generates the style infos for horizontally scaled clipped images.\n     *\n     * @param style {Map} style infos\n     * @param data {Array} image data retrieved from the {@link qx.util.ResourceManager}\n     * @param height {Integer} image height\n     *\n     * @return {Map} style infos and image URI\n     */\n    __getStylesForClippedScaleX : function(style, data, height)\n    {\n      // Use clipped image (multi-images on x-axis)\n      var imageHeight = qx.util.ResourceManager.getInstance().getImageHeight(data[4]);\n\n      // Add size and clipping\n      style.clip = {top: -data[6], height: height};\n      style.height = imageHeight + \"px\";\n\n      // note: width is given by the user\n\n      // Fix user given y-coordinate to include the combined image offset\n      if (style.top != null) {\n        style.top = (parseInt(style.top, 10) + data[6]) + \"px\";\n      } else if (style.bottom != null) {\n        style.bottom = (parseInt(style.bottom, 10) + height - imageHeight - data[6]) + \"px\";\n      }\n\n      return style;\n    },\n\n\n    /**\n     * Generates the style infos for vertically scaled clipped images.\n     *\n     * @param style {Map} style infos\n     * @param data {Array} image data retrieved from the {@link qx.util.ResourceManager}\n     * @param width {Integer} image width\n     *\n     * @return {Map} style infos and image URI\n     */\n    __getStylesForClippedScaleY : function(style, data, width)\n    {\n      // Use clipped image (multi-images on x-axis)\n      var imageWidth = qx.util.ResourceManager.getInstance().getImageWidth(data[4]);\n\n      // Add size and clipping\n      style.clip = {left: -data[5], width: width};\n      style.width = imageWidth + \"px\";\n\n      // note: height is given by the user\n\n      // Fix user given x-coordinate to include the combined image offset\n      if (style.left != null) {\n        style.left = (parseInt(style.left, 10) + data[5]) + \"px\";\n      } else if (style.right != null) {\n        style.right = (parseInt(style.right, 10) + width - imageWidth - data[5]) + \"px\";\n      }\n\n      return style;\n    },\n\n\n    /**\n     * Process repeated images.\n     *\n     * @param style {Map} style information\n     * @param repeat {String} repeat mode\n     * @param sourceid {String} image resource id\n     *\n     * @return {Map} image URI and style infos\n     */\n    __processRepeats : function(style, repeat, sourceid)\n    {\n      var ResourceManager = qx.util.ResourceManager.getInstance();\n      var clipped = ResourceManager.getCombinedFormat(sourceid);\n      var dimension = this.__getDimension(sourceid);\n\n      // Double axis repeats cannot be clipped\n      if (clipped && repeat !== \"repeat\")\n      {\n        // data = [ 8, 5, \"png\", \"qx\", \"qx/decoration/Modern/arrows-combined.png\", -36, 0]\n        var data = ResourceManager.getData(sourceid);\n        var combinedid = data[4];\n        if (clipped == \"b64\")\n        {\n          var uri = ResourceManager.toDataUri(sourceid);\n          var offx = 0;\n          var offy = 0;\n        }\n        else\n        {\n          var uri  = ResourceManager.toUri(combinedid);\n          var offx = data[5];\n          var offy = data[6];\n\n          // honor padding for combined images\n          if (style.paddingTop || style.paddingLeft || style.paddingRight || style.paddingBottom) {\n            var top = style.paddingTop || 0;\n            var left = style.paddingLeft || 0;\n\n            offx += style.paddingLeft || 0;\n            offy += style.paddingTop || 0;\n\n            style.clip = {left: left, top: top, width: dimension.width, height: dimension.height};\n          }\n        }\n\n        var bg = qx.bom.element.Background.getStyles(uri, repeat, offx, offy);\n        for (var key in bg) {\n          style[key] = bg[key];\n        }\n\n        if (dimension.width != null && style.width == null && (repeat == \"repeat-y\" || repeat === \"no-repeat\")) {\n          style.width = dimension.width + \"px\";\n        }\n\n        if (dimension.height != null && style.height == null && (repeat == \"repeat-x\" || repeat === \"no-repeat\")) {\n          style.height = dimension.height + \"px\";\n        }\n\n        return {\n          style : style\n        };\n      }\n      else\n      {\n        // honor padding\n        var top = style.paddingTop || 0;\n        var left = style.paddingLeft || 0;\n        style.backgroundPosition = left + \"px \" + top + \"px\";\n\n        if (qx.core.Environment.get(\"qx.debug\"))\n        {\n          if (repeat !== \"repeat\") {\n            this.__checkForPotentialClippedImage(sourceid);\n          }\n        }\n\n        this.__normalizeWidthHeight(style, dimension.width, dimension.height);\n        this.__getStylesForSingleRepeat(style, sourceid, repeat);\n\n        return {\n          style : style\n        };\n      }\n    },\n\n\n    /**\n     * Generate all style infos for single repeated images\n     *\n     * @param style {Map} style information\n     * @param repeat {String} repeat mode\n     * @param source {String} image source\n     */\n    __getStylesForSingleRepeat : function(style, source, repeat)\n    {\n      // retrieve the \"backgroundPosition\" style if available to prevent\n      // overwriting with default values\n      var top = null;\n      var left = null;\n      if (style.backgroundPosition)\n      {\n        var backgroundPosition = style.backgroundPosition.split(\" \");\n\n        left = parseInt(backgroundPosition[0], 10);\n        if (isNaN(left)) {\n          left = backgroundPosition[0];\n        }\n\n        top = parseInt(backgroundPosition[1], 10);\n        if (isNaN(top)) {\n          top = backgroundPosition[1];\n        }\n      }\n\n      var bg = qx.bom.element.Background.getStyles(source, repeat, left, top);\n      for (var key in bg) {\n        style[key] = bg[key];\n      }\n\n      // Reset the AlphaImageLoader filter if applied\n      // This prevents IE from setting BOTH CSS filter AND backgroundImage\n      // This is only a fallback if the image is not recognized as PNG\n      // If it's a Alpha-PNG file it *may* result in display problems\n      if (style.filter) {\n        style.filter = \"\";\n      }\n    },\n\n\n    /**\n     * Output a warning if the image can be clipped.\n     *\n     * @param source {String} image source\n     */\n    __checkForPotentialClippedImage : function(source)\n    {\n      if (this.DEBUG && qx.util.ResourceManager.getInstance().has(source) && source.indexOf(\"qx/icon\") == -1)\n      {\n        if (!this.__warnings[source])\n        {\n          qx.log.Logger.debug(\"Potential clipped image candidate: \" + source);\n          this.__warnings[source] = true;\n        }\n      }\n    }\n  }\n});\n"
  ]
}