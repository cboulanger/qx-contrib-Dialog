{
  "className": "qx.bom.element.AnimationJs",
  "packageName": "qx.bom.element",
  "name": "AnimationJs",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 31,
        "column": 0
      },
      "end": {
        "line": 558,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nMartin Wittemann (wittemann)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "This class offers the same API as the CSS3 animation layer in\n{@link qx.bom.element.AnimationCss} but uses JavaScript to fake the behavior.\n\n{@link qx.bom.element.Animation} is the class, which takes care of the\nfeature detection for CSS animations and decides which implementation\n(CSS or JavaScript) should be used. Most likely, this implementation should\nbe the one to use."
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "qx.bom.element.Style.*"
        }
      ],
      "@use": [
        {
          "name": "@use",
          "body": "qx.bom.element.AnimationJs#play"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "__maxStepTime": {
      "location": {
        "start": {
          "line": 38,
          "column": 4
        },
        "end": {
          "line": 38,
          "column": 22
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The maximal time a frame should take."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__units": {
      "location": {
        "start": {
          "line": 43,
          "column": 4
        },
        "end": {
          "line": 43,
          "column": 67
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The supported CSS units."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__transitionKeys": {
      "location": {
        "start": {
          "line": 46,
          "column": 4
        },
        "end": {
          "line": 51,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The used keys for transforms."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "animate": {
      "location": {
        "start": {
          "line": 63,
          "column": 4
        },
        "end": {
          "line": 65,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "This is the main function to start the animation. For further details,\ntake a look at the documentation of the wrapper\n{@link qx.bom.element.Animation}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "el {Element} The element to animate.",
            "paramName": "el",
            "description": " The element to animate.",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "desc {Map} Animation description.",
            "paramName": "desc",
            "description": " Animation description.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "duration {Integer?} The duration of the animation which will\noverride the duration given in the description.",
            "paramName": "duration",
            "description": " The duration of the animation which will\noverride the duration given in the description.",
            "optional": true,
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.element.AnimationHandle} The handle.",
            "type": "qx.bom.element.AnimationHandle",
            "description": " The handle."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "animateReverse": {
      "location": {
        "start": {
          "line": 78,
          "column": 4
        },
        "end": {
          "line": 80,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "This is the main function to start the animation in reversed mode.\nFor further details, take a look at the documentation of the wrapper\n{@link qx.bom.element.Animation}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "el {Element} The element to animate.",
            "paramName": "el",
            "description": " The element to animate.",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "desc {Map} Animation description.",
            "paramName": "desc",
            "description": " Animation description.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "duration {Integer?} The duration of the animation which will\noverride the duration given in the description.",
            "paramName": "duration",
            "description": " The duration of the animation which will\noverride the duration given in the description.",
            "optional": true,
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.element.AnimationHandle} The handle.",
            "type": "qx.bom.element.AnimationHandle",
            "description": " The handle."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_animate": {
      "location": {
        "start": {
          "line": 94,
          "column": 4
        },
        "end": {
          "line": 141,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Helper to start the animation, either in reversed order or not."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "el {Element} The element to animate.",
            "paramName": "el",
            "description": " The element to animate.",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "desc {Map} Animation description.",
            "paramName": "desc",
            "description": " Animation description.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "duration {Integer?} The duration of the animation which will\noverride the duration given in the description.",
            "paramName": "duration",
            "description": " The duration of the animation which will\noverride the duration given in the description.",
            "optional": true,
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "reverse {Boolean} <code>true</code>, if the animation should be\nreversed.",
            "paramName": "reverse",
            "description": " <code>true</code>, if the animation should be\nreversed.",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.element.AnimationHandle} The handle.",
            "type": "qx.bom.element.AnimationHandle",
            "description": " The handle."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__normalizeKeyFrames": {
      "location": {
        "start": {
          "line": 150,
          "column": 4
        },
        "end": {
          "line": 196,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Try to normalize the keyFrames by adding the default / set values of the\nelement."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "keyFrames {Map} The map of key frames.",
            "paramName": "keyFrames",
            "description": " The map of key frames.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "el {Element} The element to animate.",
            "paramName": "el",
            "description": " The element to animate.",
            "type": "Element"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__normalizeKeyFrameTransforms": {
      "location": {
        "start": {
          "line": 205,
          "column": 4
        },
        "end": {
          "line": 224,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks for transform keys and returns a cloned frame\nwith the right transform style set."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "frame {Map} A single key frame of the description.",
            "paramName": "frame",
            "description": " A single key frame of the description.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A modified clone of the given frame.",
            "type": "Map",
            "description": " A modified clone of the given frame."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__calculateDelta": {
      "location": {
        "start": {
          "line": 241,
          "column": 4
        },
        "end": {
          "line": 327,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Precalculation of the delta which will be applied during the animation.\nThe whole deltas will be calculated prior to the animation and stored\nin a single array. This method takes care of that calculation."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "steps {Integer} The amount of steps to take to the end of the\nanimation.",
            "paramName": "steps",
            "description": " The amount of steps to take to the end of the\nanimation.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "stepTime {Integer} The amount of milliseconds each step takes.",
            "paramName": "stepTime",
            "description": " The amount of milliseconds each step takes.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "keys {Array} Ordered list of keys in the key frames map.",
            "paramName": "keys",
            "description": " Ordered list of keys in the key frames map.",
            "type": "Array"
          },
          {
            "name": "@param",
            "body": "keyFrames {Map} The map of key frames.",
            "paramName": "keyFrames",
            "description": " The map of key frames.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "duration {Integer} Time in milliseconds the animation should take.",
            "paramName": "duration",
            "description": " Time in milliseconds the animation should take.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "timing {String} The given timing function.",
            "paramName": "timing",
            "description": " The given timing function.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} An array containing the animation deltas.",
            "type": "Array",
            "description": " An array containing the animation deltas."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getUnit": {
      "location": {
        "start": {
          "line": 336,
          "column": 4
        },
        "end": {
          "line": 338,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Ties to parse out the unit of the given value."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {String} A CSS value including its unit.",
            "paramName": "item",
            "description": " A CSS value including its unit.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The unit of the given value.",
            "type": "String",
            "description": " The unit of the given value."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getNextValue": {
      "location": {
        "start": {
          "line": 350,
          "column": 4
        },
        "end": {
          "line": 353,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the next value based on the given arguments."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "nextItem {String} The CSS value of the next frame",
            "paramName": "nextItem",
            "description": " The CSS value of the next frame",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "lastItem {String} The CSS value of the last frame",
            "paramName": "lastItem",
            "description": " The CSS value of the last frame",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "timing {String} The timing used for the calculation",
            "paramName": "timing",
            "description": " The timing used for the calculation",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "x {Number} The x position of the animation on the time axis",
            "paramName": "x",
            "description": " The x position of the animation on the time axis",
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The calculated value including its unit.",
            "type": "String",
            "description": " The calculated value including its unit."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "play": {
      "location": {
        "start": {
          "line": 364,
          "column": 4
        },
        "end": {
          "line": 407,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Internal helper for the {@link qx.bom.element.AnimationHandle} to play\nthe animation."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "handle {qx.bom.element.AnimationHandle} The hand which\nrepresents the animation.",
            "paramName": "handle",
            "description": " The hand which\nrepresents the animation.",
            "type": "qx.bom.element.AnimationHandle"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.element.AnimationHandle} The handle for chaining.",
            "type": "qx.bom.element.AnimationHandle",
            "description": " The handle for chaining."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "pause": {
      "location": {
        "start": {
          "line": 419,
          "column": 4
        },
        "end": {
          "line": 425,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Internal helper for the {@link qx.bom.element.AnimationHandle} to pause\nthe animation."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "handle {qx.bom.element.AnimationHandle} The hand which\nrepresents the animation.",
            "paramName": "handle",
            "description": " The hand which\nrepresents the animation.",
            "type": "qx.bom.element.AnimationHandle"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.element.AnimationHandle} The handle for chaining.",
            "type": "qx.bom.element.AnimationHandle",
            "description": " The handle for chaining."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "stop": {
      "location": {
        "start": {
          "line": 436,
          "column": 4
        },
        "end": {
          "line": 473,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Internal helper for the {@link qx.bom.element.AnimationHandle} to stop\nthe animation."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "handle {qx.bom.element.AnimationHandle} The hand which\nrepresents the animation.",
            "paramName": "handle",
            "description": " The hand which\nrepresents the animation.",
            "type": "qx.bom.element.AnimationHandle"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.element.AnimationHandle} The handle for chaining.",
            "type": "qx.bom.element.AnimationHandle",
            "description": " The handle for chaining."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__applyRepeat": {
      "location": {
        "start": {
          "line": 483,
          "column": 4
        },
        "end": {
          "line": 491,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Takes care of the repeat key of the description."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "steps {Integer} The number of steps one iteration would take.",
            "paramName": "steps",
            "description": " The number of steps one iteration would take.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "repeat {Integer|String} It can be either a number how often the\nanimation should be repeated or the string 'infinite'.",
            "paramName": "repeat",
            "description": " It can be either a number how often the\nanimation should be repeated or the string 'infinite'.",
            "type": [
              "Integer",
              "String"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The number of steps to animate.",
            "type": "Integer",
            "description": " The number of steps to animate."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__applyStyles": {
      "location": {
        "start": {
          "line": 499,
          "column": 4
        },
        "end": {
          "line": 520,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Central method to apply css styles and element properties."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "el {Element} The DOM element to apply the styles.",
            "paramName": "el",
            "description": " The DOM element to apply the styles.",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "styles {Map} A map containing styles and values.",
            "paramName": "styles",
            "description": " A map containing styles and values.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getStepTime": {
      "location": {
        "start": {
          "line": 529,
          "column": 4
        },
        "end": {
          "line": 541,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Dynamic calculation of the steps time considering a max step time."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "duration {Number} The duration of the animation.",
            "paramName": "duration",
            "description": " The duration of the animation.",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "keys {Array} An array containing the ordered set of key frame keys.",
            "paramName": "keys",
            "description": " An array containing the ordered set of key frame keys.",
            "type": "Array"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The best suited step time.",
            "type": "Integer",
            "description": " The best suited step time."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getOrderedKeys": {
      "location": {
        "start": {
          "line": 549,
          "column": 4
        },
        "end": {
          "line": 556,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Helper which returns the ordered keys of the key frame map."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "keyFrames {Map} The map of key frames.",
            "paramName": "keyFrames",
            "description": " The map of key frames.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} An ordered list of keys.",
            "type": "Array",
            "description": " An ordered list of keys."
          }
        ]
      },
      "type": "function",
      "access": "private"
    }
  },
  "descendants": []
}