{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/bom/element/Class.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__splitter",
    "__trim",
    "add",
    "element",
    "name",
    "length",
    "classList",
    "has",
    "className",
    "core",
    "Environment",
    "get",
    "addClasses",
    "classes",
    "i",
    "keys",
    "result",
    "old",
    "split",
    "l",
    "push",
    "join",
    "getClass",
    "baseVal",
    "log",
    "Logger",
    "warn",
    "contains",
    "regexp",
    "RegExp",
    "test",
    "remove",
    "replace",
    "removeClasses",
    "reg",
    "oldName",
    "newName",
    "toggle",
    "undefined",
    "bom",
    "Class"
  ],
  "mappings": "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",
  "file": "Class.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n   ======================================================================\n\n   This class contains code based on the following work:\n\n   * Base2\n     http://code.google.com/p/base2/\n     Version 0.9\n\n     Copyright:\n       (c) 2006-2007, Dean Edwards\n\n     License:\n       MIT: http://www.opensource.org/licenses/mit-license.php\n\n     Authors:\n       * Dean Edwards\n\n************************************************************************ */\n\n\n/**\n * CSS class name support for HTML elements. Supports multiple class names\n * for each element. Can query and apply class names to HTML elements.\n */\nqx.Bootstrap.define(\"qx.bom.element.Class\",\n{\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {RegExp} Regular expressions to split class names */\n    __splitter : /\\s+/g,\n\n    /** @type {RegExp} String trim regular expression. */\n    __trim : /^\\s+|\\s+$/g,\n\n    /**\n     * Adds a className to the given element\n     * If successfully added the given className will be returned\n     *\n     * @signature function(element, name)\n     * @param element {Element} The element to modify\n     * @param name {String} The class name to add\n     * @return {String} The added classname (if so)\n     */\n    add :{\n      \"native\" : function(element, name)\n      {\n        if (name.length > 0) {\n          element.classList.add(name);\n        }\n\n        return name;\n      },\n\n      \"default\" : function(element, name)\n      {\n        if (!this.has(element, name)) {\n          element.className += (element.className ? \" \" : \"\") + name;\n        }\n\n        return name;\n      }\n    }[qx.core.Environment.get(\"html.classlist\") ? \"native\" : \"default\"],\n\n\n    /**\n     * Adds multiple classes to the given element\n     *\n     * @signature function(element, classes)\n     * @param element {Element} DOM element to modify\n     * @param classes {String[]} List of classes to add.\n     * @return {String} The resulting class name which was applied\n     */\n    addClasses :{\n      \"native\" : function(element, classes)\n      {\n        for (var i=0; i<classes.length; i++) {\n          if (classes[i].length > 0) {\n            element.classList.add(classes[i]);\n          }\n        }\n        return element.className;\n      },\n\n      \"default\" : function(element, classes)\n      {\n        var keys = {};\n        var result;\n\n        var old = element.className;\n        if (old)\n        {\n          result = old.split(this.__splitter);\n          for (var i=0, l=result.length; i<l; i++) {\n            keys[result[i]] = true;\n          }\n\n          for (var i=0, l=classes.length; i<l; i++)\n          {\n            if (!keys[classes[i]]) {\n              result.push(classes[i]);\n            }\n          }\n        }\n        else {\n          result = classes;\n        }\n\n        return element.className = result.join(\" \");\n      }\n    }[qx.core.Environment.get(\"html.classlist\") ? \"native\" : \"default\"],\n\n\n    /**\n     * Gets the classname of the given element\n     *\n     * @param element {Element} The element to query\n     * @return {String} The retrieved classname\n     */\n    get : function(element) {\n      var className = element.className;\n      if(typeof className.split !== 'function')\n      {\n        if(typeof className === 'object')\n        {\n          if(qx.Bootstrap.getClass(className) == 'SVGAnimatedString')\n          {\n            className = className.baseVal;\n          }\n          else\n          {\n            if (qx.core.Environment.get(\"qx.debug\")) {\n              qx.log.Logger.warn(this, \"className for element \" + element + \" cannot be determined\");\n            }\n            className = '';\n          }\n        }\n        if(typeof className === 'undefined')\n        {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            qx.log.Logger.warn(this, \"className for element \" + element + \" is undefined\");\n          }\n          className = '';\n        }\n      }\n      return className;\n    },\n\n\n    /**\n     * Whether the given element has the given className.\n     *\n     * @signature function(element, name)\n     * @param element {Element} The DOM element to check\n     * @param name {String} The class name to check for\n     * @return {Boolean} true when the element has the given classname\n     */\n    has : {\n      \"native\" : function(element, name) {\n        return element.classList.contains(name);\n      },\n\n      \"default\" : function(element, name)\n      {\n        var regexp = new RegExp(\"(^|\\\\s)\" + name + \"(\\\\s|$)\");\n        return regexp.test(element.className);\n      }\n    }[qx.core.Environment.get(\"html.classlist\") ? \"native\" : \"default\"],\n\n\n    /**\n     * Removes a className from the given element\n     *\n     * @signature function(element, name)\n     * @param element {Element} The DOM element to modify\n     * @param name {String} The class name to remove\n     * @return {String} The removed class name\n     */\n    remove : {\n      \"native\" : function(element, name)\n      {\n        element.classList.remove(name);\n        return name;\n      },\n\n      \"default\" : function(element, name)\n      {\n        var regexp = new RegExp(\"(^|\\\\s)\" + name + \"(\\\\s|$)\");\n        element.className = element.className.replace(regexp, \"$2\");\n\n        return name;\n      }\n    }[qx.core.Environment.get(\"html.classlist\") ? \"native\" : \"default\"],\n\n\n    /**\n     * Removes multiple classes from the given element\n     *\n     * @signature function(element, classes)\n     * @param element {Element} DOM element to modify\n     * @param classes {String[]} List of classes to remove.\n     * @return {String} The resulting class name which was applied\n     */\n    removeClasses : {\n      \"native\" : function(element, classes)\n      {\n        for (var i=0; i<classes.length; i++) {\n          element.classList.remove(classes[i]);\n        }\n        return element.className;\n      },\n\n      \"default\" : function(element, classes)\n      {\n        var reg = new RegExp(\"\\\\b\" + classes.join(\"\\\\b|\\\\b\") + \"\\\\b\", \"g\");\n        return element.className = element.className.replace(reg, \"\").replace(this.__trim, \"\").replace(this.__splitter, \" \");\n      }\n    }[qx.core.Environment.get(\"html.classlist\") ? \"native\" : \"default\"],\n\n\n    /**\n     * Replaces the first given class name with the second one\n     *\n     * @param element {Element} The DOM element to modify\n     * @param oldName {String} The class name to remove\n     * @param newName {String} The class name to add\n     * @return {String} The added class name\n     */\n    replace : function(element, oldName, newName)\n    {\n      if (!this.has(element, oldName)) {\n        return \"\";\n      }\n\n      this.remove(element, oldName);\n      return this.add(element, newName);\n    },\n\n\n    /**\n     * Toggles a className of the given element\n     *\n     * @signature function(element, name, toggle)\n     * @param element {Element} The DOM element to modify\n     * @param name {String} The class name to toggle\n     * @param toggle {Boolean?null} Whether to switch class on/off. Without\n     *    the parameter an automatic toggling would happen.\n     * @return {String} The class name\n     */\n    toggle : {\n      \"native\" : function(element, name, toggle)\n      {\n        if (toggle === undefined) {\n          element.classList.toggle(name);\n        } else {\n          toggle ? this.add(element, name) : this.remove(element, name);\n        }\n        return name;\n      },\n\n      \"default\" : function(element, name, toggle)\n      {\n        if (toggle == null) {\n          toggle = !this.has(element, name);\n        }\n\n        toggle ? this.add(element, name) : this.remove(element, name);\n        return name;\n      }\n    }[qx.core.Environment.get(\"html.classlist\") ? \"native\" : \"default\"]\n  }\n});\n"
  ]
}