{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/bom/webfonts/Manager.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "__createdStyles",
    "__validators",
    "__queue",
    "__preferredFormats",
    "getPreferredFormats",
    "statics",
    "FONT_FORMATS",
    "VALIDATION_TIMEOUT",
    "members",
    "__styleSheet",
    "__queueInterval",
    "require",
    "familyName",
    "sourcesList",
    "callback",
    "context",
    "sourceUrls",
    "source",
    "comparisonString",
    "version",
    "fontWeight",
    "fontStyle",
    "sources",
    "i",
    "l",
    "length",
    "split",
    "src",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "push",
    "Environment",
    "get",
    "parseInt",
    "event",
    "Timer",
    "addListener",
    "__flushQueue",
    "isEnabled",
    "start",
    "__require",
    "remove",
    "fontLookupKey",
    "__createFontLookupKey",
    "index",
    "__removeRule",
    "lang",
    "Array",
    "removeAt",
    "dispose",
    "preferredFormats",
    "browser",
    "browserVersion",
    "os",
    "osVersion",
    "removeStyleSheet",
    "bom",
    "Stylesheet",
    "removeSheet",
    "lookupKey",
    "includes",
    "sourcesMap",
    "__getSourcesMap",
    "rule",
    "__getRule",
    "Error",
    "createElement",
    "__addRule",
    "ex",
    "warn",
    "message",
    "webfonts",
    "Validator",
    "setTimeout",
    "Manager",
    "addListenerOnce",
    "__onFontChangeStatus",
    "cbContext",
    "window",
    "validate",
    "stop",
    "next",
    "shift",
    "apply",
    "ev",
    "result",
    "getData",
    "valid",
    "once",
    "family",
    "formats",
    "x",
    "reg",
    "RegExp",
    "match",
    "exec",
    "rules",
    "formatList",
    "format",
    "__getSourceForFormat",
    "join",
    "url",
    "completeRule",
    "cssText",
    "__fixCssText",
    "insertRule",
    "cssRules",
    "regtext",
    "document",
    "styleSheets",
    "sheet",
    "replace",
    "j",
    "m",
    "deleteRule",
    "destruct",
    "prop",
    "removeDefaultHelperElements"
  ],
  "mappings": "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",
  "file": "Manager.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n************************************************************************ */\n\n/**\n * Manages font-face definitions, making sure that each rule is only applied\n * once. It supports adding fonts of the same family but with different style\n * and weight. For instance, the following declaration uses 4 different source\n * files and combine them in a single font family.\n *\n * <pre class='javascript'>\n *   sources: [\n *     {\n *       family: \"Sansation\",\n *       source: [\n *         \"fonts/Sansation-Regular.ttf\"\n *       ]\n *     },\n *     {\n *       family: \"Sansation\",\n *       fontWeight: \"bold\",\n *       source: [\n *         \"fonts/Sansation-Bold.ttf\",\n *       ]\n *     },\n *     {\n *       family: \"Sansation\",\n *       fontStyle: \"italic\",\n *       source: [\n *         \"fonts/Sansation-Italic.ttf\",\n *       ]\n *     },\n *     {\n *       family: \"Sansation\",\n *       fontWeight: \"bold\",\n *       fontStyle: \"italic\",\n *       source: [\n *         \"fonts/Sansation-BoldItalic.ttf\",\n *       ]\n *     }\n *   ]\n * </pre>\n * \n * This class does not need to be disposed, except when you want to abort the loading\n * and validation process.\n */\nqx.Class.define(\"qx.bom.webfonts.Manager\", {\n\n  extend : qx.core.Object,\n\n  type : \"singleton\",\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n    this.__createdStyles = [];\n    this.__validators = {};\n    this.__queue = [];\n    this.__preferredFormats = this.getPreferredFormats();\n  },\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /**\n     * List of known font definition formats (i.e. file extensions). Used to\n     * identify the type of each font file configured for a web font.\n     */\n    FONT_FORMATS : [\"eot\", \"woff\", \"ttf\", \"svg\"],\n\n    /**\n     * Timeout (in ms) to wait before deciding that a web font was not loaded.\n     */\n    VALIDATION_TIMEOUT : 5000\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __createdStyles : null,\n    __styleSheet : null,\n    __validators : null,\n    __preferredFormats : null,\n    __queue : null,\n    __queueInterval : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds the necessary font-face rule for a web font to the document. Also\n     * creates a web font Validator ({@link qx.bom.webfonts.Validator}) that\n     * checks if the webFont was applied correctly.\n     *\n     * @param familyName {String} Name of the web font\n     * @param sourcesList {Object} List of source URLs along with their style\n     * (e.g. fontStyle: \"italic\") and weight (e.g. fontWeight: \"bold\").\n     * For maximum compatibility, this should include EOT, WOFF and TTF versions\n     * of the font.\n     * @param callback {Function?} Optional event listener callback that will be\n     * executed once the validator has determined whether the webFont was\n     * applied correctly.\n     * See {@link qx.bom.webfonts.Validator#changeStatus}\n     * @param context {Object?} Optional context for the callback function\n     */\n    require : function(familyName, sourcesList, callback, context)\n    {\n      var sourceUrls = sourcesList.source;\n      var comparisonString = sourcesList.comparisonString;\n      var version = sourcesList.version;\n      var fontWeight = sourcesList.fontWeight;\n      var fontStyle = sourcesList.fontStyle;\n      var sources = [];\n      for (var i=0,l=sourceUrls.length; i<l; i++) {\n        var split = sourceUrls[i].split(\"#\");\n        var src = qx.util.ResourceManager.getInstance().toUri(split[0]);\n        if (split.length > 1) {\n          src = src + \"#\" + split[1];\n        }\n        sources.push(src);\n      }\n\n      // old IEs need a break in between adding @font-face rules\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\" && (\n          parseInt(qx.core.Environment.get(\"engine.version\")) < 9 ||\n          qx.core.Environment.get(\"browser.documentmode\") < 9)) {\n        if (!this.__queueInterval) {\n          this.__queueInterval = new qx.event.Timer(100);\n          this.__queueInterval.addListener(\"interval\", this.__flushQueue, this);\n        }\n\n        if (!this.__queueInterval.isEnabled()) {\n          this.__queueInterval.start();\n        }\n\n        this.__queue.push([familyName, sources, fontWeight, fontStyle, comparisonString, version, callback, context]);\n      } else {\n        this.__require(familyName, sources, fontWeight, fontStyle, comparisonString, version, callback, context);\n      }\n    },\n\n\n    /**\n     * Removes a font's font-face definition from the style sheet. This means\n     * the font will no longer be available and any elements using it will\n     * fall back to the their regular font-families.\n     *\n     * @param familyName {String} font-family name\n     * @param fontWeight {String} the font-weight.\n     * @param fontStyle {String} the font-style.\n     */\n    remove : function(familyName, fontWeight, fontStyle) {\n      var fontLookupKey = this.__createFontLookupKey(familyName, fontWeight, fontStyle);\n      var index = null;\n      for (var i=0,l=this.__createdStyles.length; i<l; i++) {\n        if (this.__createdStyles[i] == fontLookupKey) {\n          index = i;\n          this.__removeRule(familyName, fontWeight, fontStyle);\n          break;\n        }\n      }\n      if (index !== null) {\n        qx.lang.Array.removeAt(this.__createdStyles, index);\n      }\n      if (familyName in this.__validators) {\n        this.__validators[familyName].dispose();\n        delete this.__validators[familyName];\n      }\n    },\n\n\n    /**\n     * Returns the preferred font format(s) for the currently used browser. Some\n     * browsers support multiple formats, e.g. WOFF and TTF or WOFF and EOT. In\n     * those cases, WOFF is considered the preferred format.\n     *\n     * @return {String[]} List of supported font formats ordered by preference\n     * or empty Array if none could be determined\n     */\n    getPreferredFormats : function()\n    {\n      var preferredFormats = [];\n      var browser = qx.core.Environment.get(\"browser.name\");\n      var browserVersion = qx.core.Environment.get(\"browser.version\");\n      var os = qx.core.Environment.get(\"os.name\");\n      var osVersion = qx.core.Environment.get(\"os.version\");\n\n      if ((browser == \"ie\" && qx.core.Environment.get(\"browser.documentmode\") >= 9) ||\n          (browser == \"firefox\" && browserVersion >= 3.6) ||\n          (browser == \"chrome\" && browserVersion >= 6)) {\n        preferredFormats.push(\"woff\");\n      }\n\n      if ((browser == \"opera\" && browserVersion >= 10) ||\n          (browser == \"safari\" && browserVersion >= 3.1) ||\n          (browser == \"firefox\" && browserVersion >= 3.5) ||\n          (browser == \"chrome\" && browserVersion >= 4) ||\n          (browser == \"mobile safari\" && os == \"ios\" && osVersion >= 4.2)) {\n        preferredFormats.push(\"ttf\");\n      }\n\n      if (browser == \"ie\" && browserVersion >= 4) {\n        preferredFormats.push(\"eot\");\n      }\n\n      if (browser == \"mobileSafari\" && os == \"ios\" && osVersion >= 4.1) {\n        preferredFormats.push(\"svg\");\n      }\n\n      return preferredFormats;\n    },\n\n\n    /**\n     * Removes the styleSheet element used for all web font definitions from the\n     * document. This means all web fonts declared by the manager will no longer\n     * be available and elements using them will fall back to their regular\n     * font-families\n     */\n    removeStyleSheet : function()\n    {\n      this.__createdStyles = [];\n      if (this.__styleSheet) {\n        qx.bom.Stylesheet.removeSheet(this.__styleSheet);\n      }\n      this.__styleSheet = null;\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PRIVATE API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Creates a lookup key to index the created fonts.\n     * @param familyName {String} font-family name\n     * @param fontWeight {String} the font-weight.\n     * @param fontStyle {String} the font-style.\n     * @return {string} the font lookup key\n     */\n    __createFontLookupKey: function (familyName, fontWeight, fontStyle) {\n      var lookupKey = familyName + \"_\" + (fontWeight ? fontWeight : \"normal\") + \"_\" + (fontStyle ? fontStyle : \"normal\");\n      return lookupKey;\n    },\n\n    /**\n     * Does the actual work of adding stylesheet rules and triggering font\n     * validation\n     *\n     * @param familyName {String} Name of the web font\n     * @param sources {String[]} List of source URLs. For maximum compatibility,\n     * this should include EOT, WOFF and TTF versions of the font.\n     * @param fontWeight {String} the web font should be registered using a\n     * fontWeight font weight.\n     * @param fontStyle {String} the web font should be registered using an\n     * fontStyle font style.\n     * @param comparisonString {String} String to check whether the font has loaded or not\n     * @param version {String?} Optional version that is appended to the font URL to be able to override caching\n     * @param callback {Function?} Optional event listener callback that will be\n     * executed once the validator has determined whether the webFont was\n     * applied correctly.\n     * @param context {Object?} Optional context for the callback function\n     */\n    __require : function(familyName, sources, fontWeight, fontStyle, comparisonString, version, callback, context)\n    {\n      var fontLookupKey = this.__createFontLookupKey(familyName, fontWeight, fontStyle);\n      if (!this.__createdStyles.includes(fontLookupKey)) {\n        var sourcesMap = this.__getSourcesMap(sources);\n        var rule = this.__getRule(familyName, fontWeight, fontStyle, sourcesMap, version);\n\n        if (!rule) {\n          throw new Error(\"Couldn't create @font-face rule for WebFont \" + familyName + \"!\");\n        }\n\n        if (!this.__styleSheet) {\n          this.__styleSheet = qx.bom.Stylesheet.createElement();\n        }\n\n        try {\n          this.__addRule(rule);\n        }\n        catch(ex) {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            this.warn(\"Error while adding @font-face rule:\", ex.message);\n            return;\n          }\n        }\n        this.__createdStyles.push(fontLookupKey);\n      }\n\n      if (!this.__validators[familyName]) {\n        this.__validators[familyName] = new qx.bom.webfonts.Validator(familyName, comparisonString);\n        this.__validators[familyName].setTimeout(qx.bom.webfonts.Manager.VALIDATION_TIMEOUT);\n        this.__validators[familyName].addListenerOnce(\"changeStatus\", this.__onFontChangeStatus, this);\n      }\n\n      if (callback) {\n        var cbContext = context || window;\n        this.__validators[familyName].addListenerOnce(\"changeStatus\", callback, cbContext);\n      }\n\n      this.__validators[familyName].validate();\n    },\n\n\n    /**\n     * Processes the next item in the queue\n     */\n    __flushQueue : function()\n    {\n      if (this.__queue.length == 0) {\n        this.__queueInterval.stop();\n        return;\n      }\n      var next = this.__queue.shift();\n      this.__require.apply(this, next);\n    },\n\n\n    /**\n     * Removes the font-face declaration if a font could not be validated\n     *\n     * @param ev {qx.event.type.Data} qx.bom.webfonts.Validator#changeStatus\n     */\n    __onFontChangeStatus : function(ev)\n    {\n      var result = ev.getData();\n      if (result.valid === false) {\n        qx.event.Timer.once(function() {\n          this.remove(result.family);\n        }, this, 250);\n      }\n    },\n\n\n    /**\n     * Uses a naive regExp match to determine the format of each defined source\n     * file for a webFont. Returns a map with the format names as keys and the\n     * corresponding source URLs as values.\n     *\n     * @param sources {String[]} Array of source URLs\n     * @return {Map} Map of formats and URLs\n     */\n    __getSourcesMap : function(sources)\n    {\n      var formats = qx.bom.webfonts.Manager.FONT_FORMATS;\n      var sourcesMap = {};\n      for (var i=0, l=sources.length; i<l; i++) {\n        var type = null;\n        for (var x=0; x < formats.length; x++) {\n          var reg = new RegExp(\"\\.(\" + formats[x] + \")\");\n          var match = reg.exec(sources[i]);\n          if (match) {\n            type = match[1];\n          }\n        }\n\n        if (type) {\n          sourcesMap[type] = sources[i];\n        }\n      }\n      return sourcesMap;\n    },\n\n\n    /**\n     * Assembles the body of a font-face rule for a single webFont.\n     *\n     * @param familyName {String} Font-family name\n     * @param fontWeight {String} the web font should be registered using a\n     * fontWeight font weight.\n     * @param fontStyle {String} the web font should be registered using an\n     * fontStyle font style.\n     * @param sourcesMap {Map} Map of font formats and sources\n     * @param version {String?} Optional version to be appended to the URL\n     * @return {String} The computed CSS rule\n     */\n    __getRule : function(familyName, fontWeight, fontStyle, sourcesMap, version)\n    {\n      var rules = [];\n\n      var formatList = this.__preferredFormats.length > 0\n        ? this.__preferredFormats : qx.bom.webfonts.Manager.FONT_FORMATS;\n\n      for (var i=0,l=formatList.length; i<l; i++) {\n        var format = formatList[i];\n        if (sourcesMap[format]) {\n          rules.push(this.__getSourceForFormat(format, sourcesMap[format], version));\n        }\n      }\n\n      var rule = \"src: \" + rules.join(\",\\n\") + \";\";\n\n      rule = \"font-family: \" + familyName + \";\\n\" + rule;\n      rule = rule + \"\\nfont-style: \" + (fontStyle ? fontStyle : \"normal\") + \";\";\n      rule = rule + \"\\nfont-weight: \" + (fontWeight ? fontWeight : \"normal\") + \";\";\n\n      return rule;\n    },\n\n\n    /**\n     * Returns the full src value for a given font URL depending on the type\n\n     * @param format {String} The font format, one of eot, woff, ttf, svg\n     * @param url {String} The font file's URL\n     * @param version {String?} Optional version to be appended to the URL\n     * @return {String} The src directive\n     */\n    __getSourceForFormat : function(format, url, version)\n    {\n      if (version) {\n        url += \"?\" + version;\n      }\n\n      switch(format) {\n        case \"eot\": return \"url('\" + url + \"');\" +\n          \"src: url('\" + url + \"?#iefix') format('embedded-opentype')\";\n        case \"woff\":\n          return \"url('\" + url + \"') format('woff')\";\n        case \"ttf\":\n          return \"url('\" + url + \"') format('truetype')\";\n        case \"svg\":\n          return \"url('\" + url + \"') format('svg')\";\n        default:\n          return null;\n      }\n    },\n\n\n    /**\n     * Adds a font-face rule to the document\n     *\n     * @param rule {String} The body of the CSS rule\n     */\n    __addRule : function(rule)\n    {\n      var completeRule = \"@font-face {\" + rule + \"}\\n\";\n\n      if (qx.core.Environment.get(\"browser.name\") == \"ie\" &&\n          qx.core.Environment.get(\"browser.documentmode\") < 9) {\n        var cssText = this.__fixCssText(this.__styleSheet.cssText);\n        cssText += completeRule;\n        this.__styleSheet.cssText = cssText;\n      }\n      else {\n        this.__styleSheet.insertRule(completeRule, this.__styleSheet.cssRules.length);\n      }\n    },\n\n\n    /**\n     * Removes the font-face declaration for the given font-family from the\n     * stylesheet\n     *\n     * @param familyName {String} The font-family name\n     * @param fontWeight {String} fontWeight font-weight.\n     * @param fontStyle {String} fontStyle font-style.\n     */\n    __removeRule : function(familyName, fontWeight, fontStyle)\n    {\n      // In IE and edge even if the rule was added with font-style first\n      // and font-weight second, it is not guaranteed that the attributes\n      // remain in that order. Therefore we check for both version,\n      // style first, weight second and weight first, style second.\n      // Without this fix the rule isn't found and removed reliable. \n      var regtext = \n        \"@font-face.*?\" + familyName + \n        \"(.*font-style: *\" + (fontStyle ? fontStyle : \"normal\") + \n        \".*font-weight: *\" + (fontWeight ? fontWeight : \"normal\")+\")|\" +\n        \"(.*font-weight: *\" + (fontWeight ? fontWeight : \"normal\") + \n        \".*font-style: *\" + (fontStyle ? fontStyle : \"normal\")+\")\"\n        ;\n      var reg = new RegExp(regtext, \"m\");\n      for (var i=0,l=document.styleSheets.length; i<l; i++) {\n        var sheet = document.styleSheets[i];\n        if (sheet.cssText) {\n          var cssText = sheet.cssText.replace(/\\n/g, \"\").replace(/\\r/g, \"\");\n          cssText = this.__fixCssText(cssText);\n          if (reg.exec(cssText)) {\n            cssText = cssText.replace(reg, \"\");\n          }\n          sheet.cssText = cssText;\n        }\n        else if (sheet.cssRules) {\n          for (var j=0,m=sheet.cssRules.length; j<m; j++) {\n            var cssText = sheet.cssRules[j].cssText.replace(/\\n/g, \"\").replace(/\\r/g, \"\");\n            if (reg.exec(cssText)) {\n              this.__styleSheet.deleteRule(j);\n              return;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * IE 6 and 7 omit the trailing quote after the format name when\n     * querying cssText. This needs to be fixed before cssText is replaced\n     * or all rules will be invalid and no web fonts will work any more.\n     *\n     * @param cssText {String} CSS text\n     * @return {String} Fixed CSS text\n     */\n    __fixCssText : function(cssText)\n    {\n      return cssText.replace(\"'eot)\", \"'eot')\")\n        .replace(\"('embedded-opentype)\", \"('embedded-opentype')\");\n    }\n\n  },\n\n  /*\n  *****************************************************************************\n    DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    if (this.__queueInterval) {\n      this.__queueInterval.stop();\n      this.__queueInterval.dispose();\n    }\n    delete this.__createdStyles;\n    this.removeStyleSheet();\n    for (var prop in this.__validators) {\n      this.__validators[prop].dispose();\n    }\n    qx.bom.webfonts.Validator.removeDefaultHelperElements();\n  }\n});\n"
  ]
}