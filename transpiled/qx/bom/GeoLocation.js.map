{
  "version": 3,
  "sources": [
    "/home/travis/build/cboulanger/qx-contrib-Dialog/node_modules/qxcompiler/node_modules/qooxdoo-sdk/framework/source/class/qx/bom/GeoLocation.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "_geolocation",
    "navigator",
    "geolocation",
    "events",
    "members",
    "_watchId",
    "getCurrentPosition",
    "enableHighAccuracy",
    "timeout",
    "maximumAge",
    "successHandler",
    "lang",
    "Function",
    "bind",
    "_successHandler",
    "errorHandler",
    "Environment",
    "get",
    "indexOf",
    "boundDefaultHandler",
    "_errorHandler",
    "startWatchPosition",
    "stopWatchPosition",
    "watchPosition",
    "clearWatch",
    "position",
    "fireEvent",
    "event",
    "GeoPosition",
    "error",
    "fireDataEvent",
    "destruct",
    "bom",
    "GeoLocation"
  ],
  "mappings": "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",
  "file": "GeoLocation.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n     * Adrian Olaru (adrianolaru)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n\n/**\n * EXPERIMENTAL - NOT READY FOR PRODUCTION\n *\n * GeoLocation provides access to geographical location information\n * associated with the hosting device.\n *\n * For more information see:\n * http://www.w3.org/TR/geolocation-API/\n * \n * This class does not need to be disposed, but you would obviously call \n * stopWatchPosition() to top watching and free up resources consumed\n * by startWatchPosition().  The destructor will do this for you, if\n * you call dispose()\n *\n */\nqx.Class.define(\"qx.bom.GeoLocation\",\n{\n  extend : qx.core.Object,\n  type : \"singleton\",\n\n\n  construct: function() {\n    this._geolocation = navigator.geolocation;\n  },\n\n\n  events:\n  {\n    /** Fired when the position is updated */\n    \"position\": \"qx.event.type.GeoPosition\",\n\n    /** Fired when an error occurs */\n    \"error\": \"qx.event.type.Data\"\n  },\n\n\n  members:\n  {\n    _watchId: null,\n    _geolocation: null,\n\n    /**\n     * Retrieves the current position and calls the \"position\" event.\n     *\n     * @param enableHighAccuracy {Boolean} provide the best possible results\n     * @param timeout {Integer} maximum time in ms that is allowed to pass from\n     * the call to getCurrentPosition() or watchPosition() until the corresponding\n     * callback is invoked.\n     * @param maximumAge {Integer} cache the position for a specified time.\n     */\n    getCurrentPosition: function(enableHighAccuracy, timeout, maximumAge)\n    {\n      var successHandler = qx.lang.Function.bind(this._successHandler, this);\n      var errorHandler;\n\n      if (qx.core.Environment.get(\"os.name\") === \"android\" &&\n          qx.core.Environment.get(\"browser.name\").indexOf(\"chrome\") !== -1)\n      {\n        errorHandler = function() {\n          var boundDefaultHandler = this._errorHandler.bind(this);\n          this._geolocation.getCurrentPosition(successHandler, boundDefaultHandler, {\n            enableHighAccuracy: enableHighAccuracy,\n            timeout: timeout,\n            maximumAge: maximumAge\n          });\n        }.bind(this);\n      } else {\n        errorHandler = qx.lang.Function.bind(this._errorHandler, this);\n      }\n\n      this._geolocation.getCurrentPosition(successHandler, errorHandler, {\n        enableHighAccuracy: enableHighAccuracy,\n        timeout: timeout,\n        maximumAge: maximumAge\n      });\n    },\n\n\n    /**\n     * Starts to watch the position. Calls the \"position\" event, when the position changed.\n     *\n     * @param enableHighAccuracy {Boolean} provide the best possible results\n     * @param timeout {Integer} maximum time in ms that is allowed to pass from\n     * the call to getCurrentPosition() or watchPosition() until the corresponding\n     * callback is invoked.\n     * @param maximumAge {Integer} cache the position for a specified time.\n     */\n    startWatchPosition: function(enableHighAccuracy, timeout, maximumAge)\n    {\n      this.stopWatchPosition();\n\n      var errorHandler = qx.lang.Function.bind(this._errorHandler, this);\n      var successHandler = qx.lang.Function.bind(this._successHandler, this);\n\n      this._watchId = this._geolocation.watchPosition(successHandler, errorHandler, {\n        enableHighAccuracy: enableHighAccuracy,\n        timeout: timeout,\n        maximumAge: maximumAge\n      });\n    },\n\n\n    /**\n     * Stops watching the position.\n     */\n    stopWatchPosition: function() {\n      if (this._watchId != null) {\n        this._geolocation.clearWatch(this._watchId);\n        this._watchId = null;\n      }\n    },\n\n\n    /**\n     * Success handler.\n     *\n     * @param position {Object} position event\n     */\n    _successHandler: function(position) {\n      this.fireEvent(\"position\", qx.event.type.GeoPosition, [position]);\n    },\n\n\n    /**\n     * The Error handler.\n     *\n     * @param error {Object} error event\n     */\n    _errorHandler: function(error) {\n      this.fireDataEvent(\"error\", error);\n    }\n  },\n\n\n  destruct: function() {\n    this.stopWatchPosition();\n  }\n});\n"
  ]
}