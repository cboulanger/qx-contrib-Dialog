{
  "version": 3,
  "sources": [
    "contrib/qooxdoo_qxl.apiviewer_v0.1.12/source/class/qxl/apiviewer/TreeUtil.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "statics",
    "getChild",
    "docNode",
    "childType",
    "children",
    "i",
    "length",
    "type",
    "getChildByAttribute",
    "attributeName",
    "attributeValue",
    "node",
    "attributes",
    "getIconUrl",
    "inherited",
    "constName",
    "dao",
    "qxl",
    "apiviewer",
    "Package",
    "getType",
    "isStatic",
    "isAbstract",
    "isSingleton",
    "Property",
    "isPublic",
    "isProtected",
    "isPrivate",
    "isInternal",
    "isThemeable",
    "Event",
    "Method",
    "isConstructor",
    "getClass",
    "Constant",
    "ChildControl",
    "Error",
    "ClassItem",
    "getOverriddenFrom",
    "getErrors",
    "hasWarning",
    "TreeUtil",
    "iconNameToIconPath",
    "iconName",
    "iconUrl",
    "iconParts",
    "split",
    "itemName",
    "startIndex",
    "iconPart",
    "push",
    "ICON_BLANK",
    "OVERLAY_ABSTRACT",
    "OVERLAY_ERROR",
    "OVERLAY_INHERITED",
    "OVERLAY_OVERRIDDEN",
    "OVERLAY_THEMEABLE",
    "OVERLAY_STATIC",
    "OVERLAY_WARN",
    "OVERLAY_MIXIN",
    "ICON_PACKAGE",
    "ICON_PACKAGE_WARN",
    "ICON_CLASS",
    "ICON_CLASS_WARN",
    "ICON_CLASS_ERROR",
    "ICON_CLASS_STATIC",
    "ICON_CLASS_STATIC_WARN",
    "ICON_CLASS_STATIC_ERROR",
    "ICON_CLASS_ABSTRACT",
    "ICON_CLASS_ABSTRACT_WARN",
    "ICON_CLASS_ABSTRACT_ERROR",
    "ICON_CLASS_SINGLETON",
    "ICON_CLASS_SINGLETON_WARN",
    "ICON_CLASS_SINGLETON_ERROR",
    "ICON_PROPERTY_PUB",
    "ICON_PROPERTY_PROT",
    "ICON_PROPERTY_PRIV",
    "ICON_PROPERTY_INTERN",
    "ICON_PROPERTY_PUB_THEMEABLE",
    "ICON_EVENT",
    "ICON_ENTRY",
    "ICON_INTERFACE",
    "ICON_INTERFACE_WARN",
    "ICON_MIXIN",
    "ICON_MIXIN_WARN",
    "ICON_METHOD_PUB",
    "ICON_METHOD_PUB_INHERITED",
    "ICON_CTOR",
    "ICON_METHOD_PROT",
    "ICON_METHOD_PRIV",
    "ICON_METHOD_INTERN",
    "ICON_CONSTANT",
    "ICON_APPEARANCE",
    "ICON_CHILDCONTROL",
    "defer",
    "members",
    "properties",
    "PRELOAD_IMAGES",
    "ICON_INFO",
    "ICON_SEARCH"
  ],
  "mappings": "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",
  "file": "TreeUtil.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A util class for handling the documentation tree.\n *\n * @ignore(qxl.apiviewer.dao)\n */\nqx.Class.define(\"qxl.apiviewer.TreeUtil\",\n{\n  extend : qx.core.Object,\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function() {\n    this.base(arguments);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /**\n     * Gets the child of a doc node having a certain type.\n     *\n     * @param docNode {Map} the doc node to get the child of.\n     * @param childType {String} the type of the child to get.\n     * @return {Map} the wanted child or <code>null</code> if <code>docNode</code>\n     *           is <code>null</code> or has no such child.\n     */\n    getChild : function(docNode, childType)\n    {\n      if (docNode != null && docNode.children != null)\n      {\n        for (var i=0; i<docNode.children.length; i++)\n        {\n          if (docNode.children[i].type == childType) {\n            return docNode.children[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Gets the child of a doc node having a certain attribute value.\n     *\n     * @param docNode {Map} the doc node to get the child of.\n     * @param attributeName {String} the name of the attribute the wanted child must have.\n     * @param attributeValue {String} the value of the attribute the wanted child must have.\n     * @return {Map} the wanted child or <code>code</code> if there is no such child.\n     */\n    getChildByAttribute : function(docNode, attributeName, attributeValue)\n    {\n      if (docNode.children != null)\n      {\n        for (var i=0; i<docNode.children.length; i++)\n        {\n          var node = docNode.children[i];\n\n          if (node.attributes && node.attributes[attributeName] == attributeValue) {\n            return node;\n          }\n        }\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Gets the icon URL of a doc node.\n     *\n     * @param node {Map} the node to get the icon for.\n     * @param inherited {Boolean? false} whether the node was inherited.\n     * @return {var} the URL of the icon. May be a string or an array of string\n     *           (in case of an overlay icon).\n     * @throws {Error} If node is of an unknown type.\n     */\n    getIconUrl : function(node, inherited)\n    {\n      var constName;\n      var dao = qxl.apiviewer.dao;\n\n      if (node instanceof dao.Package)\n      {\n        constName = \"ICON_PACKAGE\";\n      }\n      else if (node instanceof dao.Class)\n      {\n        switch (node.getType())\n        {\n          case \"mixin\":\n            constName = \"ICON_MIXIN\";\n            break;\n\n          case \"interface\":\n            constName = \"ICON_INTERFACE\";\n            break;\n\n          default:\n            constName = \"ICON_CLASS\";\n            if (node.isStatic()) {\n              constName += \"_STATIC\";\n            } else if (node.isAbstract()) {\n              constName += \"_ABSTRACT\";\n            } else if (node.isSingleton()) {\n              constName += \"_SINGLETON\";\n            }\n        }\n      }\n      else if (node instanceof dao.Property)\n      {\n        constName = \"ICON_PROPERTY\";\n        if (node.isPublic()) {\n          constName += \"_PUB\";\n        } else if (node.isProtected()) {\n          constName += \"_PROT\";\n        } else if (node.isPrivate()) {\n          constName += \"_PRIV\";\n        } else if (node.isInternal()) {\n          constName += \"_INTERN\";\n        }\n        if (node.isThemeable()) {\n          constName += \"_THEMEABLE\";\n        }\n      }\n      else if (node instanceof dao.Event)\n      {\n        constName = \"ICON_EVENT\";\n      }\n      else if (node instanceof dao.Method)\n      {\n        if (node.isConstructor()) {\n          var constName = \"ICON_CTOR\";\n        } else {\n          constName = \"ICON_METHOD\";\n          if (node.isPublic()) {\n            constName += \"_PUB\";\n          } else if (node.isProtected()) {\n            constName += \"_PROT\";\n          } else if (node.isPrivate()) {\n            constName += \"_PRIV\";\n          } else if (node.isInternal()) {\n            constName += \"_INTERN\";\n          }\n        }\n\n        if (node.isStatic()) {\n          constName += \"_STATIC\";\n        } else if (node.isAbstract()) {\n          constName += \"_ABSTRACT\";\n        }\n\n        if (node.getClass().getType() == \"mixin\") {\n          constName += \"_MIXIN\";\n        }\n      }\n      else if (node instanceof dao.Constant)\n      {\n        constName = \"ICON_CONSTANT\";\n      }\n      else if (node instanceof dao.ChildControl)\n      {\n        constName = \"ICON_CHILDCONTROL\";\n      }\n      else\n      {\n        throw new Error(\"Unknown node type: \" + node.type);\n      }\n\n      /*\n      if (node.attributes.isMixin) {\n        constName += \"_MIXIN\";\n      }\n      */\n\n      if (node instanceof dao.ClassItem)\n      {\n        if (inherited) {\n          constName += \"_INHERITED\";\n        } else if (node.getOverriddenFrom && node.getOverriddenFrom()) {\n          constName += \"_OVERRIDDEN\";\n        }\n\n        if (node.getErrors().length > 0) {\n          constName += \"_ERROR\";\n        }\n      }\n\n      if (node.hasWarning()) {\n        constName += \"_WARN\";\n      }\n\n      return qxl.apiviewer.TreeUtil.iconNameToIconPath(constName);\n    },\n\n\n    iconNameToIconPath : function(iconName)\n    {\n      var iconUrl = qxl.apiviewer.TreeUtil[iconName];\n\n      if (!iconUrl) {\n        var iconParts = iconName.split(\"_\");\n        var itemName = iconParts[0] + \"_\" + iconParts[1];\n        if (\n          iconParts[2] == \"PUB\" ||\n          iconParts[2] == \"PROT\" ||\n          iconParts[2] == \"PRIV\" ||\n          iconParts[2] == \"INTERN\"\n        ) {\n          itemName += \"_\" +iconParts[2];\n          var startIndex = 3;\n        } else {\n          startIndex = 2;\n        }\n        iconUrl = [qxl.apiviewer.TreeUtil[itemName]];\n        if (iconUrl[0] == null) {\n          throw new Error(\"Unknown img constant: \" + itemName);\n        }\n        for(var i=startIndex; i<iconParts.length; i++) {\n          var iconPart = qxl.apiviewer.TreeUtil[\"OVERLAY_\" + iconParts[i]];\n          if (iconPart == null) {\n            throw new Error(\"Unknown img constant: OVERLAY_\" + iconParts[i]);\n          }\n          iconUrl.push(iconPart);\n        }\n\n      }\n      return iconUrl;\n    },\n\n\n    /** {string} The URL of the blank icon. */\n    ICON_BLANK : \"qxl/apiviewer/image/blank.gif\",\n\n    /** {string} The URL of the overlay \"abstract\". */\n    OVERLAY_ABSTRACT : \"qxl/apiviewer/image/overlay_abstract18.gif\",\n\n    /** {string} The URL of the overlay \"error\". */\n    OVERLAY_ERROR : \"qxl/apiviewer/image/overlay_error18.gif\",\n\n    /** {string} The URL of the overlay \"inherited\". */\n    OVERLAY_INHERITED : \"qxl/apiviewer/image/overlay_inherited18.gif\",\n\n    /** {string} The URL of the overlay \"overridden\". */\n    OVERLAY_OVERRIDDEN : \"qxl/apiviewer/image/overlay_overridden18.gif\",\n\n    /** {string} The URL of the overlay \"themeable\". */\n    OVERLAY_THEMEABLE : \"qxl/apiviewer/image/overlay_themeable18.gif\",\n\n    /** {string} The URL of the overlay \"static\". */\n    OVERLAY_STATIC : \"qxl/apiviewer/image/overlay_static18.gif\",\n\n    /** {string} The URL of the overlay \"warning\". */\n    OVERLAY_WARN : \"qxl/apiviewer/image/overlay_warning18.gif\",\n\n    /** {string} The URL of the overlay \"mixin\". */\n    OVERLAY_MIXIN : \"qxl/apiviewer/image/overlay_mixin18.gif\",\n\n    /** {string} The icon URL of a package. */\n    ICON_PACKAGE : \"qxl/apiviewer/image/package18.gif\",\n\n    /** {string} The icon URL of a package with warning. */\n    ICON_PACKAGE_WARN : \"qxl/apiviewer/image/package_warning18.gif\",\n\n    /** {string} The icon URL of a class. */\n    ICON_CLASS : \"qxl/apiviewer/image/class18.gif\",\n\n    /** {string} The icon URL of a class with warning. */\n    ICON_CLASS_WARN : \"qxl/apiviewer/image/class_warning18.gif\",\n\n    /** {string} The icon URL of a class with error. */\n    ICON_CLASS_ERROR : \"qxl/apiviewer/image/class_warning18.gif\",\n\n    /** {string} The icon URL of a static class. */\n    ICON_CLASS_STATIC : \"qxl/apiviewer/image/class_static18.gif\",\n\n    /** {string} The icon URL of a static class with warning. */\n    ICON_CLASS_STATIC_WARN : \"qxl/apiviewer/image/class_static_warning18.gif\",\n\n    /** {string} The icon URL of a static class with error. */\n    ICON_CLASS_STATIC_ERROR : \"qxl/apiviewer/image/class_static_warning18.gif\",\n\n    /** {string} The icon URL of an abstract class. */\n    ICON_CLASS_ABSTRACT : \"qxl/apiviewer/image/class_abstract18.gif\",\n\n    /** {string} The icon URL of an abstract class with warning. */\n    ICON_CLASS_ABSTRACT_WARN : \"qxl/apiviewer/image/class_abstract_warning18.gif\",\n\n    /** {string} The icon URL of an abstract class with error. */\n    ICON_CLASS_ABSTRACT_ERROR : \"qxl/apiviewer/image/class_abstract_warning18.gif\",\n\n    /** {string} The icon URL of an singleton class. */\n    ICON_CLASS_SINGLETON : \"qxl/apiviewer/image/class_singleton18.gif\",\n\n    /** {string} The icon URL of an singleton class with warning. */\n    ICON_CLASS_SINGLETON_WARN : \"qxl/apiviewer/image/class_singleton_warning18.gif\",\n\n    /** {string} The icon URL of an singleton class with error. */\n    ICON_CLASS_SINGLETON_ERROR : \"qxl/apiviewer/image/class_singleton_warning18.gif\",\n\n    /** {string} The icon URL of a property. */\n    ICON_PROPERTY_PUB : \"qxl/apiviewer/image/property18.gif\",\n\n    /** {string} The icon URL of a protected property. */\n    ICON_PROPERTY_PROT : \"qxl/apiviewer/image/property_protected18.gif\",\n\n    /** {string} The icon URL of a private property. */\n    ICON_PROPERTY_PRIV : \"qxl/apiviewer/image/property_private18.gif\",\n\n    /** {string} The icon URL of a internal property. */\n    ICON_PROPERTY_INTERN : \"qxl/apiviewer/image/property_internal18.gif\",\n\n    /** {string} The icon URL of a themeable property. */\n    ICON_PROPERTY_PUB_THEMEABLE : \"qxl/apiviewer/image/property_themeable18.gif\",\n\n    /** {string} The icon URL of an event. */\n    ICON_EVENT : \"qxl/apiviewer/image/event18.gif\",\n\n    /** {string} The icon URL of an entry. Entry is a group property */\n    ICON_ENTRY : \"qxl/apiviewer/image/property18.gif\",\n\n    /** {string} The icon URL of an interface. */\n    ICON_INTERFACE : \"qxl/apiviewer/image/interface18.gif\",\n\n    /** {string} The icon URL of an interface. */\n    ICON_INTERFACE_WARN : \"qxl/apiviewer/image/interface_warning18.gif\",\n\n    /** {string} The icon URL of an mixin. */\n    ICON_MIXIN : \"qxl/apiviewer/image/mixin18.gif\",\n\n    /** {string} The icon URL of an mixin. */\n    ICON_MIXIN_WARN : \"qxl/apiviewer/image/mixin_warning18.gif\",\n\n    /** {string} The icon URL of a public method. */\n    ICON_METHOD_PUB : \"qxl/apiviewer/image/method_public18.gif\",\n\n    /** {string} The icon URL of a public inherited method. */\n    ICON_METHOD_PUB_INHERITED : \"qxl/apiviewer/image/method_public_inherited18.gif\",\n\n    /** {string} The icon URL of a constructor. */\n    ICON_CTOR : \"qxl/apiviewer/image/constructor18.gif\",\n\n    /** {string} The icon URL of a protected method. */\n    ICON_METHOD_PROT : \"qxl/apiviewer/image/method_protected18.gif\",\n\n    /** {string} The icon URL of a private method. */\n    ICON_METHOD_PRIV : \"qxl/apiviewer/image/method_private18.gif\",\n\n    /** {string} The icon URL of a internal method. */\n    ICON_METHOD_INTERN : \"qxl/apiviewer/image/method_internal18.gif\",\n\n    /** {string} The icon URL of a constant. */\n    ICON_CONSTANT : \"qxl/apiviewer/image/constant18.gif\",\n\n    /** {string} The icon URL of an appearance. */\n    ICON_APPEARANCE : \"qxl/apiviewer/image/constant18.gif\",\n\n    /** {string} The icon URL of a child control. */\n    ICON_CHILDCONTROL : \"qxl/apiviewer/image/childcontrol18.gif\"\n  },\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics, members, properties)\n  {\n    /** {string[]} images to preload */\n    statics.PRELOAD_IMAGES = [\n      statics.ICON_INFO,\n      statics.ICON_SEARCH,\n      statics.OVERLAY_ABSTRACT,\n      statics.OVERLAY_ERROR,\n      statics.OVERLAY_INHERITED,\n      statics.OVERLAY_OVERRIDDEN,\n      statics.OVERLAY_STATIC,\n      statics.OVERLAY_WARN,\n      statics.OVERLAY_MIXIN,\n      statics.OVERLAY_THEMEABLE,\n      statics.ICON_PACKAGE,\n      statics.ICON_PACKAGE_WARN,\n      statics.ICON_CLASS,\n      statics.ICON_CLASS_WARN,\n      statics.ICON_CLASS_ERROR,\n      statics.ICON_CLASS_STATIC,\n      statics.ICON_CLASS_STATIC_WARN,\n      statics.ICON_CLASS_STATIC_ERROR,\n      statics.ICON_CLASS_ABSTRACT,\n      statics.ICON_CLASS_ABSTRACT_WARN,\n      statics.ICON_CLASS_ABSTRACT_ERROR,\n      statics.ICON_CLASS_SINGLETON,\n      statics.ICON_CLASS_SINGLETON_WARN,\n      statics.ICON_CLASS_SINGLETON_ERROR,\n      statics.ICON_PROPERTY_PUB,\n      statics.ICON_PROPERTY_PROT,\n      statics.ICON_PROPERTY_PRIV,\n      statics.ICON_PROPERTY_INTERN,\n      statics.ICON_PROPERTY_PUB_THEMEABLE,\n      statics.ICON_EVENT,\n      statics.ICON_INTERFACE,\n      statics.ICON_INTERFACE_WARN,\n      statics.ICON_MIXIN,\n      statics.ICON_MIXIN_WARN,\n      statics.ICON_METHOD_PUB,\n      statics.ICON_METHOD_PUB_INHERITED,\n      statics.ICON_CTOR,\n      statics.ICON_METHOD_PROT,\n      statics.ICON_METHOD_PRIV,\n      statics.ICON_METHOD_INTERN,\n      statics.ICON_CONSTANT,\n      statics.ICON_CHILDCONTROL\n    ];\n  }\n});\n"
  ]
}