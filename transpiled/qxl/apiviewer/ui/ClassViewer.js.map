{
  "version": 3,
  "sources": [
    "contrib/qooxdoo_qxl.apiviewer_v0.1.12/source/class/qxl/apiviewer/ui/ClassViewer.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "apiviewer",
    "ui",
    "AbstractViewer",
    "construct",
    "addInfoPanel",
    "panels",
    "ConstructorPanel",
    "EventPanel",
    "StaticMethodsPanel",
    "ConstantPanel",
    "PropertyPanel",
    "MethodPanel",
    "ChildControlsPanel",
    "getContentElement",
    "setAttribute",
    "_init",
    "statics",
    "PRIMITIVES",
    "MDC_LINKS",
    "SOURCE_VIEW_MACROS",
    "classFilePath",
    "node",
    "classNode",
    "getClass",
    "getFullName",
    "replace",
    "lineNumber",
    "getLineNumber",
    "qxGitBranch",
    "core",
    "Environment",
    "get",
    "split",
    "createImageHtml",
    "imgUrl",
    "tooltip",
    "styleAttributes",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "ClassViewer",
    "createOverlayImageHtml",
    "width",
    "height",
    "imgUrlArr",
    "toolTip",
    "html",
    "style",
    "i",
    "length",
    "getSourceUri",
    "dao",
    "libNs",
    "LibraryManager",
    "has",
    "sourceViewUri",
    "replacements",
    "key",
    "macro",
    "indexOf",
    "replacement",
    "RegExp",
    "log",
    "Logger",
    "warn",
    "members",
    "_getTitleHtml",
    "objectName",
    "getType",
    "titleHtml",
    "StringBuilder",
    "add",
    "getPackageName",
    "isAbstract",
    "isStatic",
    "isSingleton",
    "className",
    "getName",
    "sourceUri",
    "InfoPanel",
    "setTitleClass",
    "_getTocHtml",
    "tocHtml",
    "document",
    "createDocumentFragment",
    "lastTocItem",
    "getPanels",
    "forEach",
    "items",
    "panel",
    "getPanelItemObjects",
    "getDocNode",
    "getShowInherited",
    "appendChild",
    "createTextNode",
    "tocItem",
    "dom",
    "Element",
    "create",
    "bom",
    "element",
    "innerHTML",
    "getPanelIcon",
    "getPanelTitle",
    "q",
    "on",
    "firstItem",
    "__enableSection",
    "Scroll",
    "intoView",
    "getTitleElement",
    "getIsOpen",
    "togglePanelVisibility",
    "bind",
    "textSpan",
    "Style",
    "set",
    "_getDescriptionHtml",
    "subObjectsName",
    "desc",
    "getDescription",
    "classHtml",
    "resolveLinkAttributes",
    "seeAlso",
    "createSeeAlsoHtml",
    "splice",
    "getErrors",
    "createErrorHtml",
    "__getInterfaceHierarchyHtml",
    "__getClassHierarchyHtml",
    "getChildClasses",
    "then",
    "__getDependentClassesHtml",
    "childClasses",
    "getInterfaces",
    "getMixins",
    "getImplementations",
    "classes",
    "getIncluder",
    "isDeprecated",
    "getDeprecationText",
    "isInternal",
    "type",
    "dependentClasses",
    "title",
    "result",
    "createItemLinkHtml",
    "classHierarchy",
    "getClassHierarchy",
    "indent",
    "isNativeObject",
    "Object",
    "TreeUtil",
    "getIconUrl",
    "name",
    "prototype",
    "toString",
    "call",
    "match",
    "hierarchy",
    "getInterfaceHierarchy",
    "icon",
    "getSuperInterfaces",
    "showItem",
    "itemName",
    "itemNode",
    "nameMap",
    "getConstructor",
    "parts",
    "upname",
    "lang",
    "String",
    "firstUp",
    "getItem",
    "_getPanelForItemNode",
    "itemElement",
    "getItemElement",
    "elem",
    "parentNode",
    "_markedElement",
    "getItemCssClasses",
    "_markedItemNode",
    "event",
    "Timer",
    "once",
    "e",
    "uiModel",
    "UiModel",
    "isFromProperty",
    "setExpandProperties",
    "isProtected",
    "setShowProtected",
    "isPrivate",
    "setShowPrivate",
    "setShowInternal",
    "canDisplayItem",
    "destruct",
    "_titleElem",
    "_classDescElem"
  ],
  "mappings": "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",
  "file": "ClassViewer.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Weiß (jonathan_rass)\n     * John Spackman (johnspackman)\n\n************************************************************************ */\n\n/**\n * Shows the class details.\n * @require(qx.module.event.GestureHandler)\n */\nqx.Class.define(\"qxl.apiviewer.ui.ClassViewer\",\n{\n  extend : qxl.apiviewer.ui.AbstractViewer,\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n    this.addInfoPanel(new qxl.apiviewer.ui.panels.ConstructorPanel(\"constructor\"));\n    this.addInfoPanel(new qxl.apiviewer.ui.panels.EventPanel(\"events\", true, true));\n    this.addInfoPanel(new qxl.apiviewer.ui.panels.StaticMethodsPanel(\"static methods\"));\n    this.addInfoPanel(new qxl.apiviewer.ui.panels.ConstantPanel(\"constants\", false, true));\n    this.addInfoPanel(new qxl.apiviewer.ui.panels.PropertyPanel(\"properties\", true, true));\n    this.addInfoPanel(new qxl.apiviewer.ui.panels.MethodPanel(\"methods\"));\n    this.addInfoPanel(new qxl.apiviewer.ui.panels.ChildControlsPanel(\"child controls\"));\n\n    this.getContentElement().setAttribute(\"class\", \"ClassViewer\");\n\n    this._init(null);\n  },\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n\n    /** {Map} The primitive types. These types will not be shown with links. */\n    PRIMITIVES :\n    {\n      \"var\"       : true,\n      \"void\"      : true,\n      \"undefined\" : true,\n      \"arguments\" : true,\n      \"null\"      : true,\n      \"varargs\"   : true,\n\n      \"Boolean\"   : true,\n      \"String\"    : true,\n\n      \"Number\"    : true,\n      \"Integer\"   : true,\n      \"PositiveNumber\" : true,\n      \"PositiveInteger\" : true,\n      \"Float\"     : true,\n      \"Double\"    : true,\n\n      \"Color\"    : true,\n\n      \"Error\"     : true,\n      \"RegExp\"    : true,\n\n      \"Object\"    : true,\n      \"Array\"     : true,\n      \"Map\"       : true,\n\n      \"Function\"  : true,\n      \"Date\"      : true,\n      \"Node\"      : true,\n      \"Element\"   : true,\n      \"Document\"  : true,\n      \"Window\"    : true,\n      \"Event\"     : true\n    },\n\n    MDC_LINKS :\n    {\n      \"Event\" : \"https://developer.mozilla.org/en/DOM/event\",\n      \"Window\" : \"https://developer.mozilla.org/en/DOM/window\",\n      \"Document\" : \"https://developer.mozilla.org/en/DOM/document\",\n      \"Element\" : \"https://developer.mozilla.org/en/DOM/element\",\n      \"Node\" : \"https://developer.mozilla.org/en/DOM/node\",\n      \"Date\" : \"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date\",\n      \"Function\" : \"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function\",\n      \"Array\" : \"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array\",\n      \"Object\" : \"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object\",\n      \"Map\" : \"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object\",\n      \"RegExp\" : \"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/RegExp\",\n      \"Error\" : \"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error\",\n      \"Number\" : \"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number\",\n      \"Boolean\" : \"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Boolean\",\n      \"String\" : \"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String\",\n      \"undefined\" : \"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/undefined\",\n      \"arguments\" : \"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/arguments\",\n      \"Font\" : \"https://developer.mozilla.org/en/CSS/font\",\n      \"Color\" : \"https://developer.mozilla.org/en/CSS/color\"\n    },\n\n\n    /**\n     * {Map} Replacement rules for placeholders in the source view URI.\n     * Functions will be called with the current @link{qxl.apiviewer.dao.Node} as the\n     * only parameter and must return a string.\n    **/\n    SOURCE_VIEW_MACROS :\n    {\n      classFilePath : function(node) {\n        var classNode = node.getClass ? node.getClass() : node;\n        return classNode.getFullName().replace(/\\./gi, \"/\") + \".js\";\n      },\n\n      lineNumber : function(node) {\n        if (node.getLineNumber && typeof node.getLineNumber() == \"number\") {\n          return node.getLineNumber() + \"\";\n        }\n        else {\n          return \"0\";\n        }\n      },\n\n      qxGitBranch : function(node) {\n        return qx.core.Environment.get(\"qx.revision\") ? // e.g. \"master:47ac02f\"\n          qx.core.Environment.get(\"qx.revision\").split(\":\")[1] :\n          qx.core.Environment.get(\"qx.version\") ? // e.g. \"2.1.2\"\n            \"release_\" + qx.core.Environment.get(\"qx.version\").replace(/\\./g,\"_\") :\n            \"master\";\n      }\n    },\n\n\n    /**\n     * Creates the HTML showing an image. Optionally with overlays\n     *\n     * @param imgUrl {String|String[]} the URL of the image. May be a string or an array of\n     *          strings (for overlay images).\n     * @param tooltip {String} the tooltip to show.\n     * @param styleAttributes {String} the style attributes to add to the image.\n     * @return {String} HTML fragment for the image\n     */\n    createImageHtml : function(imgUrl, tooltip, styleAttributes)\n    {\n      if (typeof imgUrl == \"string\") {\n        return '<img src=\"' + qx.util.ResourceManager.getInstance().toUri(imgUrl) + '\" class=\"img\"' + (styleAttributes ? ' style=\"' + styleAttributes + '\"' : \"\") + '/>';\n      }\n      else\n      {\n        if (styleAttributes) {\n          styleAttributes += \";vertical-align:top\";\n        } else {\n          styleAttributes = \"vertical-align:top\";\n        }\n\n        return qxl.apiviewer.ui.ClassViewer.createOverlayImageHtml(18, 18, imgUrl, tooltip, styleAttributes);\n      }\n    },\n\n\n    /**\n     * Creates HTML that shows an overlay image (several images on top of each other).\n     * The resulting HTML will behave inline.\n     *\n     * @param width {Integer} the width of the images.\n     * @param height {Integer} the height of the images.\n     * @param imgUrlArr {String[]} the URLs of the images. The last image will be\n     *          painted on top.\n     * @param toolTip {String?null} the tooltip of the icon.\n     * @param styleAttributes {String?null} custom CSS style attributes.\n     * @return {String} the HTML with the overlay image.\n     */\n    createOverlayImageHtml : function(width, height, imgUrlArr, toolTip, styleAttributes)\n    {\n      var html = '';\n      var style;\n\n      if(qx.core.Environment.get(\"engine.name\") == \"webkit\") {\n        html = '<span style=\"display:inline;position:relative;top:-2px;width:' + width + 'px;height:' + height + 'px' + ((styleAttributes == null) ? '' : (';' + styleAttributes)) + '\">';\n      } else {\n        html = '<span style=\"display:inline-block;display:inline;padding-right:18px;position:relative;top:-2px;left:0;width:' + width + 'px;height:' + height + 'px' + ((styleAttributes == null) ? '' : (';' + styleAttributes)) + '\">';\n      }\n\n      if(qx.core.Environment.get(\"engine.name\") == \"webkit\") {\n        style = \"position:absolute;top:0px;left:0px;padding-right:18px;\";\n      } else if(qx.core.Environment.get(\"engine.name\") == \"opera\") {\n        style = \"margin-right:-18px;\";\n      }else{\n        style = \"position:absolute;top:0px;left:0px\";\n      }\n\n      for (var i=0; i<imgUrlArr.length; i++)\n      {\n        html += '<img';\n\n        if (toolTip != null) {\n          html += ' title=\"' + toolTip + '\"';\n        }\n\n        html += ' style=\"' + style + '\" src=\"' + qx.util.ResourceManager.getInstance().toUri(imgUrlArr[i]) + '\"/>';\n      }\n\n      html += '</span>';\n\n      return html;\n    },\n\n\n    /**\n     * Returns the source view URI for a doc node. This is determined by getting\n     * the value for the \"sourceViewUri\" key from the library that contains the\n     * item represented by the node. Placeholders of the form %{key} in the URI\n     * are then resolved by applying the rules defined in the SOURCE_VIEW_MACROS\n     * map.\n     *\n     * @param node {qxl.apiviewer.dao.Node} the documentation node for the title\n     * @return {String|null} Source view URI or <code>null</code> if it couldn't\n     * be determined\n     */\n    getSourceUri : function(node)\n    {\n      var classNode;\n      if (node instanceof qxl.apiviewer.dao.Class) {\n        classNode = node;\n      }\n      else {\n        classNode = node.getClass();\n      }\n\n      // get the library's top-level namespace\n      var libNs = classNode.getFullName().split(\".\")[0];\n      if (!qx.util.LibraryManager.getInstance().has(libNs)) {\n        return null;\n      }\n\n      var sourceViewUri = qx.util.LibraryManager.getInstance().get(libNs, \"sourceViewUri\");\n      if (!sourceViewUri) {\n        return null;\n      }\n\n      var replacements = this.SOURCE_VIEW_MACROS;\n      for (var key in replacements) {\n        var macro = \"%{\" + key + \"}\";\n        if (sourceViewUri.indexOf(macro) >=0 && typeof replacements[key] == \"function\") {\n          var replacement = replacements[key](node);\n          if (typeof replacement == \"string\") {\n            sourceViewUri = sourceViewUri.replace(new RegExp(macro), replacement);\n          }\n        }\n      }\n\n      if (sourceViewUri.indexOf(\"%{\") >= 0) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          qx.log.Logger.warn(\"Source View URI contains unresolved macro(s):\", sourceViewUri);\n        }\n        return null;\n      }\n\n      return sourceViewUri;\n    }\n\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n\n\n    /**\n     * Returns the HTML fragment for the title\n     *\n     * @param classNode {qxl.apiviewer.dao.Class} the class documentation node for the title\n     * @return {String} HTML fragment of the title\n     */\n    _getTitleHtml : function(classNode)\n    {\n      var objectName = \"Class\";\n\n      switch (classNode.getType())\n      {\n        case \"mixin\" :\n          objectName = \"Mixin\";\n          break;\n\n        case \"interface\" :\n          objectName = \"Interface\";\n          break;\n      }\n\n      var titleHtml = new qx.util.StringBuilder();\n\n      titleHtml.add('<small>', classNode.getPackageName(), '</small>');\n      titleHtml.add('<span class=\"type\">');\n\n      if (classNode.isAbstract()) {\n        titleHtml.add(\"Abstract \");\n      } else if (classNode.isStatic()) {\n        titleHtml.add(\"Static \");\n      } else if (classNode.isSingleton()) {\n        titleHtml.add(\"Singleton \");\n      }\n\n      titleHtml.add(objectName, ' </span>');\n\n      var className = classNode.getName();\n      var sourceUri = this.self(arguments).getSourceUri(classNode);\n      if (sourceUri) {\n        className = '<a href=\"' + sourceUri + '\" target=\"_blank\" title=\"View Source\">' + className + '</a>';\n      }\n\n      titleHtml.add(qxl.apiviewer.ui.panels.InfoPanel.setTitleClass(classNode, className));\n\n      return titleHtml.get();\n    },\n\n\n    _getTocHtml : function(classNode)\n    {\n      var tocHtml = document.createDocumentFragment();\n      var lastTocItem = null;\n\n      this.getPanels().forEach(panel => {\n        var items = panel.getPanelItemObjects(this.getDocNode(), this.getShowInherited());\n        if (items.length == 0)\n          return;\n        \n        if(lastTocItem) {\n          tocHtml.appendChild(document.createTextNode(' | '));\n        }\n        var tocItem = qx.dom.Element.create('span');\n        qx.bom.element.Class.add(tocItem,'tocitem');\n\n        // add icon in front of the TOC item\n        tocItem.innerHTML = qxl.apiviewer.ui.ClassViewer.createImageHtml(panel.getPanelIcon(), panel.getPanelTitle())+' ';\n\n        q(tocItem).on('tap',\n          (function(firstItem) {\n            return (function() {\n              this.__enableSection(firstItem, firstItem.getName());\n              qx.bom.element.Scroll.intoView(panel.getTitleElement(), null, \"left\", \"top\");\n              if(!panel.getIsOpen()) {\n                this.togglePanelVisibility(panel);\n              }\n            }).bind(this);\n          }).bind(this)\n          (items[0]), false);\n        var textSpan = qx.dom.Element.create('span');\n        if(panel instanceof qxl.apiviewer.ui.panels.StaticMethodsPanel && qx.core.Environment.get(\"engine.name\") == 'webkit') {\n          qx.bom.element.Style.set(textSpan,'margin-left','25px');\n        }\n        textSpan.appendChild(document.createTextNode(' '));\n        textSpan.appendChild(document.createTextNode(panel.getPanelTitle()));\n        tocItem.appendChild(textSpan);\n        tocHtml.appendChild(tocItem);\n        lastTocItem = tocItem;\n      });\n\n      return tocHtml;\n    },\n\n    /**\n     * @return {Promise}\n     */\n    _getDescriptionHtml : function(classNode)\n    {\n      var subObjectsName = \"sub classes\";\n      var desc = classNode.getDescription();\n\n      switch (classNode.getType())\n      {\n        case \"mixin\" :\n          subObjectsName = \"sub mixins\";\n          break;\n\n        case \"interface\" :\n          subObjectsName = \"sub interfaces\";\n          break;\n      }\n\n      var classHtml = new qx.util.StringBuilder();\n\n      // Add the class description\n      if (desc !== \"\") {\n        classHtml.add(\n          '<div class=\"class-description\">',\n          qxl.apiviewer.ui.panels.InfoPanel.resolveLinkAttributes(desc, classNode),\n          '</div>'\n        );\n      }\n\n      var seeAlso = qxl.apiviewer.ui.panels.InfoPanel.createSeeAlsoHtml(classNode);\n      if (seeAlso) {\n        if (classHtml.length > 0) {\n          classHtml.splice(-1, 0, seeAlso);\n        } else {\n          classHtml.add(seeAlso);\n        }\n      }\n\n      if (classNode.getErrors().length > 0) {\n        classHtml.add(\n          '<div class=\"class-description\">',\n          qxl.apiviewer.ui.panels.InfoPanel.createErrorHtml(classNode, classNode),\n          '</div>'\n        );\n      }\n\n\n      // Add the class hierarchy\n      if (classNode.getType() === \"interface\") {\n          classHtml.add(this.__getInterfaceHierarchyHtml(classNode));\n      } else {\n          classHtml.add(this.__getClassHierarchyHtml(classNode));\n      }\n\n      return classNode.getChildClasses()\n        .then(childClasses => {\n          classHtml.add(this.__getDependentClassesHtml(childClasses, \"Direct \" + subObjectsName + \":\"));\n          classHtml.add(this.__getDependentClassesHtml(classNode.getInterfaces(), \"Implemented interfaces:\"));\n          classHtml.add(this.__getDependentClassesHtml(classNode.getMixins(), \"Included mixins:\"));\n          return classNode.getImplementations();\n        })\n        .then(classes => {\n          classHtml.add(this.__getDependentClassesHtml(classes, \"Implementations of this interface:\"));\n          return classNode.getIncluder();\n        })\n        .then(classes => {\n          classHtml.add(this.__getDependentClassesHtml(classes, \"Classes including this mixin:\"));\n          \n          if (classNode.isDeprecated())\n          {\n            classHtml.add('<h2 class=\"warning\">', \"Deprecated:\", '</h2>');\n            classHtml.add('<p>');\n            desc = classNode.getDeprecationText();\n            if (desc) {\n              classHtml.add(\n                qxl.apiviewer.ui.panels.InfoPanel.resolveLinkAttributes(desc, classNode)\n              );\n            } else {\n              classHtml.add(\"This \", classNode.getType(), \" is deprecated!\");\n            }\n            classHtml.add('</p>');\n          }\n\n          if (classNode.isInternal())\n          {\n            classHtml.add('<h2 class=\"warning\">', \"Internal:\", '</h2>');\n            classHtml.add('<p>');\n            var type = classNode.getType();\n            if(type=='bootstrap') {\n              type+=' class';\n            }\n            classHtml.add(\"This \", type, \" is internal!\");\n            classHtml.add('</p>');\n          }\n\n          return classHtml.get();\n        });\n    },\n\n\n    /**\n     * Create a HTML fragment containing information of dependent classes\n     * like implemented interfaces, included mixins, direct sub classes, ...\n     *\n     * @param dependentClasses {qxl.apiviewer.dao.Class[]} array of dependent classes\n     * @param title {String} headline\n     * @return {String} HTML Fragement\n     */\n    __getDependentClassesHtml : function(dependentClasses, title)\n    {\n      var result = \"\";\n\n      if (dependentClasses.length > 0)\n      {\n        result = new qx.util.StringBuilder(\"<h2>\", title, \"</h2>\");\n\n        for (var i=0; i<dependentClasses.length; i++)\n        {\n          if (i !== 0) {\n            result.add(\", \");\n          }\n          result.add(qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(dependentClasses[i], null, true, false));\n        }\n\n        result = result.get();\n      }\n      return result;\n    },\n\n\n    /**\n     * Generate HTML fragment to display the inheritance hierarchy of a class.\n     *\n     * @param classNode {qxl.apiviewer.dao.Class} class node\n     * @return {String} HTML fragemnt\n     */\n    __getClassHierarchyHtml: function(classNode)\n    {\n      var ClassViewer = qxl.apiviewer.ui.ClassViewer;\n\n      // Create the class hierarchy\n      var classHtml = new qx.util.StringBuilder(\"<h2>\", \"Inheritance hierarchy:\", \"</h2>\");\n\n      var classHierarchy = classNode.getClassHierarchy(true);\n\n      classHtml.add(ClassViewer.createImageHtml(\"qxl/apiviewer/image/class18.gif\"), '<span style=\"white-space: nowrap;\"><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object\" target=\"_blank\" title=\"Object\">Object</a></span>');\n      var indent = 0;\n\n      for (var i=classHierarchy.length-1; i>=0; i--)\n      {\n        if(qxl.apiviewer.dao.Class.isNativeObject(classHierarchy[i]) && classHierarchy[i] === Object) {\n          continue;\n        }\n        classHtml.add('<div>');\n        classHtml.add(\n          ClassViewer.createImageHtml(\"qxl/apiviewer/image/nextlevel.gif\", null, \"margin-left:\" + indent + \"px\"),\n          !qxl.apiviewer.dao.Class.isNativeObject(classHierarchy[i]) ? ClassViewer.createImageHtml(qxl.apiviewer.TreeUtil.getIconUrl(classHierarchy[i])) : ClassViewer.createImageHtml(\"qxl/apiviewer/image/class18.gif\")\n        );\n\n        if (i !== 0) {\n          if(!qxl.apiviewer.dao.Class.isNativeObject(classHierarchy[i]))\n          {\n            classHtml.add(qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(classHierarchy[i].getFullName(), null, false));\n          }\n          else\n          {\n            // it is safe to get the name of the type of the object as below, because only standard native objects are used here.\n            // the method below returns Object for user defined objects\n            var name = Object.prototype.toString.call(new classHierarchy[i]).match(/^\\[object (.*)\\]$/)[1];\n            classHtml.add('<span style=\"white-space: nowrap;\"><a href=\"'+qxl.apiviewer.ui.ClassViewer.MDC_LINKS[name]+'\" target=\"_blank\" title=\"'+name+'\">'+name+'</a></span>');\n          }\n        } else {\n          classHtml.add(classHierarchy[i].getFullName());\n        }\n\n        indent += 18;\n        classHtml.add('</div>');\n      }\n      return classHtml.get();\n    },\n\n    /**\n     * Generate HTML fragment to display the inheritance hierarchy of an Interface.\n     *\n     * @param classNode {qxl.apiviewer.dao.Class} class node\n     * @return {String} HTML fragemnt\n     */\n    __getInterfaceHierarchyHtml: function(classNode)\n    {\n      var ClassViewer = qxl.apiviewer.ui.ClassViewer;\n      var TreeUtil = qxl.apiviewer.TreeUtil;\n      var InfoPanel = qxl.apiviewer.ui.panels.InfoPanel;\n\n      var hierarchy = classNode.getInterfaceHierarchy();\n      var html = new qx.util.StringBuilder();\n\n      //show nothing if we don't have a hierarchy\n      if (hierarchy.length <= 1) { return; }\n\n      html.add(\"<h2>\", \"Inheritance hierarchy:\", \"</h2>\");\n\n      var indent = 0;\n      for (var i=hierarchy.length - 1; i >= 0; i--) {\n        var name = hierarchy[i].getFullName();\n        var icon = TreeUtil.getIconUrl(hierarchy[i]);\n\n        html.add(\"<div>\");\n\n        if (hierarchy[i].getSuperInterfaces().length > 0) {\n          html.add(ClassViewer.createImageHtml(\"qxl/apiviewer/image/nextlevel.gif\", null, \"margin-left:\" + indent + \"px\"));\n          html.add(ClassViewer.createImageHtml(icon));\n          html.add(i !== 0 ? InfoPanel.createItemLinkHtml(name, null, false) : name);\n          indent += 18;\n        }\n        else {\n          html.add(ClassViewer.createImageHtml(icon));\n          html.add(InfoPanel.createItemLinkHtml(name, null, false));\n        }\n\n        html.add(\"</div>\");\n      }\n\n      return html.get();\n    },\n\n    /**\n     * Highlights an item (property, method or constant) and scrolls it visible.\n     *\n     * @param itemName {String} the name of the item to highlight.\n     * @return {Boolean} whether the item name was valid and could be selected.\n     */\n    showItem : function(itemName)\n    {\n      var itemNode;\n\n      var nameMap = {\n                      \"event\": \"events\",\n                      \"method_public\": \"methods\",\n                      \"method_protected\": \"methods\",\n                      \"method_private\": \"methods\",\n                      \"property\" : \"properties\",\n                      \"property_private\" : \"properties\",\n                      \"property_protected\" : \"properties\",\n                      \"constant\" : \"constants\",\n                      \"childcontrol\": \"childControls\"\n                    };\n\n      // special handling for constructor methods since the constructor\n      // cannot be obtained with the \"getItem\" (which works on lists)\n      if (itemName == \"construct\") {\n        itemNode = this.getDocNode().getConstructor();\n      } else {\n        if(itemName.indexOf('!')!=-1)\n        {\n          var parts = itemName.split('!');\n          let upname = \"get\" + qx.lang.String.firstUp(nameMap[parts[1]]);\n          itemNode = this.getDocNode()[upname](parts[0]);\n          if(!itemNode) {\n            itemNode = this.getDocNode().getItem(parts[0]);\n          }\n        }\n        else\n        {\n          itemNode = this.getDocNode().getItem(itemName);\n        }\n      }\n\n      if (!itemNode) {\n        return false;\n      }\n\n      // Show properties, private or protected methods if they are hidden\n      this.__enableSection(itemNode, itemName);\n\n\n      var panel = this._getPanelForItemNode(itemNode);\n      if(!panel.getIsOpen()) {\n        this.togglePanelVisibility(panel);\n      }\n      var itemElement = panel.getItemElement(itemNode.getName());\n\n      if (!itemElement) {\n        return false;\n      }\n\n      var elem = itemElement.parentNode.parentNode;\n\n      // Handle mark\n      if (this._markedElement) {\n        this._markedElement.className = qxl.apiviewer.ui.panels.InfoPanel.getItemCssClasses(this._markedItemNode);\n      }\n\n      elem.className = \"marked\";\n      this._markedElement = elem;\n      this._markedItemNode = itemNode;\n\n      // Use a timeout as pragmatic solution\n      // Replace this later on with a kind of post-processing\n      // to get rid off this timer\n      qx.event.Timer.once(function(e) {\n        qx.bom.element.Scroll.intoView(elem, null, \"left\", \"top\");\n      }, this, 0);\n\n      return true;\n    },\n\n    /**\n     * Programatically enables the button to show private, protected function or\n     * properties so that the selected item can be shown.\n     *\n     * @param itemName {String} the name of the item to highlight.\n     * @param itemName {String} The doc node of the item\n     */\n    __enableSection : function(itemNode, itemName)\n    {\n       var uiModel = qxl.apiviewer.UiModel.getInstance();\n\n      // Check for property\n      if(itemNode.isFromProperty && itemNode.isFromProperty()) {\n        uiModel.setExpandProperties(true);\n        if(itemNode.isProtected()) {\n          uiModel.setShowProtected(true);\n        }\n        if(itemNode.isPrivate()) {\n          uiModel.setShowPrivate(true);\n        }\n        if(itemNode.isInternal()) {\n          uiModel.setShowInternal(true);\n        }\n      }\n      else\n      {\n        // Check for privates\n        if (itemNode.isPrivate()) {\n          uiModel.setShowPrivate(true);\n        }\n        // Check for internals\n        if (itemNode.isInternal()) {\n          uiModel.setShowInternal(true);\n        }\n        // Check for protected\n        else if (itemNode.isProtected()){\n          uiModel.setShowProtected(true);\n        }\n      }\n    },\n\n\n    /**\n     * Gets the node panel for a doc node.\n     *\n     * @param itemNode {qxl.apiviewer.dao.Class} the doc node of the item.\n     * @return {InfoPanel} the item's info panel instance\n     */\n    _getPanelForItemNode : function(itemNode)\n    {\n      var panels = this.getPanels();\n      for (var i=0; i<panels.length; i++)\n      {\n        var panel = panels[i];\n        if (panel.canDisplayItem(itemNode)) {\n          return panel;\n        }\n      }\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    this._titleElem = this._classDescElem = this._markedElement = this._markedItemNode = null;\n  }\n});\n"
  ]
}