{
  "version": 3,
  "sources": [
    "contrib/qooxdoo_qxl.apiviewer_v0.1.12/source/class/qxl/apiviewer/ui/panels/InfoPanel.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "construct",
    "labelText",
    "icon",
    "_labelText",
    "_icon",
    "qxl",
    "apiviewer",
    "ObjectRegistry",
    "register",
    "properties",
    "element",
    "check",
    "init",
    "nullable",
    "apply",
    "isOpen",
    "docNode",
    "async",
    "members",
    "getPanelTitle",
    "getPanelIcon",
    "canDisplayItem",
    "dao",
    "Error",
    "classname",
    "getItemTypeHtml",
    "node",
    "currentClassDocNode",
    "getItemTitleHtml",
    "getItemTextHtml",
    "showDetails",
    "getItemTooltip",
    "getItemHtml",
    "currentDocNode",
    "Package",
    "parentNode",
    "getPackage",
    "getClass",
    "html",
    "util",
    "StringBuilder",
    "inherited",
    "getType",
    "iconUrl",
    "TreeUtil",
    "getIconUrl",
    "add",
    "ui",
    "panels",
    "InfoPanel",
    "getItemCssClasses",
    "tooltipText",
    "tooltip",
    "ClassViewer",
    "createImageHtml",
    "typeHtml",
    "itemHasDetails",
    "ResourceManager",
    "getInstance",
    "toUri",
    "__encodeObject",
    "getName",
    "getFullName",
    "get",
    "object",
    "toHashCode",
    "getPanelHtml",
    "viewer",
    "uppercaseLabelText",
    "charAt",
    "toUpperCase",
    "substring",
    "getIsOpen",
    "_getPanelItems",
    "showInherited",
    "showIncluded",
    "daoClass",
    "result",
    "fromClassHash",
    "classes",
    "_canShowInherited",
    "getInterfaceHierarchy",
    "getClassHierarchy",
    "classIndex",
    "length",
    "currClassNode",
    "getPanelItemObjects",
    "forEach",
    "name",
    "item",
    "undefined",
    "push",
    "__filterItems",
    "nodeArr",
    "expandProperties",
    "showProtected",
    "showPrivate",
    "showInternal",
    "copyArr",
    "concat",
    "i",
    "isPropertyGenerated",
    "lang",
    "Array",
    "removeAt",
    "isPrivate",
    "isProtected",
    "isInternal",
    "_displayNodes",
    "nodes",
    "getBodyElement",
    "innerHTML",
    "_postProcessLinks",
    "AbstractViewer",
    "fixLinks",
    "highlightCode",
    "style",
    "display",
    "getElement",
    "update",
    "classViewer",
    "setDocNodeAsync",
    "then",
    "getShowInherited",
    "getShowIncluded",
    "getExpandProperties",
    "getShowProtected",
    "getShowPrivate",
    "getShowInternal",
    "sortItems",
    "_applyElement",
    "_titleElement",
    "firstChild",
    "_bodyElement",
    "lastChild",
    "getTitleElement",
    "getItemElement",
    "elemArr",
    "getElementsByTagName",
    "childNodes",
    "getAttribute",
    "toggleShowItemDetails",
    "itemName",
    "fromClassName",
    "textDiv",
    "_showDetails",
    "fromClassNode",
    "getClassByName",
    "getDocNode",
    "arr",
    "tmp",
    "opencloseImgElem",
    "previousSibling",
    "src",
    "exc",
    "error",
    "el",
    "_processed",
    "q",
    "on",
    "e",
    "target",
    "getTarget",
    "mouseup",
    "removeAttribute",
    "setAttribute",
    "Function",
    "onClickValue",
    "click",
    "destruct",
    "statics",
    "ITEM_SPEC_REGEX",
    "SENTENCE_END_REGEX",
    "resolveLinkAttributes",
    "description",
    "packageBaseClass",
    "linkRegex",
    "hit",
    "lastPos",
    "exec",
    "index",
    "createItemLinkHtml",
    "linkText",
    "useIcon",
    "useShortName",
    "classNode",
    "className",
    "label",
    "trim",
    "indexOf",
    "fullName",
    "pos",
    "lastIndexOf",
    "baseClassname",
    "isLoaded",
    "itemNode",
    "cleanItemName",
    "parenPos",
    "__getItemFromClassHierarchy",
    "UiModel",
    "classNodes",
    "l",
    "getItemByNameFromMixins",
    "ClassItem",
    "iconCode",
    "Environment",
    "fullItemName",
    "protocol",
    "host",
    "pathname",
    "location",
    "window",
    "linkHtml",
    "join",
    "createSeeAlsoHtml",
    "see",
    "getSee",
    "seeAlsoLinks",
    "link",
    "isEmpty",
    "seeAlsoHtml",
    "createInheritedFromHtml",
    "createOverwriddenFromHtml",
    "getOverriddenFrom",
    "createIncludedFromHtml",
    "baseClassNode",
    "getItem",
    "createDescriptionHtml",
    "desc",
    "getDescription",
    "__extractFirstSentence",
    "text",
    "ret",
    "substr",
    "descriptionHasDetails",
    "createTypeHtml",
    "typeNode",
    "defaultType",
    "types",
    "typeDimensions",
    "typeName",
    "getTypes",
    "j",
    "dimensions",
    "PRIMITIVES",
    "MDC_LINKS",
    "lastDot",
    "parseInt",
    "createErrorHtml",
    "errors",
    "getErrors",
    "attributes",
    "msg",
    "line",
    "column",
    "createDeprecationHtml",
    "isDeprecated",
    "getDeprecationText",
    "createAccessHtml",
    "isPublic",
    "access",
    "createInfoRequiredByHtml",
    "requiredBy",
    "getRequiredBy",
    "createSourceLinkHtml",
    "getLineNumber",
    "sourceUri",
    "getSourceUri",
    "title",
    "setTitleClass",
    "cssClasses"
  ],
  "mappings": "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",
  "file": "InfoPanel.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * John Spackman (johnspackman) of Zenesis Ltd (http://www.zenesis.com)\n\n************************************************************************ */\n\n/**\n * @require(qx.module.event.GestureHandler)\n * @require(qx.module.Attribute)\n * @require(qx.module.event.Native)\n */\nqx.Class.define(\"qxl.apiviewer.ui.panels.InfoPanel\", {\n\n  type: \"abstract\",\n\n  extend: qx.core.Object,\n\n  /**\n   * Creates an info panel. An info panel shows the information about one item\n   * type (e.g. for public methods).\n   * \n   * @param labelText\n   *          {String} the label text describing the node type.\n   */\n  construct: function(labelText, icon) {\n    this.base(arguments);\n    this._labelText = labelText;\n    this._icon = icon;\n    qxl.apiviewer.ObjectRegistry.register(this);\n  },\n\n  properties: {\n\n    /** top level DOM node of the panel */\n    element: {\n      check: \"Element\",\n      init: null,\n      nullable: true,\n      apply: \"_applyElement\"\n    },\n\n    /** whether the info panel is open */\n    isOpen: {\n      check: \"Boolean\",\n      init: true\n    },\n\n    docNode: {\n      nullable: true,\n      async: true\n    }\n  },\n\n  members: {\n    \n    _labelText: null,\n    _icon: null,\n    \n    /**\n     * Returns the title of the panel\n     * \n     * @return {String}\n     */\n    getPanelTitle: function() {\n      return this._labelText;\n    },\n    \n    /**\n     * Returns the icon for the panel\n     * \n     * @return {String}\n     */\n    getPanelIcon: function() {\n      return this._icon;\n    },\n\n    /**\n     * Whether the panel can display the given item node\n     * \n     * @return {Boolean} Whether the panel can display the given item node\n     */\n    canDisplayItem: function(dao) {\n      throw new Error(\"No implementation for \" + this.classname + \".canDisplayItem\");\n    },\n\n    /**\n     * Get the type HTML string of an item.\n     * \n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n     *          class\n     * @return {String} the HTML showing the information about the method.\n     */\n    getItemTypeHtml: function(node, currentClassDocNode) {\n      throw new Error(\"Abstract method called!\");\n    },\n\n    /**\n     * Get the title HTML string of an item.\n     * \n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n     *          class\n     * @return {String} the HTML showing the information about the method.\n     */\n    getItemTitleHtml: function(node, currentClassDocNode) {\n      throw new Error(\"Abstract method called!\");\n    },\n\n    /**\n     * Get the description text HTML string of an item.\n     * \n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n     *          class\n     * @param showDetails\n     *          {Boolean} whether to show the details.\n     * @return {String} the HTML showing the information about the method.\n     */\n    getItemTextHtml: function(node, currentClassDocNode, showDetails) {\n      throw new Error(\"Abstract method called!\");\n    },\n\n    getItemTooltip: function(node, currentClassDocNode) {\n      return \"\";\n    },\n\n    /**\n     * Creates the HTML showing the information about a class item. The root\n     * HTML element must be a table row (&lt;tr&gt;).\n     * \n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param showDetails\n     *          {Boolean} whether to show the details.\n     * @return {String} the HTML showing the information about the method.\n     */\n    getItemHtml: function(node, currentDocNode, showDetails) {\n      if ((node instanceof qxl.apiviewer.dao.Class) || node instanceof qxl.apiviewer.dao.Package) {\n        var parentNode = node.getPackage();\n      } else {\n        var parentNode = node.getClass();\n      }\n      var html = new qx.util.StringBuilder();\n\n      var inherited = parentNode && (parentNode != currentDocNode) && parentNode.getType() == \"class\";\n      var iconUrl = qxl.apiviewer.TreeUtil.getIconUrl(node, inherited);\n\n      // Create the title row\n      html.add('<tr class=\"', qxl.apiviewer.ui.panels.InfoPanel.getItemCssClasses(node), '\">');\n      var tooltipText = this.getItemTooltip(node, currentDocNode);\n      var tooltip = tooltipText ? 'title=\"' + tooltipText + '\" alt=\"' + tooltipText + '\"' : '';\n      html.add('<td class=\"icon\" ', tooltip, '>', qxl.apiviewer.ui.ClassViewer.createImageHtml(iconUrl), '</td>');\n\n      var typeHtml = this.getItemTypeHtml(node, currentDocNode);\n      html.add('<td class=\"type\">', ((typeHtml) ? (typeHtml + \"&nbsp;\") : \"&nbsp;\"), '</td>');\n\n      html.add('<td class=\"toggle\">');\n\n      if (this.itemHasDetails(node, currentDocNode)) {\n        // This node has details -> Show the detail button\n        html.add('<img src=\"', qx.util.ResourceManager.getInstance().toUri(\"qxl/apiviewer/image/open.gif\"), '\" onclick=\"', this\n            .__encodeObject(this), \".toggleShowItemDetails('\", node.getName(), \"'\", ((parentNode != currentDocNode) ? \",'\"\n            + parentNode.getFullName() + \"'\" : \"\"), ')\"/>');\n      } else {\n        html.add(\"&#160;\");\n      }\n\n      html.add('</td>');\n\n      html.add('<td class=\"text\">');\n\n      // Create headline\n      html.add('<h3');\n\n      if (this.itemHasDetails(node, currentDocNode)) {\n        html.add(' onclick=\"', this.__encodeObject(this), \".toggleShowItemDetails('\", node.getName(), \"'\",\n            ((parentNode != currentDocNode) ? \",'\" + parentNode.getFullName() + \"'\" : \"\"), ')\">');\n      } else {\n        html.add('>');\n      }\n\n      html.add(this.getItemTitleHtml(node, currentDocNode));\n\n      html.add('</h3>');\n\n      // Create content area\n      html.add('<div _itemName=\"', node.getName(), '\">');\n      html.add(this.getItemTextHtml(node, currentDocNode, showDetails));\n      html.add('</div>');\n\n      html.add('</td>');\n      html.add('</tr>');\n      return html.get();\n    },\n\n    /**\n     * Checks whether a class item has details. This method is abstract. Sub\n     * classes must override it.\n     * \n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n     *          class\n     * @return {Boolean} whether the class item has details.\n     */\n    itemHasDetails: function(node, currentClassDocNode) {\n      return true;\n    },\n\n    __encodeObject: function(object) {\n      return \"qxl.apiviewer.ObjectRegistry.getObjectFromHashCode('\" + object.toHashCode() + \"')\";\n    },\n\n    /**\n     * Get the HTML fragment of the info panel\n     * \n     * @return {String} HTML fragment of the info panel\n     */\n    getPanelHtml: function(viewer) {\n      var uppercaseLabelText = this._labelText.charAt(0).toUpperCase() + this._labelText.substring(1);\n\n      var html = new qx.util.StringBuilder('<div class=\"info-panel\"><h2>');\n      html.add('<img class=\"openclose\" src=\"', qx.util.ResourceManager.getInstance().toUri(\n          'qxl/apiviewer/image/' + (this.getIsOpen() ? 'close.gif' : 'open.gif')), '\" onclick=\"', this.__encodeObject(viewer),\n          '.togglePanelVisibility(' + this.__encodeObject(this), ')\"/> ', '<span onclick=\"', this.__encodeObject(viewer),\n          '.togglePanelVisibility(', this.__encodeObject(this), ')\">', uppercaseLabelText, '</span>');\n\n      html.add('</h2><div></div></div>');\n\n      return html.get();\n    },\n\n    /**\n     * Returns a list of all items to display in the panel\n     * \n     * @param showInherited\n     *          {Boolean} whether to show inherited items\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the currently displayed class\n     * @return {qxl.apiviewer.dao.ClassItem[]} list of all items to display in the\n     *         panel\n     */\n    _getPanelItems: function(showInherited, showIncluded, daoClass) {\n      if (!daoClass) {\n        return [];\n      }\n\n      var result = [];\n      var fromClassHash = {};\n      var classes;\n\n      // Get the classes to show\n      if (showInherited && this._canShowInherited()) {\n        if (daoClass.getType() == \"interface\") {\n          classes = daoClass.getInterfaceHierarchy();\n        } else {\n          classes = daoClass.getClassHierarchy();\n        }\n      } else {\n        classes = [ daoClass ];\n      }\n\n      for (var classIndex = 0; classIndex < classes.length; classIndex++) {\n        var currClassNode = classes[classIndex];\n        this.getPanelItemObjects(currClassNode).forEach(item => {\n          var name = item.getName();\n          if (fromClassHash[name] === undefined) {\n            result.push(item);\n            fromClassHash[name] = item;\n          }\n        });\n      }\n\n      return result;\n    },\n    \n    _canShowInherited: function() {\n      return false;\n    },\n    \n    getPanelItemObjects: function(daoClass, showInherited) {\n      throw new Error(\"No implementation for \" + this.classname + \".getPanelItemObjects\");\n    },\n\n    /**\n     * Filter the item list to display only the desired items.\n     * \n     * @param nodeArr\n     *          {qxl.apiviewer.dao.ClassItem[]} array of class items\n     * @param showProtected\n     *          {Boolean} whether to show protected items\n     * @param showPrivate\n     *          {Boolean} whether to show private items\n     * @param showInternal\n     *          {Boolean} whether to show internal items\n     * @return {qxl.apiviewer.dao.ClassItem[]} filtered list of items\n     */\n    __filterItems: function(nodeArr, expandProperties, showProtected, showPrivate, showInternal) {\n      var copyArr = nodeArr.concat();\n      for (var i = nodeArr.length - 1; i >= 0; i--) {\n        var node = nodeArr[i];\n        if (node.isPropertyGenerated() && !expandProperties) {\n          qx.lang.Array.removeAt(copyArr, i);\n        } else if (node.isPrivate() && !showPrivate) {\n          qx.lang.Array.removeAt(copyArr, i);\n        } else if (node.isProtected() && !showProtected) {\n          qx.lang.Array.removeAt(copyArr, i);\n        } else if (node.isInternal() && !showInternal) {\n          qx.lang.Array.removeAt(copyArr, i);\n        }\n      }\n\n      return copyArr;\n    },\n\n    _displayNodes: function(nodes, currentClassDocNode) {\n      // Show the nodes\n      if (nodes && nodes.length > 0) {\n        var html = new qx.util.StringBuilder('<table cellspacing=\"0\" cellpadding=\"0\" class=\"info\" width=\"100%\">');\n\n        for (var i = 0; i < nodes.length; i++) {\n          html.add(this.getItemHtml(nodes[i], currentClassDocNode, false));\n        }\n\n        html.add('</table>');\n\n        this.getBodyElement().innerHTML = html.get();\n        this._postProcessLinks(this.getBodyElement());\n        qxl.apiviewer.ui.AbstractViewer.fixLinks(this.getBodyElement());\n        qxl.apiviewer.ui.AbstractViewer.highlightCode(this.getBodyElement());\n        this.getBodyElement().style.display = !this.getIsOpen() ? \"none\" : \"\";\n        this.getElement().style.display = \"\";\n      } else {\n        this.getElement().style.display = \"none\";\n      }\n    },\n\n    /**\n     * Updates an info panel.\n     * \n     * @param classViewer\n     *          {qxl.apiviewer.ui.ClassViewer} parent class viewer widget.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the currently displayed class\n     * @return {qx.Promise}\n     */\n    update: function(classViewer, currentClassDocNode) {\n      if (!this.getElement()) {\n        return;\n      }\n\n      return this.setDocNodeAsync(currentClassDocNode)\n        .then(() => {\n          var showInherited = classViewer.getShowInherited();\n          var showIncluded = classViewer.getShowIncluded();\n          var nodeArr = this._getPanelItems(showInherited, showIncluded, currentClassDocNode);\n\n          if (nodeArr && nodeArr.length > 0) {\n            var expandProperties = classViewer.getExpandProperties();\n            var showProtected = classViewer.getShowProtected();\n            var showPrivate = classViewer.getShowPrivate();\n            var showInternal = classViewer.getShowInternal();\n\n            nodeArr = this.__filterItems(nodeArr, expandProperties, showProtected, showPrivate, showInternal);\n            classViewer.sortItems(nodeArr);\n          }\n\n          this._displayNodes(nodeArr, currentClassDocNode);\n        });\n    },\n\n    _applyElement: function(element) {\n      this._titleElement = element.firstChild;\n      this._bodyElement = element.lastChild;\n    },\n\n    /** DOM node of the title of the panel */\n    getTitleElement: function() {\n      return this._titleElement;\n    },\n\n    /** DOM node of the body of the panel */\n    getBodyElement: function() {\n      return this._bodyElement;\n    },\n\n    /**\n     * Gets the HTML element showing the details of an item.\n     * \n     * @param panel\n     *          {InfoPanel} the info panel of the item.\n     * @param name\n     *          {String} the item's name.\n     * @return {Element} the HTML element showing the details of the item.\n     * @ignore(getElementsByTagName)\n     */\n    getItemElement: function(name) {\n      var elemArr = this.getBodyElement().getElementsByTagName(\"TBODY\")[0].childNodes;\n\n      for (var i = 0; i < elemArr.length; i++) {\n        // ARRG, should be implemented in a more fault-tolerant way\n        // iterate over tr's, look inside the third \"td\" and there the second\n        // element\n        if (elemArr[i].childNodes[3].childNodes[1].getAttribute(\"_itemName\") == name) {\n          return elemArr[i].childNodes[3].childNodes[1];\n        }\n      }\n    },\n\n    /**\n     * Event handler. Called when the user clicked a button for showing/hiding\n     * the details of an item.\n     * \n     * @param panelHashCode\n     *          {Integer} hash code of the panel object.\n     * @param name\n     *          {String} the name of the item.\n     * @param fromClassName\n     *          {String} the name of the class the item the item was defined in.\n     */\n    toggleShowItemDetails: function(itemName, fromClassName) {\n      try {\n        var textDiv = this.getItemElement(itemName);\n\n        if (!textDiv) {\n          throw Error(\"Element for name '\" + itemName + \"' not found!\");\n        }\n\n        var showDetails = textDiv._showDetails ? !textDiv._showDetails : true;\n        textDiv._showDetails = showDetails;\n\n        var fromClassNode = fromClassName ? qxl.apiviewer.dao.Class.getClassByName(fromClassName) : this.getDocNode();\n        var node = null;\n        for (var arr = this.getPanelItemObjects(fromClassNode), i = 0; i < arr.length && !node; i++) {\n          var tmp = arr[i];\n          if (tmp.getName() == itemName)\n            node = tmp;\n        }\n        if (!node)\n          return;\n\n        // Update the close/open image\n        var opencloseImgElem = textDiv.parentNode.previousSibling.firstChild;\n        opencloseImgElem.src = qx.util.ResourceManager.getInstance().toUri(\n            showDetails ? 'qxl/apiviewer/image/close.gif' : 'qxl/apiviewer/image/open.gif');\n\n        // Update content\n        textDiv.innerHTML = this.getItemTextHtml(node, this.getDocNode(), showDetails);\n        this._postProcessLinks(textDiv);\n        qxl.apiviewer.ui.AbstractViewer.fixLinks(textDiv);\n        qxl.apiviewer.ui.AbstractViewer.highlightCode(textDiv);\n      } catch (exc) {\n        this.error(\"Toggling item details failed\");\n        this.error(exc);\n      }\n    },\n\n    /**\n     * Convert mouseup and click listener attached to tap / pointerup listener.\n     * \n     * @param el\n     *          {Element} The element containing the links.\n     */\n    _postProcessLinks: function(el) {\n      if (el._processed) {\n        return;\n      }\n      q(el).on(\"pointerup\", function(e) {\n        var target = e.getTarget();\n        var mouseup = target.getAttribute(\"onmouseup\");\n        if (mouseup) {\n          target.removeAttribute(\"onmouseup\");\n          target.setAttribute(\"oldonmouseup\", mouseup);\n        } else {\n          mouseup = target.getAttribute(\"oldonmouseup\");\n        }\n\n        if (mouseup) {\n          Function(mouseup)();\n        }\n      });\n\n      q(el).on(\"tap\", function(e) {\n        var onClickValue = \"event.preventDefault ? event.preventDefault() : event.returnValue = false; return false;\";\n        var target = e.getTarget();\n        var click = target.getAttribute(\"onclick\");\n        if (click && click != onClickValue) {\n          target.removeAttribute(\"onclick\");\n          target.setAttribute(\"oldonclick\", click);\n          target.setAttribute(\"onclick\", onClickValue);\n        } else {\n          click = target.getAttribute(\"oldonclick\");\n        }\n\n        if (click) {\n          Function(click)();\n        }\n      });\n\n      el._processed = true;\n    }\n  },\n\n  /*\n   * ****************************************************************************\n   * DESTRUCTOR\n   * ****************************************************************************\n   */\n\n  destruct: function() {\n    this._titleElement = this._bodyElement = null;\n  },\n\n  statics: {\n\n    /**\n     * {regexp} The regexp for parsing a item name (e.g.\n     * \"mypackage.MyClass#MY_CONSTANT alternative text\").\n     */\n    ITEM_SPEC_REGEX: /^(([\\w\\.]+)?(#\\w+(\\([^\\)]*\\))?)?)(\\s+(.*))?$/,\n\n    /** {regexp} The regexp that finds the end of a sentence. */\n    SENTENCE_END_REGEX: /[^\\.].\\.(\\s|<)/,\n\n    /**\n     * Creates HTML that replaces all &#64;link-attributes with links.\n     * \n     * @param description\n     *          {String} the description.\n     * @param packageBaseClass\n     *          {qxl.apiviewer.dao.Class?null} the doc node of the class to use for\n     *          auto-adding packages.\n     * @return {String} HTML fragment\n     */\n    resolveLinkAttributes: function(description, packageBaseClass) {\n      var linkRegex = /\\{@link([^\\}]*)\\}/mg;\n\n      var html = new qx.util.StringBuilder();\n      var hit;\n      var lastPos = 0;\n\n      while ((hit = linkRegex.exec(description)) != null) {\n        // Add the text before the link\n        html.add(description.substring(lastPos, hit.index) + this.createItemLinkHtml(hit[1], packageBaseClass));\n\n        lastPos = hit.index + hit[0].length;\n      }\n\n      // Add the text after the last hit\n      html.add(description.substring(lastPos, description.length));\n\n      return html.get();\n    },\n\n    /**\n     * Creates the HTML for a link to an item.\n     * \n     * @param linkText\n     *          {String} the link text (e.g. \"mypackage.MyClass#myMethod alt\n     *          text\")\n     * @param packageBaseClass\n     *          {qxl.apiviewer.dao.Class?null} the doc node of the class to use when\n     *          auto-adding the package to a class name having no package\n     *          specified. If null, no automatic package addition is done.\n     * @param useIcon\n     *          {Boolean?true} whether to add an icon to the link.\n     * @param useShortName\n     *          {Boolean?false} whether to use the short name.\n     * @return {String} HTML fragment of the link\n     */\n    createItemLinkHtml: function(linkText, packageBaseClass, useIcon, useShortName) {\n      var classNode = null;\n      if (useIcon == null) {\n        useIcon = true;\n      }\n\n      var className;\n      var itemName = null;\n      var label = \"\";\n      var style = \"\";\n      \n      if (typeof linkText == \"string\") {\n        linkText = linkText.trim();\n\n        if (linkText.charAt(0) == '\"' || linkText.charAt(0) == '<') {\n          // This is a String or a link to a URL -> Just use it as it is\n          return linkText;\n        }\n        \n        // This is a link to another class or method -> Create an item link\n        // Separate item name from label\n        var hit = this.ITEM_SPEC_REGEX.exec(linkText);\n\n        if (hit == null) {\n          // Malformed item name\n          return linkText;\n        }\n        className = hit[2];\n        itemName = hit[3];\n        label = hit[6];\n\n        // Make the item name absolute\n        if (className == null || className.length == 0) {\n          // This is a relative link to a method -> Add the current class\n          className = packageBaseClass.getFullName();\n        } else if (packageBaseClass && className.indexOf(\".\") == -1) {\n          classNode = qxl.apiviewer.dao.Class.getClassByName(className);\n\n          // classNode could be a native JS constructor (String, Boolean, ...)\n          if (!classNode || !classNode.classname || classNode.getPackage().getName() !== \"\") {\n            // The class name has no package -> Use the same package as the\n            // current class\n            if (packageBaseClass instanceof qxl.apiviewer.dao.Package) {\n              className = packageBaseClass.getFullName() + \".\" + className;\n            } else {\n              let fullName = packageBaseClass.getFullName();\n              let pos = fullName.lastIndexOf('.');\n              let baseClassname = fullName.substring(pos + 1);\n              if (baseClassname == className) {\n                className = fullName;\n                classNode = packageBaseClass;\n              } else {\n                className = fullName.substring(0, pos + 1) + className;\n              }\n            }\n          }\n        }\n\n        // Get the node info\n        if (label == null || label.length == 0) {\n          // We have no label -> Use the item name as label\n          label = hit[1];\n        }\n\n        // Add the right icon\n        if (useIcon) {\n          if (!classNode) {\n            classNode = qxl.apiviewer.dao.Class.getClassByName(className);\n          }\n\n          // If the class is not loaded, then itemNode is not available - the only side effect of which is that\n          //  the icon is not available.  However, this is acceptable because the only time the classes might\n          //  not be loaded will be if referenced from within comments and where the class is not a dependent\n          //  class, in which cases icons are not needed.\n          if (classNode && classNode.isLoaded()) {\n            var itemNode;\n\n            if (itemName) {\n              // The links points to a item of the class\n              var cleanItemName = itemName.substring(1);\n              var parenPos = cleanItemName.indexOf(\"(\");\n\n              if (parenPos != -1) {\n                cleanItemName = cleanItemName.substring(0, parenPos).trim();\n              }\n              itemNode = this.__getItemFromClassHierarchy(cleanItemName, classNode);\n              if (!itemNode && qxl.apiviewer.UiModel.getInstance().getShowIncluded()) {\n                if (qxl.apiviewer.UiModel.getInstance().getShowInherited()) {\n                  var classNodes = [ classNode ];\n                  if (classNode.getType() == \"interface\") {\n                    classNodes = classNode.getInterfaceHierarchy();\n                  } else {\n                    classNodes = classNode.getClassHierarchy();\n                  }\n                  for (var i = 0, l = classNodes.length; i < l; i++) {\n                    itemNode = classNodes[i].getItemByNameFromMixins(cleanItemName);\n                    if (itemNode) {\n                      break;\n                    }\n                  }\n                } else {\n                  itemNode = classNode.getItemByNameFromMixins(cleanItemName);\n                }\n              }\n            } else {\n              // The links points to the class\n              itemNode = classNode;\n            }\n            \n            if (itemNode && !(itemNode instanceof qxl.apiviewer.dao.Package)) {\n              className = itemNode.getFullName();\n            }\n          }\n        }\n        \n      } else {\n        itemNode = linkText;\n        \n        if (itemNode instanceof qxl.apiviewer.dao.Class) {\n          className = label = itemNode.getFullName();\n          \n        } else if (itemNode instanceof qxl.apiviewer.dao.ClassItem) {\n          className = itemNode.getClass().getName();\n          itemName = label = itemNode.getFullName();\n        }\n      }\n\n      if (itemNode) {\n        var iconUrl = qxl.apiviewer.TreeUtil.getIconUrl(itemNode);\n        var iconCode = qxl.apiviewer.ui.ClassViewer.createImageHtml(iconUrl);\n\n        if (qx.core.Environment.get(\"engine.name\") == \"webkit\") {\n          if (iconCode.indexOf(\"overlay_\") !== -1) {\n            style = \"margin-left:18px;\";\n          }\n        }\n      }\n      \n      // Create a real bookmarkable link\n      // NOTE: The onclick-handler must be added by HTML code. If it\n      // is added using the DOM element then the href is followed.\n      var fullItemName = itemNode ? itemNode.getFullName() : classNode && classNode.getFullName ? classNode.getFullName() : className;\n      var protocol, host, pathname;\n\n      // Opera 10.5 loses the reference to \"window\"\n      // See http://bugzilla.qooxdoo.org/show_bug.cgi?id=3516 for details\n      if (qx.core.Environment.get(\"engine.name\") == \"opera\" && qx.core.Environment.get(\"engine.version\") > 9) {\n        protocol = location.protocol;\n        host = location.host;\n        pathname = location.pathname;\n      } else {\n        protocol = window.location.protocol;\n        host = window.location.host;\n        pathname = window.location.pathname;\n      }\n\n      var linkHtml = [ '<span style=\"white-space: nowrap;\">', (typeof iconCode != \"undefined\" ? iconCode : \"\"),\n          '<a style=\"' + style + '\" href=\"' + protocol, '//', host, pathname, '#', fullItemName, '\" onclick=\"return false;\"',\n          '\" onmouseup=\"qxl.apiviewer.TabViewController.instance.onSelectItem(\\'', fullItemName, '\\'); return false;\"', ' title=\"',\n          fullItemName, '\">', label, '</a></span>' ];\n\n      return linkHtml.join(\"\");\n    },\n\n    /**\n     * Creates the HTML showing the &#64;see attributes of an item.\n     * \n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @return {String} the HTML showing the &#64;see attributes.\n     */\n    createSeeAlsoHtml: function(node) {\n      var see = node.getSee();\n      if (see.length > 0) {\n        var seeAlsoLinks = new qx.util.StringBuilder();\n\n        for (var i = 0; i < see.length; i++) {\n          if (seeAlsoLinks.length != 0) {\n            seeAlsoLinks.add(\", \");\n          }\n          var link = this.createItemLinkHtml(see[i], node.getClass());\n          if (link.indexOf(\"http\") === 0) {\n            link = \"<a target='_blank' href='\" + link + \"'>\" + link + \"</a>\";\n          }\n          seeAlsoLinks.add(link);\n        }\n\n        if (!seeAlsoLinks.isEmpty()) {\n          // We had @see attributes\n          var seeAlsoHtml = new qx.util.StringBuilder();\n          seeAlsoHtml.add('<div class=\"item-detail-headline\">', \"See also:\", '</div>', '<div class=\"item-detail-text\">',\n              seeAlsoLinks, '</div>');\n          return seeAlsoHtml.get();\n        }\n      }\n\n      // Nothing found\n      return \"\";\n    },\n\n    /**\n     * Creates the HTML showing information about inheritance\n     * \n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} item to get the information from\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the current class shown in the class\n     *          viewer\n     * @return {String} HTML fragment\n     */\n    createInheritedFromHtml: function(node, currentClassDocNode) {\n      if (node.getClass().getType() != \"mixin\" && node.getClass() != currentClassDocNode) {\n        var html = new qx.util.StringBuilder('<div class=\"item-detail-headline\">', \"Inherited from:\", '</div>',\n            '<div class=\"item-detail-text\">', qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(node.getClass().getFullName() + \"#\"\n                + node.getName()), '</div>');\n        return html.get();\n      } else {\n        return \"\";\n      }\n    },\n\n    /**\n     * Creates the HTML showing whether the item is overridden\n     * \n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} item to get the the information from\n     * @return {String} HTML fragment\n     */\n    createOverwriddenFromHtml: function(node) {\n      if (node.getOverriddenFrom()) {\n        var html = new qx.util.StringBuilder('<div class=\"item-detail-headline\">', \"Overrides:\", '</div>',\n            '<div class=\"item-detail-text\">', qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(node.getOverriddenFrom()\n                .getFullName()\n                + \"#\" + node.getName()), '</div>');\n        return html.get();\n      } else {\n        return \"\";\n      }\n    },\n\n    /**\n     * Creates the HTML showing whether the item is included from a mixin\n     * \n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} item to get the the information from\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the current class shown in the class\n     *          viewer\n     * @return {String} HTML fragment\n     */\n    createIncludedFromHtml: function(node, currentClassDocNode) {\n      if (node.getClass() != currentClassDocNode) {\n        if (node.getClass().getType() == \"mixin\") {\n          var html = new qx.util.StringBuilder('<div class=\"item-detail-headline\">', \"Included from mixin:\", '</div>',\n              '<div class=\"item-detail-text\">', qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(node.getClass().getFullName()\n                  + \"#\" + node.getName()), '</div>');\n          return html.get();\n        }\n      } else {\n        return \"\";\n      }\n    },\n\n    /**\n     * Gets a class item from baseClassNode. if it is not found there, the\n     * class' hierarchy is searched until the item is found.\n     * \n     * @param itemName\n     *          {String} the name of the item.\n     * @param baseClassNode\n     *          {qxl.apiviewer.dao.Class} class doc node\n     * @return {qxl.apiviewer.dao.ClassItem} the classItem\n     * \n     */\n    __getItemFromClassHierarchy: function(itemName, baseClassNode) {\n      var itemNode = baseClassNode.getItem(itemName);\n      if (itemNode) {\n        return itemNode;\n      } else {\n        var classNodes = baseClassNode.getClassHierarchy();\n        for (var i = 0, l = classNodes.length; i < l; i++) {\n          var currClassNode = classNodes[i];\n          itemNode = currClassNode.getItem(itemName);\n          if (itemNode) {\n            break;\n          }\n        }\n        return itemNode;\n      }\n    },\n\n    /**\n     * Creates the HTML showing the description of an item.\n     * \n     * @param node\n     *          {qxl.apiviewer.dao.Node} the doc node of the item.\n     * @param packageBaseClass\n     *          {qxl.apiviewer.dao.Class|qxl.apiviewer.dao.Package?null} the doc node of\n     *          the class to use for auto-adding packages.\n     * @param showDetails\n     *          {Boolean} whether to show details. If <code>false</code> only\n     *          the first sentence of the description will be shown.\n     * @return {String} the HTML showing the description.\n     */\n    createDescriptionHtml: function(node, packageBaseClass, showDetails) {\n      var desc = node.getDescription();\n\n      if (desc) {\n        if (!showDetails) {\n          desc = this.__extractFirstSentence(desc);\n        }\n        return '<div class=\"item-desc\">' + this.resolveLinkAttributes(desc, packageBaseClass) + '</div>';\n      } else {\n        return \"\";\n      }\n    },\n\n    /**\n     * Extracts the first sentence from a text.\n     * \n     * @param text\n     *          {String} the text.\n     * @return {String} the first sentence from the text.\n     */\n    __extractFirstSentence: function(text) {\n      var ret = text;\n\n      // Extract first block\n      var pos = ret.indexOf(\"</p>\");\n\n      if (pos != -1) {\n        ret = ret.substr(0, pos + 4);\n\n        var hit = this.SENTENCE_END_REGEX.exec(ret);\n\n        if (hit != null) {\n          ret = text.substring(0, hit.index + hit[0].length - 1) + \"</p>\";\n        }\n      }\n\n      return ret;\n    },\n\n    /**\n     * Returns whether the description of an item has details (has more than one\n     * sentence).\n     * \n     * @param node\n     *          {qxl.apiviewer.dao.Node} the doc node of the item.\n     * @return {Boolean} whether the description of an item has details.\n     */\n    descriptionHasDetails: function(node) {\n      var desc = node.getDescription();\n      if (desc) {\n        return this.__extractFirstSentence(desc) != desc;\n      } else {\n        return false;\n      }\n    },\n\n    /**\n     * Creates the HTML showing the type of a doc node.\n     * \n     * @param typeNode\n     *          {qxl.apiviewer.dao.ClassItem} the doc node to show the type for.\n     * @param defaultType\n     *          {String} the type name to use if <code>typeNode</code> is\n     *          <code>null</code> or defines no type.\n     * @param useShortName\n     *          {Boolean?true} whether to use short class names (without\n     *          package).\n     * @return {String} the HTML showing the type.\n     */\n    createTypeHtml: function(typeNode, defaultType, useShortName) {\n\n      if (useShortName == null) {\n        useShortName = true;\n      }\n\n      var types = [];\n      var typeDimensions, typeName, linkText;\n\n      if (typeNode) {\n        types = typeNode.getTypes();\n      }\n\n      var typeHtml = new qx.util.StringBuilder()\n      if (types.length == 0) {\n        typeHtml.add(defaultType);\n      } else {\n        if (types.length > 1) {\n          typeHtml.add(\"(\");\n        }\n\n        for (var j = 0; j < types.length; j++) {\n          if (j > 0) {\n            typeHtml.add(\" | \");\n          }\n\n          typeName = types[j].type;\n          typeDimensions = types[j].dimensions;\n\n          if (qxl.apiviewer.ui.ClassViewer.PRIMITIVES[typeName]) {\n            if (qxl.apiviewer.ui.ClassViewer.MDC_LINKS[typeName]) {\n              typeHtml.add('<span style=\"white-space: nowrap;\"><a href=\"' + qxl.apiviewer.ui.ClassViewer.MDC_LINKS[typeName]\n                  + '\" target=\"_blank\" title=\"' + typeName + '\">' + typeName + '</a></span>');\n            } else {\n              typeHtml.add(typeName);\n            }\n          } else {\n            linkText = typeName;\n\n            if (useShortName) {\n              var lastDot = typeName.lastIndexOf(\".\");\n\n              if (lastDot != -1) {\n                linkText += \" \" + typeName.substring(lastDot + 1);\n              }\n            }\n            typeHtml.add(qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(linkText, typeNode.getClass(), false, true));\n          }\n\n          if (typeDimensions) {\n            for (var i = 0; i < parseInt(typeDimensions); i++) {\n              typeHtml.add(\"[]\");\n            }\n          }\n        }\n\n        if (types.length > 1) {\n          typeHtml.add(\")\");\n        }\n      }\n\n      return typeHtml.get();\n    },\n\n    /**\n     * Creates the HTML showing the documentation errors of an item.\n     * \n     * @param node\n     *          {qxl.apiviewer.dao.Node} the doc node of the item.\n     * @param currentClassDocNode\n     *          {Map} the doc node of the currently displayed class\n     * @return {String} the HTML showing the documentation errors.\n     */\n    createErrorHtml: function(node, currentClassDocNode) {\n      var errors = node.getErrors();\n\n      if (errors.length > 0) {\n        var html = new qx.util.StringBuilder('<div class=\"item-detail-error\">', \"Documentation errors:\", '</div>');\n\n        for (var i = 0; i < errors.length; i++) {\n          html.add('<div class=\"item-detail-text\">', errors[i].attributes.msg, \" <br/>\");\n\n          if (errors[i].attributes.line || node.getClass() != currentClassDocNode) {\n            html.add(\"(\");\n\n            if (node.getClass() != currentClassDocNode) {\n              html.add(node.getClass().getFullName(), \"; \");\n            }\n\n            if (errors[i].attributes.line) {\n              html.add(\"Line: \", errors[i].attributes.line);\n              if (errors[i].attributes.column) {\n                html.add(\", Column:\", errors[i].attributes.column);\n              }\n            }\n            html.add(\")\");\n          }\n          html.add(\"</div>\");\n        }\n\n        return html.get();\n      } else {\n        return \"\";\n      }\n    },\n\n    /**\n     * Creates the HTML showing whether the item is deprecated\n     * \n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param itemName\n     *          {String} type of the item, e.g. \"method\", \"property\",\n     *          \"constant\", ...\n     * @return {String} the HTML fragment.\n     */\n    createDeprecationHtml: function(node, itemName) {\n      if (!node.isDeprecated()) {\n        return \"\";\n      }\n\n      var html = new qx.util.StringBuilder();\n      html.add('<div class=\"item-detail-error\">', \"Deprecated:\", '</div>');\n\n      html.add('<div class=\"item-detail-text\">');\n      var desc = node.getDeprecationText();\n      if (desc) {\n        html.add(desc);\n      } else {\n        html.add(\"This \", itemName, \" is deprecated!\");\n      }\n      html.add('</div>');\n      return html.get();\n    },\n\n    /**\n     * Creates the HTML showing the access protection for a class item.\n     * \n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @return {String} the HTML fragment.\n     */\n    createAccessHtml: function(node) {\n      if (node.isPublic()) {\n        return \"\";\n      }\n\n      var html = new qx.util.StringBuilder();\n      html.add('<div class=\"item-detail-headline\">', \"Access:\", '</div>');\n      html.add('<div class=\"item-detail-text\">');\n      var access = [];\n      if (node.isPrivate()) {\n        access.push(\"private\");\n      }\n      if (node.isInternal()) {\n        access.push(\"internal\");\n      }\n      if (node.isProtected()) {\n        access.push(\"protected\");\n      }\n      html.add(access.join(\" \"));\n      html.add('</div>');\n      return html.get();\n    },\n\n    /**\n     * Creates the HTML showing interfaces requiring this node\n     * \n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @return {String} the HTML.\n     */\n    createInfoRequiredByHtml: function(node) {\n      var html = new qx.util.StringBuilder();\n      var requiredBy = node.getRequiredBy();\n      if (requiredBy.length > 0) {\n        html.add('<div class=\"item-detail-headline\">', \"Required by:\", '</div>');\n        for (var i = 0; i < requiredBy.length; i++) {\n          html.add('<div class=\"item-detail-text\">', qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(requiredBy[i].getFullName()\n              + \"#\" + node.getName()), '</div>');\n        }\n      }\n      return html.get();\n    },\n\n    /**\n     * Creates the link to the source file that definen an item\n     * \n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @return {String} the HTML.\n     */\n    createSourceLinkHtml: function(node) {\n      if (!node.getLineNumber || !node.getLineNumber()) {\n        return \"\";\n      }\n\n      var sourceUri = qxl.apiviewer.ui.ClassViewer.getSourceUri(node);\n      if (!sourceUri) {\n        return \"\";\n      }\n\n      var title;\n      if (node instanceof qxl.apiviewer.dao.Class) {\n        title = node.getFullName();\n      } else {\n        title = node.getClass().getFullName() + \"#\" + node.getName();\n      }\n\n      var html = new qx.util.StringBuilder();\n      html.add('<div class=\"item-detail-headline\">', \"View Source:\", '</div>');\n      html.add('<div class=\"item-detail-text\">', '<a href=\"' + sourceUri + '\" target=\"_blank\">' + title + '</a>', '</div>');\n\n      return html.get();\n    },\n\n    /**\n     * Wraps a HTML fragment with a \"span\" element with CSS classes for the\n     * item.\n     * \n     * @param node\n     *          {qxl.apiviewer.dao.Class} class doc node\n     * @param title\n     *          {String} original title\n     * @return {String} HMTL fragment\n     */\n    setTitleClass: function(node, title) {\n      var html = [ \"<span class='\", \"\", \"'>\", title, \"</span>\" ];\n      html[1] = this.getItemCssClasses(node);\n      return html.join(\"\");\n    },\n\n    /**\n     * Gets CSS classes for a class item\n     * \n     * @param node\n     *          {qxl.apiviewer.dao.Class} class doc node\n     * @return {String} CSS classes separated by \" \"\n     */\n    getItemCssClasses: function(node) {\n      var cssClasses = [];\n      if (node instanceof qxl.apiviewer.dao.Class) {\n        if (node.isDeprecated()) {\n          cssClasses.push(\"item-deprecated\");\n        }\n        if (node.isPrivate()) {\n          cssClasses.push(\"item-private\");\n        }\n        if (node.isInternal()) {\n          cssClasses.push(\"item-internal\");\n        }\n        if (node.isProtected()) {\n          cssClasses.push(\"item-protected\");\n        }\n      }\n      return cssClasses.join(\" \");\n    }\n\n  }\n});\n"
  ]
}