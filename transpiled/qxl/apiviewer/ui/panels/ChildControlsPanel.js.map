{
  "version": 3,
  "sources": [
    "contrib/qooxdoo_qxl.apiviewer_v0.1.12/source/class/qxl/apiviewer/ui/panels/ChildControlsPanel.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "apiviewer",
    "ui",
    "panels",
    "InfoPanel",
    "construct",
    "members",
    "canDisplayItem",
    "dao",
    "ChildControl",
    "getPanelItemObjects",
    "daoClass",
    "showInherited",
    "getChildControls",
    "getItemTypeHtml",
    "node",
    "currentClassDocNode",
    "createTypeHtml",
    "getItemTitleHtml",
    "setTitleClass",
    "getName",
    "getItemTextHtml",
    "showDetails",
    "textHtml",
    "util",
    "StringBuilder",
    "getDescription",
    "add",
    "getDefaultValue",
    "get",
    "ChildControlsPanel"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAwBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,4CAAhB,EAA8D;;AAE5DC,YAAQC,IAAIC,SAAJ,CAAcC,EAAd,CAAiBC,MAAjB,CAAwBC,SAF4B;;AAI5DC,eAAW,qBAAW;AACpB,+DAAqB,gBAArB,EAAuC,wCAAvC;AACD,KAN2D;;AAQ5DC,aACA;;AAEE;;;AAGAC,sBAAgB,wBAASC,GAAT,EAAc;AAC5B,eAAOA,eAAeR,IAAIC,SAAJ,CAAcO,GAAd,CAAkBC,YAAxC;AACD,OAPH;;AASEC,2BAAqB,6BAASC,QAAT,EAAmBC,aAAnB,EAAkC;AACrD,eAAOD,SAASE,gBAAT,EAAP;AACD,OAXH;;AAaEC,uBAAkB,yBAASC,IAAT,EAAeC,mBAAf,EAAoC;AACpD,eAAOhB,IAAIC,SAAJ,CAAcC,EAAd,CAAiBC,MAAjB,CAAwBC,SAAxB,CAAkCa,cAAlC,CAAiDF,IAAjD,EAAuD,KAAvD,EAA8D,IAA9D,CAAP;AACD,OAfH;;AAkBEG,wBAAmB,0BAASH,IAAT,EAAeC,mBAAf,EAAoC;AACrD,eAAOhB,IAAIC,SAAJ,CAAcC,EAAd,CAAiBC,MAAjB,CAAwBC,SAAxB,CAAkCe,aAAlC,CAAgDJ,IAAhD,EAAsDA,KAAKK,OAAL,EAAtD,CAAP;AACD,OApBH;;AAuBEC,uBAAkB,yBAASN,IAAT,EAAeC,mBAAf,EAAoCM,WAApC,EAAiD;AACjE,YAAIC,WAAW,IAAI9B,GAAG+B,IAAH,CAAQC,aAAZ,CAA0BV,KAAKW,cAAL,EAA1B,CAAf;;AAEA,YAAIJ,WAAJ,EAAiB;AACfC,mBAASI,GAAT,CACE,oCADF,EACwC,gBADxC,EAC0D,QAD1D,EAEE,gCAFF,EAGE,QAHF,EAIGZ,KAAKa,eAAL,KAAyBb,KAAKa,eAAL,EAAzB,GAAkD,MAJrD,EAKE,SALF,EAME,QANF;AAQD;;AAED,eAAOL,SAASM,GAAT,EAAP;AACD;;AAtCH;;AAT4D,GAA9D,C;AAxBA7B,MAAIC,SAAJ,CAAcC,EAAd,CAAiBC,MAAjB,CAAwB2B,kBAAxB,CAA2ClC,aAA3C,GAA2DA,aAA3D",
  "file": "ChildControlsPanel.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * Daniel Wagner (d_wagner)\n     * John Spackman (johnspackman) of Zenesis Ltd (http://www.zenesis.com)\n\n************************************************************************ */\n\nqx.Class.define(\"qxl.apiviewer.ui.panels.ChildControlsPanel\", {\n\n  extend: qxl.apiviewer.ui.panels.InfoPanel,\n\n  construct: function() {\n    this.base(arguments, \"Child Controls\", \"qxl/apiviewer/image/childcontrol18.gif\");\n  },\n\n  members :\n  {\n\n    /**\n     * @Override\n     */\n    canDisplayItem: function(dao) {\n      return dao instanceof qxl.apiviewer.dao.ChildControl; \n    },\n    \n    getPanelItemObjects: function(daoClass, showInherited) {\n      return daoClass.getChildControls();\n    },\n        \n    getItemTypeHtml : function(node, currentClassDocNode) {\n      return qxl.apiviewer.ui.panels.InfoPanel.createTypeHtml(node, \"var\", true);\n    },\n\n\n    getItemTitleHtml : function(node, currentClassDocNode) {\n      return qxl.apiviewer.ui.panels.InfoPanel.setTitleClass(node, node.getName());\n    },\n\n\n    getItemTextHtml : function(node, currentClassDocNode, showDetails) {\n      var textHtml = new qx.util.StringBuilder(node.getDescription());\n\n      if (showDetails) {\n        textHtml.add(\n          '<div class=\"item-detail-headline\">', \"Default value:\", '</div>',\n          '<div class=\"item-detail-text\">',\n          '<code>',\n          (node.getDefaultValue() ? node.getDefaultValue() : \"null\"),\n          '</code>',\n          '</div>'\n        );\n      }\n\n      return textHtml.get();\n    }\n\n  }\n\n});"
  ]
}