{
  "version": 3,
  "sources": [
    "contrib/qooxdoo_qxl.apiviewer_v0.1.12/source/class/qxl/apiviewer/ui/panels/ClassPanel.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "apiviewer",
    "ui",
    "panels",
    "InfoPanel",
    "construct",
    "labelText",
    "properties",
    "type",
    "init",
    "check",
    "members",
    "canDisplayItem",
    "dao",
    "getType",
    "getItemTypeHtml",
    "node",
    "createItemLinkHtml",
    "getName",
    "getItemTitleHtml",
    "getFullName",
    "getItemTextHtml",
    "getDocNode",
    "showDetails",
    "resolveLinkAttributes",
    "getDescription",
    "createDescriptionHtml",
    "getItemTooltip",
    "classNode",
    "currentClassDocNode",
    "isAbstract",
    "tooltip",
    "isStatic",
    "isSingleton",
    "itemHasDetails",
    "descriptionHasDetails",
    "update",
    "classViewer",
    "getElement",
    "setDocNodeAsync",
    "then",
    "loadDependedClasses",
    "nodeArr",
    "clType",
    "i",
    "classes",
    "length",
    "push",
    "sortItems",
    "_displayNodes",
    "ClassPanel"
  ],
  "mappings": "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",
  "file": "ClassPanel.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * John Spackman (johnspackman) of Zenesis Ltd (http://www.zenesis.com)\n\n************************************************************************ */\n\nqx.Class.define(\"qxl.apiviewer.ui.panels.ClassPanel\",\n{\n  extend: qxl.apiviewer.ui.panels.InfoPanel,\n\n  /**\n   * Creates class panel. An class panel shows information about classes, mixins\n   * and interfaces\n   *\n   * @param labelText {String} the label text describing the node type.\n   */\n  construct : function(labelText)\n  {\n    this.base(arguments, labelText);\n  },\n\n\n  properties :\n  {\n    type : {\n      init: \"class\",\n      check : [\"class\", \"mixin\", \"interface\"]\n    }\n  },\n\n\n  members :\n  {\n    /**\n     * @Override\n     */\n    canDisplayItem: function(dao) {\n      if (!(dao instanceof qxl.apiviewer.dao.Class))\n        return false;\n      return dao.getType() == this.getType(); \n    },\n    \n    getItemTypeHtml : function(node)\n    {\n      return qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(node.getName(), node, false, true);\n    },\n\n    getItemTitleHtml : function(node)\n    {\n      return node.getFullName();\n    },\n\n\n    getItemTextHtml : function(node, getDocNode, showDetails)\n    {\n      if (showDetails)\n      {\n        return qxl.apiviewer.ui.panels.InfoPanel.resolveLinkAttributes(node.getDescription(), node);\n      } else {\n        return qxl.apiviewer.ui.panels.InfoPanel.createDescriptionHtml(node, node, showDetails);\n      }\n    },\n\n\n    getItemTooltip : function(classNode, currentClassDocNode)\n    {\n      if (classNode.isAbstract()) {\n        var tooltip =\"Abstract \";\n      } else if (classNode.isStatic()) {\n        var tooltip = \"Static \";\n      } else if (classNode.isSingleton()) {\n        var tooltip = \"Singleton \";\n      } else {\n        var tooltip = \"\";\n      }\n      switch (classNode.getType())\n      {\n        case \"mixin\" :\n          tooltip += \"Mixin\";\n          break;\n\n        case \"interface\" :\n          tooltip += \"Interface\";\n          break;\n\n        default:\n          tooltip += \"Class\";\n          break;\n      }\n      return tooltip;\n    },\n\n\n    itemHasDetails : function(node, currentClassDocNode)\n    {\n      return qxl.apiviewer.ui.panels.InfoPanel.descriptionHasDetails(node);\n    },\n\n\n    /**\n     * Updates an info panel.\n     *\n     * @param classViewer {qxl.apiviewer.ui.ClassViewer} parent class viewer widget.\n     * @param currentClassDocNode {qxl.apiviewer.dao.Class} the currently displayed class\n     * @return {qx.Promise}\n     */\n    update : function(classViewer, currentClassDocNode) {\n      if (!this.getElement()) {\n        return;\n      }\n\n      return this.setDocNodeAsync(currentClassDocNode)\n        .then(() => currentClassDocNode.loadDependedClasses())\n        .then(classes => {\n          var nodeArr = [];\n          var clType;\n          for (var i=0; i<classes.length; i++)\n          {\n            clType = classes[i].getType();\n  \n            // Normalize pseudo-classes (for the user this detail is often not relevant)\n            if (clType === \"bootstrap\" || clType === \"list\") {\n              clType = \"class\";\n            }\n  \n            if (clType === this.getType()) {\n              nodeArr.push(classes[i]);\n            }\n          }\n  \n          if (nodeArr && nodeArr.length > 0)\n          {\n            classViewer.sortItems(nodeArr);\n          }\n  \n          this._displayNodes(nodeArr, currentClassDocNode);\n        });\n    }\n\n  }\n\n});\n"
  ]
}