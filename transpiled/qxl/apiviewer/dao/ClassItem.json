{
  "className": "qxl.apiviewer.dao.ClassItem",
  "packageName": "qxl.apiviewer.dao",
  "name": "ClassItem",
  "superClass": "qxl.apiviewer.dao.Node",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0
      },
      "end": {
        "line": 168,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n2018 Zenesis Limited, http://www.zenesis.com\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nJohn Spackman (johnspackman)\nFabian Jakobs (fjakobs)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "This Class wraps the access to the documentation data of a class item."
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 33,
        "column": 2
      },
      "end": {
        "line": 38,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "classDocNode {Map} class documentation node",
          "paramName": "classDocNode",
          "description": " class documentation node",
          "type": "Map"
        },
        {
          "name": "@param",
          "body": "parentClass {qxl.apiviewer.dao.Class} reference to the class this item belongs to",
          "paramName": "parentClass",
          "description": " reference to the class this item belongs to",
          "type": "qxl.apiviewer.dao.Class"
        },
        {
          "name": "@param",
          "body": "name {String} name of the list in the JSON structure of the class",
          "paramName": "name",
          "description": " name of the list in the JSON structure of the class",
          "type": "String"
        }
      ]
    }
  },
  "members": {
    "_class": {
      "location": {
        "start": {
          "line": 42,
          "column": 4
        },
        "end": {
          "line": 42,
          "column": 16
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_name": {
      "location": {
        "start": {
          "line": 43,
          "column": 4
        },
        "end": {
          "line": 43,
          "column": 15
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "getClass": {
      "location": {
        "start": {
          "line": 50,
          "column": 4
        },
        "end": {
          "line": 53,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the class, this item belongs to"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Class} the class this item belongs to",
            "type": "qxl.apiviewer.dao.Class",
            "description": " the class this item belongs to"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getName": {
      "location": {
        "start": {
          "line": 61,
          "column": 4
        },
        "end": {
          "line": 64,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the name of the item."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} name of the item",
            "type": "String",
            "description": " name of the item"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getFullName": {
      "location": {
        "start": {
          "line": 66,
          "column": 4
        },
        "end": {
          "line": 68,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "getTypes": {
      "location": {
        "start": {
          "line": 78,
          "column": 4
        },
        "end": {
          "line": 96,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the types of the item."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map[]} Array of types of the item. A type has the keys 'type' and 'dimensions', where\ndimensions is the number of array dimensions (eg \"Integer[][]\" has a type of \"Integer\" and\ndimensions of 2, and \"Integer\" has type if \"Integer\" but dimensions is undefined",
            "type": "Map[]",
            "description": " Array of types of the item. A type has the keys 'type' and 'dimensions', where\ndimensions is the number of array dimensions (eg \"Integer[][]\" has a type of \"Integer\" and\ndimensions of 2, and \"Integer\" has type if \"Integer\" but dimensions is undefined"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSee": {
      "location": {
        "start": {
          "line": 104,
          "column": 4
        },
        "end": {
          "line": 107,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get all references declared using the \"see\" attribute."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String[]} A list of all references declared using the \"see\" attribute.",
            "type": "String[]",
            "description": " A list of all references declared using the \"see\" attribute."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getOverriddenFrom": {
      "location": {
        "start": {
          "line": 115,
          "column": 4
        },
        "end": {
          "line": 118,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "If the item is overwridden from one of the super classes, get the item, which is overwridden."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{ClassItem} the overwridden class item",
            "type": "qxl.apiviewer.dao.ClassItem",
            "description": " the overwridden class item"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isRequiredByInterface": {
      "location": {
        "start": {
          "line": 127,
          "column": 4
        },
        "end": {
          "line": 129,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks whether the node is required by the given interface."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ifaceNode {qxl.apiviewer.dao.Class} interface to check for",
            "paramName": "ifaceNode",
            "description": " interface to check for",
            "type": "qxl.apiviewer.dao.Class"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the item is required by the interface.",
            "type": "Boolean",
            "description": " whether the item is required by the interface."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getRequiredBy": {
      "location": {
        "start": {
          "line": 137,
          "column": 4
        },
        "end": {
          "line": 153,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the interface this item is required by."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Class} The interface this item is required by.",
            "type": "qxl.apiviewer.dao.Class",
            "description": " The interface this item is required by."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "reset"
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 163,
        "column": 2
      },
      "end": {
        "line": 167,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nDESTRUCTOR\n****************************************************************************"
        }
      ]
    }
  },
  "descendants": [
    "qxl.apiviewer.dao.Method",
    "qxl.apiviewer.dao.Constant",
    "qxl.apiviewer.dao.Property",
    "qxl.apiviewer.dao.Event",
    "qxl.apiviewer.dao.ChildControl"
  ]
}