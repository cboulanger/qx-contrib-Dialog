{
  "className": "qxl.apiviewer.dao.Class",
  "packageName": "qxl.apiviewer.dao",
  "name": "Class",
  "superClass": "qxl.apiviewer.dao.Node",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0
      },
      "end": {
        "line": 713,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n2018 Zenesis Limited, http://www.zenesis.com\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nJohn Spackman (johnspackman)\nFabian Jakobs (fjakobs)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "This Class wraps the access to the documentation data of classes."
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 32,
        "column": 2
      },
      "end": {
        "line": 38,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "classDocNode\n{Map} class documentation node",
          "paramName": "classDocNode",
          "description": " class documentation node",
          "type": "Map"
        }
      ]
    }
  },
  "members": {
    "_package": {
      "location": {
        "start": {
          "line": 41,
          "column": 4
        },
        "end": {
          "line": 41,
          "column": 18
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_construct": {
      "location": {
        "start": {
          "line": 42,
          "column": 4
        },
        "end": {
          "line": 42,
          "column": 20
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_destruct": {
      "location": {
        "start": {
          "line": 43,
          "column": 4
        },
        "end": {
          "line": 43,
          "column": 19
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_defer": {
      "location": {
        "start": {
          "line": 44,
          "column": 4
        },
        "end": {
          "line": 44,
          "column": 16
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_staticMethods": {
      "location": {
        "start": {
          "line": 45,
          "column": 4
        },
        "end": {
          "line": 45,
          "column": 24
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_constants": {
      "location": {
        "start": {
          "line": 46,
          "column": 4
        },
        "end": {
          "line": 46,
          "column": 20
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_members": {
      "location": {
        "start": {
          "line": 47,
          "column": 4
        },
        "end": {
          "line": 47,
          "column": 18
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_mixinMembers": {
      "location": {
        "start": {
          "line": 48,
          "column": 4
        },
        "end": {
          "line": 48,
          "column": 23
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_properties": {
      "location": {
        "start": {
          "line": 49,
          "column": 4
        },
        "end": {
          "line": 49,
          "column": 21
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_mixinProperties": {
      "location": {
        "start": {
          "line": 50,
          "column": 4
        },
        "end": {
          "line": 50,
          "column": 26
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_events": {
      "location": {
        "start": {
          "line": 51,
          "column": 4
        },
        "end": {
          "line": 51,
          "column": 17
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_mixinEvents": {
      "location": {
        "start": {
          "line": 52,
          "column": 4
        },
        "end": {
          "line": 52,
          "column": 22
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_superClass": {
      "location": {
        "start": {
          "line": 53,
          "column": 4
        },
        "end": {
          "line": 53,
          "column": 21
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_superInterfaces": {
      "location": {
        "start": {
          "line": 54,
          "column": 4
        },
        "end": {
          "line": 54,
          "column": 26
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_superMixins": {
      "location": {
        "start": {
          "line": 55,
          "column": 4
        },
        "end": {
          "line": 55,
          "column": 22
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_mixins": {
      "location": {
        "start": {
          "line": 56,
          "column": 4
        },
        "end": {
          "line": 56,
          "column": 17
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_loadingPromise": {
      "location": {
        "start": {
          "line": 58,
          "column": 4
        },
        "end": {
          "line": 58,
          "column": 25
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_loaded": {
      "location": {
        "start": {
          "line": 59,
          "column": 4
        },
        "end": {
          "line": 59,
          "column": 18
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "load": {
      "location": {
        "start": {
          "line": 66,
          "column": 4
        },
        "end": {
          "line": 83,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Loads the class"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Promise}",
            "type": "Promise",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isLoaded": {
      "location": {
        "start": {
          "line": 85,
          "column": 4
        },
        "end": {
          "line": 87,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "_initMeta": {
      "location": {
        "start": {
          "line": 94,
          "column": 4
        },
        "end": {
          "line": 187,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Loads meta data, including super classes/interfaces/mixins"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.Promise}",
            "type": "qx.Promise",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "appearsIn": [
        "qxl.apiviewer.dao.Node"
      ]
    },
    "getPackage": {
      "location": {
        "start": {
          "line": 189,
          "column": 4
        },
        "end": {
          "line": 191,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "getName": {
      "location": {
        "start": {
          "line": 198,
          "column": 4
        },
        "end": {
          "line": 200,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the name of the class."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} name of the class",
            "type": "String",
            "description": " name of the class"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getFullName": {
      "location": {
        "start": {
          "line": 208,
          "column": 4
        },
        "end": {
          "line": 210,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the full name of the class, including the package name."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} full name of the class",
            "type": "String",
            "description": " full name of the class"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getPackageName": {
      "location": {
        "start": {
          "line": 218,
          "column": 4
        },
        "end": {
          "line": 220,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the package name of the class."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} package name of the class",
            "type": "String",
            "description": " package name of the class"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getType": {
      "location": {
        "start": {
          "line": 229,
          "column": 4
        },
        "end": {
          "line": 231,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get type of the class. Valid types are \"class\", \"interface\" and \"mixin\"."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The type of the class. Valid types are \"class\",\n\"interface\" and \"mixin\".",
            "type": "String",
            "description": " The type of the class. Valid types are \"class\",\n\"interface\" and \"mixin\"."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isAbstract": {
      "location": {
        "start": {
          "line": 239,
          "column": 4
        },
        "end": {
          "line": 241,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get whether the class is abstract."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the class is abstract.",
            "type": "Boolean",
            "description": " Whether the class is abstract."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isStatic": {
      "location": {
        "start": {
          "line": 249,
          "column": 4
        },
        "end": {
          "line": 251,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get whether the class is a static class."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the class is static.",
            "type": "Boolean",
            "description": " Whether the class is static."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isSingleton": {
      "location": {
        "start": {
          "line": 259,
          "column": 4
        },
        "end": {
          "line": 261,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get whether the class is a singleton."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the class is a singleton.",
            "type": "Boolean",
            "description": " Whether the class is a singleton."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSuperClass": {
      "location": {
        "start": {
          "line": 269,
          "column": 4
        },
        "end": {
          "line": 271,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the super class of the class."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Class} The super class of the class.",
            "type": "qxl.apiviewer.dao.Class",
            "description": " The super class of the class."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getChildClasses": {
      "location": {
        "start": {
          "line": 280,
          "column": 4
        },
        "end": {
          "line": 288,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the direct child classes of the class."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.Promise(qxl.apiviewer.dao.Class[])} A list of direct child classes of the\nclass.",
            "type": "qx.Promise(qxl.apiviewer.dao.Class[])",
            "description": " A list of direct child classes of the\nclass."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getInterfaces": {
      "location": {
        "start": {
          "line": 297,
          "column": 4
        },
        "end": {
          "line": 299,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get all interfaces declared at the class declaration."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Class[]} All interfaces declared at the class\ndeclaration.",
            "type": "qxl.apiviewer.dao.Class[]",
            "description": " All interfaces declared at the class\ndeclaration."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSuperInterfaces": {
      "location": {
        "start": {
          "line": 306,
          "column": 4
        },
        "end": {
          "line": 308,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get all super interfaces. (Only for interfaces)"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Class[]} All super interfaces.",
            "type": "qxl.apiviewer.dao.Class[]",
            "description": " All super interfaces."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getMixins": {
      "location": {
        "start": {
          "line": 316,
          "column": 4
        },
        "end": {
          "line": 318,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get all mixins declared at the class declaration."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Class[]} All mixins declared at the class\ndeclaration.",
            "type": "qxl.apiviewer.dao.Class[]",
            "description": " All mixins declared at the class\ndeclaration."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSuperMixins": {
      "location": {
        "start": {
          "line": 325,
          "column": 4
        },
        "end": {
          "line": 327,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get all super mixins. (Only for mixins)"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Class[]} All super mixins.",
            "type": "qxl.apiviewer.dao.Class[]",
            "description": " All super mixins."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getIncluder": {
      "location": {
        "start": {
          "line": 334,
          "column": 4
        },
        "end": {
          "line": 342,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get all classes including this mixin. (Only for mixins)"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.Promise(qxl.apiviewer.dao.Class[])} All classes including this mixin.",
            "type": "qx.Promise(qxl.apiviewer.dao.Class[])",
            "description": " All classes including this mixin."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getImplementations": {
      "location": {
        "start": {
          "line": 349,
          "column": 4
        },
        "end": {
          "line": 357,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get all implementations of this interface. (Only for interfaces)"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.Promise(qxl.apiviewer.dao.Class[])} All implementations of this interface.",
            "type": "qx.Promise(qxl.apiviewer.dao.Class[])",
            "description": " All implementations of this interface."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getConstructor": {
      "location": {
        "start": {
          "line": 364,
          "column": 4
        },
        "end": {
          "line": 366,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the constructor of the class."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Method} The constructor of the class.",
            "type": "qxl.apiviewer.dao.Method",
            "description": " The constructor of the class."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getChildControls": {
      "location": {
        "start": {
          "line": 374,
          "column": 4
        },
        "end": {
          "line": 376,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get all child controls"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.ChildControl[]} All child controls.",
            "type": "qxl.apiviewer.dao.ChildControl[]",
            "description": " All child controls."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getMembers": {
      "location": {
        "start": {
          "line": 384,
          "column": 4
        },
        "end": {
          "line": 386,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the members of the class."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Method[]} The members of the class.",
            "type": "qxl.apiviewer.dao.Method[]",
            "description": " The members of the class."
          }
        ],
        "@deprecated": [
          {
            "name": "@deprecated",
            "body": "Is this used any more????"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getMethods": {
      "location": {
        "start": {
          "line": 393,
          "column": 4
        },
        "end": {
          "line": 395,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the members of the class."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Method[]} The members of the class.",
            "type": "qxl.apiviewer.dao.Method[]",
            "description": " The members of the class."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getMixinMembers": {
      "location": {
        "start": {
          "line": 403,
          "column": 4
        },
        "end": {
          "line": 405,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the members of the class, contributed from mixins"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Method[]} The members of the class.",
            "type": "qxl.apiviewer.dao.Method[]",
            "description": " The members of the class."
          }
        ],
        "@deprecated": [
          {
            "name": "@deprecated",
            "body": "Is this used any more????"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getMixinMethods": {
      "location": {
        "start": {
          "line": 412,
          "column": 4
        },
        "end": {
          "line": 414,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the members of the class, contributed from mixins"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Method[]} The members of the class.",
            "type": "qxl.apiviewer.dao.Method[]",
            "description": " The members of the class."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getStatics": {
      "location": {
        "start": {
          "line": 421,
          "column": 4
        },
        "end": {
          "line": 423,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the statics of the class."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Method[]} The statics of the class.",
            "type": "qxl.apiviewer.dao.Method[]",
            "description": " The statics of the class."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getEvents": {
      "location": {
        "start": {
          "line": 430,
          "column": 4
        },
        "end": {
          "line": 432,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the events of the class."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Event[]} The events of the class.",
            "type": "qxl.apiviewer.dao.Event[]",
            "description": " The events of the class."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getMixinEvents": {
      "location": {
        "start": {
          "line": 439,
          "column": 4
        },
        "end": {
          "line": 441,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the events of the class, contributed from mixins"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Event[]} The events of the class.",
            "type": "qxl.apiviewer.dao.Event[]",
            "description": " The events of the class."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getProperties": {
      "location": {
        "start": {
          "line": 448,
          "column": 4
        },
        "end": {
          "line": 450,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the properties of the class."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Property[]} The properties of the class.",
            "type": "qxl.apiviewer.dao.Property[]",
            "description": " The properties of the class."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getProperty": {
      "location": {
        "start": {
          "line": 457,
          "column": 4
        },
        "end": {
          "line": 464,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns a property with a given name"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Property} The named property",
            "type": "qxl.apiviewer.dao.Property",
            "description": " The named property"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getMixinProperties": {
      "location": {
        "start": {
          "line": 471,
          "column": 4
        },
        "end": {
          "line": 473,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the properties of the class, contributed from mixins"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Property[]} The properties of the class.",
            "type": "qxl.apiviewer.dao.Property[]",
            "description": " The properties of the class."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getConstants": {
      "location": {
        "start": {
          "line": 480,
          "column": 4
        },
        "end": {
          "line": 482,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the constants of the class."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Constant[]} The constants of the class.",
            "type": "qxl.apiviewer.dao.Constant[]",
            "description": " The constants of the class."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSee": {
      "location": {
        "start": {
          "line": 489,
          "column": 4
        },
        "end": {
          "line": 491,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get all references declared using the \"see\" attribute."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String[]} A list of all references declared using the \"see\" attribute.",
            "type": "String[]",
            "description": " A list of all references declared using the \"see\" attribute."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getErrors": {
      "location": {
        "start": {
          "line": 493,
          "column": 4
        },
        "end": {
          "line": 495,
          "column": 5
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "appearsIn": [
        "qxl.apiviewer.dao.Node"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{Map[]} errors of this item.",
            "type": "Map[]",
            "description": " errors of this item."
          }
        ]
      }
    },
    "getClassHierarchy": {
      "location": {
        "start": {
          "line": 508,
          "column": 4
        },
        "end": {
          "line": 520,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "COMPLEX FUNCTIONS"
          },
          {
            "name": "@description",
            "body": "Get the documentation nodes of all classes in the inheritance chain of a\nclass. The first entry in the list is the class itself."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "includeNativeObjects\n{Boolean} true if you want to get native JS objects too",
            "paramName": "includeNativeObjects",
            "description": " true if you want to get native JS objects too",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Class[]} array of super classes of the given\nclass.",
            "type": "qxl.apiviewer.dao.Class[]",
            "description": " array of super classes of the given\nclass."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getInterfaceHierarchy": {
      "location": {
        "start": {
          "line": 530,
          "column": 4
        },
        "end": {
          "line": 541,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the documentation nodes of all interfaces in the inheritance chain of\nan interface. The first entry in the list is the interface itself."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Class[]} array of super interfaces of the given\ninterface.",
            "type": "qxl.apiviewer.dao.Class[]",
            "description": " array of super interfaces of the given\ninterface."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAllInterfaces": {
      "location": {
        "start": {
          "line": 550,
          "column": 4
        },
        "end": {
          "line": 562,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns a list of all interfaces the class implements directly."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "includeSuperClasses\n{Boolean?false} Whether the interfaces of all super classes\nshould be returned as well.",
            "paramName": "includeSuperClasses",
            "description": " Whether the interfaces of all super classes\nshould be returned as well.",
            "optional": true,
            "defaultValue": "false",
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getItemByNameFromMixins": {
      "location": {
        "start": {
          "line": 572,
          "column": 4
        },
        "end": {
          "line": 577,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Return a class item matching the given name."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "itemName\n{String} name of the class item",
            "paramName": "itemName",
            "description": " name of the class item",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.ClassItem} the class item.",
            "type": "qxl.apiviewer.dao.ClassItem",
            "description": " the class item."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getItem": {
      "location": {
        "start": {
          "line": 585,
          "column": 4
        },
        "end": {
          "line": 608,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Return a class item matching the given name."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "itemName {String} name of the class item",
            "paramName": "itemName",
            "description": " name of the class item",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.ClassItem} the class item.",
            "type": "qxl.apiviewer.dao.ClassItem",
            "description": " the class item."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "loadDependedClasses": {
      "location": {
        "start": {
          "line": 610,
          "column": 4
        },
        "end": {
          "line": 612,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "getDependedClasses": {
      "location": {
        "start": {
          "line": 621,
          "column": 4
        },
        "end": {
          "line": 642,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Return a list of all classes, mixins and interfaces this class depends\non. This includes all super classes and their mixins/interfaces and the\nclass itself."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.Promise(Class[])} array of dependent classes.",
            "type": "qx.Promise(Class[])",
            "description": " array of dependent classes."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    }
  },
  "statics": {
    "_native_classes": {
      "location": {
        "start": {
          "line": 646,
          "column": 4
        },
        "end": {
          "line": 649,
          "column": 5
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "getClassByName": {
      "location": {
        "start": {
          "line": 658,
          "column": 4
        },
        "end": {
          "line": 673,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get a class documentation by the class name."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "className\n{String} name of the class",
            "paramName": "className",
            "description": " name of the class",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Class} The class documentation",
            "type": "qxl.apiviewer.dao.Class",
            "description": " The class documentation"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getClassesByName": {
      "location": {
        "start": {
          "line": 683,
          "column": 4
        },
        "end": {
          "line": 687,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get a class documentation by the class name."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "className\n{String} name of the class",
            "paramName": "className",
            "description": " name of the class",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Class} The class documentation",
            "type": "qxl.apiviewer.dao.Class",
            "description": " The class documentation"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "findClasses": {
      "location": {
        "start": {
          "line": 690,
          "column": 4
        },
        "end": {
          "line": 697,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "isNativeObject": {
      "location": {
        "start": {
          "line": 708,
          "column": 4
        },
        "end": {
          "line": 710,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks if the Class is a qooxdoo qxl.apiviewer.dao.Class Object or a native\none"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "clazz\n{qxl.apiviewer.dao.Class} the object to be checked",
            "paramName": "clazz",
            "description": " the object to be checked",
            "type": "qxl.apiviewer.dao.Class"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true if it is a JS native object",
            "type": "Boolean",
            "description": " true if it is a JS native object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}