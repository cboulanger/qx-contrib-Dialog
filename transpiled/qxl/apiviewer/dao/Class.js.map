{
  "version": 3,
  "sources": [
    "contrib/qooxdoo_qxl.apiviewer_v0.1.12/source/class/qxl/apiviewer/dao/Class.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "apiviewer",
    "dao",
    "Node",
    "construct",
    "className",
    "_className",
    "_package",
    "Package",
    "getParentPackage",
    "addClass",
    "members",
    "_construct",
    "_destruct",
    "_defer",
    "_staticMethods",
    "_constants",
    "_members",
    "_mixinMembers",
    "_properties",
    "_mixinProperties",
    "_events",
    "_mixinEvents",
    "_superClass",
    "_superInterfaces",
    "_superMixins",
    "_mixins",
    "_loadingPromise",
    "_loaded",
    "load",
    "url",
    "ClassLoader",
    "getBaseUri",
    "replace",
    "RequestUtil",
    "get",
    "then",
    "meta",
    "eval",
    "content",
    "_initMeta",
    "catch",
    "error",
    "e",
    "Message",
    "isLoaded",
    "_jsdoc",
    "clazz",
    "jsdoc",
    "Method",
    "destruct",
    "defer",
    "statics",
    "name",
    "data",
    "type",
    "push",
    "Constant",
    "obj",
    "mixin",
    "properties",
    "Property",
    "events",
    "Event",
    "_childControls",
    "arr",
    "forEach",
    "ChildControl",
    "elem",
    "all",
    "findClasses",
    "tmp",
    "item",
    "_meta",
    "superClass",
    "_interfaces",
    "interfaces",
    "mixins",
    "Promise",
    "getPackage",
    "getName",
    "getFullName",
    "getPackageName",
    "getType",
    "isAbstract",
    "isStatic",
    "isSingleton",
    "getSuperClass",
    "getChildClasses",
    "_childClassesPromise",
    "descendants",
    "resolve",
    "getInterfaces",
    "getSuperInterfaces",
    "getMixins",
    "getSuperMixins",
    "getIncluder",
    "_includersPromise",
    "getImplementations",
    "_implementationsPromise",
    "getConstructor",
    "getChildControls",
    "getMembers",
    "getMethods",
    "getMixinMembers",
    "getMixinMethods",
    "getStatics",
    "getEvents",
    "getMixinEvents",
    "getProperties",
    "getProperty",
    "i",
    "length",
    "prop",
    "getMixinProperties",
    "getConstants",
    "getSee",
    "map",
    "body",
    "getErrors",
    "getClassHierarchy",
    "includeNativeObjects",
    "result",
    "currentClass",
    "isNative",
    "isNativeObject",
    "getInterfaceHierarchy",
    "add",
    "itf",
    "getAllInterfaces",
    "includeSuperClasses",
    "interfaceNodes",
    "ifaceRecurser",
    "ifaceNode",
    "classNodes",
    "classNode",
    "getItemByNameFromMixins",
    "itemName",
    "getItem",
    "itemListNames",
    "list",
    "j",
    "loadDependedClasses",
    "loadClassList",
    "getDependedClasses",
    "foundClasses",
    "_native_classes",
    "Array",
    "Boolean",
    "Date",
    "Error",
    "Function",
    "Math",
    "Number",
    "Object",
    "RegExp",
    "String",
    "getClassByName",
    "create",
    "nativeClass",
    "undefined",
    "pkg",
    "cls",
    "getClassesByName",
    "classNames",
    "lang",
    "toNativeArray",
    "filter",
    "classname"
  ],
  "mappings": "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",
  "file": "Class.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (johnspackman)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This Class wraps the access to the documentation data of classes.\n */\nqx.Class.define(\"qxl.apiviewer.dao.Class\",\n{\n  extend : qxl.apiviewer.dao.Node,\n\n  /**\n   * @param classDocNode\n   *          {Map} class documentation node\n   */\n  construct : function(className)\n  {\n    this.base(arguments);\n    this._className = className;\n    this._package = qxl.apiviewer.dao.Package.getParentPackage(className);\n    this._package.addClass(this);\n  },\n\n  members : {\n    _package: null,\n    _construct: null,\n    _destruct: null,\n    _defer: null,\n    _staticMethods: null,\n    _constants: null,\n    _members: null,\n    _mixinMembers: null,\n    _properties: null,\n    _mixinProperties: null,\n    _events: null,\n    _mixinEvents: null,\n    _superClass: null,\n    _superInterfaces: null,\n    _superMixins: null,\n    _mixins: null,\n    \n    _loadingPromise: null,\n    _loaded: false,\n    \n    /**\n     * Loads the class\n     * \n     * @return {Promise}\n     */\n    load: function() {\n      if (this._loadingPromise)\n        return this._loadingPromise;\n      \n      var url = qxl.apiviewer.ClassLoader.getBaseUri() + \"/transpiled/\" + this._className.replace(/\\./g, '/') + \".json\";\n      return this._loadingPromise = qxl.apiviewer.RequestUtil.get(url)\n        .then(content => {\n          var meta = eval(\"(\" + content + \")\");\n          return this._initMeta(meta)\n            .then(() => {\n              this._loaded = true;\n              return this;\n            });\n        })\n        .catch(e => {\n          this.error(\"Couldn't load file: \" + url + \" \" + e.Message);\n        })  \n    },\n    \n    isLoaded: function() {\n      return this._loaded;\n    },\n  \n    /**\n     * Loads meta data, including super classes/interfaces/mixins\n     * \n     * @return {qx.Promise}\n     */\n    _initMeta: function(meta) {\n      this.base(arguments, meta);\n      \n      this._jsdoc = meta.clazz.jsdoc || {};\n      \n      this._construct = meta.construct ? [ new qxl.apiviewer.dao.Method(meta.construct, this, \"construct\") ] : [];\n      this._destruct = meta.destruct ? [ new qxl.apiviewer.dao.Method(meta.destruct, this, \"destruct\") ] : [];\n      this._defer = meta.defer ? [ new qxl.apiviewer.dao.Method(meta.defer, this, \"defer\") ] : [];\n      \n      this._staticMethods = [];\n      this._constants = [];\n      if (meta.statics) {\n        for (let name in meta.statics) {\n          let data = meta.statics[name];\n          if (data.type == \"variable\") {\n            this._constants.push(new qxl.apiviewer.dao.Constant(data, this, name));\n          } else {\n            this._staticMethods.push(new qxl.apiviewer.dao.Method(data, this, name));\n          }\n        }\n      }\n      \n      this._members = [];\n      this._mixinMembers = [];\n      if (meta.members) {\n        for (let name in meta.members) {\n          let data = meta.members[name];\n          if (data.type == \"function\") {\n            let obj = new qxl.apiviewer.dao.Method(data, this, name);\n            if (data.mixin)\n              this._mixinMembers.push(obj);\n            else\n              this._members.push(obj);\n          }\n        }\n      }\n      \n      this._properties = [];\n      this._mixinProperties = [];\n      if (meta.properties) {\n        for (let name in meta.properties) {\n          let data = meta.properties[name];\n          let obj = new qxl.apiviewer.dao.Property(data, this, name);\n          if (data.mixin)\n            this._mixinProperties.push(obj);\n          else\n            this._properties.push(obj);\n        }\n      }\n      \n      this._events = [];\n      this._mixinEvents = [];\n      if (meta.events) {\n        for (let name in meta.events) {\n          let data = meta.events[name];\n          let obj = new qxl.apiviewer.dao.Event(data, this);\n          if (data.mixin)\n            this._mixinEvents.push(obj);\n          else\n            this._events.push(obj);\n        }\n      }\n      \n      this._childControls = [];\n      let arr = this._jsdoc[\"@childControl\"];\n      if (arr) {\n        arr.forEach(elem => {\n          this._childControls.push(new qxl.apiviewer.dao.ChildControl(elem, this));\n        });\n      }\n      \n      var all = [];\n      function findClasses(tmp) {\n        return qxl.apiviewer.dao.Class.findClasses(tmp).forEach(item => all.push(item));\n      }\n      \n      this._superClass = null;\n      this._superInterfaces = [];\n      this._superMixins = [];\n      if (this._meta.type == \"interface\") {\n        all.push(findClasses(meta.superClass).then(arr => this._superInterfaces = arr));\n      } else if (this._meta.type == \"mixin\") {\n        all.push(findClasses(meta.superClass).then(arr => this._superMixins = arr));\n      } else {\n        all.push(findClasses(meta.superClass).then(arr => this._superClass = arr[0] || null ));\n      }\n      \n      this._interfaces = [];\n      findClasses(meta.interfaces).then(arr => this._interfaces = arr);\n      this._mixins = [];\n      findClasses(meta.mixins).then(arr => this._mixins = arr);\n      \n      return qx.Promise.all(all)\n    },\n    \n    getPackage : function() {\n      return this._package;\n    },\n\n    /**\n     * Get the name of the class.\n     * \n     * @return {String} name of the class\n     */\n    getName : function() {\n      return this._className;\n    },\n\n\n    /**\n     * Get the full name of the class, including the package name.\n     * \n     * @return {String} full name of the class\n     */\n    getFullName : function() {\n      return this._className;\n    },\n\n\n    /**\n     * Get the package name of the class.\n     * \n     * @return {String} package name of the class\n     */\n    getPackageName : function() {\n      return this._package.getFullName();\n    },\n\n\n    /**\n     * Get type of the class. Valid types are \"class\", \"interface\" and \"mixin\".\n     * \n     * @return {String} The type of the class. Valid types are \"class\",\n     *         \"interface\" and \"mixin\".\n     */\n    getType : function() {\n      return this._meta.type;\n    },\n\n\n    /**\n     * Get whether the class is abstract.\n     * \n     * @return {Boolean} Whether the class is abstract.\n     */\n    isAbstract : function() {\n      return this._meta.isAbstract || false;\n    },\n\n\n    /**\n     * Get whether the class is a static class.\n     * \n     * @return {Boolean} Whether the class is static.\n     */\n    isStatic : function() {\n      return this._meta.isStatic || false;\n    },\n\n\n    /**\n     * Get whether the class is a singleton.\n     * \n     * @return {Boolean} Whether the class is a singleton.\n     */\n    isSingleton : function() {\n      return this._meta.isSingleton || false;\n    },\n\n\n    /**\n     * Get the super class of the class.\n     * \n     * @return {qxl.apiviewer.dao.Class} The super class of the class.\n     */\n    getSuperClass : function() {\n      return this._superClass;\n    },\n    \n\n    /**\n     * Get the direct child classes of the class.\n     * \n     * @return {qx.Promise(qxl.apiviewer.dao.Class[])} A list of direct child classes of the\n     *         class.\n     */\n    getChildClasses : function() {\n      if (!this._childClassesPromise) {\n        if (this._meta.type == \"class\")\n          this._childClassesPromise = qxl.apiviewer.dao.Class.findClasses(this._meta.descendants);\n        else\n          this._childClassesPromise = qx.Promise.resolve([]);\n      }\n      return this._childClassesPromise; \n    },\n    \n\n    /**\n     * Get all interfaces declared at the class declaration.\n     * \n     * @return {qxl.apiviewer.dao.Class[]} All interfaces declared at the class\n     *         declaration.\n     */\n    getInterfaces : function() {\n      return this._interfaces;\n    },\n\n    /**\n     * Get all super interfaces. (Only for interfaces)\n     * \n     * @return {qxl.apiviewer.dao.Class[]} All super interfaces.\n     */\n    getSuperInterfaces : function() {\n      return this._superInterfaces; \n    },\n\n    /**\n     * Get all mixins declared at the class declaration.\n     * \n     * @return {qxl.apiviewer.dao.Class[]} All mixins declared at the class\n     *         declaration.\n     */\n    getMixins : function() {\n      return this._mixins; \n    },\n\n    /**\n     * Get all super mixins. (Only for mixins)\n     * \n     * @return {qxl.apiviewer.dao.Class[]} All super mixins.\n     */\n    getSuperMixins : function() {\n      return this._superMixins;\n    },\n\n    /**\n     * Get all classes including this mixin. (Only for mixins)\n     * \n     * @return {qx.Promise(qxl.apiviewer.dao.Class[])} All classes including this mixin.\n     */\n    getIncluder : function() {\n      if (!this._includersPromise) {\n        if (this._meta.type == \"mixin\")\n          this._includersPromise = qxl.apiviewer.dao.Class.findClasses(this._meta.descendants);\n        else\n          this._includersPromise = qx.Promise.resolve([]);\n      }\n      return this._includersPromise; \n    },\n\n    /**\n     * Get all implementations of this interface. (Only for interfaces)\n     * \n     * @return {qx.Promise(qxl.apiviewer.dao.Class[])} All implementations of this interface.\n     */\n    getImplementations : function() {\n      if (!this._implementationsPromise) {\n        if (this._meta.type == \"interface\")\n          this._implementationsPromise = qxl.apiviewer.dao.Class.findClasses(this._meta.descendants);\n        else\n          this._implementationsPromise = qx.Promise.resolve([]);\n      }\n      return this._implementationsPromise; \n    },\n\n    /**\n     * Get the constructor of the class.\n     * \n     * @return {qxl.apiviewer.dao.Method} The constructor of the class.\n     */\n    getConstructor : function() {\n      return this._construct;\n    },\n\n\n    /**\n     * Get all child controls\n     * \n     * @return {qxl.apiviewer.dao.ChildControl[]} All child controls.\n     */\n    getChildControls : function() {\n      return this._childControls;\n    },\n\n    /**\n     * Get the members of the class.\n     * \n     * @return {qxl.apiviewer.dao.Method[]} The members of the class.\n     * @deprecated Is this used any more????\n     */\n    getMembers : function() {\n      return this._members;\n    },\n\n    /**\n     * Get the members of the class.\n     * \n     * @return {qxl.apiviewer.dao.Method[]} The members of the class.\n     */\n    getMethods: function() {\n      return this._members;\n    },\n\n    /**\n     * Get the members of the class, contributed from mixins\n     * \n     * @return {qxl.apiviewer.dao.Method[]} The members of the class.\n     * @deprecated Is this used any more????\n     */\n    getMixinMembers : function() {\n      return this._mixinMembers;\n    },\n\n    /**\n     * Get the members of the class, contributed from mixins\n     * \n     * @return {qxl.apiviewer.dao.Method[]} The members of the class.\n     */\n    getMixinMethods: function() {\n      return this._mixinMembers;\n    },\n\n    /**\n     * Get the statics of the class.\n     * \n     * @return {qxl.apiviewer.dao.Method[]} The statics of the class.\n     */\n    getStatics : function() {\n      return this._staticMethods;\n    },\n\n    /**\n     * Get the events of the class.\n     * \n     * @return {qxl.apiviewer.dao.Event[]} The events of the class.\n     */\n    getEvents : function() {\n      return this._events;\n    },\n\n    /**\n     * Get the events of the class, contributed from mixins\n     * \n     * @return {qxl.apiviewer.dao.Event[]} The events of the class.\n     */\n    getMixinEvents : function() {\n      return this._mixinEvents;\n    },\n\n    /**\n     * Get the properties of the class.\n     * \n     * @return {qxl.apiviewer.dao.Property[]} The properties of the class.\n     */\n    getProperties : function() {\n      return this._properties;\n    },\n    \n    /**\n     * Returns a property with a given name\n     * \n     * @return {qxl.apiviewer.dao.Property} The named property\n     */\n    getProperty: function(name) {\n      for (var i = 0; i < this._properties.length; i++) {\n        var prop = this._properties[i];\n        if (prop.getName() == name)\n          return prop;\n      }\n      return null;\n    },\n\n    /**\n     * Get the properties of the class, contributed from mixins\n     * \n     * @return {qxl.apiviewer.dao.Property[]} The properties of the class.\n     */\n    getMixinProperties : function() {\n      return this._mixinProperties;\n    },\n\n    /**\n     * Get the constants of the class.\n     * \n     * @return {qxl.apiviewer.dao.Constant[]} The constants of the class.\n     */\n    getConstants : function() {\n      return this._constants;\n    },\n\n    /**\n     * Get all references declared using the \"see\" attribute.\n     *\n     * @return {String[]} A list of all references declared using the \"see\" attribute.\n     */\n    getSee : function() {\n      return (this._jsdoc[\"@see\"]||[]).map(item => item.body);\n    },\n    \n    getErrors: function() {\n      return [];\n    },\n    \n    /* COMPLEX FUNCTIONS */\n\n    /**\n     * Get the documentation nodes of all classes in the inheritance chain of a\n     * class. The first entry in the list is the class itself.\n     * \n     * @param includeNativeObjects\n     *          {Boolean} true if you want to get native JS objects too\n     * @return {qxl.apiviewer.dao.Class[]} array of super classes of the given\n     *         class.\n     */\n    getClassHierarchy : function(includeNativeObjects) {\n      var result = [];\n      for (var currentClass = this; currentClass; currentClass = currentClass.getSuperClass()) {\n        var isNative = qxl.apiviewer.dao.Class.isNativeObject(currentClass);\n        if (!isNative || includeNativeObjects) {\n          result.push(currentClass);\n        }\n        if (isNative) {\n          break;\n        }\n      }\n      return result;\n    },\n\n\n    /**\n     * Get the documentation nodes of all interfaces in the inheritance chain of\n     * an interface. The first entry in the list is the interface itself.\n     * \n     * @return {qxl.apiviewer.dao.Class[]} array of super interfaces of the given\n     *         interface.\n     */\n    getInterfaceHierarchy : function() {\n      var currentClass = this;\n      var result = [];\n      \n      function add(currentClass) {\n        result.push(currentClass);\n        currentClass.getSuperInterfaces().forEach(itf => add(itf));\n      }\n      add(this);\n\n      return result;\n    },\n\n    /**\n     * Returns a list of all interfaces the class implements directly.\n     * \n     * @param includeSuperClasses\n     *          {Boolean?false} Whether the interfaces of all super classes\n     *          should be returned as well.\n     */\n    getAllInterfaces : function(includeSuperClasses) {\n      var interfaceNodes = [];\n\n      let ifaceRecurser = ifaceNode => {\n        interfaceNodes.push(ifaceNode);\n        ifaceNode.getSuperInterfaces().forEach(ifaceRecurser);\n      }\n\n      var classNodes = includeSuperClasses ? this.getClassHierarchy() : [this];\n      classNodes.forEach(classNode => classNode.getInterfaces().forEach(ifaceRecurser));\n      \n      return interfaceNodes;\n    },\n\n\n    /**\n     * Return a class item matching the given name.\n     * \n     * @param itemName\n     *          {String} name of the class item\n     * @return {qxl.apiviewer.dao.ClassItem} the class item.\n     */\n    getItemByNameFromMixins : function(itemName) {\n      return this._mixinMembers[itemName] ||\n        this._mixinProperties[itemName] ||\n        this._mixinEvents[itemName] ||\n        null;\n    },\n\n    /**\n     * Return a class item matching the given name.\n     *\n     * @param itemName {String} name of the class item\n     * @return {qxl.apiviewer.dao.ClassItem} the class item.\n     */\n    getItem : function(itemName) {\n      var itemListNames = [\n        \"getMembers\",\n        \"getStatics\",\n        \"getEvents\",\n        \"getProperties\",\n        \"getConstants\",\n        //\"getAppearances\",\n        \"getChildControls\"\n      ];\n\n      for (var i = 0; i < itemListNames.length; i++) {\n        var list = this[itemListNames[i]]();\n        if (list) {\n          for (var j = 0; j < list.length; j++) {\n            if (itemName == list[j].getName()) {\n              return list[j];\n            }\n          }\n        }\n      }\n      \n      return null;\n    },\n    \n    loadDependedClasses: function() {\n      return qxl.apiviewer.ClassLoader.loadClassList(this.getDependedClasses());\n    },\n\n    /**\n     * Return a list of all classes, mixins and interfaces this class depends\n     * on. This includes all super classes and their mixins/interfaces and the\n     * class itself.\n     * \n     * @return {qx.Promise(Class[])} array of dependent classes.\n     */\n    getDependedClasses : function() {\n      let foundClasses = [];\n      \n      function findClasses(clazz) {\n        if (qxl.apiviewer.dao.Class.isNativeObject(clazz)) {\n          return;\n        }\n        return clazz.load().then(() => {\n          \n        });\n\n        foundClasses.push(clazz);\n        clazz.getSuperClass() && findClasses(clazz.getSuperClass());\n        clazz.getMixins().forEach(mixin => findClasses);\n        clazz.getSuperMixins().forEach(mixin => findClasses);\n        clazz.getInterfaces().forEach(mixin => findClasses);\n        clazz.getSuperInterfaces().forEach(mixin => findClasses);\n      }\n    \n      findClasses(this);\n      return foundClasses;\n    }\n  },\n  \n  statics : {\n    _native_classes : {\n      \"Array\": Array, \"Boolean\": Boolean, \"Date\": Date, \"Error\": Error,\n      \"Function\": Function, \"Math\": Math, \"Number\": Number,\"Object\": Object, \"RegExp\": RegExp, \"String\": String\n    },\n\n    /**\n     * Get a class documentation by the class name.\n     * \n     * @param className\n     *          {String} name of the class\n     * @return {qxl.apiviewer.dao.Class} The class documentation\n     */\n    getClassByName : function(className, create) {\n      var nativeClass = qxl.apiviewer.dao.Class._native_classes[className];\n      if (nativeClass !== undefined)\n        return nativeClass;\n      \n      var pkg = qxl.apiviewer.dao.Package.getParentPackage(className);\n      if (!pkg) {\n        throw new Error(\"Cannot find a package for \" + className);\n      }\n      \n      var cls = pkg.getClassByName(className);\n      if (!cls && create) {\n        cls = new qxl.apiviewer.dao.Class(className);\n      }\n      return cls;\n    },\n\n\n    /**\n     * Get a class documentation by the class name.\n     * \n     * @param className\n     *          {String} name of the class\n     * @return {qxl.apiviewer.dao.Class} The class documentation\n     */\n    getClassesByName : function(classNames, create) {\n      classNames = qx.lang.Array.toNativeArray(classNames);\n      var result = classNames.map(name => qxl.apiviewer.dao.Class.getClassByName(name, create));\n      return result;\n    },\n\n\n    findClasses: function(name) {\n      if (!name)\n        return qx.Promise.resolve([]);\n      var all = qx.lang.Array.toNativeArray(name)\n        .filter(name => !qxl.apiviewer.dao.Class._native_classes[name])\n        .map(name => qxl.apiviewer.dao.Class.getClassByName(name).load());\n      return qx.Promise.all(all);\n    },\n    \n    \n    /**\n     * Checks if the Class is a qooxdoo qxl.apiviewer.dao.Class Object or a native\n     * one\n     * \n     * @param clazz\n     *          {qxl.apiviewer.dao.Class} the object to be checked\n     * @return {Boolean} true if it is a JS native object\n     */\n    isNativeObject : function(clazz){\n      return \"qxl.apiviewer.dao.Class\" !== clazz.classname;\n    }\n\n  }\n});\n"
  ]
}