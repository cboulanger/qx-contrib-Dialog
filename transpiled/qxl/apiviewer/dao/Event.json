{
  "className": "qxl.apiviewer.dao.Event",
  "packageName": "qxl.apiviewer.dao",
  "name": "Event",
  "superClass": "qxl.apiviewer.dao.ClassItem",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 21,
        "column": 0
      },
      "end": {
        "line": 54,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n2018 Zenesis Limited, http://www.zenesis.com\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nJohn Spackman (johnspackman)\nFabian Jakobs (fjakobs)\n\n***********************************************************************"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 24,
        "column": 2
      },
      "end": {
        "line": 27,
        "column": 3
      }
    }
  },
  "members": {
    "getType": {
      "location": {
        "start": {
          "line": 31,
          "column": 4
        },
        "end": {
          "line": 33,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "getTypes": {
      "location": {
        "start": {
          "line": 35,
          "column": 4
        },
        "end": {
          "line": 43,
          "column": 5
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.ClassItem",
      "appearsIn": [
        "qxl.apiviewer.dao.ClassItem"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{Map[]} Array of types of the item. A type has the keys 'type' and 'dimensions', where\ndimensions is the number of array dimensions (eg \"Integer[][]\" has a type of \"Integer\" and\ndimensions of 2, and \"Integer\" has type if \"Integer\" but dimensions is undefined",
            "type": "Map[]",
            "description": " Array of types of the item. A type has the keys 'type' and 'dimensions', where\ndimensions is the number of array dimensions (eg \"Integer[][]\" has a type of \"Integer\" and\ndimensions of 2, and \"Integer\" has type if \"Integer\" but dimensions is undefined"
          }
        ]
      }
    },
    "isRequiredByInterface": {
      "location": {
        "start": {
          "line": 48,
          "column": 4
        },
        "end": {
          "line": 50,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ifaceNode {qxl.apiviewer.dao.Class} interface to check for",
            "paramName": "ifaceNode",
            "description": " interface to check for",
            "type": "qxl.apiviewer.dao.Class"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the item is required by the interface.",
            "type": "Boolean",
            "description": " whether the item is required by the interface."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.ClassItem",
      "appearsIn": [
        "qxl.apiviewer.dao.ClassItem"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "reset"
    }
  },
  "descendants": []
}