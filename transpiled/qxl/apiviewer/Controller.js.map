{
  "version": 3,
  "sources": [
    "contrib/qooxdoo_qxl.apiviewer_v0.1.12/source/class/qxl/apiviewer/Controller.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "widgetRegistry",
    "_widgetRegistry",
    "qxl",
    "apiviewer",
    "MWidgetRegistry",
    "_titlePrefix",
    "document",
    "title",
    "ClassLoader",
    "setBaseUri",
    "_detailLoader",
    "getWidgetById",
    "_tabViewController",
    "TabViewController",
    "__bindTabViewController",
    "_tree",
    "__bindTree",
    "__bindToolbar",
    "btn_inherited",
    "btn_included",
    "addListener",
    "__syncMenuButton",
    "_history",
    "bom",
    "History",
    "getInstance",
    "__bindHistory",
    "Init",
    "getApplication",
    "getRoot",
    "e",
    "__openInNewTab",
    "isShiftPressed",
    "isCtrlOrCommandPressed",
    "members",
    "apiindex",
    "$$logCategory",
    "load",
    "url",
    "loadStart",
    "Date",
    "RequestUtil",
    "get",
    "then",
    "loadEnd",
    "debug",
    "getTime",
    "start",
    "treeData",
    "eval",
    "content",
    "end",
    "setTimeout",
    "__setDocTree",
    "state",
    "getState",
    "__selectItem",
    "__decodeState",
    "catch",
    "error",
    "window",
    "location",
    "protocol",
    "alert",
    "evt",
    "_updateHistory",
    "getData",
    "page",
    "_ignoreTabViewSelection",
    "getUserData",
    "nodeName",
    "itemName",
    "resetSelection",
    "treeNode",
    "_ignoreTreeSelection",
    "uiModel",
    "UiModel",
    "bind",
    "btn_expand",
    "btn_protected",
    "btn_private",
    "btn_internal",
    "menuButton",
    "showInherited",
    "getValue",
    "showMixins",
    "setIcon",
    "item",
    "docTree",
    "expandClassnames",
    "names",
    "result",
    "forEach",
    "name",
    "pos",
    "indexOf",
    "prefix",
    "substring",
    "classname",
    "classInfo",
    "startsWith",
    "keys",
    "getRequiredClasses",
    "Environment",
    "sort",
    "classes",
    "__fullNames__",
    "__index__",
    "__types__",
    "TYPES",
    "addToIndex",
    "typeIdx",
    "nameIdx",
    "push",
    "cls",
    "dao",
    "getClassByName",
    "getName",
    "getType",
    "getPackageName",
    "getMethods",
    "method",
    "isProtected",
    "isPrivate",
    "getProperties",
    "prop",
    "getConstants",
    "con",
    "getEvents",
    "getChildControls",
    "ch",
    "rootPackage",
    "Package",
    "getPackage",
    "setTreeData",
    "className",
    "newTitle",
    "addToHistory",
    "__encodeState",
    "_selectClass",
    "classNode",
    "callback",
    "self",
    "exclude",
    "showTabView",
    "loadDependedClasses",
    "openClass",
    "openPackage",
    "call",
    "fullItemName",
    "LoadingIndicator",
    "show",
    "hashPos",
    "parenPos",
    "trim",
    "selectTreeNodeByClassName",
    "couldSelectTreeNode",
    "hide",
    "sel",
    "getSelection",
    "getClassOrPackage",
    "showItem",
    "replace",
    "encodedState",
    "destruct",
    "_disposeObjects",
    "Controller"
  ],
  "mappings": "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",
  "file": "Controller.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (johnspackman)\n     * Til Schneider (til132)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Implements the dynamic behavior of the API viewer. The GUI is defined in\n * {@link Viewer}.\n */\nqx.Class.define(\"qxl.apiviewer.Controller\",\n{\n  extend : qx.core.Object,\n\n  /*\n   * ****************************************************************************\n   * CONSTRUCTOR\n   * ****************************************************************************\n   */\n\n  /**\n   * @param widgetRegistry\n   *          {Viewer} the GUI\n   */\n  construct : function(widgetRegistry)\n  {\n    this.base(arguments);\n\n    this._widgetRegistry = qxl.apiviewer.MWidgetRegistry;\n\n    this._titlePrefix = \"API Documentation\";\n    document.title = this._titlePrefix;\n\n    qxl.apiviewer.ClassLoader.setBaseUri(\"..\");\n\n    this._detailLoader = this._widgetRegistry.getWidgetById(\"detail_loader\");\n    this._tabViewController = new qxl.apiviewer.TabViewController(this._widgetRegistry);\n    this.__bindTabViewController();\n\n    this._tree = this._widgetRegistry.getWidgetById(\"tree\");\n    this.__bindTree();\n\n    this.__bindToolbar();\n\n    var btn_inherited = this._widgetRegistry.getWidgetById(\"btn_inherited\");\n    var btn_included = this._widgetRegistry.getWidgetById(\"btn_included\");\n\n    btn_inherited.addListener(\"changeValue\", this.__syncMenuButton, this);\n    btn_included.addListener(\"changeValue\", this.__syncMenuButton, this);\n\n\n    this._history = qx.bom.History.getInstance();\n    this.__bindHistory();\n\n    qx.core.Init.getApplication().getRoot().addListener(\"pointerdown\", function(e) {\n      this.__openInNewTab = e.isShiftPressed() || e.isCtrlOrCommandPressed();\n    }, this, true);\n  },\n\n\n  members :\n  {\n    apiindex : {},\n    __openInNewTab : false,\n\n    // overridden\n    $$logCategory : \"application\",\n\n    /**\n     * Loads the API doc tree from a URL. The URL must point to a JSON encoded\n     * doc tree.\n     * \n     * @lint ignoreDeprecated(eval,alert)\n     * @param url {String} the URL.\n     * @async\n     */\n    load : function(url) {\n      var loadStart = new Date();\n      qxl.apiviewer.RequestUtil.get(url)\n        .then(content => {\n          var loadEnd = new Date();\n\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            this.debug(\"Time to load data from server: \" + (loadEnd.getTime() - loadStart.getTime()) + \"ms\");\n          }\n\n          var start = new Date();\n          var treeData = eval(\"(\" + content + \")\");\n          var end = new Date();\n\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            this.debug(\"Time to eval tree data: \" + (end.getTime() - start.getTime()) + \"ms\");\n          }\n\n          // give the browser a chance to update its UI before doing more\n          setTimeout(() => {\n            this.__setDocTree(treeData);\n\n            setTimeout(() => {\n              // Handle bookmarks\n              var state = this._history.getState();\n              if (state) {\n                this.__selectItem(this.__decodeState(state));\n              } else {\n                this.__selectItem(\"\");\n                // Open the package node if it has child packages\n                /*\n                if (depth < qx.core.Environment.get(\"qxl.apiviewer.initialTreeDepth\") && packageDoc.getPackages().length > 0) {\n                  packageTreeNode.setOpen(true);\n                }\n                */\n\n              }\n            });\n          });\n        })\n        .catch(err => {\n          this.error(\"Couldn't load file: \" + url);\n          if (window.location.protocol == \"file:\") {\n            alert(\"Failed to load API data from the file system.\\n\\n\" +\n                  \"The security settings of your browser may prohibit AJAX \" +\n                  \"when using the file protocol. Please try the http protocol \" +\n                  \"instead.\");\n          }\n        });\n    },\n\n\n    /**\n     * binds the events of the TabView controller\n     */\n    __bindTabViewController : function()\n    {\n      this._tabViewController.addListener(\"classLinkTapped\", function(evt) {\n          this._updateHistory(evt.getData());\n      }, this);\n\n      this._tabViewController.addListener(\"changeSelection\", function(evt) {\n        var page = evt.getData()[0];\n\n        if (this._ignoreTabViewSelection == true) {\n          return;\n        }\n\n        if (page && page.getUserData(\"nodeName\")) {\n          var nodeName = page.getUserData(\"nodeName\");\n          var itemName = page.getUserData(\"itemName\");\n\n          if (itemName != null) {\n            this._updateHistory(nodeName + \"#\" + itemName);\n          } else {\n            this._updateHistory(nodeName);\n          }\n        } else {\n          this._tree.resetSelection();\n        }\n      }, this);\n    },\n\n\n    /**\n     * binds the selection event of the package tree.\n     */\n    __bindTree : function()\n    {\n      this._tree.addListener(\"changeSelection\", function(evt) {\n        var treeNode = evt.getData()[0];\n        if (treeNode && treeNode.getUserData(\"nodeName\") && !this._ignoreTreeSelection)\n        {\n          var nodeName = treeNode.getUserData(\"nodeName\");\n\n          // the history update will cause _selectClass to be called.\n          this._updateHistory(nodeName);\n        }\n      }, this);\n    },\n\n\n    /**\n     * binds the actions of the toolbar buttons.\n     */\n    __bindToolbar : function()\n    {\n      var uiModel = qxl.apiviewer.UiModel.getInstance();\n\n      var btn_inherited = this._widgetRegistry.getWidgetById(\"btn_inherited\");\n      btn_inherited.bind(\"value\", uiModel, \"showInherited\");\n      uiModel.bind(\"showInherited\", btn_inherited, \"value\");\n\n      var btn_included = this._widgetRegistry.getWidgetById(\"btn_included\");\n      btn_included.bind(\"value\", uiModel, \"showIncluded\");\n      uiModel.bind(\"showIncluded\", btn_included, \"value\");\n\n      var btn_expand = this._widgetRegistry.getWidgetById(\"btn_expand\");\n      btn_expand.bind(\"value\", uiModel, \"expandProperties\");\n      uiModel.bind(\"expandProperties\", btn_expand, \"value\");\n\n      var btn_protected = this._widgetRegistry.getWidgetById(\"btn_protected\");\n      btn_protected.bind(\"value\", uiModel, \"showProtected\");\n      uiModel.bind(\"showProtected\", btn_protected, \"value\");\n\n      var btn_private = this._widgetRegistry.getWidgetById(\"btn_private\");\n      btn_private.bind(\"value\", uiModel, \"showPrivate\");\n      uiModel.bind(\"showPrivate\", btn_private, \"value\");\n\n      var btn_internal = this._widgetRegistry.getWidgetById(\"btn_internal\");\n      btn_internal.bind(\"value\", uiModel, \"showInternal\");\n      uiModel.bind(\"showInternal\", btn_internal, \"value\");\n    },\n\n\n    /**\n     * Keeps the icon of the menubutton in sync with the menu checkboxes of\n     * inherited and mixin includes.\n     * \n     */\n    __syncMenuButton : function()\n    {\n      var menuButton = this._widgetRegistry.getWidgetById(\"menubtn_includes\");\n      var btn_inherited = this._widgetRegistry.getWidgetById(\"btn_inherited\");\n      var btn_included = this._widgetRegistry.getWidgetById(\"btn_included\");\n      var showInherited = btn_inherited.getValue();\n      var showMixins = btn_included.getValue();\n      if(showMixins && showInherited)\n      {\n        menuButton.setIcon('qxl/apiviewer/image/inherited_and_mixins_included.gif');\n      }\n      if(showInherited && !showMixins)\n      {\n        menuButton.setIcon('qxl/apiviewer/image/method_public_inherited18.gif');\n      }\n      if(!showInherited && showMixins)\n      {\n        menuButton.setIcon('qxl/apiviewer/image/overlay_mixin18.gif');\n      }\n      if(!showInherited && !showMixins)\n      {\n        menuButton.setIcon('qxl/apiviewer/image/includes.gif');\n      }\n\n    },\n\n    /**\n     * bind history events\n     */\n    __bindHistory : function()\n    {\n      this._history.addListener(\"changeState\", function(evt) {\n        var item = this.__decodeState(evt.getData());\n        if (item) {\n          this.__selectItem(item);\n        }\n      }, this);\n    },\n\n\n    /**\n     * Loads the documentation tree.\n     * \n     * @param docTree\n     *          {qxl.apiviewer.dao.Package} root node of the documentation tree\n     */\n    __setDocTree : function(docTree)\n    {\n\t\t\n      let expandClassnames = function(names) {\n        // Expands a list of class names including wildcards (eg \"qx.ui.*\") into an\n        // exhaustive list without wildcards\n        if (!names) {\n            return [];\n        }\n        let result = {};\n        names.forEach(function(name) {\n          let pos = name.indexOf('*');\n          if (pos < 0) {\n            result[name] = true;\n          } else {\n            let prefix = name.substring(0, pos);\n            for (let classname in docTree.classInfo) {\n              if (classname.startsWith(prefix)) \n              result[classname] = true;\n            }\n          }\n        });\n        return Object.keys(result);\n      }\n    \n      let getRequiredClasses = function() {\n        let result = {};\n        for (let classname in docTree.classInfo) {\n          result[classname] = true;\n        }  \n        expandClassnames(qx.core.Environment.get(\"excludeFromAPIViewer\")).forEach((name) => delete result[name]);\n        \n        // We sort the result so that we can get a consistent ordering for loading classes, otherwise the order in\n        //  which the filing system returns the files can cause classes to be loaded in a lightly different sequence;\n        //  that would not cause a problem, except that the build is not 100% repeatable.\n        return Object.keys(result).sort();\n      }\n        \n      var start = new Date();\n      let classes = getRequiredClasses();\n\n      this.apiindex.__fullNames__ = [];\n      this.apiindex.__index__ = {};\n      this.apiindex.__types__  = [\"doctree\", \"package\", \"class\", \"method_pub\", \"method_prot\", \"event\", \"property_pub\", \"method_priv\", \"method_intl\", \"constant\", \"childControl\"];\n      const TYPES = {\n         \"class\": 1,\n         \"mixin\": 1,\n         \"theme\" : 1,\n         \"interface\" : 1\n      }\n\n      let addToIndex = function(name, typeIdx, nameIdx) {\n        if (!this.apiindex.__index__[name]) {\n          this.apiindex.__index__[name] = [];\n        }\n        this.apiindex.__index__[name].push([typeIdx, nameIdx]);\n      }.bind(this);\n\n      classes.forEach(async (classname) => {\n        let cls = qxl.apiviewer.dao.Class.getClassByName(classname, true);\n        await cls.load();\n        let nameIdx = this.apiindex.__fullNames__.indexOf(cls.getName());\n        if (nameIdx < 0) {\n          nameIdx = this.apiindex.__fullNames__.push(cls.getName()) - 1;\n        }\n        let typeIdx = TYPES[cls.getType()];\n        addToIndex(cls.getName(), typeIdx, nameIdx);\n        typeIdx = 1;\n        addToIndex(cls.getPackageName(), typeIdx, nameIdx);\n        cls.getMethods().forEach(method => {\n           let typeIdx;\n           if (method.isProtected())  \n              typeIdx = 4;\n           else if (method.isPrivate())\n              typeIdx = 7;\n           else\n              typeIdx = 3;\n           addToIndex('#' + method.getName(), typeIdx, nameIdx);\n        });\n        cls.getProperties().forEach(prop => {\n          let typeIdx = 6;\n          addToIndex('#' + prop.getName(), typeIdx, nameIdx);\n       });\n       cls.getConstants().forEach(con => {\n        let typeIdx = 9;\n        addToIndex('#' + con.getName(), typeIdx, nameIdx);\n       });\n       cls.getEvents().forEach(evt => {\n        let typeIdx = 5;\n        addToIndex('#' + evt.getName(), typeIdx, nameIdx);\n       });\n       cls.getChildControls().forEach(ch => {\n        let typeIdx = 10;\n        addToIndex('#' + ch.getName(), typeIdx, nameIdx);\n       });\n              \n\n      });\n      var rootPackage = qxl.apiviewer.dao.Package.getPackage(null);\n      var end = new Date();\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.debug(\"Time to build data tree: \" + (end.getTime() - start.getTime()) + \"ms\");\n      }\n\n      var start = new Date();\n      this._tree.setTreeData(rootPackage);\n      var end = new Date();\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.debug(\"Time to update tree: \" + (end.getTime() - start.getTime()) + \"ms\");\n      }\n\n      return true;\n    },\n\n\n    /**\n     * Push the class to the browser history\n     * \n     * @param className\n     *          {String} name of the class\n     */\n    _updateHistory : function(className)\n    {\n      var newTitle = className + \" - \" + this._titlePrefix;\n      qx.bom.History.getInstance().addToHistory(this.__encodeState(className), newTitle);\n    },\n\n\n    /**\n     * Display information about a class\n     * \n     * @param classNode\n     *          {qxl.apiviewer.dao.Class} class node to display\n     */\n    _selectClass : function(classNode, callback, self) {\n      this._detailLoader.exclude();\n      this._tabViewController.showTabView();\n\n      return classNode.loadDependedClasses()\n        .then(() => {\n          if (classNode instanceof qxl.apiviewer.dao.Class) {\n            return this._tabViewController.openClass(classNode, this.__openInNewTab);\n          } else {\n            return this._tabViewController.openPackage(classNode, this.__openInNewTab);\n          }\n        })\n        .then(() => callback && callback.call(self));\n    },\n\n\n    /**\n     * Selects an item (class, property, method or constant).\n     * \n     * @param fullItemName\n     *          {String} the full name of the item to select. (e.g.\n     *          \"qx.mypackage.MyClass\" or \"qx.mypackage.MyClass#myProperty\")\n     * \n     * @lint ignoreDeprecated(alert)\n     */\n    __selectItem : function(fullItemName) {\n      qxl.apiviewer.LoadingIndicator.getInstance().show();\n      var className = fullItemName;\n      var itemName = null;\n      var hashPos = fullItemName.indexOf(\"#\");\n\n      if (hashPos != -1) {\n        className = fullItemName.substring(0, hashPos);\n        itemName = fullItemName.substring(hashPos + 1);\n\n        var parenPos = itemName.indexOf(\"(\");\n\n        if (parenPos != -1) {\n          itemName = itemName.substring(0, parenPos).trim();\n        }\n      }\n\n      // ignore changeSelection events\n      this._ignoreTreeSelection = true;\n      this._tree.selectTreeNodeByClassName(className)\n        .then(couldSelectTreeNode => {\n          this._ignoreTreeSelection = false;\n\n          if (!couldSelectTreeNode) {\n            this.error(\"Unknown class: \" + className);\n            //alert(\"Unknown class: \" + className);\n            qxl.apiviewer.LoadingIndicator.getInstance().hide();\n            return;\n          }\n\n          var sel = this._tree.getSelection();\n          var nodeName = sel[0].getUserData(\"nodeName\") || className;\n\n          /**\n           * @lint ignoreDeprecated(alert)\n           */\n          this._ignoreTabViewSelection = true;\n          this._selectClass(qxl.apiviewer.ClassLoader.getClassOrPackage(nodeName), () => {\n            if (itemName) {\n              if (!this._tabViewController.showItem(itemName)) {\n                this.error(\"Unknown item of class '\"+ className +\"': \" + itemName);\n                //alert(\"Unknown item of class '\"+ className +\"': \" + itemName);\n                qxl.apiviewer.LoadingIndicator.getInstance().hide();\n\n                this._updateHistory(className);\n                this._ignoreTabViewSelection = false;\n                return;\n              }\n            }\n            this._updateHistory(fullItemName);\n            this._ignoreTabViewSelection = false;\n          });\n        });\n    },\n\n\n    __encodeState : function(state) {\n      return state.replace(/(.*)#(.*)/g, \"$1~$2\")\n    },\n\n    __decodeState : function(encodedState) {\n      return encodedState.replace(/(.*)~(.*)/g, \"$1#$2\")\n    }\n\n  },\n\n\n\n  /*\n   * ****************************************************************************\n   * DESTRUCTOR\n   * ****************************************************************************\n   */\n\n  destruct : function()\n  {\n    this._widgetRegistry = null;\n    this._disposeObjects(\"_detailLoader\", \"_tree\", \"_history\", \"_tabViewController\");\n  }\n});\n"
  ]
}