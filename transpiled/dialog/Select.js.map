{
  "version": 3,
  "sources": [
    "source/class/dialog/Select.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dialog",
    "Dialog",
    "properties",
    "options",
    "check",
    "nullable",
    "event",
    "members",
    "_createWidgetContent",
    "container",
    "_createDialogContainer",
    "add",
    "hbox",
    "ui",
    "Composite",
    "layout",
    "HBox",
    "_message",
    "basic",
    "Label",
    "setRich",
    "setWidth",
    "setAllowStretchX",
    "flex",
    "buttonPane",
    "_createButtonPane",
    "addListener",
    "removeAll",
    "getData",
    "forEach",
    "option",
    "button",
    "form",
    "Button",
    "label",
    "icon",
    "value",
    "String",
    "_handleSelection",
    "removeOwnedQxObject",
    "e",
    "setQxObjectId",
    "addOwnedQxObject",
    "cancelButton",
    "_createCancelButton",
    "hide",
    "getCallback",
    "call",
    "getContext",
    "Select"
  ],
  "mappings": ";;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAmBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,eAAhB,EAAiC;AAC/BC,YAAQC,OAAOC,MADgB;AAE/BC,gBAAY;;AAEV;;;AAGAC,eAAS;AACPC,eAAO,OADA;AAEPC,kBAAU,KAFH;AAGPC,eAAO;AAHA;AALC,KAFmB;;AAc/BC,aAAS;AACP;;;AAGAC,4BAAsB,gCAAW;AAC/B,YAAIC,YAAY,KAAKC,sBAAL,EAAhB;AACA,aAAKC,GAAL,CAASF,SAAT;AACA,YAAIG,OAAO,IAAInB,GAAGoB,EAAH,CAAMJ,SAAN,CAAgBK,SAApB,CAA8B,IAAIrB,GAAGoB,EAAH,CAAME,MAAN,CAAaC,IAAjB,CAAsB,EAAtB,CAA9B,CAAX;AACAP,kBAAUE,GAAV,CAAcC,IAAd;AACA,aAAKK,QAAL,GAAgB,IAAIxB,GAAGoB,EAAH,CAAMK,KAAN,CAAYC,KAAhB,EAAhB;AACA,aAAKF,QAAL,CAAcG,OAAd,CAAsB,IAAtB;AACA,aAAKH,QAAL,CAAcI,QAAd,CAAuB,GAAvB;AACA,aAAKJ,QAAL,CAAcK,gBAAd,CAA+B,IAA/B;AACAV,aAAKD,GAAL,CAAS,KAAKM,QAAd,EAAwB;AACtBM,gBAAM;AADgB,SAAxB;AAGA,YAAIC,aAAa,KAAKC,iBAAL,EAAjB;AACA,aAAKC,WAAL,CAAiB,eAAjB,EAAkC,UAASpB,KAAT,EAAgB;AAChDkB,qBAAWG,SAAX;AACA,cAAIxB,UAAUG,MAAMsB,OAAN,EAAd;AACAzB,kBAAQ0B,OAAR,CAAgB,UAASC,MAAT,EAAiB;AAC/B,gBAAIC,SAAS,IAAItC,GAAGoB,EAAH,CAAMmB,IAAN,CAAWC,MAAf,CAAsBH,OAAOI,KAA7B,EAAoCJ,OAAOK,IAA3C,CAAb;AACAJ,mBAAOT,gBAAP,CAAwB,IAAxB;AACA,gBAAIc,QAAQC,OAAOP,OAAOM,KAAd,CAAZ;AACAL,mBAAOL,WAAP,CAAmB,SAAnB,EAA8B,YAAW;AACvC,mBAAKY,gBAAL,CAAsBF,KAAtB;AACD,aAFD,EAEG,IAFH;AAGAZ,uBAAWb,GAAX,CAAeoB,MAAf;;AAEE,gBAAI;AACFP,yBAAWe,mBAAX,CAA+BH,KAA/B;AACD,aAFD,CAEE,OAAOI,CAAP,EAAU,CAAE;AACdT,mBAAOU,aAAP,CAAqBL,KAArB;AACAZ,uBAAWkB,gBAAX,CAA4BX,MAA5B;AAEH,WAfD,EAeG,IAfH;AAgBA,cAAIY,eAAe,KAAKC,mBAAL,EAAnB;AACApB,qBAAWb,GAAX,CAAegC,YAAf;AACD,SArBD,EAqBG,IArBH;AAsBAlC,kBAAUE,GAAV,CAAca,UAAd;AACD,OAxCM;;AA0CP;;;;;AAKAc,wBAAkB,0BAASF,KAAT,EAAgB;AAChC,aAAKS,IAAL;AACA,YAAI,KAAKC,WAAL,EAAJ,EAAwB;AACtB,eAAKA,WAAL,GAAmBC,IAAnB,CAAwB,KAAKC,UAAL,EAAxB,EAA2CZ,KAA3C;AACD;AACF;AApDM;AAdsB,GAAjC,C;AAnBApC,SAAOiD,MAAP,CAAcrD,aAAd,GAA8BA,aAA9B",
  "file": "Select.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo dialog library\n   https://github.com/cboulanger/qx-contrib-Dialog\n\n   Copyright:\n     2007-2017 Christian Boulanger and others\n\n   License:\n     LGPL: http://www.gnu.org/licenses/lgpl.html\n     EPL: http://www.eclipse.org/org/documents/epl-v10.php\n     See the LICENSE file in the project's top-level directory for details.\n\n************************************************************************ */\n/*global qx dialog*/\n\n/**\n * Dialog that offers the user a choice of alternative buttons to select from.\n */\nqx.Class.define(\"dialog.Select\", {\n  extend: dialog.Dialog,\n  properties: {\n\n    /**\n     * An array of maps [ { label: \"Foo\", icon : \"icon/22/...\", value : \"foo\" },...]\n     */\n    options: {\n      check: \"Array\",\n      nullable: false,\n      event: \"changeOptions\"\n    }\n  },\n\n  members: {\n    /**\n     * Create the main content of the widget\n     */\n    _createWidgetContent: function() {\n      let container = this._createDialogContainer();\n      this.add(container);\n      let hbox = new qx.ui.container.Composite(new qx.ui.layout.HBox(10));\n      container.add(hbox);\n      this._message = new qx.ui.basic.Label();\n      this._message.setRich(true);\n      this._message.setWidth(200);\n      this._message.setAllowStretchX(true);\n      hbox.add(this._message, {\n        flex: 1\n      });\n      let buttonPane = this._createButtonPane();\n      this.addListener(\"changeOptions\", function(event) {\n        buttonPane.removeAll();\n        let options = event.getData();\n        options.forEach(function(option) {\n          let button = new qx.ui.form.Button(option.label, option.icon);\n          button.setAllowStretchX(true);\n          let value = String(option.value);\n          button.addListener(\"execute\", function() {\n            this._handleSelection(value);\n          }, this);\n          buttonPane.add(button);\n          if (qx.core.Environment.get(\"module.objectid\") === true) {\n            try {\n              buttonPane.removeOwnedQxObject(value);\n            } catch (e) {}\n            button.setQxObjectId(value);\n            buttonPane.addOwnedQxObject(button);\n          }\n        }, this);\n        let cancelButton = this._createCancelButton();\n        buttonPane.add(cancelButton);\n      }, this);\n      container.add(buttonPane);\n    },\n\n    /**\n     * Handle click on a button. Calls callback with\n     * the value set in the options map.\n     * @param value {var} The passed value\n     */\n    _handleSelection: function(value) {\n      this.hide();\n      if (this.getCallback()) {\n        this.getCallback().call(this.getContext(), value);\n      }\n    }\n  }\n});\n"
  ]
}