{
  "version": 3,
  "sources": [
    "source/class/dialog/FormRenderer.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "renderer",
    "Single",
    "implement",
    "IFormRenderer",
    "properties",
    "labelSuffix",
    "refine",
    "init",
    "requiredSuffix",
    "members",
    "_row",
    "_buttonRow",
    "addItems",
    "items",
    "names",
    "title",
    "_add",
    "_createHeader",
    "row",
    "column",
    "colSpan",
    "i",
    "length",
    "item",
    "widget",
    "label",
    "RadioGroup",
    "getUserData",
    "_createHBoxForRadioGroup",
    "_createWidgetForRadioGroup",
    "basic",
    "Label",
    "setRich",
    "CheckBox",
    "_getLayout",
    "getCellWidget",
    "setAlignX",
    "_createLabel",
    "group",
    "container",
    "Composite",
    "layout",
    "VBox",
    "getItems",
    "add",
    "HBox",
    "dialog",
    "FormRenderer"
  ],
  "mappings": "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",
  "file": "FormRenderer.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo dialog library\n   https://github.com/cboulanger/qx-contrib-Dialog\n\n   Copyright:\n     2007-2017 Christian Boulanger and others\n\n   License:\n     LGPL: http://www.gnu.org/licenses/lgpl.html\n     EPL: http://www.eclipse.org/org/documents/epl-v10.php\n     See the LICENSE file in the project's top-level directory for details.\n\n************************************************************************ */\n/*global qx dialog*/\n\n/**\n * Form renderer renderer for {@link qx.ui.form.Form}. This is a\n * single row renderer adapted for the dialog.Form widget. Main\n * difference is that the form allows text-only labels without a corresponding\n * form element which can serve, for example, for explanatory text.\n */\nqx.Class.define(\"dialog.FormRenderer\", {\n  extend: qx.ui.form.renderer.Single,\n  implement: qx.ui.form.renderer.IFormRenderer,\n\n  properties: {\n    /**\n     * The text that is displayed after the label\n     */\n    labelSuffix: {\n      refine: true,\n      init: \":\"\n    },\n\n    /**\n     * The text that is displayed after the label and the label suffix\n     * if a field is mandatory\n     */\n    requiredSuffix :{\n      refine : true,\n      init : \"<span style='color:#e5004b'>*</span>\"\n    }\n  },\n\n  members: {\n    _row: 0,\n    _buttonRow: null,\n\n    /**\n     * Add a group of form items with the corresponding names. The names are\n     * displayed as label.\n     * The title is optional and is used as grouping for the given form\n     * items. Additionally, this renderer supports label-only fields.\n     * @param items {qx.ui.core.Widget[]} An array of form items to render.\n     * @param names {String[]} An array of names for the form items.\n     * @param title {String?} A title of the group you are adding.\n     */\n    addItems: function(items, names, title) {\n      if (title !== null) {\n        this._add(\n          this._createHeader(title), {\n            row: this._row,\n            column: 0,\n            colSpan: 2\n          }\n        );\n        this._row++;\n      }\n      for (let i = 0; i < items.length; i++) {\n        let item = items[i],widget,label;\n        if (item instanceof qx.ui.form.RadioGroup) {\n          if (item.getUserData(\"orientation\") === \"horizontal\") {\n            widget = this._createHBoxForRadioGroup(item);\n          } else {\n            widget = this._createWidgetForRadioGroup(item);\n          }\n        } else {\n          widget = item;\n        }\n        if (names[i] && item.getUserData(\"excluded\")) {\n          label = new qx.ui.basic.Label(names[i]);\n          label.setRich(true);\n          this._add(label, {\n            row: this._row,\n            column: 0,\n            colSpan: 2\n          });\n        } else if (item instanceof qx.ui.form.CheckBox) {\n          this._add(widget, {\n            row: this._row,\n            column: 0,\n            colSpan: 2\n          });\n          this._getLayout().getCellWidget(this._row, 0).setAlignX(\"left\");\n        } else if (!names[i]) {\n          this._add(widget, {\n            row: this._row,\n            column: 0,\n            colSpan: 2\n          });\n        } else {\n          label = this._createLabel(names[i], item);\n          label.setRich(true);\n          this._add(label, {\n            row: this._row,\n            column: 0\n          });\n          this._add(widget, {\n            row: this._row,\n            column: 1\n          });\n        }\n        this._row++;\n      }\n    },\n\n    /**\n     * Takes the items of the given RadioGroup and adds the to a Composite.\n     * @param group {qx.ui.form.RadioGroup} The RadioGroup which needs to be\n     *   added.\n     * @return {qx.ui.container.Composite} A composite containing the items of\n     *   the RadioGroup.\n     */\n    _createWidgetForRadioGroup: function(group) {\n      let widget = new qx.ui.container.Composite(new qx.ui.layout.VBox(5));\n      let items = group.getItems();\n      for (let i = 0; i < items.length; i++) {\n        widget.add(items[i]);\n      }\n      return widget;\n    },\n\n    /**\n     * Takes the items of the given RadioGroup and adds the to a Composite.\n     * The composite has a HBox layout so the RadioButtons will be alligned\n     * horizontally. This is only useful for a small number of RadioButtons\n     * such as 2 or 3 buttons with labels.\n     * @param group {qx.ui.form.RadioGroup} The RadioGroup which needs to be\n     *   added.\n     * @return {qx.ui.container.Composite} A composite containing the items of\n     *   the RadioGroup.\n     */\n    _createHBoxForRadioGroup: function(group) {\n      let widget = new qx.ui.container.Composite(new qx.ui.layout.HBox(5));\n      let items = group.getItems();\n      for (let i = 0; i < items.length; i++) {\n        widget.add(items[i]);\n      }\n      return widget;\n    }\n  }\n});\n"
  ]
}