{
  "version": 3,
  "sources": [
    "source/class/dialog/Wizard.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dialog",
    "Form",
    "properties",
    "pageData",
    "check",
    "apply",
    "page",
    "init",
    "allowBack",
    "event",
    "allowNext",
    "allowFinish",
    "members",
    "_backButton",
    "_nextButton",
    "_finishButton",
    "_createWidgetContent",
    "container",
    "_createDialogContainer",
    "setPadding",
    "setLayout",
    "ui",
    "layout",
    "VBox",
    "add",
    "hbox",
    "Composite",
    "HBox",
    "_message",
    "basic",
    "Label",
    "setRich",
    "setMinWidth",
    "setAllowGrowX",
    "flex",
    "line",
    "core",
    "Widget",
    "setHeight",
    "setBackgroundColor",
    "formContainer",
    "_formContainer",
    "Grow",
    "setMinHeight",
    "setMarginBottom",
    "buttonPane",
    "_createButtonPane",
    "getLayout",
    "setAlignX",
    "form",
    "Button",
    "tr",
    "addListener",
    "goBack",
    "bind",
    "setEnabled",
    "goForward",
    "cancelButton",
    "_createCancelButton",
    "finish",
    "setQxObjectId",
    "addOwnedQxObject",
    "_onFormReady",
    "_this",
    "getValidationManager",
    "converter",
    "value",
    "getAllowNext",
    "getAllowFinish",
    "_applyPageData",
    "old",
    "modelData",
    "forEach",
    "pData",
    "formData",
    "Object",
    "getOwnPropertyNames",
    "key",
    "model",
    "data",
    "marshal",
    "Json",
    "createModel",
    "setModel",
    "setFormData",
    "_applyPage",
    "getPageData",
    "length",
    "setAllowNext",
    "setAllowBack",
    "setAllowFinish",
    "set",
    "start",
    "show",
    "setPage",
    "getPage",
    "error",
    "hide",
    "getCallback",
    "call",
    "getContext",
    "util",
    "Serializer",
    "toNativeObject",
    "getModel",
    "resetCallback",
    "Wizard"
  ],
  "mappings": "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",
  "file": "Wizard.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo dialog library\n   https://github.com/cboulanger/qx-contrib-Dialog\n\n   Copyright:\n     2007-2017 Christian Boulanger and others\n\n   License:\n     LGPL: http://www.gnu.org/licenses/lgpl.html\n     EPL: http://www.eclipse.org/org/documents/epl-v10.php\n     See the LICENSE file in the project's top-level directory for details.\n\n************************************************************************ */\n/*global qx dialog*/\n\n/**\n * A wizard-type widget that constructs the wizard pages on-the-fly, using\n * functionality from dialog.Form.\n */\nqx.Class.define(\"dialog.Wizard\", {\n  extend: dialog.Form,\n  properties: {\n    /**\n     * An array of maps that sets the properties of this widget\n     */\n    pageData: {\n      check: \"Array\",\n      apply: \"_applyPageData\"\n    },\n\n    /**\n     * The number of the page in the wizard\n     */\n    page: {\n      check: \"Integer\",\n      apply: \"_applyPage\",\n      init: 0\n    },\n\n    /**\n     * Whether to allow the user to go to the previous\n     * wizard page\n     */\n    allowBack: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeAllowBack\"\n    },\n\n    /**\n     * Whether to allow the user to go to the next\n     * wizard page\n     */\n    allowNext: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeAllowNext\"\n    },\n\n    /**\n     * Whether to allow the user to finish the wizard. Automatically\n     * set to 'true' on the last page of the wizard. The \"Finish\" button\n     * is enabled if this property is 'true' AND all the form entries pass\n     * the validation tests.\n     */\n    allowFinish: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeAllowFinish\"\n    }\n  },\n\n  members: {\n    _backButton: null,\n    _nextButton: null,\n    _finishButton: null,\n\n    /**\n     * Create the main content of the widget\n     */\n    _createWidgetContent: function() {\n      let container = this._createDialogContainer();\n      container.setPadding(0);\n      container.setLayout(new qx.ui.layout.VBox(0));\n      this.add(container);\n      let hbox = new qx.ui.container.Composite(new qx.ui.layout.HBox(10));\n      container.add(hbox);\n      this._message = new qx.ui.basic.Label();\n      this._message.setRich(true);\n      this._message.setMinWidth(100);\n      this._message.setAllowGrowX(true);\n      hbox.add(this._message, {\n        flex: 1\n      });\n      let line = new qx.ui.core.Widget();\n      line.setHeight(2);\n      line.setBackgroundColor(\"gray\");\n      container.add(line);\n      let formContainer = (this._formContainer = new qx.ui.container.Composite());\n      formContainer.setPadding(16);\n      formContainer.setLayout(new qx.ui.layout.Grow());\n      formContainer.setMinWidth(300);\n      formContainer.setMinHeight(200);\n      container.add(formContainer);\n      line = new qx.ui.core.Widget();\n      line.setHeight(2);\n      line.setMarginBottom(5);\n      line.setBackgroundColor(\"gray\");\n      container.add(line);\n      let buttonPane = this._createButtonPane();\n      buttonPane.getLayout().setAlignX(\"right\");\n      container.add(buttonPane);\n      this._backButton = new qx.ui.form.Button(\"< \" + this.tr(\"Back\"));\n      this._backButton.addListener(\"execute\", this.goBack, this);\n      this.bind(\"allowBack\", this._backButton, \"enabled\");\n      this._backButton.setEnabled(false);\n      buttonPane.add(this._backButton);\n      this._nextButton = new qx.ui.form.Button(this.tr(\"Next\") + \" >\");\n      this._nextButton.addListener(\"execute\", this.goForward, this);\n      this._nextButton.setEnabled(false);\n      buttonPane.add(this._nextButton);\n      let cancelButton = this._createCancelButton();\n      buttonPane.add(cancelButton);\n      this._finishButton = new qx.ui.form.Button(this.tr(\"Finish\"));\n      this._finishButton.addListener(\"execute\", this.finish, this);\n      this._finishButton.setEnabled(false);\n      buttonPane.add(this._finishButton);\n      if (qx.core.Environment.get(\"module.objectid\") === true) {\n        this._backButton.setQxObjectId(\"back\");\n        this.addOwnedQxObject(this._backButton);\n        this._nextButton.setQxObjectId(\"next\");\n        this.addOwnedQxObject(this._nextButton);\n        this._finishButton.setQxObjectId(\"finish\");\n        this.addOwnedQxObject(this._finishButton);\n      }\n    },\n\n    /**\n     * Add bindings to the validation manager to control the state of\n     * the wizard buttons.\n     * @param form {qx.ui.form.Form} The form to bind\n     */\n    _onFormReady: function(form) {\n      let _this = this;\n      form.getValidationManager().bind(\"valid\", this._nextButton, \"enabled\", {\n        converter: function(value) {\n          return !!(value && _this.getAllowNext());\n        }\n      });\n      form.getValidationManager().bind(\"valid\", this._finishButton, \"enabled\", {\n        converter: function(value) {\n          return !!(value && _this.getAllowFinish());\n        }\n      });\n    },\n\n    /**\n     * Apply the page data. This initializes the response\n     * data model\n     * @param pageData {Array} The new page data\n     * @param old {Array} The old page data\n     */\n    _applyPageData: function(pageData, old) {\n      this._backButton.setEnabled(false);\n      this._nextButton.setEnabled(false);\n      this._finishButton.setEnabled(false);\n      if (pageData) {\n        let modelData = {};\n        pageData.forEach(function(pData) {\n          let formData = pData.formData;\n          for (let key of Object.getOwnPropertyNames(formData)) {\n            modelData[key] = formData[key].value || null;\n          }\n        });\n        let model = qx.data.marshal.Json.createModel(modelData);\n        this.setModel(model);\n      } else {\n        this.setFormData(null);\n        this.setModel(null);\n      }\n    },\n\n    /**\n     * Go to a given wizard page. This recreates the\n     * form.\n     * @param page {Integer} The new page\n     * @param old {Integer} The old page\n     */\n    _applyPage: function(page, old) {\n      let pageData = this.getPageData()[page];\n      this.setFormData(null);\n      delete pageData.pageData;\n      delete pageData.page;\n      let length = this.getPageData().length;\n      this.setAllowNext(page < length - 1);\n      this.setAllowBack(page > 0);\n      if (!this.getAllowFinish()) {\n        this.setAllowFinish(page === length - 1);\n      }\n      this.set(pageData);\n    },\n\n    /**\n     * Starts the wizard\n     */\n    start: function() {\n      this.show();\n      this.setPage(0);\n    },\n\n    /**\n     * Goes to the previous wizard button\n     */\n    goBack: function() {\n      let page = this.getPage();\n      if (page === 0) {\n        this.error(\"Cannot go back!\");\n      }\n      this.setPage(--page);\n    },\n\n    /**\n     * Goes to the next wizard page\n     */\n    goForward: function() {\n      let page = this.getPage();\n      if (page > this.getPageData().length - 2) {\n        this.error(\"Cannot go forward!\");\n      }\n      this.setPage(++page);\n    },\n\n    /**\n     * Finishes the wizard. Calls callback with the result data map\n     */\n    finish: function() {\n      this.hide();\n      if (this.getCallback()) {\n        this.getCallback().call(\n          this.getContext(),\n          qx.util.Serializer.toNativeObject(this.getModel())\n        );\n      }\n      this.resetCallback();\n    }\n  }\n});\n"
  ]
}