{
  "version": 3,
  "sources": [
    "source/class/dialog/Login.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dialog",
    "Dialog",
    "properties",
    "text",
    "check",
    "nullable",
    "apply",
    "textFont",
    "init",
    "checkCredentials",
    "showForgotPassword",
    "event",
    "forgotPasswordHandler",
    "events",
    "loginSuccess",
    "loginFailure",
    "members",
    "_text",
    "_username",
    "_password",
    "_applyText",
    "value",
    "old",
    "setValue",
    "setVisibility",
    "_applyTextFont",
    "setFont",
    "_createWidgetContent",
    "formTag",
    "FormTag",
    "container",
    "_createDialogContainer",
    "getLayout",
    "setAlignX",
    "add",
    "flex",
    "_image",
    "ui",
    "basic",
    "Image",
    "Label",
    "setAllowStretchX",
    "setTextFont",
    "form",
    "Composite",
    "gridLayout",
    "layout",
    "Grid",
    "setColumnAlign",
    "setColumnMinWidth",
    "setColumnFlex",
    "setLayout",
    "setMinWidth",
    "setMaxWidth",
    "labels",
    "tr",
    "i",
    "length",
    "set",
    "allowShrinkX",
    "paddingTop",
    "row",
    "column",
    "TextField",
    "PasswordField",
    "getContentElement",
    "setAttribute",
    "addListener",
    "e",
    "getKeyIdentifier",
    "_callCheckCredentials",
    "_message",
    "setRich",
    "buttonPane",
    "_createButtonPane",
    "loginButton",
    "_loginButton",
    "Button",
    "cancelButton",
    "_createCancelButton",
    "forgotPasswordButton",
    "getForgotPasswordHandler",
    "bind",
    "converter",
    "v",
    "setQxObjectId",
    "addOwnedQxObject",
    "getCheckCredentials",
    "getValue",
    "Function",
    "prototype",
    "_handleCheckCredentials",
    "lang",
    "_handleCancel",
    "hide",
    "err",
    "data",
    "setMessage",
    "fireDataEvent",
    "addListenerOnce",
    "Timer",
    "once",
    "selectAllText",
    "getCallback",
    "Login"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EA2BAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,cAAhB,EAAgC;AAC9BC,YAAQC,OAAOC,MADe;AAE9BC,gBAAY;;AAEV;;;;AAIAC,YAAM;AACJC,eAAO,QADH;AAEJC,kBAAU,IAFN;AAGJC,eAAO;AAHH,OANI;;AAYV;;;;AAIAC,gBAAU;AACRH,eAAO,QADC;AAERC,kBAAU,IAFF;AAGRG,cAAM,MAHE;AAIRF,eAAO;AAJC,OAhBA;;AAuBV;;;;;;;;;AASAG,wBAAkB;AAChBL,eAAO,UADS;AAEhBC,kBAAU;AAFM,OAhCR;;AAqCV;;;AAGAK,0BAAoB;AAClBN,eAAO,SADW;AAElBC,kBAAU,KAFQ;AAGlBG,cAAM,KAHY;AAIlBG,eAAO;AAJW,OAxCV;;AA+CV;;;;AAIAC,6BAAuB;AACrBR,eAAO;AADc;AAnDb,KAFkB;;AA0D9BS,YAAQ;AACN;;;AAGAC,oBAAc,oBAJR;;AAMN;;;;AAIAC,oBAAc;AAVR,KA1DsB;;AAuE9BC,aAAS;AACPC,aAAO,IADA;AAEPC,iBAAW,IAFJ;AAGPC,iBAAW,IAHJ;;AAKP;;;;;AAKAC,kBAAY,oBAASC,KAAT,EAAgBC,GAAhB,EAAqB;AAC/B,aAAKL,KAAL,CAAWM,QAAX,CAAoBF,KAApB;AACA,aAAKJ,KAAL,CAAWO,aAAX,CAAyBH,QAAQ,SAAR,GAAoB,UAA7C;AACD,OAbM;;AAeP;;;;AAIAI,sBAAgB,wBAASJ,KAAT,EAAgB;AAC9B,aAAKJ,KAAL,CAAWS,OAAX,CAAmBL,KAAnB;AACD,OArBM;;AAuBP;;;AAGAM,4BAAsB,gCAAW;AAC/B;AACA,YAAIC,UAAU,IAAI5B,OAAO6B,OAAX,EAAd;AACA,YAAIC,YAAY,KAAKC,sBAAL,EAAhB;AACAD,kBAAUE,SAAV,GAAsBC,SAAtB,CAAgC,QAAhC;AACAL,gBAAQM,GAAR,CAAYJ,SAAZ,EAAuB,EAACK,MAAK,CAAN,EAAvB;AACA,aAAKD,GAAL,CAASN,OAAT;AACA,aAAKQ,MAAL,GAAc,IAAI3C,GAAG4C,EAAH,CAAMC,KAAN,CAAYC,KAAhB,EAAd;AACA,aAAKH,MAAL,CAAYZ,aAAZ,CAA0B,UAA1B;AACAM,kBAAUI,GAAV,CAAc,KAAKE,MAAnB;AACA,aAAKnB,KAAL,GAAa,IAAIxB,GAAG4C,EAAH,CAAMC,KAAN,CAAYE,KAAhB,EAAb;AACA,aAAKvB,KAAL,CAAWwB,gBAAX,CAA4B,IAA5B;AACA,aAAKxB,KAAL,CAAWO,aAAX,CAAyB,UAAzB;AACA,aAAKkB,WAAL,CAAiB,MAAjB;AACAZ,kBAAUI,GAAV,CAAc,KAAKjB,KAAnB;AACA,YAAI0B,OAAO,IAAIlD,GAAG4C,EAAH,CAAMP,SAAN,CAAgBc,SAApB,EAAX;AACA,YAAIC,aAAa,IAAIpD,GAAG4C,EAAH,CAAMS,MAAN,CAAaC,IAAjB,CAAsB,CAAtB,EAAyB,CAAzB,CAAjB;AACAF,mBAAWG,cAAX,CAA0B,CAA1B,EAA6B,OAA7B,EAAsC,KAAtC;AACAH,mBAAWG,cAAX,CAA0B,CAA1B,EAA6B,OAA7B,EAAsC,KAAtC;AACAH,mBAAWI,iBAAX,CAA6B,CAA7B,EAAgC,EAAhC;AACAJ,mBAAWK,aAAX,CAAyB,CAAzB,EAA4B,CAA5B;AACAP,aAAKQ,SAAL,CAAeN,UAAf;AACAF,aAAKV,SAAL,CAAe,QAAf;AACAU,aAAKS,WAAL,CAAiB,GAAjB;AACAT,aAAKU,WAAL,CAAiB,GAAjB;AACAvB,kBAAUI,GAAV,CAAcS,IAAd;AACA,YAAIW,SAAS,CAAC,KAAKC,EAAL,CAAQ,MAAR,CAAD,EAAkB,KAAKA,EAAL,CAAQ,UAAR,CAAlB,CAAb;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,OAAOG,MAA3B,EAAmCD,GAAnC,EAAwC;AACtCb,eAAKT,GAAL,CACE,IAAIzC,GAAG4C,EAAH,CAAMC,KAAN,CAAYE,KAAhB,CAAsBc,OAAOE,CAAP,CAAtB,EAAiCE,GAAjC,CAAqC;AACnCC,0BAAc,KADqB;AAEnCC,wBAAY;AAFuB,WAArC,CADF,EAKE;AACEC,iBAAKL,CADP;AAEEM,oBAAQ;AAFV,WALF;AAUD;AACD,aAAK5C,SAAL,GAAiB,IAAIzB,GAAG4C,EAAH,CAAMM,IAAN,CAAWoB,SAAf,EAAjB;AACA,aAAK5C,SAAL,GAAiB,IAAI1B,GAAG4C,EAAH,CAAMM,IAAN,CAAWqB,aAAf,EAAjB;AACA,aAAK7C,SAAL,CAAgB8C,iBAAhB,GAAoCC,YAApC,CAAiD,cAAjD,EAAiE,UAAjE;AACA,aAAK/C,SAAL,CAAegD,WAAf,CACE,UADF,EAEE,UAASC,CAAT,EAAY;AACV,cAAIA,EAAEC,gBAAF,OAAyB,OAA7B,EAAsC;AACpC,iBAAKC,qBAAL;AACD;AACF,SANH,EAOE,IAPF;AASA3B,aAAKT,GAAL,CACE,KAAKhB,SAAL,CAAewC,GAAf,CAAmB;AACjBC,wBAAc,KADG;AAEjBC,sBAAY;AAFK,SAAnB,CADF,EAKE;AACEC,eAAK,CADP;AAEEC,kBAAQ;AAFV,SALF;AAUAnB,aAAKT,GAAL,CACE,KAAKf,SAAL,CAAeuC,GAAf,CAAmB;AACjBC,wBAAc,KADG;AAEjBC,sBAAY;AAFK,SAAnB,CADF,EAKE;AACEC,eAAK,CADP;AAEEC,kBAAQ;AAFV,SALF;AAUA,aAAKS,QAAL,GAAgB,IAAI9E,GAAG4C,EAAH,CAAMC,KAAN,CAAYE,KAAhB,EAAhB;AACA,aAAK+B,QAAL,CAAcC,OAAd,CAAsB,IAAtB;AACA,aAAKD,QAAL,CAAc9B,gBAAd,CAA+B,IAA/B;AACA,aAAK8B,QAAL,CAAc/C,aAAd,CAA4B,UAA5B;AACAM,kBAAUI,GAAV,CAAc,KAAKqC,QAAnB;;AAEA;AACA,YAAIE,aAAa,KAAKC,iBAAL,EAAjB;;AAEA;AACA,YAAIC,cAAe,KAAKC,YAAL,GAAoB,IAAInF,GAAG4C,EAAH,CAAMM,IAAN,CAAWkC,MAAf,CACrC,KAAKtB,EAAL,CAAQ,OAAR,CADqC,CAAvC;AAGAoB,oBAAYlC,gBAAZ,CAA6B,KAA7B;AACAkC,oBAAYR,WAAZ,CAAwB,SAAxB,EAAmC,KAAKG,qBAAxC,EAA+D,IAA/D;;AAEA;AACA,YAAIQ,eAAe,KAAKC,mBAAL,EAAnB;;AAEA;AACA,YAAIC,uBAAuB,IAAIvF,GAAG4C,EAAH,CAAMM,IAAN,CAAWkC,MAAf,CACzB,KAAKtB,EAAL,CAAQ,kBAAR,CADyB,CAA3B;AAGAyB,6BAAqBb,WAArB,CACE,OADF,EAEE,YAAW;AACT,eAAKc,wBAAL;AACD,SAJH,EAKE,IALF;AAOA,aAAKC,IAAL,CAAU,oBAAV,EAAgCF,oBAAhC,EAAsD,YAAtD,EAAoE;AAClEG,qBAAW,mBAASC,CAAT,EAAY;AACrB,mBAAOA,IAAI,SAAJ,GAAgB,UAAvB;AACD;AAHiE,SAApE;;AAMAX,mBAAWvC,GAAX,CAAeyC,WAAf;AACAF,mBAAWvC,GAAX,CAAe4C,YAAf;AACAL,mBAAWvC,GAAX,CAAe8C,oBAAf;AACArC,aAAKT,GAAL,CAASuC,UAAT,EAAqB;AACnBZ,eAAK,CADc;AAEnBC,kBAAQ;AAFW,SAArB;AAIA;AAEEnB,aAAK0C,aAAL,CAAmB,MAAnB;AACA,aAAKC,gBAAL,CAAsB3C,IAAtB;AACA,aAAKzB,SAAL,CAAemE,aAAf,CAA6B,UAA7B;AACA1C,aAAK2C,gBAAL,CAAsB,KAAKpE,SAA3B;AACA,aAAKC,SAAL,CAAekE,aAAf,CAA6B,UAA7B;AACA1C,aAAK2C,gBAAL,CAAsB,KAAKnE,SAA3B;AACAwD,oBAAYU,aAAZ,CAA0B,OAA1B;AACAZ,mBAAWa,gBAAX,CAA4BX,WAA5B;AACAK,6BAAqBK,aAArB,CAAmC,iBAAnC;AACAZ,mBAAWa,gBAAX,CAA4BN,oBAA5B;AACA,aAAKM,gBAAL,CAAsBN,oBAAtB;AAEH,OA1JM;;AA4JP;;;;AAIAV,6BAAuB,iCAAW;AAChC,aAAKiB,mBAAL,GACE,KAAKrE,SAAL,CAAesE,QAAf,EADF,EAEE,KAAKrE,SAAL,CAAeqE,QAAf,EAFF,EAGE,OAAOC,SAASC,SAAT,CAAmBR,IAA1B,KAAmC,UAAnC,GACE,KAAKS,uBAAL,CAA6BT,IAA7B,CAAkC,IAAlC,CADF,GAEEzF,GAAGmG,IAAH,CAAQH,QAAR,CAAiBP,IAAjB,CAAsB,KAAKS,uBAA3B,EAAoD,IAApD,CALJ;AAOD,OAxKM;;AA0KP;;;AAGAE,qBAAe,yBAAW;AACxB,aAAKC,IAAL;AACD,OA/KM;;AAiLP;;;;;;;;;;;AAWAH,+BAAyB,iCAASI,GAAT,EAAcC,IAAd,EAAoB;AAC3C;AACA,aAAKC,UAAL,CAAgB,IAAhB;AACA,YAAIF,GAAJ,EAAS;AACP,eAAKG,aAAL,CAAmB,cAAnB,EAAmCH,GAAnC;AACA,eAAK7E,SAAL,CAAeiF,eAAf,CAA+B,OAA/B,EAAwC,YAAU;AAChD1G,eAAGkB,KAAH,CAASyF,KAAT,CAAeC,IAAf,CAAoB,YAAU;AAC5B,mBAAKnF,SAAL,CAAeoF,aAAf;AACD,aAFD,EAEG,IAFH,EAES,GAFT;AAGD,WAJD,EAIG,IAJH;AAKA,eAAKnF,SAAL,CAAegF,eAAf,CAA+B,OAA/B,EAAwC,YAAU;AAChD1G,eAAGkB,KAAH,CAASyF,KAAT,CAAeC,IAAf,CAAoB,YAAU;AAC5B,mBAAKlF,SAAL,CAAemF,aAAf;AACD,aAFD,EAEG,IAFH,EAES,GAFT;AAGD,WAJD,EAIG,IAJH;AAKD,SAZD,MAYO;AACL,eAAKJ,aAAL,CAAmB,cAAnB,EAAmCF,IAAnC;AACA,eAAKF,IAAL;AACD;AACD,YAAI,KAAKS,WAAL,EAAJ,EAAwB;AACtB,eAAKA,WAAL,GAAmBR,GAAnB,EAAwBC,IAAxB;AACD;AACF,OAlNM;;AAoNP;;;AAGAF,YAAM,gBAAW;AACf,aAAK3E,SAAL,CAAeI,QAAf,CAAwB,EAAxB;AACA,aAAK0E,UAAL,CAAgB,IAAhB;AACA;AACD;AA3NM;AAvEqB,GAAhC,C;AA3BAjG,SAAOwG,KAAP,CAAa5G,aAAb,GAA6BA,aAA7B",
  "file": "Login.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo dialog library\n   https://github.com/cboulanger/qx-contrib-Dialog\n\n   Copyright:\n     2007-2017 Christian Boulanger and others\n\n   License:\n     LGPL: http://www.gnu.org/licenses/lgpl.html\n     EPL: http://www.eclipse.org/org/documents/epl-v10.php\n     See the LICENSE file in the project's top-level directory for details.\n\n************************************************************************ */\n/*global qx dialog*/\n\n/**\n * A dialog for authentication and login.\n *\n * The \"callback\" property containing a function is used as an (optional) final\n * callback after authentication has take place. This final callback will be\n * called with an truthy value as first argument (the error message/object) if\n * authentication has FAILED or with a falsy value (null/undefined) as first\n * argument, plus with a second optional argument (that can contain user\n * information) if it was SUCCESSFUL. The authenticating function must now be\n * stored in the checkCredentials property.\n */\nqx.Class.define(\"dialog.Login\", {\n  extend: dialog.Dialog,\n  properties: {\n\n    /**\n     * A html text that is displayed below the image (if present) and above the\n     * login\n     */\n    text: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyText\"\n    },\n\n    /**\n     * The name of the font in the theme that should be applied to\n     * the text\n     */\n    textFont: {\n      check: \"String\",\n      nullable: true,\n      init: \"bold\",\n      apply: \"_applyTextFont\"\n    },\n\n    /**\n     * An asyncronous function to check the given credentials.\n     * The function signature is (username, password, callback). In case the\n     * login fails, the callback must be called with a string that can be\n     * alerted to the user or the error object if the problem is not due to\n     * authentication itself. If the login succeeds, the argument must be\n     * undefined or null. You can pass a second argument containing user\n     * information.\n     */\n    checkCredentials: {\n      check: \"Function\",\n      nullable: false\n    },\n\n    /**\n     * Whether to show a button with \"Forgot Password?\"\n     */\n    showForgotPassword: {\n      check: \"Boolean\",\n      nullable: false,\n      init: false,\n      event: \"changeShowForgotPassword\"\n    },\n\n    /**\n     * The function that is called when the user clicks on the \"Forgot Password?\"\n     * button\n     */\n    forgotPasswordHandler: {\n      check: \"Function\"\n    }\n  },\n\n  events: {\n    /**\n     * Event dispatched when login was successful\n     */\n    loginSuccess: \"qx.event.type.Data\",\n\n    /**\n     * Data event dispatched when login failed, event data\n     * contains a reponse message\n     */\n    loginFailure: \"qx.event.type.Data\"\n  },\n\n  members: {\n    _text: null,\n    _username: null,\n    _password: null,\n\n    /**\n     * Apply function used by proterty {@link #text}\n     * @param value {String} New value\n     * @param old {String} Old value\n     */\n    _applyText: function(value, old) {\n      this._text.setValue(value);\n      this._text.setVisibility(value ? \"visible\" : \"excluded\");\n    },\n\n    /**\n     * Apply function used by proterty {@link #textFont}\n     * @param value {String} New value\n     */\n    _applyTextFont: function(value) {\n      this._text.setFont(value);\n    },\n\n    /**\n     * Create the main content of the widget\n     */\n    _createWidgetContent: function() {\n      // wrap fields in form tag to avoid Chrome warnings, see https://github.com/cboulanger/qx-contrib-Dialog/issues/19\n      let formTag = new dialog.FormTag();\n      let container = this._createDialogContainer();\n      container.getLayout().setAlignX(\"center\");\n      formTag.add(container, {flex:1});\n      this.add(formTag);\n      this._image = new qx.ui.basic.Image();\n      this._image.setVisibility(\"excluded\");\n      container.add(this._image);\n      this._text = new qx.ui.basic.Label();\n      this._text.setAllowStretchX(true);\n      this._text.setVisibility(\"excluded\");\n      this.setTextFont(\"bold\");\n      container.add(this._text);\n      let form = new qx.ui.container.Composite();\n      let gridLayout = new qx.ui.layout.Grid(9, 5);\n      gridLayout.setColumnAlign(0, \"right\", \"top\");\n      gridLayout.setColumnAlign(2, \"right\", \"top\");\n      gridLayout.setColumnMinWidth(0, 50);\n      gridLayout.setColumnFlex(1, 2);\n      form.setLayout(gridLayout);\n      form.setAlignX(\"center\");\n      form.setMinWidth(200);\n      form.setMaxWidth(400);\n      container.add(form);\n      let labels = [this.tr(\"Name\"), this.tr(\"Password\")];\n      for (let i = 0; i < labels.length; i++) {\n        form.add(\n          new qx.ui.basic.Label(labels[i]).set({\n            allowShrinkX: false,\n            paddingTop: 3\n          }),\n          {\n            row: i,\n            column: 0\n          }\n        );\n      }\n      this._username = new qx.ui.form.TextField();\n      this._password = new qx.ui.form.PasswordField();\n      this._password .getContentElement().setAttribute(\"autocomplete\", \"password\");\n      this._password.addListener(\n        \"keypress\",\n        function(e) {\n          if (e.getKeyIdentifier() === \"Enter\") {\n            this._callCheckCredentials();\n          }\n        },\n        this\n      );\n      form.add(\n        this._username.set({\n          allowShrinkX: false,\n          paddingTop: 3\n        }),\n        {\n          row: 0,\n          column: 1\n        }\n      );\n      form.add(\n        this._password.set({\n          allowShrinkX: false,\n          paddingTop: 3\n        }),\n        {\n          row: 1,\n          column: 1\n        }\n      );\n      this._message = new qx.ui.basic.Label();\n      this._message.setRich(true);\n      this._message.setAllowStretchX(true);\n      this._message.setVisibility(\"excluded\");\n      container.add(this._message);\n\n      // buttons\n      let buttonPane = this._createButtonPane();\n\n      // login\n      let loginButton = (this._loginButton = new qx.ui.form.Button(\n        this.tr(\"Login\")\n      ));\n      loginButton.setAllowStretchX(false);\n      loginButton.addListener(\"execute\", this._callCheckCredentials, this);\n\n      // cancel\n      let cancelButton = this._createCancelButton();\n\n      // forgot password\n      let forgotPasswordButton = new qx.ui.form.Button(\n        this.tr(\"Forgot Password?\")\n      );\n      forgotPasswordButton.addListener(\n        \"click\",\n        function() {\n          this.getForgotPasswordHandler()();\n        },\n        this\n      );\n      this.bind(\"showForgotPassword\", forgotPasswordButton, \"visibility\", {\n        converter: function(v) {\n          return v ? \"visible\" : \"excluded\";\n        }\n      });\n\n      buttonPane.add(loginButton);\n      buttonPane.add(cancelButton);\n      buttonPane.add(forgotPasswordButton);\n      form.add(buttonPane, {\n        row: 3,\n        column: 1\n      });\n      // object ids\n      if (qx.core.Environment.get(\"module.objectid\") === true) {\n        form.setQxObjectId(\"form\");\n        this.addOwnedQxObject(form);\n        this._username.setQxObjectId(\"username\");\n        form.addOwnedQxObject(this._username);\n        this._password.setQxObjectId(\"password\");\n        form.addOwnedQxObject(this._password);\n        loginButton.setQxObjectId(\"login\");\n        buttonPane.addOwnedQxObject(loginButton);\n        forgotPasswordButton.setQxObjectId(\"forgot-password\");\n        buttonPane.addOwnedQxObject(forgotPasswordButton);\n        this.addOwnedQxObject(forgotPasswordButton);\n      }\n    },\n\n    /**\n     * Calls the checkCredentials callback function with username, password and\n     * the final callback, bound to the context object.\n     */\n    _callCheckCredentials: function() {\n      this.getCheckCredentials()(\n        this._username.getValue(),\n        this._password.getValue(),\n        typeof Function.prototype.bind === \"function\" ?\n          this._handleCheckCredentials.bind(this) :\n          qx.lang.Function.bind(this._handleCheckCredentials, this)\n      );\n    },\n\n    /**\n     * Handle click on cancel button\n     */\n    _handleCancel: function() {\n      this.hide();\n    },\n\n    /**\n     * Handler function called from the function that checks the credentials\n     * with the result of the authentication process.\n     * @param err {String|Error|null} If null, the authentication was successful\n     * and the \"loginSuccess\" event is dispatched. If String or Error, the\n     * \"loginFailure\" event is dispatched with the error message/object.\n     * Finally, the callback function in the callback property is called with\n     * null (success) or the error value.\n     * @param data {unknown|undefined} Optional second argument wich can contain\n     * user information\n     */\n    _handleCheckCredentials: function(err, data) {\n      //this._password.setValue(\"\");\n      this.setMessage(null);\n      if (err) {\n        this.fireDataEvent(\"loginFailure\", err);\n        this._username.addListenerOnce('focus', function(){\n          qx.event.Timer.once(function(){\n            this._username.selectAllText();\n          }, this, 100);\n        }, this);\n        this._password.addListenerOnce('focus', function(){\n          qx.event.Timer.once(function(){\n            this._password.selectAllText();\n          }, this, 100);\n        }, this);\n      } else {\n        this.fireDataEvent(\"loginSuccess\", data);\n        this.hide();\n      }\n      if (this.getCallback()) {\n        this.getCallback()(err, data);\n      }\n    },\n\n    /**\n     * @override\n     */\n    hide: function() {\n      this._password.setValue(\"\");\n      this.setMessage(null);\n      this.base(arguments);\n    }\n  }\n});\n"
  ]
}